# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.10
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_sptraderapi')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_sptraderapi')
    _sptraderapi = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_sptraderapi', [dirname(__file__)])
        except ImportError:
            import _sptraderapi
            return _sptraderapi
        if fp is not None:
            try:
                _mod = imp.load_module('_sptraderapi', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _sptraderapi = swig_import_helper()
    del swig_import_helper
else:
    import _sptraderapi
del _swig_python_version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except __builtin__.Exception:
    class _object:
        pass
    _newclass = 0

try:
    import weakref
    weakref_proxy = weakref.proxy
except __builtin__.Exception:
    weakref_proxy = lambda x: x


CHAR_NULL_VAL = _sptraderapi.CHAR_NULL_VAL

def set_null(*args):
    return _sptraderapi.set_null(*args)
set_null = _sptraderapi.set_null

def is_null(*args):
    return _sptraderapi.is_null(*args)
is_null = _sptraderapi.is_null
TORA_TERT_RESTART = _sptraderapi.TORA_TERT_RESTART
TORA_TERT_RESUME = _sptraderapi.TORA_TERT_RESUME
TORA_TERT_QUICK = _sptraderapi.TORA_TERT_QUICK
# 内部使用)
TORA_TSTP_SP_EXD_SSE_FO = _sptraderapi.TORA_TSTP_SP_EXD_SSE_FO
# 内部使用)
TORA_TSTP_SP_EXD_SZSE_FO = _sptraderapi.TORA_TSTP_SP_EXD_SZSE_FO
# 通用(内部使用)
TORA_TSTP_SP_EXD_COMM = _sptraderapi.TORA_TSTP_SP_EXD_COMM
# 上海交易所
TORA_TSTP_SP_EXD_SSE = _sptraderapi.TORA_TSTP_SP_EXD_SSE
# 深圳交易所
TORA_TSTP_SP_EXD_SZSE = _sptraderapi.TORA_TSTP_SP_EXD_SZSE
# 香港交易所
TORA_TSTP_SP_EXD_HK = _sptraderapi.TORA_TSTP_SP_EXD_HK
# 未同步
TORA_TSTP_SP_DS_Asynchronous = _sptraderapi.TORA_TSTP_SP_DS_Asynchronous
# 同步中
TORA_TSTP_SP_DS_Synchronizing = _sptraderapi.TORA_TSTP_SP_DS_Synchronizing
# 已同步
TORA_TSTP_SP_DS_Synchronized = _sptraderapi.TORA_TSTP_SP_DS_Synchronized
# 全部同步完成(包括fileoffer数据)
TORA_TSTP_SP_DS_AllSynchronized = _sptraderapi.TORA_TSTP_SP_DS_AllSynchronized
# 净持仓
TORA_TSTP_SP_PT_Net = _sptraderapi.TORA_TSTP_SP_PT_Net
# 综合持仓
TORA_TSTP_SP_PT_Gross = _sptraderapi.TORA_TSTP_SP_PT_Gross
# 是否校验网关MAC与IP,0不校验1校验,默认不校验
TORA_TSTP_SP_SPTT_CheckIPLocateLimit = _sptraderapi.TORA_TSTP_SP_SPTT_CheckIPLocateLimit
# 现货系统仓位交互模式,0非实时1实时,默认非实时
TORA_TSTP_SP_SPTT_StockPositionRealTimeMode = _sptraderapi.TORA_TSTP_SP_SPTT_StockPositionRealTimeMode
# tinit数据查询模式,0单表1多表,默认多表
TORA_TSTP_SP_SPTT_TinitQryMode = _sptraderapi.TORA_TSTP_SP_SPTT_TinitQryMode
# tinit数据查询时间间隔单位秒,默认1秒
TORA_TSTP_SP_SPTT_TinitQryInterval = _sptraderapi.TORA_TSTP_SP_SPTT_TinitQryInterval
# tinit数据每次最大查询量,默认10000
TORA_TSTP_SP_SPTT_TinitMaxQryNum = _sptraderapi.TORA_TSTP_SP_SPTT_TinitMaxQryNum
# tinit数据每次最小查询量,默认100
TORA_TSTP_SP_SPTT_TinitMinQryNum = _sptraderapi.TORA_TSTP_SP_SPTT_TinitMinQryNum
# 是否启用预埋单,0不开启1开启,默认开启
TORA_TSTP_SP_SPTT_CacheOrderEnable = _sptraderapi.TORA_TSTP_SP_SPTT_CacheOrderEnable
# 上证早市预埋触发时间点,默认09:14:57
TORA_TSTP_SP_SPTT_SSECacheOrderTime = _sptraderapi.TORA_TSTP_SP_SPTT_SSECacheOrderTime
# 上证午市预埋时间段,默认11:30:15/12:59:57
TORA_TSTP_SP_SPTT_SSEBreakCacheTimeRange = _sptraderapi.TORA_TSTP_SP_SPTT_SSEBreakCacheTimeRange
# 是否启用条件单业务,0不开启1开启,默认不开启
TORA_TSTP_SP_SPTT_ConditionOrderEnable = _sptraderapi.TORA_TSTP_SP_SPTT_ConditionOrderEnable
# 系统条件单容量,默认10000
TORA_TSTP_SP_SPTT_SystemMaxConditionOrderCount = _sptraderapi.TORA_TSTP_SP_SPTT_SystemMaxConditionOrderCount
# 保证金提取比例,默认0.75
TORA_TSTP_SP_SPTT_MarginFetchRatio = _sptraderapi.TORA_TSTP_SP_SPTT_MarginFetchRatio
# 是否校验委托方式,0不校验1校验,默认不校验
TORA_TSTP_SP_SPTT_CheckOperway = _sptraderapi.TORA_TSTP_SP_SPTT_CheckOperway
# 结算持仓当日盈亏时间,如18:00:00
TORA_TSTP_SP_SPTT_SettlePosProfitTime = _sptraderapi.TORA_TSTP_SP_SPTT_SettlePosProfitTime
# 最小接口协议信息
TORA_TSTP_SP_SPTT_MinInterfaceProtocolInfo = _sptraderapi.TORA_TSTP_SP_SPTT_MinInterfaceProtocolInfo
# 是否启用深证1.10版本报盘,0不启用,1启用
TORA_TSTP_SP_SPTT_EnabelSZSEOffer11 = _sptraderapi.TORA_TSTP_SP_SPTT_EnabelSZSEOffer11
# 是否支持期权组合报单
TORA_TSTP_SP_SPTT_CombOrderEnable = _sptraderapi.TORA_TSTP_SP_SPTT_CombOrderEnable
# 系统类别,A:华鑫证券,B:国泰君安
TORA_TSTP_SP_SPTT_SystemType = _sptraderapi.TORA_TSTP_SP_SPTT_SystemType
# 不支持深圳业务
TORA_TSTP_SP_SPTT_UnsupportSZSE = _sptraderapi.TORA_TSTP_SP_SPTT_UnsupportSZSE
# 不支持上海业务
TORA_TSTP_SP_SPTT_UnsupportSSE = _sptraderapi.TORA_TSTP_SP_SPTT_UnsupportSSE
# 历史仓持仓成本计算价格，1:昨结算价 2：集中交易价格ccjj（默认）
TORA_TSTP_SP_SPTT_HistoryPosCalPriceMode = _sptraderapi.TORA_TSTP_SP_SPTT_HistoryPosCalPriceMode
# 行权交收日初可用资金中扣除行权待交收资金
TORA_TSTP_SP_SPTT_UsefulMoneyDeductExerciseFrozen = _sptraderapi.TORA_TSTP_SP_SPTT_UsefulMoneyDeductExerciseFrozen
# 行权日启用保证金率计算新公式：实值（以昨收盘价判断）认沽期权义务方，保证金率=执行价*标的合约乘数
TORA_TSTP_SP_SPTT_EnableExerciseDateCalcMarginRateFormula = _sptraderapi.TORA_TSTP_SP_SPTT_EnableExerciseDateCalcMarginRateFormula
# 组合
TORA_TSTP_SP_CTS_Combined = _sptraderapi.TORA_TSTP_SP_CTS_Combined
# 正在拆分
TORA_TSTP_SP_CTS_Splitting = _sptraderapi.TORA_TSTP_SP_CTS_Splitting
# 拆分完成
TORA_TSTP_SP_CTS_Splitted = _sptraderapi.TORA_TSTP_SP_CTS_Splitted
# 简体中文
TORA_TSTP_SP_LGT_ZHCN = _sptraderapi.TORA_TSTP_SP_LGT_ZHCN
# 中文香港
TORA_TSTP_SP_LGT_ZHHK = _sptraderapi.TORA_TSTP_SP_LGT_ZHHK
# 英文美国
TORA_TSTP_SP_LGT_ENUS = _sptraderapi.TORA_TSTP_SP_LGT_ENUS
# 中国建设银行
TORA_TSTP_SP_BKID_CCB = _sptraderapi.TORA_TSTP_SP_BKID_CCB
# 中国农业银行
TORA_TSTP_SP_BKID_ABC = _sptraderapi.TORA_TSTP_SP_BKID_ABC
# 中国工商银行
TORA_TSTP_SP_BKID_ICBC = _sptraderapi.TORA_TSTP_SP_BKID_ICBC
# 中国银行
TORA_TSTP_SP_BKID_BOC = _sptraderapi.TORA_TSTP_SP_BKID_BOC
# 中国招商银行
TORA_TSTP_SP_BKID_CMBC = _sptraderapi.TORA_TSTP_SP_BKID_CMBC
# 中国交通银行
TORA_TSTP_SP_BKID_BC = _sptraderapi.TORA_TSTP_SP_BKID_BC
# 浦东发展银行
TORA_TSTP_SP_BKID_SPDB = _sptraderapi.TORA_TSTP_SP_BKID_SPDB
# 兴业银行
TORA_TSTP_SP_BKID_CIB = _sptraderapi.TORA_TSTP_SP_BKID_CIB
# 中国光大银行
TORA_TSTP_SP_BKID_CEB = _sptraderapi.TORA_TSTP_SP_BKID_CEB
# 广东发展银行
TORA_TSTP_SP_BKID_GDB = _sptraderapi.TORA_TSTP_SP_BKID_GDB
# 人民币
TORA_TSTP_SP_CID_CNY = _sptraderapi.TORA_TSTP_SP_CID_CNY
# 港币
TORA_TSTP_SP_CID_HKD = _sptraderapi.TORA_TSTP_SP_CID_HKD
# 美元
TORA_TSTP_SP_CID_USD = _sptraderapi.TORA_TSTP_SP_CID_USD
# 初始
TORA_TSTP_SP_USTS_Initial = _sptraderapi.TORA_TSTP_SP_USTS_Initial
# 启用
TORA_TSTP_SP_USTS_Enabled = _sptraderapi.TORA_TSTP_SP_USTS_Enabled
# 禁用
TORA_TSTP_SP_USTS_Disabled = _sptraderapi.TORA_TSTP_SP_USTS_Disabled
# 激活
TORA_TSTP_SP_USTS_Actived = _sptraderapi.TORA_TSTP_SP_USTS_Actived
# 密码
TORA_TSTP_SP_AM_Password = _sptraderapi.TORA_TSTP_SP_AM_Password
# 指纹
TORA_TSTP_SP_AM_FingerPrint = _sptraderapi.TORA_TSTP_SP_AM_FingerPrint
# 普通范围模式
TORA_TSTP_SP_RM_Normal = _sptraderapi.TORA_TSTP_SP_RM_Normal
# 模板范围模式
TORA_TSTP_SP_RM_Template = _sptraderapi.TORA_TSTP_SP_RM_Template
# 手
TORA_TSTP_SP_OUT_Shou = _sptraderapi.TORA_TSTP_SP_OUT_Shou
# 股
TORA_TSTP_SP_OUT_Gu = _sptraderapi.TORA_TSTP_SP_OUT_Gu
# 份
TORA_TSTP_SP_OUT_Fen = _sptraderapi.TORA_TSTP_SP_OUT_Fen
# 张
TORA_TSTP_SP_OUT_Zhang = _sptraderapi.TORA_TSTP_SP_OUT_Zhang
# 个人
TORA_TSTP_SP_CT_Person = _sptraderapi.TORA_TSTP_SP_CT_Person
# 机构
TORA_TSTP_SP_CT_Company = _sptraderapi.TORA_TSTP_SP_CT_Company
# 自营
TORA_TSTP_SP_CT_SelfOperate = _sptraderapi.TORA_TSTP_SP_CT_SelfOperate
# 普通
TORA_TSTP_SP_PIT_Normal = _sptraderapi.TORA_TSTP_SP_PIT_Normal
# 专业I类
TORA_TSTP_SP_PIT_ProfLevel1 = _sptraderapi.TORA_TSTP_SP_PIT_ProfLevel1
# 专业II类
TORA_TSTP_SP_PIT_ProfLevel2 = _sptraderapi.TORA_TSTP_SP_PIT_ProfLevel2
# 专业III类
TORA_TSTP_SP_PIT_ProfLevel3 = _sptraderapi.TORA_TSTP_SP_PIT_ProfLevel3
# 组织机构代码
TORA_TSTP_SP_ICT_EID = _sptraderapi.TORA_TSTP_SP_ICT_EID
# 中国公民身份证
TORA_TSTP_SP_ICT_IDCard = _sptraderapi.TORA_TSTP_SP_ICT_IDCard
# 军官证
TORA_TSTP_SP_ICT_OfficerIDCard = _sptraderapi.TORA_TSTP_SP_ICT_OfficerIDCard
# 警官证
TORA_TSTP_SP_ICT_PoliceIDCard = _sptraderapi.TORA_TSTP_SP_ICT_PoliceIDCard
# 士兵证
TORA_TSTP_SP_ICT_SoldierIDCard = _sptraderapi.TORA_TSTP_SP_ICT_SoldierIDCard
# 户口簿
TORA_TSTP_SP_ICT_HouseholdRegister = _sptraderapi.TORA_TSTP_SP_ICT_HouseholdRegister
# 护照
TORA_TSTP_SP_ICT_Passport = _sptraderapi.TORA_TSTP_SP_ICT_Passport
# 台胞证
TORA_TSTP_SP_ICT_TaiwanCompatriotIDCard = _sptraderapi.TORA_TSTP_SP_ICT_TaiwanCompatriotIDCard
# 回乡证
TORA_TSTP_SP_ICT_HomeComingCard = _sptraderapi.TORA_TSTP_SP_ICT_HomeComingCard
# 营业执照号
TORA_TSTP_SP_ICT_LicenseNo = _sptraderapi.TORA_TSTP_SP_ICT_LicenseNo
# 税务登记号/当地纳税ID
TORA_TSTP_SP_ICT_TaxNo = _sptraderapi.TORA_TSTP_SP_ICT_TaxNo
# 港澳居民来往内地通行证
TORA_TSTP_SP_ICT_HMMainlandTravelPermit = _sptraderapi.TORA_TSTP_SP_ICT_HMMainlandTravelPermit
# 台湾居民来往大陆通行证
TORA_TSTP_SP_ICT_TwMainlandTravelPermit = _sptraderapi.TORA_TSTP_SP_ICT_TwMainlandTravelPermit
# 驾照
TORA_TSTP_SP_ICT_DrivingLicense = _sptraderapi.TORA_TSTP_SP_ICT_DrivingLicense
# 当地社保ID
TORA_TSTP_SP_ICT_SocialID = _sptraderapi.TORA_TSTP_SP_ICT_SocialID
# 当地身份证
TORA_TSTP_SP_ICT_LocalID = _sptraderapi.TORA_TSTP_SP_ICT_LocalID
# 商业登记证
TORA_TSTP_SP_ICT_BusinessRegistration = _sptraderapi.TORA_TSTP_SP_ICT_BusinessRegistration
# 港澳永久性居民身份证
TORA_TSTP_SP_ICT_HKMCIDCard = _sptraderapi.TORA_TSTP_SP_ICT_HKMCIDCard
# 人行开户许可证
TORA_TSTP_SP_ICT_AccountsPermits = _sptraderapi.TORA_TSTP_SP_ICT_AccountsPermits
# 其他证件
TORA_TSTP_SP_ICT_OtherCard = _sptraderapi.TORA_TSTP_SP_ICT_OtherCard
# 普通
TORA_TSTP_SP_FAT_Normal = _sptraderapi.TORA_TSTP_SP_FAT_Normal
# 信用
TORA_TSTP_SP_FAT_Credit = _sptraderapi.TORA_TSTP_SP_FAT_Credit
# 衍生品
TORA_TSTP_SP_FAT_Derivatives = _sptraderapi.TORA_TSTP_SP_FAT_Derivatives
# 买入
TORA_TSTP_SP_D_Buy = _sptraderapi.TORA_TSTP_SP_D_Buy
# 卖出
TORA_TSTP_SP_D_Sell = _sptraderapi.TORA_TSTP_SP_D_Sell
# 组合
TORA_TSTP_SP_CBD_Combine = _sptraderapi.TORA_TSTP_SP_CBD_Combine
# 拆分
TORA_TSTP_SP_CBD_Split = _sptraderapi.TORA_TSTP_SP_CBD_Split
# 交易所强拆
TORA_TSTP_SP_CBD_ForceSplit = _sptraderapi.TORA_TSTP_SP_CBD_ForceSplit
# 毛佣金
TORA_TSTP_SP_BT_Gross = _sptraderapi.TORA_TSTP_SP_BT_Gross
# 净佣金
TORA_TSTP_SP_BT_Net = _sptraderapi.TORA_TSTP_SP_BT_Net
# 经纪公司用户
TORA_TSTP_SP_UTYPE_BrokerUser = _sptraderapi.TORA_TSTP_SP_UTYPE_BrokerUser
# 超级用户
TORA_TSTP_SP_UTYPE_SuperUser = _sptraderapi.TORA_TSTP_SP_UTYPE_SuperUser
# 投资者用户
TORA_TSTP_SP_UTYPE_Investor = _sptraderapi.TORA_TSTP_SP_UTYPE_Investor
# 实时上场
TORA_TSTP_SP_OPRTSRC_DBCommand = _sptraderapi.TORA_TSTP_SP_OPRTSRC_DBCommand
# API调用
TORA_TSTP_SP_OPRTSRC_SyncAPI = _sptraderapi.TORA_TSTP_SP_OPRTSRC_SyncAPI
# 实时模式自动触发
TORA_TSTP_SP_OPRTSRC_RealTimeAuto = _sptraderapi.TORA_TSTP_SP_OPRTSRC_RealTimeAuto
# 电话委托
TORA_TSTP_SP_OPERW_Telephone = _sptraderapi.TORA_TSTP_SP_OPERW_Telephone
# 柜台委托
TORA_TSTP_SP_OPERW_OTC = _sptraderapi.TORA_TSTP_SP_OPERW_OTC
# 移动客户端委托
TORA_TSTP_SP_OPERW_MobileClient = _sptraderapi.TORA_TSTP_SP_OPERW_MobileClient
# PC客户端委托
TORA_TSTP_SP_OPERW_PCClient = _sptraderapi.TORA_TSTP_SP_OPERW_PCClient
# TY委托
TORA_TSTP_SP_OPERW_TY = _sptraderapi.TORA_TSTP_SP_OPERW_TY
# 任意价
TORA_TSTP_SP_OPT_AnyPrice = _sptraderapi.TORA_TSTP_SP_OPT_AnyPrice
# 限价
TORA_TSTP_SP_OPT_LimitPrice = _sptraderapi.TORA_TSTP_SP_OPT_LimitPrice
# 最优价
TORA_TSTP_SP_OPT_BestPrice = _sptraderapi.TORA_TSTP_SP_OPT_BestPrice
# 最新价
TORA_TSTP_SP_OPT_LastPrice = _sptraderapi.TORA_TSTP_SP_OPT_LastPrice
# 相关价
TORA_TSTP_SP_OPT_Relative = _sptraderapi.TORA_TSTP_SP_OPT_Relative
# 卖一价
TORA_TSTP_SP_OPT_AskPrice1 = _sptraderapi.TORA_TSTP_SP_OPT_AskPrice1
# 买一价
TORA_TSTP_SP_OPT_BidPrice1 = _sptraderapi.TORA_TSTP_SP_OPT_BidPrice1
# 五档价
TORA_TSTP_SP_OPT_FiveLevelPrice = _sptraderapi.TORA_TSTP_SP_OPT_FiveLevelPrice
# 本方最优
TORA_TSTP_SP_OPT_HomeBestPrice = _sptraderapi.TORA_TSTP_SP_OPT_HomeBestPrice
# 立即完成，否则撤销
TORA_TSTP_SP_TC_IOC = _sptraderapi.TORA_TSTP_SP_TC_IOC
# 本节有效
TORA_TSTP_SP_TC_GFS = _sptraderapi.TORA_TSTP_SP_TC_GFS
# 当日有效
TORA_TSTP_SP_TC_GFD = _sptraderapi.TORA_TSTP_SP_TC_GFD
# 指定日期前有效
TORA_TSTP_SP_TC_GTD = _sptraderapi.TORA_TSTP_SP_TC_GTD
# 撤销前有效
TORA_TSTP_SP_TC_GTC = _sptraderapi.TORA_TSTP_SP_TC_GTC
# 集合竞价有效
TORA_TSTP_SP_TC_GFA = _sptraderapi.TORA_TSTP_SP_TC_GFA
# 任何数量
TORA_TSTP_SP_VC_AV = _sptraderapi.TORA_TSTP_SP_VC_AV
# 最小数量
TORA_TSTP_SP_VC_MV = _sptraderapi.TORA_TSTP_SP_VC_MV
# 全部数量
TORA_TSTP_SP_VC_CV = _sptraderapi.TORA_TSTP_SP_VC_CV
# 非强平
TORA_TSTP_SP_FCC_NotForceClose = _sptraderapi.TORA_TSTP_SP_FCC_NotForceClose
# 资金不足
TORA_TSTP_SP_FCC_LackDeposit = _sptraderapi.TORA_TSTP_SP_FCC_LackDeposit
# 客户超仓
TORA_TSTP_SP_FCC_ClientOverPositionLimit = _sptraderapi.TORA_TSTP_SP_FCC_ClientOverPositionLimit
# 会员超仓
TORA_TSTP_SP_FCC_MemberOverPositionLimit = _sptraderapi.TORA_TSTP_SP_FCC_MemberOverPositionLimit
# 持仓非整数倍
TORA_TSTP_SP_FCC_NotMultiple = _sptraderapi.TORA_TSTP_SP_FCC_NotMultiple
# 违规
TORA_TSTP_SP_FCC_Violation = _sptraderapi.TORA_TSTP_SP_FCC_Violation
# 其它
TORA_TSTP_SP_FCC_Other = _sptraderapi.TORA_TSTP_SP_FCC_Other
# 撤单已提交
TORA_TSTP_SP_CORDS_Submitted = _sptraderapi.TORA_TSTP_SP_CORDS_Submitted
# 撤单已成功
TORA_TSTP_SP_CORDS_Canceled = _sptraderapi.TORA_TSTP_SP_CORDS_Canceled
# 撤单失败
TORA_TSTP_SP_CORDS_Fail = _sptraderapi.TORA_TSTP_SP_CORDS_Fail
# 蓝补
TORA_TSTP_SP_TRNSD_In = _sptraderapi.TORA_TSTP_SP_TRNSD_In
# 红冲
TORA_TSTP_SP_TRNSD_Out = _sptraderapi.TORA_TSTP_SP_TRNSD_Out
# 调入
TORA_TSTP_SP_TRNSD_MoveIn = _sptraderapi.TORA_TSTP_SP_TRNSD_MoveIn
# 调出
TORA_TSTP_SP_TRNSD_MoveOut = _sptraderapi.TORA_TSTP_SP_TRNSD_MoveOut
# 冻结
TORA_TSTP_SP_TRNSD_Freeze = _sptraderapi.TORA_TSTP_SP_TRNSD_Freeze
# 解冻
TORA_TSTP_SP_TRNSD_UnFreeze = _sptraderapi.TORA_TSTP_SP_TRNSD_UnFreeze
# 银证转入
TORA_TSTP_SP_TRNSD_TransferIn = _sptraderapi.TORA_TSTP_SP_TRNSD_TransferIn
# 银证转出
TORA_TSTP_SP_TRNSD_TransferOut = _sptraderapi.TORA_TSTP_SP_TRNSD_TransferOut
# 蓝补
TORA_TSTP_SP_SSTR_In = _sptraderapi.TORA_TSTP_SP_SSTR_In
# 红冲
TORA_TSTP_SP_SSTR_Out = _sptraderapi.TORA_TSTP_SP_SSTR_Out
# 调入
TORA_TSTP_SP_SSTR_MoveIn = _sptraderapi.TORA_TSTP_SP_SSTR_MoveIn
# 调出
TORA_TSTP_SP_SSTR_MoveOut = _sptraderapi.TORA_TSTP_SP_SSTR_MoveOut
# 备兑锁定
TORA_TSTP_SP_SSTR_Lock = _sptraderapi.TORA_TSTP_SP_SSTR_Lock
# 备兑解锁
TORA_TSTP_SP_SSTR_UnLock = _sptraderapi.TORA_TSTP_SP_SSTR_UnLock
# 行权冻结
TORA_TSTP_SP_SSTR_ExerciseFreeze = _sptraderapi.TORA_TSTP_SP_SSTR_ExerciseFreeze
# 行权失败解冻
TORA_TSTP_SP_SSTR_ExerciseUnFreeze = _sptraderapi.TORA_TSTP_SP_SSTR_ExerciseUnFreeze
# 备兑平仓释放
TORA_TSTP_SP_SSTR_CoverCloseUnfreeze = _sptraderapi.TORA_TSTP_SP_SSTR_CoverCloseUnfreeze
# Transfer正在处理
TORA_TSTP_SP_TRANST_TransferHandling = _sptraderapi.TORA_TSTP_SP_TRANST_TransferHandling
# Transfer成功
TORA_TSTP_SP_TRANST_TransferSuccess = _sptraderapi.TORA_TSTP_SP_TRANST_TransferSuccess
# Transfer失败
TORA_TSTP_SP_TRANST_TransferFail = _sptraderapi.TORA_TSTP_SP_TRANST_TransferFail
# Repeal正在处理
TORA_TSTP_SP_TRANST_RepealHandling = _sptraderapi.TORA_TSTP_SP_TRANST_RepealHandling
# Repeal成功
TORA_TSTP_SP_TRANST_RepealSuccess = _sptraderapi.TORA_TSTP_SP_TRANST_RepealSuccess
# Repeal失败
TORA_TSTP_SP_TRANST_RepealFail = _sptraderapi.TORA_TSTP_SP_TRANST_RepealFail
# 外部系统已接收
TORA_TSTP_SP_TRANST_ExternalAccepted = _sptraderapi.TORA_TSTP_SP_TRANST_ExternalAccepted
# 任意仓
TORA_TSTP_SP_TPT_ALL = _sptraderapi.TORA_TSTP_SP_TPT_ALL
# 昨仓
TORA_TSTP_SP_TPT_History = _sptraderapi.TORA_TSTP_SP_TPT_History
# 今买卖仓
TORA_TSTP_SP_TPT_TodayBS = _sptraderapi.TORA_TSTP_SP_TPT_TodayBS
# 今申赎仓
TORA_TSTP_SP_TPT_TodayPR = _sptraderapi.TORA_TSTP_SP_TPT_TodayPR
# DbSync
TORA_TSTP_SP_APP_DbSync = _sptraderapi.TORA_TSTP_SP_APP_DbSync
# StockTransferOffer
TORA_TSTP_SP_APP_StockTransferOffer = _sptraderapi.TORA_TSTP_SP_APP_StockTransferOffer
# TraderOffer
TORA_TSTP_SP_APP_TraderOffer = _sptraderapi.TORA_TSTP_SP_APP_TraderOffer
# MdServer
TORA_TSTP_SP_APP_MdOffer = _sptraderapi.TORA_TSTP_SP_APP_MdOffer
# TInit
TORA_TSTP_SP_APP_TInit = _sptraderapi.TORA_TSTP_SP_APP_TInit
# Adapter
TORA_TSTP_SP_APP_Adapter = _sptraderapi.TORA_TSTP_SP_APP_Adapter
# Fileoffer
TORA_TSTP_SP_APP_Fileoffer = _sptraderapi.TORA_TSTP_SP_APP_Fileoffer
# RiskMsg
TORA_TSTP_SP_APP_RiskMsg = _sptraderapi.TORA_TSTP_SP_APP_RiskMsg
# AuthMidWare
TORA_TSTP_SP_APP_AuthMidWare = _sptraderapi.TORA_TSTP_SP_APP_AuthMidWare
# 没有任何连接
TORA_TSTP_SP_ACS_NotConnected = _sptraderapi.TORA_TSTP_SP_ACS_NotConnected
# 已经登录交易核心
TORA_TSTP_SP_ACS_Logged = _sptraderapi.TORA_TSTP_SP_ACS_Logged
# 已经连接外部系统
TORA_TSTP_SP_ACS_SysConnected = _sptraderapi.TORA_TSTP_SP_ACS_SysConnected
# 正在登录交易所
TORA_TSTP_SP_ACS_ExgLogin = _sptraderapi.TORA_TSTP_SP_ACS_ExgLogin
# 已登录交易所
TORA_TSTP_SP_ACS_ExgLogged = _sptraderapi.TORA_TSTP_SP_ACS_ExgLogged
# 没有任何连接
TORA_TSTP_SP_CS_NotConnected = _sptraderapi.TORA_TSTP_SP_CS_NotConnected
# 正在分配应用组件
TORA_TSTP_SP_CS_Dispatching = _sptraderapi.TORA_TSTP_SP_CS_Dispatching
# 已经连接
TORA_TSTP_SP_CS_Connected = _sptraderapi.TORA_TSTP_SP_CS_Connected
# 核心已处理
TORA_TSTP_SP_OST_Handled = _sptraderapi.TORA_TSTP_SP_OST_Handled
# 交易所已接收
TORA_TSTP_SP_OST_Accepted = _sptraderapi.TORA_TSTP_SP_OST_Accepted
# 部分成交
TORA_TSTP_SP_OST_PartTraded = _sptraderapi.TORA_TSTP_SP_OST_PartTraded
# 全部成交
TORA_TSTP_SP_OST_AllTraded = _sptraderapi.TORA_TSTP_SP_OST_AllTraded
# 部撤
TORA_TSTP_SP_OST_PartTradedCancelled = _sptraderapi.TORA_TSTP_SP_OST_PartTradedCancelled
# 全撤
TORA_TSTP_SP_OST_Cancelled = _sptraderapi.TORA_TSTP_SP_OST_Cancelled
# 废单
TORA_TSTP_SP_OST_Failed = _sptraderapi.TORA_TSTP_SP_OST_Failed
# 预埋
TORA_TSTP_SP_OST_Cached = _sptraderapi.TORA_TSTP_SP_OST_Cached
# 发往现货系统处理
TORA_TSTP_SP_OST_SendStock = _sptraderapi.TORA_TSTP_SP_OST_SendStock
# 已经提交
TORA_TSTP_SP_OOS_InsertSubmitted = _sptraderapi.TORA_TSTP_SP_OOS_InsertSubmitted
# 撤单已经提交
TORA_TSTP_SP_OOS_CancelSubmitted = _sptraderapi.TORA_TSTP_SP_OOS_CancelSubmitted
# 已经接受
TORA_TSTP_SP_OOS_Accepted = _sptraderapi.TORA_TSTP_SP_OOS_Accepted
# 报单已经被拒绝
TORA_TSTP_SP_OOS_InsertRejected = _sptraderapi.TORA_TSTP_SP_OOS_InsertRejected
# 撤单已经被拒绝
TORA_TSTP_SP_OOS_CancelRejected = _sptraderapi.TORA_TSTP_SP_OOS_CancelRejected
# 未提交
TORA_TSTP_SP_OOS_UnSubmitted = _sptraderapi.TORA_TSTP_SP_OOS_UnSubmitted
# 开仓
TORA_TSTP_SP_OF_Open = _sptraderapi.TORA_TSTP_SP_OF_Open
# 平仓
TORA_TSTP_SP_OF_Close = _sptraderapi.TORA_TSTP_SP_OF_Close
# 强平
TORA_TSTP_SP_OF_ForceClose = _sptraderapi.TORA_TSTP_SP_OF_ForceClose
# 平今
TORA_TSTP_SP_OF_CloseToday = _sptraderapi.TORA_TSTP_SP_OF_CloseToday
# 平昨
TORA_TSTP_SP_OF_CloseYesterday = _sptraderapi.TORA_TSTP_SP_OF_CloseYesterday
# 强减
TORA_TSTP_SP_OF_ForceOff = _sptraderapi.TORA_TSTP_SP_OF_ForceOff
# 本地强平
TORA_TSTP_SP_OF_LocalForceClose = _sptraderapi.TORA_TSTP_SP_OF_LocalForceClose
# 行权（内部使用）
TORA_TSTP_SP_OF_Exercise = _sptraderapi.TORA_TSTP_SP_OF_Exercise
# 锁定（内部使用）
TORA_TSTP_SP_OF_Lock = _sptraderapi.TORA_TSTP_SP_OF_Lock
# 解锁（内部使用）
TORA_TSTP_SP_OF_UnLock = _sptraderapi.TORA_TSTP_SP_OF_UnLock
# 组合（内部使用）
TORA_TSTP_SP_OF_Combine = _sptraderapi.TORA_TSTP_SP_OF_Combine
# 拆分（内部使用）
TORA_TSTP_SP_OF_Split = _sptraderapi.TORA_TSTP_SP_OF_Split
# 保证金转备兑（内部使用）
TORA_TSTP_SP_OF_ConvertConver = _sptraderapi.TORA_TSTP_SP_OF_ConvertConver
# 备兑转保证金（内部使用）
TORA_TSTP_SP_OF_ConvertMargin = _sptraderapi.TORA_TSTP_SP_OF_ConvertMargin
# 投机
TORA_TSTP_SP_HF_Speculation = _sptraderapi.TORA_TSTP_SP_HF_Speculation
# 套利
TORA_TSTP_SP_HF_Arbitrage = _sptraderapi.TORA_TSTP_SP_HF_Arbitrage
# 套保
TORA_TSTP_SP_HF_Hedge = _sptraderapi.TORA_TSTP_SP_HF_Hedge
# 备兑
TORA_TSTP_SP_HF_Covered = _sptraderapi.TORA_TSTP_SP_HF_Covered
# 撤单
TORA_TSTP_SP_OAF_Delete = _sptraderapi.TORA_TSTP_SP_OAF_Delete
# 强制撤单
TORA_TSTP_SP_OAF_ForceDelete = _sptraderapi.TORA_TSTP_SP_OAF_ForceDelete
# 主动行权
TORA_TSTP_SP_EXCD_Active = _sptraderapi.TORA_TSTP_SP_EXCD_Active
# 被动行权
TORA_TSTP_SP_EXCD_Passive = _sptraderapi.TORA_TSTP_SP_EXCD_Passive
# 非备兑
TORA_TSTP_SP_CVF_Uncovered = _sptraderapi.TORA_TSTP_SP_CVF_Uncovered
# 备兑
TORA_TSTP_SP_CVF_Covered = _sptraderapi.TORA_TSTP_SP_CVF_Covered
# 未知
TORA_TSTP_SP_SHID_Unknown = _sptraderapi.TORA_TSTP_SP_SHID_Unknown
# 普通
TORA_TSTP_SP_SHID_Normal = _sptraderapi.TORA_TSTP_SP_SHID_Normal
# 信用
TORA_TSTP_SP_SHID_Credit = _sptraderapi.TORA_TSTP_SP_SHID_Credit
# 衍生品
TORA_TSTP_SP_SHID_Derivatives = _sptraderapi.TORA_TSTP_SP_SHID_Derivatives
# 欧式
TORA_TSTP_SP_STM_Continental = _sptraderapi.TORA_TSTP_SP_STM_Continental
# 美式
TORA_TSTP_SP_STM_American = _sptraderapi.TORA_TSTP_SP_STM_American
# 百慕大
TORA_TSTP_SP_STM_Bermuda = _sptraderapi.TORA_TSTP_SP_STM_Bermuda
# 看涨
TORA_TSTP_SP_CP_CallOptions = _sptraderapi.TORA_TSTP_SP_CP_CallOptions
# 看跌
TORA_TSTP_SP_CP_PutOptions = _sptraderapi.TORA_TSTP_SP_CP_PutOptions
# 通用(内部使用)
TORA_TSTP_SP_PID_COMMON = _sptraderapi.TORA_TSTP_SP_PID_COMMON
# 上海股票
TORA_TSTP_SP_PID_SHStock = _sptraderapi.TORA_TSTP_SP_PID_SHStock
# 上海基金
TORA_TSTP_SP_PID_SHFund = _sptraderapi.TORA_TSTP_SP_PID_SHFund
# 上海债券
TORA_TSTP_SP_PID_SHBond = _sptraderapi.TORA_TSTP_SP_PID_SHBond
# 深圳股票
TORA_TSTP_SP_PID_SZStock = _sptraderapi.TORA_TSTP_SP_PID_SZStock
# 深圳基金
TORA_TSTP_SP_PID_SZFund = _sptraderapi.TORA_TSTP_SP_PID_SZFund
# 深圳债券
TORA_TSTP_SP_PID_SZBond = _sptraderapi.TORA_TSTP_SP_PID_SZBond
# 上海个股期权
TORA_TSTP_SP_PID_SHStockOption = _sptraderapi.TORA_TSTP_SP_PID_SHStockOption
# 深圳个股期权
TORA_TSTP_SP_PID_SZStockOption = _sptraderapi.TORA_TSTP_SP_PID_SZStockOption
# 通用(内部使用)
TORA_TSTP_SP_STP_COMMON = _sptraderapi.TORA_TSTP_SP_STP_COMMON
# 上海股票型看涨期权
TORA_TSTP_SP_STP_SHCallAStockOption = _sptraderapi.TORA_TSTP_SP_STP_SHCallAStockOption
# 上海股票型看跌期权
TORA_TSTP_SP_STP_SHPullAStockOption = _sptraderapi.TORA_TSTP_SP_STP_SHPullAStockOption
# 上海基金型看涨期权
TORA_TSTP_SP_STP_SHCallFundStockOption = _sptraderapi.TORA_TSTP_SP_STP_SHCallFundStockOption
# 上海基金型看跌期权
TORA_TSTP_SP_STP_SHPullFundStockOption = _sptraderapi.TORA_TSTP_SP_STP_SHPullFundStockOption
# 深圳股票型看涨期权
TORA_TSTP_SP_STP_SZCallAStockOption = _sptraderapi.TORA_TSTP_SP_STP_SZCallAStockOption
# 深圳股票型看跌期权
TORA_TSTP_SP_STP_SZPullAStockOption = _sptraderapi.TORA_TSTP_SP_STP_SZPullAStockOption
# 深圳基金型看涨期权
TORA_TSTP_SP_STP_SZCallFundStockOption = _sptraderapi.TORA_TSTP_SP_STP_SZCallFundStockOption
# 深圳基金型看跌期权
TORA_TSTP_SP_STP_SZPullFundStockOption = _sptraderapi.TORA_TSTP_SP_STP_SZPullFundStockOption
# 上海组合期权
TORA_TSTP_SP_STP_SHCombOption = _sptraderapi.TORA_TSTP_SP_STP_SHCombOption
# 深圳组合期权
TORA_TSTP_SP_STP_SZCombOption = _sptraderapi.TORA_TSTP_SP_STP_SZCombOption
# 买入开仓
TORA_TSTP_SP_BC_BuyOpen = _sptraderapi.TORA_TSTP_SP_BC_BuyOpen
# 买入平仓
TORA_TSTP_SP_BC_BuyClose = _sptraderapi.TORA_TSTP_SP_BC_BuyClose
# 卖出开仓
TORA_TSTP_SP_BC_SellOpen = _sptraderapi.TORA_TSTP_SP_BC_SellOpen
# 卖出平仓
TORA_TSTP_SP_BC_SellClose = _sptraderapi.TORA_TSTP_SP_BC_SellClose
# 备兑开仓
TORA_TSTP_SP_BC_CoveredOpen = _sptraderapi.TORA_TSTP_SP_BC_CoveredOpen
# 备兑平仓
TORA_TSTP_SP_BC_CoveredClose = _sptraderapi.TORA_TSTP_SP_BC_CoveredClose
# 行权
TORA_TSTP_SP_BC_ExecOrder = _sptraderapi.TORA_TSTP_SP_BC_ExecOrder
# 现券
TORA_TSTP_SP_SF_Security = _sptraderapi.TORA_TSTP_SP_SF_Security
# 个股期权
TORA_TSTP_SP_SF_SecurityOption = _sptraderapi.TORA_TSTP_SP_SF_SecurityOption
# 融资融券
TORA_TSTP_SP_SF_Credit = _sptraderapi.TORA_TSTP_SP_SF_Credit
# 现货集中竞价交易平台
TORA_TSTP_SP_PT_Spot = _sptraderapi.TORA_TSTP_SP_PT_Spot
# 衍生品集中竞价交易平台
TORA_TSTP_SP_PT_Derive = _sptraderapi.TORA_TSTP_SP_PT_Derive
# 非交易处理平台
TORA_TSTP_SP_PT_NoTrading = _sptraderapi.TORA_TSTP_SP_PT_NoTrading
# 综合协议交易平台
TORA_TSTP_SP_PT_Negotiable = _sptraderapi.TORA_TSTP_SP_PT_Negotiable
# 混合多平台
TORA_TSTP_SP_PT_Mixed = _sptraderapi.TORA_TSTP_SP_PT_Mixed
# 未知
TORA_TSTP_SP_PS_UnKnown = _sptraderapi.TORA_TSTP_SP_PS_UnKnown
# 未开放
TORA_TSTP_SP_PS_PreOpen = _sptraderapi.TORA_TSTP_SP_PS_PreOpen
# 即将开放
TORA_TSTP_SP_PS_OpenUpComing = _sptraderapi.TORA_TSTP_SP_PS_OpenUpComing
# 开放
TORA_TSTP_SP_PS_Open = _sptraderapi.TORA_TSTP_SP_PS_Open
# 暂停开放
TORA_TSTP_SP_PS_Halt = _sptraderapi.TORA_TSTP_SP_PS_Halt
# 关闭
TORA_TSTP_SP_PS_Close = _sptraderapi.TORA_TSTP_SP_PS_Close
# 会话管理：强制登出
TORA_TSTP_SP_FID_SessionManager = _sptraderapi.TORA_TSTP_SP_FID_SessionManager
# 用户管理：强制用户退出(禁用)、激活、密码操作
TORA_TSTP_SP_FID_UserManager = _sptraderapi.TORA_TSTP_SP_FID_UserManager
# 报单插入
TORA_TSTP_SP_FID_OrderInsert = _sptraderapi.TORA_TSTP_SP_FID_OrderInsert
# 报单操作
TORA_TSTP_SP_FID_OrderAction = _sptraderapi.TORA_TSTP_SP_FID_OrderAction
# 锁仓
TORA_TSTP_SP_FID_LockInsert = _sptraderapi.TORA_TSTP_SP_FID_LockInsert
# 行权
TORA_TSTP_SP_FID_ExecInsert = _sptraderapi.TORA_TSTP_SP_FID_ExecInsert
# 资金调拨
TORA_TSTP_SP_FID_MoveFund = _sptraderapi.TORA_TSTP_SP_FID_MoveFund
# 资金蓝补
TORA_TSTP_SP_FID_InFund = _sptraderapi.TORA_TSTP_SP_FID_InFund
# 资金红冲
TORA_TSTP_SP_FID_OutFund = _sptraderapi.TORA_TSTP_SP_FID_OutFund
# 资金冻结
TORA_TSTP_SP_FID_FreezeFund = _sptraderapi.TORA_TSTP_SP_FID_FreezeFund
# 资金解冻
TORA_TSTP_SP_FID_UnFreezeFund = _sptraderapi.TORA_TSTP_SP_FID_UnFreezeFund
# 仓位蓝补
TORA_TSTP_SP_FID_InPosition = _sptraderapi.TORA_TSTP_SP_FID_InPosition
# 仓位红冲
TORA_TSTP_SP_FID_OutPosition = _sptraderapi.TORA_TSTP_SP_FID_OutPosition
# 持仓调拨
TORA_TSTP_SP_FID_MovePosition = _sptraderapi.TORA_TSTP_SP_FID_MovePosition
# 证券处置
TORA_TSTP_SP_FID_StockDisposal = _sptraderapi.TORA_TSTP_SP_FID_StockDisposal
# 锁定操作
TORA_TSTP_SP_FID_LockAction = _sptraderapi.TORA_TSTP_SP_FID_LockAction
# 行权操作
TORA_TSTP_SP_FID_ExecAction = _sptraderapi.TORA_TSTP_SP_FID_ExecAction
# 证券处置操作
TORA_TSTP_SP_FID_StockDisposalAction = _sptraderapi.TORA_TSTP_SP_FID_StockDisposalAction
# 组合委托
TORA_TSTP_SP_FID_CombinationOrder = _sptraderapi.TORA_TSTP_SP_FID_CombinationOrder
# 银证转账
TORA_TSTP_SP_FID_TransferFund = _sptraderapi.TORA_TSTP_SP_FID_TransferFund
# 风险处置
TORA_TSTP_SP_FID_RiskHandle = _sptraderapi.TORA_TSTP_SP_FID_RiskHandle
# 风控监控
TORA_TSTP_SP_FID_RiskMonit = _sptraderapi.TORA_TSTP_SP_FID_RiskMonit
# 回传数据
TORA_TSTP_SP_FID_UploadTradeData = _sptraderapi.TORA_TSTP_SP_FID_UploadTradeData
# 强制删除报单
TORA_TSTP_SP_FID_ForceDelete = _sptraderapi.TORA_TSTP_SP_FID_ForceDelete
# 实时上场管理
TORA_TSTP_SP_FID_DbmtManager = _sptraderapi.TORA_TSTP_SP_FID_DbmtManager
# 实时上场复核
TORA_TSTP_SP_FID_DbmtReview = _sptraderapi.TORA_TSTP_SP_FID_DbmtReview
# 净
TORA_TSTP_SP_PD_Net = _sptraderapi.TORA_TSTP_SP_PD_Net
# 多头
TORA_TSTP_SP_PD_Long = _sptraderapi.TORA_TSTP_SP_PD_Long
# 空头
TORA_TSTP_SP_PD_Short = _sptraderapi.TORA_TSTP_SP_PD_Short
# 通用(内部使用)
TORA_TSTP_SP_MKD_COMMON = _sptraderapi.TORA_TSTP_SP_MKD_COMMON
# 上海A股
TORA_TSTP_SP_MKD_SHA = _sptraderapi.TORA_TSTP_SP_MKD_SHA
# 深圳A股
TORA_TSTP_SP_MKD_SZA = _sptraderapi.TORA_TSTP_SP_MKD_SZA
# 上海B股
TORA_TSTP_SP_MKD_SHB = _sptraderapi.TORA_TSTP_SP_MKD_SHB
# 深圳B股
TORA_TSTP_SP_MKD_SZB = _sptraderapi.TORA_TSTP_SP_MKD_SZB
# 深圳三版A股
TORA_TSTP_SP_MKD_SZThreeA = _sptraderapi.TORA_TSTP_SP_MKD_SZThreeA
# 深圳三版B股
TORA_TSTP_SP_MKD_SZThreeB = _sptraderapi.TORA_TSTP_SP_MKD_SZThreeB
# 境外市场
TORA_TSTP_SP_MKD_Foreign = _sptraderapi.TORA_TSTP_SP_MKD_Foreign
# 用户代码
TORA_TSTP_SP_LACT_UserID = _sptraderapi.TORA_TSTP_SP_LACT_UserID
# 资金账号
TORA_TSTP_SP_LACT_AccountID = _sptraderapi.TORA_TSTP_SP_LACT_AccountID
# 上海A股
TORA_TSTP_SP_LACT_SHAStock = _sptraderapi.TORA_TSTP_SP_LACT_SHAStock
# 深圳A股
TORA_TSTP_SP_LACT_SZAStock = _sptraderapi.TORA_TSTP_SP_LACT_SZAStock
# 上海B股
TORA_TSTP_SP_LACT_SHBStock = _sptraderapi.TORA_TSTP_SP_LACT_SHBStock
# 深圳B股
TORA_TSTP_SP_LACT_SZBStock = _sptraderapi.TORA_TSTP_SP_LACT_SZBStock
# 三板A
TORA_TSTP_SP_LACT_ThreeNewBoardA = _sptraderapi.TORA_TSTP_SP_LACT_ThreeNewBoardA
# 三板B
TORA_TSTP_SP_LACT_ThreeNewBoardB = _sptraderapi.TORA_TSTP_SP_LACT_ThreeNewBoardB
# 港股
TORA_TSTP_SP_LACT_HKStock = _sptraderapi.TORA_TSTP_SP_LACT_HKStock
# 未知
TORA_TSTP_SP_MST_UnKnown = _sptraderapi.TORA_TSTP_SP_MST_UnKnown
# 开盘前
TORA_TSTP_SP_MST_BeforeTrading = _sptraderapi.TORA_TSTP_SP_MST_BeforeTrading
# 连续交易
TORA_TSTP_SP_MST_Continous = _sptraderapi.TORA_TSTP_SP_MST_Continous
# 收盘
TORA_TSTP_SP_MST_Closed = _sptraderapi.TORA_TSTP_SP_MST_Closed
# 开盘集合竞价
TORA_TSTP_SP_MST_OpenCallAuction = _sptraderapi.TORA_TSTP_SP_MST_OpenCallAuction
# 单一
TORA_TSTP_SP_ARM_Single = _sptraderapi.TORA_TSTP_SP_ARM_Single
# 集群
TORA_TSTP_SP_ARM_Group = _sptraderapi.TORA_TSTP_SP_ARM_Group
# 不合格投资人
TORA_TSTP_SP_IVL_Invalid = _sptraderapi.TORA_TSTP_SP_IVL_Invalid
# 一级
TORA_TSTP_SP_IVL_First = _sptraderapi.TORA_TSTP_SP_IVL_First
# 二级
TORA_TSTP_SP_IVL_Second = _sptraderapi.TORA_TSTP_SP_IVL_Second
# 三级
TORA_TSTP_SP_IVL_Third = _sptraderapi.TORA_TSTP_SP_IVL_Third
# 锁定
TORA_TSTP_SP_LT_Lock = _sptraderapi.TORA_TSTP_SP_LT_Lock
# 解锁
TORA_TSTP_SP_LT_UnLock = _sptraderapi.TORA_TSTP_SP_LT_UnLock
# 发往现货系统
TORA_TSTP_SP_LST_SendStock = _sptraderapi.TORA_TSTP_SP_LST_SendStock
# 发往现货系统冲正
TORA_TSTP_SP_LST_RepealStock = _sptraderapi.TORA_TSTP_SP_LST_RepealStock
# 发往报盘
TORA_TSTP_SP_LST_SendOffer = _sptraderapi.TORA_TSTP_SP_LST_SendOffer
# 锁定/解锁失败
TORA_TSTP_SP_LST_Fail = _sptraderapi.TORA_TSTP_SP_LST_Fail
# 锁定/解锁成功
TORA_TSTP_SP_LST_Success = _sptraderapi.TORA_TSTP_SP_LST_Success
# 强制撤销
TORA_TSTP_SP_LST_ForceCancell = _sptraderapi.TORA_TSTP_SP_LST_ForceCancell
# 执行
TORA_TSTP_SP_EXERT_Execute = _sptraderapi.TORA_TSTP_SP_EXERT_Execute
# 放弃
TORA_TSTP_SP_EXERT_Drop = _sptraderapi.TORA_TSTP_SP_EXERT_Drop
# 发往现货系统
TORA_TSTP_SP_EXERS_SendStock = _sptraderapi.TORA_TSTP_SP_EXERS_SendStock
# 发往现货系统冲正
TORA_TSTP_SP_EXERS_RepealStock = _sptraderapi.TORA_TSTP_SP_EXERS_RepealStock
# 发往报盘
TORA_TSTP_SP_EXERS_SendOffer = _sptraderapi.TORA_TSTP_SP_EXERS_SendOffer
# 行权失败
TORA_TSTP_SP_EXERS_Fail = _sptraderapi.TORA_TSTP_SP_EXERS_Fail
# 交易所已接收
TORA_TSTP_SP_EXERS_Accepted = _sptraderapi.TORA_TSTP_SP_EXERS_Accepted
# 行权已撤销
TORA_TSTP_SP_EXERS_Cancelled = _sptraderapi.TORA_TSTP_SP_EXERS_Cancelled
# 划入到证券公司账户
TORA_TSTP_SP_SDT_Broker = _sptraderapi.TORA_TSTP_SP_SDT_Broker
# 划入到投资者证券账户
TORA_TSTP_SP_SDT_Investor = _sptraderapi.TORA_TSTP_SP_SDT_Investor
# 发往报盘
TORA_TSTP_SP_SDS_SendOffer = _sptraderapi.TORA_TSTP_SP_SDS_SendOffer
# 失败
TORA_TSTP_SP_SDS_Fail = _sptraderapi.TORA_TSTP_SP_SDS_Fail
# 交易所已接收
TORA_TSTP_SP_SDS_Accepted = _sptraderapi.TORA_TSTP_SP_SDS_Accepted
# 证券处置已撤销
TORA_TSTP_SP_SDS_Cancelled = _sptraderapi.TORA_TSTP_SP_SDS_Cancelled
# 认购牛市价差策略
TORA_TSTP_SP_CBS_CNSJC = _sptraderapi.TORA_TSTP_SP_CBS_CNSJC
# 认购熊市价差策略
TORA_TSTP_SP_CBS_CXSJC = _sptraderapi.TORA_TSTP_SP_CBS_CXSJC
# 认沽熊市价差策略
TORA_TSTP_SP_CBS_PXSJC = _sptraderapi.TORA_TSTP_SP_CBS_PXSJC
# 认沽牛市价差策略
TORA_TSTP_SP_CBS_PNSJC = _sptraderapi.TORA_TSTP_SP_CBS_PNSJC
# 跨式空头
TORA_TSTP_SP_CBS_KS = _sptraderapi.TORA_TSTP_SP_CBS_KS
# 宽跨式空头
TORA_TSTP_SP_CBS_KKS = _sptraderapi.TORA_TSTP_SP_CBS_KKS
# 保证金开仓转备兑
TORA_TSTP_SP_CBS_ZBD = _sptraderapi.TORA_TSTP_SP_CBS_ZBD
# 备兑仓转普通
TORA_TSTP_SP_CBS_ZXJ = _sptraderapi.TORA_TSTP_SP_CBS_ZXJ
# 开盘前
TORA_TSTP_SP_MSST_PreOpen = _sptraderapi.TORA_TSTP_SP_MSST_PreOpen
# 集合竞价
TORA_TSTP_SP_MSST_CallAuction = _sptraderapi.TORA_TSTP_SP_MSST_CallAuction
# 连续交易
TORA_TSTP_SP_MSST_Continous = _sptraderapi.TORA_TSTP_SP_MSST_Continous
# 休市
TORA_TSTP_SP_MSST_Pause = _sptraderapi.TORA_TSTP_SP_MSST_Pause
# 停牌
TORA_TSTP_SP_MSST_Suspend = _sptraderapi.TORA_TSTP_SP_MSST_Suspend
# 长期停牌
TORA_TSTP_SP_MSST_LongSuspend = _sptraderapi.TORA_TSTP_SP_MSST_LongSuspend
# 波动性中断
TORA_TSTP_SP_MSST_UndulationInt = _sptraderapi.TORA_TSTP_SP_MSST_UndulationInt
# 熔断可恢复
TORA_TSTP_SP_MSST_CircuitBreak = _sptraderapi.TORA_TSTP_SP_MSST_CircuitBreak
# 熔断不可恢复
TORA_TSTP_SP_MSST_CircuitBreakU = _sptraderapi.TORA_TSTP_SP_MSST_CircuitBreakU
# 闭市
TORA_TSTP_SP_MSST_Close = _sptraderapi.TORA_TSTP_SP_MSST_Close
# 其它
TORA_TSTP_SP_MSST_Other = _sptraderapi.TORA_TSTP_SP_MSST_Other
# 收盘集合竞价
TORA_TSTP_SP_MSST_CloseCallAuction = _sptraderapi.TORA_TSTP_SP_MSST_CloseCallAuction
# 下场数据
TORA_TSTP_SP_UPLT_CloseMarket = _sptraderapi.TORA_TSTP_SP_UPLT_CloseMarket
# 预清算数据
TORA_TSTP_SP_UPLT_Budget = _sptraderapi.TORA_TSTP_SP_UPLT_Budget
# 成交触发
TORA_TSTP_SP_CC_TradeTouch = _sptraderapi.TORA_TSTP_SP_CC_TradeTouch
# 撤单触发
TORA_TSTP_SP_CC_CancelTouch = _sptraderapi.TORA_TSTP_SP_CC_CancelTouch
# 时间触发
TORA_TSTP_SP_CC_TimeTouch = _sptraderapi.TORA_TSTP_SP_CC_TimeTouch
# 交易时段触发
TORA_TSTP_SP_CC_SegmentTouch = _sptraderapi.TORA_TSTP_SP_CC_SegmentTouch
# 最新价大于等于条件价
TORA_TSTP_SP_CC_LastPriceGreaterThanStopPrice = _sptraderapi.TORA_TSTP_SP_CC_LastPriceGreaterThanStopPrice
# 最新价小于等于条件价
TORA_TSTP_SP_CC_LastPriceLesserThanStopPrice = _sptraderapi.TORA_TSTP_SP_CC_LastPriceLesserThanStopPrice
# 卖一价大于等于条件价
TORA_TSTP_SP_CC_AskPriceGreaterEqualStopPrice = _sptraderapi.TORA_TSTP_SP_CC_AskPriceGreaterEqualStopPrice
# 卖一价小于等于条件价
TORA_TSTP_SP_CC_AskPriceLesserEqualStopPrice = _sptraderapi.TORA_TSTP_SP_CC_AskPriceLesserEqualStopPrice
# 买一价大于等于条件价
TORA_TSTP_SP_CC_BidPriceGreaterEqualStopPrice = _sptraderapi.TORA_TSTP_SP_CC_BidPriceGreaterEqualStopPrice
# 买一价小于等于条件价
TORA_TSTP_SP_CC_BidPriceLesserEqualStopPrice = _sptraderapi.TORA_TSTP_SP_CC_BidPriceLesserEqualStopPrice
# 自定义数量
TORA_TSTP_SP_OVT_CustomVol = _sptraderapi.TORA_TSTP_SP_OVT_CustomVol
# 相关数量
TORA_TSTP_SP_OVT_RelativeVol = _sptraderapi.TORA_TSTP_SP_OVT_RelativeVol
# 初始
TORA_TSTP_SP_COST_Initial = _sptraderapi.TORA_TSTP_SP_COST_Initial
# 未触发
TORA_TSTP_SP_COST_NotTouched = _sptraderapi.TORA_TSTP_SP_COST_NotTouched
# 已触发
TORA_TSTP_SP_COST_Touched = _sptraderapi.TORA_TSTP_SP_COST_Touched
# 已结束
TORA_TSTP_SP_COST_Finished = _sptraderapi.TORA_TSTP_SP_COST_Finished
# 已撤销
TORA_TSTP_SP_COST_Cancel = _sptraderapi.TORA_TSTP_SP_COST_Cancel
# 触发失败
TORA_TSTP_SP_COST_Failed = _sptraderapi.TORA_TSTP_SP_COST_Failed
# 风险警示标准，如80%则设置为80即可
TORA_TSTP_SP_RPT_WarnLevel = _sptraderapi.TORA_TSTP_SP_RPT_WarnLevel
# 风控强平标准，如100%则设置为100即可
TORA_TSTP_SP_RPT_ForceCloseStd = _sptraderapi.TORA_TSTP_SP_RPT_ForceCloseStd
# 峰值监控分界线，如N笔
TORA_TSTP_SP_RPT_PeakBoundary = _sptraderapi.TORA_TSTP_SP_RPT_PeakBoundary
# 峰值监控时间单元，单位秒，如1秒
TORA_TSTP_SP_RPT_PeakUnit = _sptraderapi.TORA_TSTP_SP_RPT_PeakUnit
# 峰值监控每个时间单元允许申报笔数，如每1秒允许申报10笔则设置10
TORA_TSTP_SP_RPT_PeakMaxVolPerUnit = _sptraderapi.TORA_TSTP_SP_RPT_PeakMaxVolPerUnit
# 开仓监控分界线，如N笔
TORA_TSTP_SP_RPT_OpenBoundary = _sptraderapi.TORA_TSTP_SP_RPT_OpenBoundary
# 开仓监控时间单元，单位秒，如1秒
TORA_TSTP_SP_RPT_OpenUnit = _sptraderapi.TORA_TSTP_SP_RPT_OpenUnit
# 标的开仓监控分界线，如N笔
TORA_TSTP_SP_RPT_UdyOpenBoundary = _sptraderapi.TORA_TSTP_SP_RPT_UdyOpenBoundary
# 标的开仓监控时间单元，单位秒，如3秒
TORA_TSTP_SP_RPT_UdyOpenUnit = _sptraderapi.TORA_TSTP_SP_RPT_UdyOpenUnit
# 申报撤销分界线，如N笔
TORA_TSTP_SP_RPT_DeclareRevokeBoundary = _sptraderapi.TORA_TSTP_SP_RPT_DeclareRevokeBoundary
# 申报撤销监控时间单元，单位秒，如3秒
TORA_TSTP_SP_RPT_DeclareRevokeUnit = _sptraderapi.TORA_TSTP_SP_RPT_DeclareRevokeUnit
# 撤单限制比例，如20%则设置为20即可
TORA_TSTP_SP_RPT_RevokeRatio = _sptraderapi.TORA_TSTP_SP_RPT_RevokeRatio
# 涨跌幅委托监控分界线，如N笔
TORA_TSTP_SP_RPT_LimitPriceDecBoundary = _sptraderapi.TORA_TSTP_SP_RPT_LimitPriceDecBoundary
# 申报价格异动撤销监控分界线，如N笔
TORA_TSTP_SP_RPT_DecPriceRevokeExBoundary = _sptraderapi.TORA_TSTP_SP_RPT_DecPriceRevokeExBoundary
# 申报价格异动撤销监控价格偏离限制比例，如偏离度10%，则设置10即可
TORA_TSTP_SP_RPT_DecPriceRevokeOffsetRatio = _sptraderapi.TORA_TSTP_SP_RPT_DecPriceRevokeOffsetRatio
# 申报价格异动撤销监控撤销数，笔数
TORA_TSTP_SP_RPT_DecPriceRevokeCancel = _sptraderapi.TORA_TSTP_SP_RPT_DecPriceRevokeCancel
# 申报价格异动发现成交数，张数
TORA_TSTP_SP_RPT_DecPriceRevokeRevTrade = _sptraderapi.TORA_TSTP_SP_RPT_DecPriceRevokeRevTrade
# 申报价格异动成交监控分界线，如N笔
TORA_TSTP_SP_RPT_DecPriceTradeBondary = _sptraderapi.TORA_TSTP_SP_RPT_DecPriceTradeBondary
# 申报价格异动成交监控价格偏离限制比例，如偏离度10%，则设置10即可
TORA_TSTP_SP_RPT_DecPriceTradeOffsetRatio = _sptraderapi.TORA_TSTP_SP_RPT_DecPriceTradeOffsetRatio
# 申报价格异动成交监控成交数，张数
TORA_TSTP_SP_RPT_DecPriceTradeTrade = _sptraderapi.TORA_TSTP_SP_RPT_DecPriceTradeTrade
# 收盘异动监控收盘时间范围，指定时间格式HH:MM:SS，或指定时间范围格式HH:MM:SS/HH:MM:SS
TORA_TSTP_SP_RPT_CloseExTimeRange = _sptraderapi.TORA_TSTP_SP_RPT_CloseExTimeRange
# 收盘异动监控分界线，如N笔
TORA_TSTP_SP_RPT_CloseExBoundary = _sptraderapi.TORA_TSTP_SP_RPT_CloseExBoundary



#########################################fens用户信息############################################
class CTORATstpSPFensUserInfoField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPFensUserInfoField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPFensUserInfoField, name)
    __repr__ = _swig_repr

	# 登录账户
    __swig_setmethods__["LogInAccount"] = _sptraderapi.CTORATstpSPFensUserInfoField_LogInAccount_set
    __swig_getmethods__["LogInAccount"] = _sptraderapi.CTORATstpSPFensUserInfoField_LogInAccount_get
    if _newclass:
        LogInAccount = _swig_property(_sptraderapi.CTORATstpSPFensUserInfoField_LogInAccount_get, _sptraderapi.CTORATstpSPFensUserInfoField_LogInAccount_set)

	# 登录账户类型
    __swig_setmethods__["LogInAccountType"] = _sptraderapi.CTORATstpSPFensUserInfoField_LogInAccountType_set
    __swig_getmethods__["LogInAccountType"] = _sptraderapi.CTORATstpSPFensUserInfoField_LogInAccountType_get
    if _newclass:
        LogInAccountType = _swig_property(_sptraderapi.CTORATstpSPFensUserInfoField_LogInAccountType_get, _sptraderapi.CTORATstpSPFensUserInfoField_LogInAccountType_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPFensUserInfoField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPFensUserInfoField
    __del__ = lambda self: None
CTORATstpSPFensUserInfoField_swigregister = _sptraderapi.CTORATstpSPFensUserInfoField_swigregister
CTORATstpSPFensUserInfoField_swigregister(CTORATstpSPFensUserInfoField)




#########################################登录请求############################################
class CTORATstpSPReqUserLoginField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUserLoginField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUserLoginField, name)
    __repr__ = _swig_repr

	# 登录账户
    __swig_setmethods__["LogInAccount"] = _sptraderapi.CTORATstpSPReqUserLoginField_LogInAccount_set
    __swig_getmethods__["LogInAccount"] = _sptraderapi.CTORATstpSPReqUserLoginField_LogInAccount_get
    if _newclass:
        LogInAccount = _swig_property(_sptraderapi.CTORATstpSPReqUserLoginField_LogInAccount_get, _sptraderapi.CTORATstpSPReqUserLoginField_LogInAccount_set)

	# 登录账户类型
    __swig_setmethods__["LogInAccountType"] = _sptraderapi.CTORATstpSPReqUserLoginField_LogInAccountType_set
    __swig_getmethods__["LogInAccountType"] = _sptraderapi.CTORATstpSPReqUserLoginField_LogInAccountType_get
    if _newclass:
        LogInAccountType = _swig_property(_sptraderapi.CTORATstpSPReqUserLoginField_LogInAccountType_get, _sptraderapi.CTORATstpSPReqUserLoginField_LogInAccountType_set)

	# 密码
    __swig_setmethods__["Password"] = _sptraderapi.CTORATstpSPReqUserLoginField_Password_set
    __swig_getmethods__["Password"] = _sptraderapi.CTORATstpSPReqUserLoginField_Password_get
    if _newclass:
        Password = _swig_property(_sptraderapi.CTORATstpSPReqUserLoginField_Password_get, _sptraderapi.CTORATstpSPReqUserLoginField_Password_set)

	# 用户端产品信息
    __swig_setmethods__["UserProductInfo"] = _sptraderapi.CTORATstpSPReqUserLoginField_UserProductInfo_set
    __swig_getmethods__["UserProductInfo"] = _sptraderapi.CTORATstpSPReqUserLoginField_UserProductInfo_get
    if _newclass:
        UserProductInfo = _swig_property(_sptraderapi.CTORATstpSPReqUserLoginField_UserProductInfo_get, _sptraderapi.CTORATstpSPReqUserLoginField_UserProductInfo_set)

	# 协议信息
    __swig_setmethods__["ProtocolInfo"] = _sptraderapi.CTORATstpSPReqUserLoginField_ProtocolInfo_set
    __swig_getmethods__["ProtocolInfo"] = _sptraderapi.CTORATstpSPReqUserLoginField_ProtocolInfo_get
    if _newclass:
        ProtocolInfo = _swig_property(_sptraderapi.CTORATstpSPReqUserLoginField_ProtocolInfo_get, _sptraderapi.CTORATstpSPReqUserLoginField_ProtocolInfo_set)

	# Mac地址
    __swig_setmethods__["MacAddress"] = _sptraderapi.CTORATstpSPReqUserLoginField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _sptraderapi.CTORATstpSPReqUserLoginField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_sptraderapi.CTORATstpSPReqUserLoginField_MacAddress_get, _sptraderapi.CTORATstpSPReqUserLoginField_MacAddress_set)

	# 动态密码
    __swig_setmethods__["OneTimePassword"] = _sptraderapi.CTORATstpSPReqUserLoginField_OneTimePassword_set
    __swig_getmethods__["OneTimePassword"] = _sptraderapi.CTORATstpSPReqUserLoginField_OneTimePassword_get
    if _newclass:
        OneTimePassword = _swig_property(_sptraderapi.CTORATstpSPReqUserLoginField_OneTimePassword_get, _sptraderapi.CTORATstpSPReqUserLoginField_OneTimePassword_set)

	# 终端IP地址
    __swig_setmethods__["ClientIPAddress"] = _sptraderapi.CTORATstpSPReqUserLoginField_ClientIPAddress_set
    __swig_getmethods__["ClientIPAddress"] = _sptraderapi.CTORATstpSPReqUserLoginField_ClientIPAddress_get
    if _newclass:
        ClientIPAddress = _swig_property(_sptraderapi.CTORATstpSPReqUserLoginField_ClientIPAddress_get, _sptraderapi.CTORATstpSPReqUserLoginField_ClientIPAddress_set)

	# 接口语言
    __swig_setmethods__["Lang"] = _sptraderapi.CTORATstpSPReqUserLoginField_Lang_set
    __swig_getmethods__["Lang"] = _sptraderapi.CTORATstpSPReqUserLoginField_Lang_get
    if _newclass:
        Lang = _swig_property(_sptraderapi.CTORATstpSPReqUserLoginField_Lang_get, _sptraderapi.CTORATstpSPReqUserLoginField_Lang_set)

	# 终端信息
    __swig_setmethods__["TerminalInfo"] = _sptraderapi.CTORATstpSPReqUserLoginField_TerminalInfo_set
    __swig_getmethods__["TerminalInfo"] = _sptraderapi.CTORATstpSPReqUserLoginField_TerminalInfo_get
    if _newclass:
        TerminalInfo = _swig_property(_sptraderapi.CTORATstpSPReqUserLoginField_TerminalInfo_get, _sptraderapi.CTORATstpSPReqUserLoginField_TerminalInfo_set)

	# 网关Mac地址
    __swig_setmethods__["GWMacAddress"] = _sptraderapi.CTORATstpSPReqUserLoginField_GWMacAddress_set
    __swig_getmethods__["GWMacAddress"] = _sptraderapi.CTORATstpSPReqUserLoginField_GWMacAddress_get
    if _newclass:
        GWMacAddress = _swig_property(_sptraderapi.CTORATstpSPReqUserLoginField_GWMacAddress_get, _sptraderapi.CTORATstpSPReqUserLoginField_GWMacAddress_set)

	# 网关内网IP地址
    __swig_setmethods__["GWInnerIPAddress"] = _sptraderapi.CTORATstpSPReqUserLoginField_GWInnerIPAddress_set
    __swig_getmethods__["GWInnerIPAddress"] = _sptraderapi.CTORATstpSPReqUserLoginField_GWInnerIPAddress_get
    if _newclass:
        GWInnerIPAddress = _swig_property(_sptraderapi.CTORATstpSPReqUserLoginField_GWInnerIPAddress_get, _sptraderapi.CTORATstpSPReqUserLoginField_GWInnerIPAddress_set)

	# 网关外网IP地址
    __swig_setmethods__["GWOuterIPAddress"] = _sptraderapi.CTORATstpSPReqUserLoginField_GWOuterIPAddress_set
    __swig_getmethods__["GWOuterIPAddress"] = _sptraderapi.CTORATstpSPReqUserLoginField_GWOuterIPAddress_get
    if _newclass:
        GWOuterIPAddress = _swig_property(_sptraderapi.CTORATstpSPReqUserLoginField_GWOuterIPAddress_get, _sptraderapi.CTORATstpSPReqUserLoginField_GWOuterIPAddress_set)

	# 经纪公司部门代码（以资金账号方式登录时必填）
    __swig_setmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPReqUserLoginField_DepartmentID_set
    __swig_getmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPReqUserLoginField_DepartmentID_get
    if _newclass:
        DepartmentID = _swig_property(_sptraderapi.CTORATstpSPReqUserLoginField_DepartmentID_get, _sptraderapi.CTORATstpSPReqUserLoginField_DepartmentID_set)

	# 硬盘序列号（用户填入）
    __swig_setmethods__["HDSerial"] = _sptraderapi.CTORATstpSPReqUserLoginField_HDSerial_set
    __swig_getmethods__["HDSerial"] = _sptraderapi.CTORATstpSPReqUserLoginField_HDSerial_get
    if _newclass:
        HDSerial = _swig_property(_sptraderapi.CTORATstpSPReqUserLoginField_HDSerial_get, _sptraderapi.CTORATstpSPReqUserLoginField_HDSerial_set)

	# 认证方式(指纹认证时必填)
    __swig_setmethods__["AuthMode"] = _sptraderapi.CTORATstpSPReqUserLoginField_AuthMode_set
    __swig_getmethods__["AuthMode"] = _sptraderapi.CTORATstpSPReqUserLoginField_AuthMode_get
    if _newclass:
        AuthMode = _swig_property(_sptraderapi.CTORATstpSPReqUserLoginField_AuthMode_get, _sptraderapi.CTORATstpSPReqUserLoginField_AuthMode_set)

	# 设备标识(指纹认证时必填)
    __swig_setmethods__["DeviceID"] = _sptraderapi.CTORATstpSPReqUserLoginField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _sptraderapi.CTORATstpSPReqUserLoginField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_sptraderapi.CTORATstpSPReqUserLoginField_DeviceID_get, _sptraderapi.CTORATstpSPReqUserLoginField_DeviceID_set)

	# 设备序列号(指纹认证时必填)
    __swig_setmethods__["DeviceSerial"] = _sptraderapi.CTORATstpSPReqUserLoginField_DeviceSerial_set
    __swig_getmethods__["DeviceSerial"] = _sptraderapi.CTORATstpSPReqUserLoginField_DeviceSerial_get
    if _newclass:
        DeviceSerial = _swig_property(_sptraderapi.CTORATstpSPReqUserLoginField_DeviceSerial_get, _sptraderapi.CTORATstpSPReqUserLoginField_DeviceSerial_set)

	# 移动设备手机号
    __swig_setmethods__["Mobile"] = _sptraderapi.CTORATstpSPReqUserLoginField_Mobile_set
    __swig_getmethods__["Mobile"] = _sptraderapi.CTORATstpSPReqUserLoginField_Mobile_get
    if _newclass:
        Mobile = _swig_property(_sptraderapi.CTORATstpSPReqUserLoginField_Mobile_get, _sptraderapi.CTORATstpSPReqUserLoginField_Mobile_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUserLoginField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUserLoginField
    __del__ = lambda self: None
CTORATstpSPReqUserLoginField_swigregister = _sptraderapi.CTORATstpSPReqUserLoginField_swigregister
CTORATstpSPReqUserLoginField_swigregister(CTORATstpSPReqUserLoginField)




#########################################登录应答############################################
class CTORATstpSPRspUserLoginField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPRspUserLoginField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPRspUserLoginField, name)
    __repr__ = _swig_repr

	# 登录成功时间
    __swig_setmethods__["LoginTime"] = _sptraderapi.CTORATstpSPRspUserLoginField_LoginTime_set
    __swig_getmethods__["LoginTime"] = _sptraderapi.CTORATstpSPRspUserLoginField_LoginTime_get
    if _newclass:
        LoginTime = _swig_property(_sptraderapi.CTORATstpSPRspUserLoginField_LoginTime_get, _sptraderapi.CTORATstpSPRspUserLoginField_LoginTime_set)

	# 登录账户
    __swig_setmethods__["LogInAccount"] = _sptraderapi.CTORATstpSPRspUserLoginField_LogInAccount_set
    __swig_getmethods__["LogInAccount"] = _sptraderapi.CTORATstpSPRspUserLoginField_LogInAccount_get
    if _newclass:
        LogInAccount = _swig_property(_sptraderapi.CTORATstpSPRspUserLoginField_LogInAccount_get, _sptraderapi.CTORATstpSPRspUserLoginField_LogInAccount_set)

	# 登录账户类型
    __swig_setmethods__["LogInAccountType"] = _sptraderapi.CTORATstpSPRspUserLoginField_LogInAccountType_set
    __swig_getmethods__["LogInAccountType"] = _sptraderapi.CTORATstpSPRspUserLoginField_LogInAccountType_get
    if _newclass:
        LogInAccountType = _swig_property(_sptraderapi.CTORATstpSPRspUserLoginField_LogInAccountType_get, _sptraderapi.CTORATstpSPRspUserLoginField_LogInAccountType_set)

	# 交易系统名称
    __swig_setmethods__["SystemName"] = _sptraderapi.CTORATstpSPRspUserLoginField_SystemName_set
    __swig_getmethods__["SystemName"] = _sptraderapi.CTORATstpSPRspUserLoginField_SystemName_get
    if _newclass:
        SystemName = _swig_property(_sptraderapi.CTORATstpSPRspUserLoginField_SystemName_get, _sptraderapi.CTORATstpSPRspUserLoginField_SystemName_set)

	# 前置编号
    __swig_setmethods__["FrontID"] = _sptraderapi.CTORATstpSPRspUserLoginField_FrontID_set
    __swig_getmethods__["FrontID"] = _sptraderapi.CTORATstpSPRspUserLoginField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_sptraderapi.CTORATstpSPRspUserLoginField_FrontID_get, _sptraderapi.CTORATstpSPRspUserLoginField_FrontID_set)

	# 会话编号
    __swig_setmethods__["SessionID"] = _sptraderapi.CTORATstpSPRspUserLoginField_SessionID_set
    __swig_getmethods__["SessionID"] = _sptraderapi.CTORATstpSPRspUserLoginField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_sptraderapi.CTORATstpSPRspUserLoginField_SessionID_get, _sptraderapi.CTORATstpSPRspUserLoginField_SessionID_set)

	# 最大报单引用
    __swig_setmethods__["MaxOrderRef"] = _sptraderapi.CTORATstpSPRspUserLoginField_MaxOrderRef_set
    __swig_getmethods__["MaxOrderRef"] = _sptraderapi.CTORATstpSPRspUserLoginField_MaxOrderRef_get
    if _newclass:
        MaxOrderRef = _swig_property(_sptraderapi.CTORATstpSPRspUserLoginField_MaxOrderRef_get, _sptraderapi.CTORATstpSPRspUserLoginField_MaxOrderRef_set)

	# 私有流长度
    __swig_setmethods__["PrivateFlowCount"] = _sptraderapi.CTORATstpSPRspUserLoginField_PrivateFlowCount_set
    __swig_getmethods__["PrivateFlowCount"] = _sptraderapi.CTORATstpSPRspUserLoginField_PrivateFlowCount_get
    if _newclass:
        PrivateFlowCount = _swig_property(_sptraderapi.CTORATstpSPRspUserLoginField_PrivateFlowCount_get, _sptraderapi.CTORATstpSPRspUserLoginField_PrivateFlowCount_set)

	# 公有流长度
    __swig_setmethods__["PublicFlowCount"] = _sptraderapi.CTORATstpSPRspUserLoginField_PublicFlowCount_set
    __swig_getmethods__["PublicFlowCount"] = _sptraderapi.CTORATstpSPRspUserLoginField_PublicFlowCount_get
    if _newclass:
        PublicFlowCount = _swig_property(_sptraderapi.CTORATstpSPRspUserLoginField_PublicFlowCount_get, _sptraderapi.CTORATstpSPRspUserLoginField_PublicFlowCount_set)

	# 用户请求编号
    __swig_setmethods__["RequestID"] = _sptraderapi.CTORATstpSPRspUserLoginField_RequestID_set
    __swig_getmethods__["RequestID"] = _sptraderapi.CTORATstpSPRspUserLoginField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_sptraderapi.CTORATstpSPRspUserLoginField_RequestID_get, _sptraderapi.CTORATstpSPRspUserLoginField_RequestID_set)

	# 交易发生的日期
    __swig_setmethods__["TradingDay"] = _sptraderapi.CTORATstpSPRspUserLoginField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _sptraderapi.CTORATstpSPRspUserLoginField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_sptraderapi.CTORATstpSPRspUserLoginField_TradingDay_get, _sptraderapi.CTORATstpSPRspUserLoginField_TradingDay_set)

	# 用户代码
    __swig_setmethods__["UserID"] = _sptraderapi.CTORATstpSPRspUserLoginField_UserID_set
    __swig_getmethods__["UserID"] = _sptraderapi.CTORATstpSPRspUserLoginField_UserID_get
    if _newclass:
        UserID = _swig_property(_sptraderapi.CTORATstpSPRspUserLoginField_UserID_get, _sptraderapi.CTORATstpSPRspUserLoginField_UserID_set)

	# 用户名称
    __swig_setmethods__["UserName"] = _sptraderapi.CTORATstpSPRspUserLoginField_UserName_set
    __swig_getmethods__["UserName"] = _sptraderapi.CTORATstpSPRspUserLoginField_UserName_get
    if _newclass:
        UserName = _swig_property(_sptraderapi.CTORATstpSPRspUserLoginField_UserName_get, _sptraderapi.CTORATstpSPRspUserLoginField_UserName_set)

	# 用户类型
    __swig_setmethods__["UserType"] = _sptraderapi.CTORATstpSPRspUserLoginField_UserType_set
    __swig_getmethods__["UserType"] = _sptraderapi.CTORATstpSPRspUserLoginField_UserType_get
    if _newclass:
        UserType = _swig_property(_sptraderapi.CTORATstpSPRspUserLoginField_UserType_get, _sptraderapi.CTORATstpSPRspUserLoginField_UserType_set)

	# 经纪公司部门代码
    __swig_setmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPRspUserLoginField_DepartmentID_set
    __swig_getmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPRspUserLoginField_DepartmentID_get
    if _newclass:
        DepartmentID = _swig_property(_sptraderapi.CTORATstpSPRspUserLoginField_DepartmentID_get, _sptraderapi.CTORATstpSPRspUserLoginField_DepartmentID_set)

	# 终端IP地址
    __swig_setmethods__["ClientIPAddress"] = _sptraderapi.CTORATstpSPRspUserLoginField_ClientIPAddress_set
    __swig_getmethods__["ClientIPAddress"] = _sptraderapi.CTORATstpSPRspUserLoginField_ClientIPAddress_get
    if _newclass:
        ClientIPAddress = _swig_property(_sptraderapi.CTORATstpSPRspUserLoginField_ClientIPAddress_get, _sptraderapi.CTORATstpSPRspUserLoginField_ClientIPAddress_set)

	# Mac地址
    __swig_setmethods__["MacAddress"] = _sptraderapi.CTORATstpSPRspUserLoginField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _sptraderapi.CTORATstpSPRspUserLoginField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_sptraderapi.CTORATstpSPRspUserLoginField_MacAddress_get, _sptraderapi.CTORATstpSPRspUserLoginField_MacAddress_set)

	# 硬盘序列号
    __swig_setmethods__["HDSerial"] = _sptraderapi.CTORATstpSPRspUserLoginField_HDSerial_set
    __swig_getmethods__["HDSerial"] = _sptraderapi.CTORATstpSPRspUserLoginField_HDSerial_get
    if _newclass:
        HDSerial = _swig_property(_sptraderapi.CTORATstpSPRspUserLoginField_HDSerial_get, _sptraderapi.CTORATstpSPRspUserLoginField_HDSerial_set)

	# 报单流控
    __swig_setmethods__["OrderInsertCommFlux"] = _sptraderapi.CTORATstpSPRspUserLoginField_OrderInsertCommFlux_set
    __swig_getmethods__["OrderInsertCommFlux"] = _sptraderapi.CTORATstpSPRspUserLoginField_OrderInsertCommFlux_get
    if _newclass:
        OrderInsertCommFlux = _swig_property(_sptraderapi.CTORATstpSPRspUserLoginField_OrderInsertCommFlux_get, _sptraderapi.CTORATstpSPRspUserLoginField_OrderInsertCommFlux_set)

	# 撤单流控
    __swig_setmethods__["OrderActionCommFlux"] = _sptraderapi.CTORATstpSPRspUserLoginField_OrderActionCommFlux_set
    __swig_getmethods__["OrderActionCommFlux"] = _sptraderapi.CTORATstpSPRspUserLoginField_OrderActionCommFlux_get
    if _newclass:
        OrderActionCommFlux = _swig_property(_sptraderapi.CTORATstpSPRspUserLoginField_OrderActionCommFlux_get, _sptraderapi.CTORATstpSPRspUserLoginField_OrderActionCommFlux_set)

	# 移动设备手机号
    __swig_setmethods__["Mobile"] = _sptraderapi.CTORATstpSPRspUserLoginField_Mobile_set
    __swig_getmethods__["Mobile"] = _sptraderapi.CTORATstpSPRspUserLoginField_Mobile_get
    if _newclass:
        Mobile = _swig_property(_sptraderapi.CTORATstpSPRspUserLoginField_Mobile_get, _sptraderapi.CTORATstpSPRspUserLoginField_Mobile_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPRspUserLoginField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPRspUserLoginField
    __del__ = lambda self: None
CTORATstpSPRspUserLoginField_swigregister = _sptraderapi.CTORATstpSPRspUserLoginField_swigregister
CTORATstpSPRspUserLoginField_swigregister(CTORATstpSPRspUserLoginField)




#########################################响应信息############################################
class CTORATstpSPRspInfoField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPRspInfoField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPRspInfoField, name)
    __repr__ = _swig_repr

	# 错误代码
    __swig_setmethods__["ErrorID"] = _sptraderapi.CTORATstpSPRspInfoField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _sptraderapi.CTORATstpSPRspInfoField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_sptraderapi.CTORATstpSPRspInfoField_ErrorID_get, _sptraderapi.CTORATstpSPRspInfoField_ErrorID_set)

	# 错误信息
    __swig_setmethods__["ErrorMsg"] = _sptraderapi.CTORATstpSPRspInfoField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _sptraderapi.CTORATstpSPRspInfoField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_sptraderapi.CTORATstpSPRspInfoField_ErrorMsg_get, _sptraderapi.CTORATstpSPRspInfoField_ErrorMsg_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPRspInfoField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPRspInfoField
    __del__ = lambda self: None
CTORATstpSPRspInfoField_swigregister = _sptraderapi.CTORATstpSPRspInfoField_swigregister
CTORATstpSPRspInfoField_swigregister(CTORATstpSPRspInfoField)




#########################################用户登出############################################
class CTORATstpSPUserLogoutField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPUserLogoutField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPUserLogoutField, name)
    __repr__ = _swig_repr

	# 用户代码
    __swig_setmethods__["UserID"] = _sptraderapi.CTORATstpSPUserLogoutField_UserID_set
    __swig_getmethods__["UserID"] = _sptraderapi.CTORATstpSPUserLogoutField_UserID_get
    if _newclass:
        UserID = _swig_property(_sptraderapi.CTORATstpSPUserLogoutField_UserID_get, _sptraderapi.CTORATstpSPUserLogoutField_UserID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPUserLogoutField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPUserLogoutField
    __del__ = lambda self: None
CTORATstpSPUserLogoutField_swigregister = _sptraderapi.CTORATstpSPUserLogoutField_swigregister
CTORATstpSPUserLogoutField_swigregister(CTORATstpSPUserLogoutField)




#########################################强制交易员退出############################################
class CTORATstpSPForceUserLogoutField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPForceUserLogoutField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPForceUserLogoutField, name)
    __repr__ = _swig_repr

	# 用户代码
    __swig_setmethods__["UserID"] = _sptraderapi.CTORATstpSPForceUserLogoutField_UserID_set
    __swig_getmethods__["UserID"] = _sptraderapi.CTORATstpSPForceUserLogoutField_UserID_get
    if _newclass:
        UserID = _swig_property(_sptraderapi.CTORATstpSPForceUserLogoutField_UserID_get, _sptraderapi.CTORATstpSPForceUserLogoutField_UserID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPForceUserLogoutField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPForceUserLogoutField
    __del__ = lambda self: None
CTORATstpSPForceUserLogoutField_swigregister = _sptraderapi.CTORATstpSPForceUserLogoutField_swigregister
CTORATstpSPForceUserLogoutField_swigregister(CTORATstpSPForceUserLogoutField)




#########################################重置用户密码############################################
class CTORATstpSPUserPasswordUpdateField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPUserPasswordUpdateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPUserPasswordUpdateField, name)
    __repr__ = _swig_repr

	# 用户代码
    __swig_setmethods__["UserID"] = _sptraderapi.CTORATstpSPUserPasswordUpdateField_UserID_set
    __swig_getmethods__["UserID"] = _sptraderapi.CTORATstpSPUserPasswordUpdateField_UserID_get
    if _newclass:
        UserID = _swig_property(_sptraderapi.CTORATstpSPUserPasswordUpdateField_UserID_get, _sptraderapi.CTORATstpSPUserPasswordUpdateField_UserID_set)

	# 旧密码
    __swig_setmethods__["OldPassword"] = _sptraderapi.CTORATstpSPUserPasswordUpdateField_OldPassword_set
    __swig_getmethods__["OldPassword"] = _sptraderapi.CTORATstpSPUserPasswordUpdateField_OldPassword_get
    if _newclass:
        OldPassword = _swig_property(_sptraderapi.CTORATstpSPUserPasswordUpdateField_OldPassword_get, _sptraderapi.CTORATstpSPUserPasswordUpdateField_OldPassword_set)

	# 新密码
    __swig_setmethods__["NewPassword"] = _sptraderapi.CTORATstpSPUserPasswordUpdateField_NewPassword_set
    __swig_getmethods__["NewPassword"] = _sptraderapi.CTORATstpSPUserPasswordUpdateField_NewPassword_get
    if _newclass:
        NewPassword = _swig_property(_sptraderapi.CTORATstpSPUserPasswordUpdateField_NewPassword_get, _sptraderapi.CTORATstpSPUserPasswordUpdateField_NewPassword_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPUserPasswordUpdateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPUserPasswordUpdateField
    __del__ = lambda self: None
CTORATstpSPUserPasswordUpdateField_swigregister = _sptraderapi.CTORATstpSPUserPasswordUpdateField_swigregister
CTORATstpSPUserPasswordUpdateField_swigregister(CTORATstpSPUserPasswordUpdateField)




#########################################激活用户############################################
class CTORATstpSPActivateUserField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPActivateUserField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPActivateUserField, name)
    __repr__ = _swig_repr

	# 用户代码
    __swig_setmethods__["UserID"] = _sptraderapi.CTORATstpSPActivateUserField_UserID_set
    __swig_getmethods__["UserID"] = _sptraderapi.CTORATstpSPActivateUserField_UserID_get
    if _newclass:
        UserID = _swig_property(_sptraderapi.CTORATstpSPActivateUserField_UserID_get, _sptraderapi.CTORATstpSPActivateUserField_UserID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPActivateUserField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPActivateUserField
    __del__ = lambda self: None
CTORATstpSPActivateUserField_swigregister = _sptraderapi.CTORATstpSPActivateUserField_swigregister
CTORATstpSPActivateUserField_swigregister(CTORATstpSPActivateUserField)




#########################################校验用户密码############################################
class CTORATstpSPVerifyUserPasswordField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPVerifyUserPasswordField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPVerifyUserPasswordField, name)
    __repr__ = _swig_repr

	# 用户代码
    __swig_setmethods__["UserID"] = _sptraderapi.CTORATstpSPVerifyUserPasswordField_UserID_set
    __swig_getmethods__["UserID"] = _sptraderapi.CTORATstpSPVerifyUserPasswordField_UserID_get
    if _newclass:
        UserID = _swig_property(_sptraderapi.CTORATstpSPVerifyUserPasswordField_UserID_get, _sptraderapi.CTORATstpSPVerifyUserPasswordField_UserID_set)

	# 密码
    __swig_setmethods__["Password"] = _sptraderapi.CTORATstpSPVerifyUserPasswordField_Password_set
    __swig_getmethods__["Password"] = _sptraderapi.CTORATstpSPVerifyUserPasswordField_Password_get
    if _newclass:
        Password = _swig_property(_sptraderapi.CTORATstpSPVerifyUserPasswordField_Password_get, _sptraderapi.CTORATstpSPVerifyUserPasswordField_Password_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPVerifyUserPasswordField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPVerifyUserPasswordField
    __del__ = lambda self: None
CTORATstpSPVerifyUserPasswordField_swigregister = _sptraderapi.CTORATstpSPVerifyUserPasswordField_swigregister
CTORATstpSPVerifyUserPasswordField_swigregister(CTORATstpSPVerifyUserPasswordField)




#########################################请求录入设备序列############################################
class CTORATstpSPReqInputDeviceSerialField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInputDeviceSerialField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInputDeviceSerialField, name)
    __repr__ = _swig_repr

	# 用户代码
    __swig_setmethods__["UserID"] = _sptraderapi.CTORATstpSPReqInputDeviceSerialField_UserID_set
    __swig_getmethods__["UserID"] = _sptraderapi.CTORATstpSPReqInputDeviceSerialField_UserID_get
    if _newclass:
        UserID = _swig_property(_sptraderapi.CTORATstpSPReqInputDeviceSerialField_UserID_get, _sptraderapi.CTORATstpSPReqInputDeviceSerialField_UserID_set)

	# 设备标识
    __swig_setmethods__["DeviceID"] = _sptraderapi.CTORATstpSPReqInputDeviceSerialField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _sptraderapi.CTORATstpSPReqInputDeviceSerialField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_sptraderapi.CTORATstpSPReqInputDeviceSerialField_DeviceID_get, _sptraderapi.CTORATstpSPReqInputDeviceSerialField_DeviceID_set)

	# 设备序列号
    __swig_setmethods__["DeviceSerial"] = _sptraderapi.CTORATstpSPReqInputDeviceSerialField_DeviceSerial_set
    __swig_getmethods__["DeviceSerial"] = _sptraderapi.CTORATstpSPReqInputDeviceSerialField_DeviceSerial_get
    if _newclass:
        DeviceSerial = _swig_property(_sptraderapi.CTORATstpSPReqInputDeviceSerialField_DeviceSerial_get, _sptraderapi.CTORATstpSPReqInputDeviceSerialField_DeviceSerial_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInputDeviceSerialField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInputDeviceSerialField
    __del__ = lambda self: None
CTORATstpSPReqInputDeviceSerialField_swigregister = _sptraderapi.CTORATstpSPReqInputDeviceSerialField_swigregister
CTORATstpSPReqInputDeviceSerialField_swigregister(CTORATstpSPReqInputDeviceSerialField)




#########################################请求录入设备序列应答############################################
class CTORATstpSPRspInputDeviceSerialField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPRspInputDeviceSerialField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPRspInputDeviceSerialField, name)
    __repr__ = _swig_repr

	# 用户请求编号
    __swig_setmethods__["RequestID"] = _sptraderapi.CTORATstpSPRspInputDeviceSerialField_RequestID_set
    __swig_getmethods__["RequestID"] = _sptraderapi.CTORATstpSPRspInputDeviceSerialField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_sptraderapi.CTORATstpSPRspInputDeviceSerialField_RequestID_get, _sptraderapi.CTORATstpSPRspInputDeviceSerialField_RequestID_set)

	# 用户代码
    __swig_setmethods__["UserID"] = _sptraderapi.CTORATstpSPRspInputDeviceSerialField_UserID_set
    __swig_getmethods__["UserID"] = _sptraderapi.CTORATstpSPRspInputDeviceSerialField_UserID_get
    if _newclass:
        UserID = _swig_property(_sptraderapi.CTORATstpSPRspInputDeviceSerialField_UserID_get, _sptraderapi.CTORATstpSPRspInputDeviceSerialField_UserID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPRspInputDeviceSerialField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPRspInputDeviceSerialField
    __del__ = lambda self: None
CTORATstpSPRspInputDeviceSerialField_swigregister = _sptraderapi.CTORATstpSPRspInputDeviceSerialField_swigregister
CTORATstpSPRspInputDeviceSerialField_swigregister(CTORATstpSPRspInputDeviceSerialField)




#########################################输入报单############################################
class CTORATstpSPInputOrderField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPInputOrderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPInputOrderField, name)
    __repr__ = _swig_repr

	# 合约在系统中的编号
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPInputOrderField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPInputOrderField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPInputOrderField_SecurityID_get, _sptraderapi.CTORATstpSPInputOrderField_SecurityID_set)

	# 投资者说明的对报单的唯一引用
    __swig_setmethods__["OrderRef"] = _sptraderapi.CTORATstpSPInputOrderField_OrderRef_set
    __swig_getmethods__["OrderRef"] = _sptraderapi.CTORATstpSPInputOrderField_OrderRef_get
    if _newclass:
        OrderRef = _swig_property(_sptraderapi.CTORATstpSPInputOrderField_OrderRef_get, _sptraderapi.CTORATstpSPInputOrderField_OrderRef_set)

	# 限价单或市价单
    __swig_setmethods__["OrderPriceType"] = _sptraderapi.CTORATstpSPInputOrderField_OrderPriceType_set
    __swig_getmethods__["OrderPriceType"] = _sptraderapi.CTORATstpSPInputOrderField_OrderPriceType_get
    if _newclass:
        OrderPriceType = _swig_property(_sptraderapi.CTORATstpSPInputOrderField_OrderPriceType_get, _sptraderapi.CTORATstpSPInputOrderField_OrderPriceType_set)

	# 买、卖
    __swig_setmethods__["Direction"] = _sptraderapi.CTORATstpSPInputOrderField_Direction_set
    __swig_getmethods__["Direction"] = _sptraderapi.CTORATstpSPInputOrderField_Direction_get
    if _newclass:
        Direction = _swig_property(_sptraderapi.CTORATstpSPInputOrderField_Direction_get, _sptraderapi.CTORATstpSPInputOrderField_Direction_set)

	# 按字节表示各单个合约的开平方向
    __swig_setmethods__["CombOffsetFlag"] = _sptraderapi.CTORATstpSPInputOrderField_CombOffsetFlag_set
    __swig_getmethods__["CombOffsetFlag"] = _sptraderapi.CTORATstpSPInputOrderField_CombOffsetFlag_get
    if _newclass:
        CombOffsetFlag = _swig_property(_sptraderapi.CTORATstpSPInputOrderField_CombOffsetFlag_get, _sptraderapi.CTORATstpSPInputOrderField_CombOffsetFlag_set)

	# 按字节表示各单个合约的组合套保标志
    __swig_setmethods__["CombHedgeFlag"] = _sptraderapi.CTORATstpSPInputOrderField_CombHedgeFlag_set
    __swig_getmethods__["CombHedgeFlag"] = _sptraderapi.CTORATstpSPInputOrderField_CombHedgeFlag_get
    if _newclass:
        CombHedgeFlag = _swig_property(_sptraderapi.CTORATstpSPInputOrderField_CombHedgeFlag_get, _sptraderapi.CTORATstpSPInputOrderField_CombHedgeFlag_set)

	# 限价单价格
    __swig_setmethods__["LimitPrice"] = _sptraderapi.CTORATstpSPInputOrderField_LimitPrice_set
    __swig_getmethods__["LimitPrice"] = _sptraderapi.CTORATstpSPInputOrderField_LimitPrice_get
    if _newclass:
        LimitPrice = _swig_property(_sptraderapi.CTORATstpSPInputOrderField_LimitPrice_get, _sptraderapi.CTORATstpSPInputOrderField_LimitPrice_set)

	# 报单数量
    __swig_setmethods__["VolumeTotalOriginal"] = _sptraderapi.CTORATstpSPInputOrderField_VolumeTotalOriginal_set
    __swig_getmethods__["VolumeTotalOriginal"] = _sptraderapi.CTORATstpSPInputOrderField_VolumeTotalOriginal_get
    if _newclass:
        VolumeTotalOriginal = _swig_property(_sptraderapi.CTORATstpSPInputOrderField_VolumeTotalOriginal_get, _sptraderapi.CTORATstpSPInputOrderField_VolumeTotalOriginal_set)

	# IOC、GFS、GFD、GTD、GTC、GFA
    __swig_setmethods__["TimeCondition"] = _sptraderapi.CTORATstpSPInputOrderField_TimeCondition_set
    __swig_getmethods__["TimeCondition"] = _sptraderapi.CTORATstpSPInputOrderField_TimeCondition_get
    if _newclass:
        TimeCondition = _swig_property(_sptraderapi.CTORATstpSPInputOrderField_TimeCondition_get, _sptraderapi.CTORATstpSPInputOrderField_TimeCondition_set)

	# AV、MV、CV
    __swig_setmethods__["VolumeCondition"] = _sptraderapi.CTORATstpSPInputOrderField_VolumeCondition_set
    __swig_getmethods__["VolumeCondition"] = _sptraderapi.CTORATstpSPInputOrderField_VolumeCondition_get
    if _newclass:
        VolumeCondition = _swig_property(_sptraderapi.CTORATstpSPInputOrderField_VolumeCondition_get, _sptraderapi.CTORATstpSPInputOrderField_VolumeCondition_set)

	# 当成交量类型为MV时有效
    __swig_setmethods__["MinVolume"] = _sptraderapi.CTORATstpSPInputOrderField_MinVolume_set
    __swig_getmethods__["MinVolume"] = _sptraderapi.CTORATstpSPInputOrderField_MinVolume_get
    if _newclass:
        MinVolume = _swig_property(_sptraderapi.CTORATstpSPInputOrderField_MinVolume_get, _sptraderapi.CTORATstpSPInputOrderField_MinVolume_set)

	# 强平原因
    __swig_setmethods__["ForceCloseReason"] = _sptraderapi.CTORATstpSPInputOrderField_ForceCloseReason_set
    __swig_getmethods__["ForceCloseReason"] = _sptraderapi.CTORATstpSPInputOrderField_ForceCloseReason_get
    if _newclass:
        ForceCloseReason = _swig_property(_sptraderapi.CTORATstpSPInputOrderField_ForceCloseReason_get, _sptraderapi.CTORATstpSPInputOrderField_ForceCloseReason_set)

	# 用户强评标志
    __swig_setmethods__["UserForceClose"] = _sptraderapi.CTORATstpSPInputOrderField_UserForceClose_set
    __swig_getmethods__["UserForceClose"] = _sptraderapi.CTORATstpSPInputOrderField_UserForceClose_get
    if _newclass:
        UserForceClose = _swig_property(_sptraderapi.CTORATstpSPInputOrderField_UserForceClose_get, _sptraderapi.CTORATstpSPInputOrderField_UserForceClose_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPInputOrderField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPInputOrderField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPInputOrderField_InvestorID_get, _sptraderapi.CTORATstpSPInputOrderField_InvestorID_set)

	# 一个交易所的编号
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPInputOrderField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPInputOrderField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPInputOrderField_ExchangeID_get, _sptraderapi.CTORATstpSPInputOrderField_ExchangeID_set)

	# 目前该字段存放的是上证所和深圳的股东代码。
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPInputOrderField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPInputOrderField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPInputOrderField_ShareholderID_get, _sptraderapi.CTORATstpSPInputOrderField_ShareholderID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPInputOrderField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPInputOrderField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPInputOrderField_BusinessUnitID_get, _sptraderapi.CTORATstpSPInputOrderField_BusinessUnitID_set)

	# 资金账户
    __swig_setmethods__["AccountID"] = _sptraderapi.CTORATstpSPInputOrderField_AccountID_set
    __swig_getmethods__["AccountID"] = _sptraderapi.CTORATstpSPInputOrderField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_sptraderapi.CTORATstpSPInputOrderField_AccountID_get, _sptraderapi.CTORATstpSPInputOrderField_AccountID_set)

	# IP地址(已废弃)
    __swig_setmethods__["IPAddress"] = _sptraderapi.CTORATstpSPInputOrderField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _sptraderapi.CTORATstpSPInputOrderField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_sptraderapi.CTORATstpSPInputOrderField_IPAddress_get, _sptraderapi.CTORATstpSPInputOrderField_IPAddress_set)

	# Mac地址(已废弃)
    __swig_setmethods__["MacAddress"] = _sptraderapi.CTORATstpSPInputOrderField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _sptraderapi.CTORATstpSPInputOrderField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_sptraderapi.CTORATstpSPInputOrderField_MacAddress_get, _sptraderapi.CTORATstpSPInputOrderField_MacAddress_set)

	# 报单编号
    __swig_setmethods__["OrderSysID"] = _sptraderapi.CTORATstpSPInputOrderField_OrderSysID_set
    __swig_getmethods__["OrderSysID"] = _sptraderapi.CTORATstpSPInputOrderField_OrderSysID_get
    if _newclass:
        OrderSysID = _swig_property(_sptraderapi.CTORATstpSPInputOrderField_OrderSysID_get, _sptraderapi.CTORATstpSPInputOrderField_OrderSysID_set)

	# 终端信息
    __swig_setmethods__["TerminalInfo"] = _sptraderapi.CTORATstpSPInputOrderField_TerminalInfo_set
    __swig_getmethods__["TerminalInfo"] = _sptraderapi.CTORATstpSPInputOrderField_TerminalInfo_get
    if _newclass:
        TerminalInfo = _swig_property(_sptraderapi.CTORATstpSPInputOrderField_TerminalInfo_get, _sptraderapi.CTORATstpSPInputOrderField_TerminalInfo_set)

	# 长字符串附加信息
    __swig_setmethods__["BInfo"] = _sptraderapi.CTORATstpSPInputOrderField_BInfo_set
    __swig_getmethods__["BInfo"] = _sptraderapi.CTORATstpSPInputOrderField_BInfo_get
    if _newclass:
        BInfo = _swig_property(_sptraderapi.CTORATstpSPInputOrderField_BInfo_get, _sptraderapi.CTORATstpSPInputOrderField_BInfo_set)

	# 短字符串附加信息
    __swig_setmethods__["SInfo"] = _sptraderapi.CTORATstpSPInputOrderField_SInfo_set
    __swig_getmethods__["SInfo"] = _sptraderapi.CTORATstpSPInputOrderField_SInfo_get
    if _newclass:
        SInfo = _swig_property(_sptraderapi.CTORATstpSPInputOrderField_SInfo_get, _sptraderapi.CTORATstpSPInputOrderField_SInfo_set)

	# 整形附加信息
    __swig_setmethods__["IInfo"] = _sptraderapi.CTORATstpSPInputOrderField_IInfo_set
    __swig_getmethods__["IInfo"] = _sptraderapi.CTORATstpSPInputOrderField_IInfo_get
    if _newclass:
        IInfo = _swig_property(_sptraderapi.CTORATstpSPInputOrderField_IInfo_get, _sptraderapi.CTORATstpSPInputOrderField_IInfo_set)

	# 委托方式
    __swig_setmethods__["Operway"] = _sptraderapi.CTORATstpSPInputOrderField_Operway_set
    __swig_getmethods__["Operway"] = _sptraderapi.CTORATstpSPInputOrderField_Operway_get
    if _newclass:
        Operway = _swig_property(_sptraderapi.CTORATstpSPInputOrderField_Operway_get, _sptraderapi.CTORATstpSPInputOrderField_Operway_set)

	# 硬盘序列号
    __swig_setmethods__["HDSerial"] = _sptraderapi.CTORATstpSPInputOrderField_HDSerial_set
    __swig_getmethods__["HDSerial"] = _sptraderapi.CTORATstpSPInputOrderField_HDSerial_get
    if _newclass:
        HDSerial = _swig_property(_sptraderapi.CTORATstpSPInputOrderField_HDSerial_get, _sptraderapi.CTORATstpSPInputOrderField_HDSerial_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPInputOrderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPInputOrderField
    __del__ = lambda self: None
CTORATstpSPInputOrderField_swigregister = _sptraderapi.CTORATstpSPInputOrderField_swigregister
CTORATstpSPInputOrderField_swigregister(CTORATstpSPInputOrderField)




#########################################报单############################################
class CTORATstpSPOrderField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPOrderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPOrderField, name)
    __repr__ = _swig_repr

	# 交易日
    __swig_setmethods__["TradingDay"] = _sptraderapi.CTORATstpSPOrderField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _sptraderapi.CTORATstpSPOrderField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_sptraderapi.CTORATstpSPOrderField_TradingDay_get, _sptraderapi.CTORATstpSPOrderField_TradingDay_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPOrderField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPOrderField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPOrderField_ExchangeID_get, _sptraderapi.CTORATstpSPOrderField_ExchangeID_set)

	# 合约在系统中的编号
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPOrderField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPOrderField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPOrderField_SecurityID_get, _sptraderapi.CTORATstpSPOrderField_SecurityID_set)

	# 前置编号
    __swig_setmethods__["FrontID"] = _sptraderapi.CTORATstpSPOrderField_FrontID_set
    __swig_getmethods__["FrontID"] = _sptraderapi.CTORATstpSPOrderField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_sptraderapi.CTORATstpSPOrderField_FrontID_get, _sptraderapi.CTORATstpSPOrderField_FrontID_set)

	# 每一位交易员或其它登录者登录系统获得的会话编号，当前时刻唯一
    __swig_setmethods__["SessionID"] = _sptraderapi.CTORATstpSPOrderField_SessionID_set
    __swig_getmethods__["SessionID"] = _sptraderapi.CTORATstpSPOrderField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_sptraderapi.CTORATstpSPOrderField_SessionID_get, _sptraderapi.CTORATstpSPOrderField_SessionID_set)

	# 投资者说明的对报单的唯一引用
    __swig_setmethods__["OrderRef"] = _sptraderapi.CTORATstpSPOrderField_OrderRef_set
    __swig_getmethods__["OrderRef"] = _sptraderapi.CTORATstpSPOrderField_OrderRef_get
    if _newclass:
        OrderRef = _swig_property(_sptraderapi.CTORATstpSPOrderField_OrderRef_get, _sptraderapi.CTORATstpSPOrderField_OrderRef_set)

	# 报单编号
    __swig_setmethods__["OrderSysID"] = _sptraderapi.CTORATstpSPOrderField_OrderSysID_set
    __swig_getmethods__["OrderSysID"] = _sptraderapi.CTORATstpSPOrderField_OrderSysID_get
    if _newclass:
        OrderSysID = _swig_property(_sptraderapi.CTORATstpSPOrderField_OrderSysID_get, _sptraderapi.CTORATstpSPOrderField_OrderSysID_set)

	# 交易单元代码
    __swig_setmethods__["PbuID"] = _sptraderapi.CTORATstpSPOrderField_PbuID_set
    __swig_getmethods__["PbuID"] = _sptraderapi.CTORATstpSPOrderField_PbuID_get
    if _newclass:
        PbuID = _swig_property(_sptraderapi.CTORATstpSPOrderField_PbuID_get, _sptraderapi.CTORATstpSPOrderField_PbuID_set)

	# 本地报单顺序号
    __swig_setmethods__["OrderLocalID"] = _sptraderapi.CTORATstpSPOrderField_OrderLocalID_set
    __swig_getmethods__["OrderLocalID"] = _sptraderapi.CTORATstpSPOrderField_OrderLocalID_get
    if _newclass:
        OrderLocalID = _swig_property(_sptraderapi.CTORATstpSPOrderField_OrderLocalID_get, _sptraderapi.CTORATstpSPOrderField_OrderLocalID_set)

	# 限价单或市价单
    __swig_setmethods__["OrderPriceType"] = _sptraderapi.CTORATstpSPOrderField_OrderPriceType_set
    __swig_getmethods__["OrderPriceType"] = _sptraderapi.CTORATstpSPOrderField_OrderPriceType_get
    if _newclass:
        OrderPriceType = _swig_property(_sptraderapi.CTORATstpSPOrderField_OrderPriceType_get, _sptraderapi.CTORATstpSPOrderField_OrderPriceType_set)

	# 买、卖
    __swig_setmethods__["Direction"] = _sptraderapi.CTORATstpSPOrderField_Direction_set
    __swig_getmethods__["Direction"] = _sptraderapi.CTORATstpSPOrderField_Direction_get
    if _newclass:
        Direction = _swig_property(_sptraderapi.CTORATstpSPOrderField_Direction_get, _sptraderapi.CTORATstpSPOrderField_Direction_set)

	# 按字节表示各单个合约的开平方向
    __swig_setmethods__["CombOffsetFlag"] = _sptraderapi.CTORATstpSPOrderField_CombOffsetFlag_set
    __swig_getmethods__["CombOffsetFlag"] = _sptraderapi.CTORATstpSPOrderField_CombOffsetFlag_get
    if _newclass:
        CombOffsetFlag = _swig_property(_sptraderapi.CTORATstpSPOrderField_CombOffsetFlag_get, _sptraderapi.CTORATstpSPOrderField_CombOffsetFlag_set)

	# 按字节表示各单个合约的组合套保标志
    __swig_setmethods__["CombHedgeFlag"] = _sptraderapi.CTORATstpSPOrderField_CombHedgeFlag_set
    __swig_getmethods__["CombHedgeFlag"] = _sptraderapi.CTORATstpSPOrderField_CombHedgeFlag_get
    if _newclass:
        CombHedgeFlag = _swig_property(_sptraderapi.CTORATstpSPOrderField_CombHedgeFlag_get, _sptraderapi.CTORATstpSPOrderField_CombHedgeFlag_set)

	# 限价单价格
    __swig_setmethods__["Price"] = _sptraderapi.CTORATstpSPOrderField_Price_set
    __swig_getmethods__["Price"] = _sptraderapi.CTORATstpSPOrderField_Price_get
    if _newclass:
        Price = _swig_property(_sptraderapi.CTORATstpSPOrderField_Price_get, _sptraderapi.CTORATstpSPOrderField_Price_set)

	# 报单数量
    __swig_setmethods__["VolumeTotalOriginal"] = _sptraderapi.CTORATstpSPOrderField_VolumeTotalOriginal_set
    __swig_getmethods__["VolumeTotalOriginal"] = _sptraderapi.CTORATstpSPOrderField_VolumeTotalOriginal_get
    if _newclass:
        VolumeTotalOriginal = _swig_property(_sptraderapi.CTORATstpSPOrderField_VolumeTotalOriginal_get, _sptraderapi.CTORATstpSPOrderField_VolumeTotalOriginal_set)

	# IOC、GFS、GFD、GTD、GTC、GFA
    __swig_setmethods__["TimeCondition"] = _sptraderapi.CTORATstpSPOrderField_TimeCondition_set
    __swig_getmethods__["TimeCondition"] = _sptraderapi.CTORATstpSPOrderField_TimeCondition_get
    if _newclass:
        TimeCondition = _swig_property(_sptraderapi.CTORATstpSPOrderField_TimeCondition_get, _sptraderapi.CTORATstpSPOrderField_TimeCondition_set)

	# AV、MV、CV
    __swig_setmethods__["VolumeCondition"] = _sptraderapi.CTORATstpSPOrderField_VolumeCondition_set
    __swig_getmethods__["VolumeCondition"] = _sptraderapi.CTORATstpSPOrderField_VolumeCondition_get
    if _newclass:
        VolumeCondition = _swig_property(_sptraderapi.CTORATstpSPOrderField_VolumeCondition_get, _sptraderapi.CTORATstpSPOrderField_VolumeCondition_set)

	# 当成交量类型为MV时有效
    __swig_setmethods__["MinVolume"] = _sptraderapi.CTORATstpSPOrderField_MinVolume_set
    __swig_getmethods__["MinVolume"] = _sptraderapi.CTORATstpSPOrderField_MinVolume_get
    if _newclass:
        MinVolume = _swig_property(_sptraderapi.CTORATstpSPOrderField_MinVolume_get, _sptraderapi.CTORATstpSPOrderField_MinVolume_set)

	# 请求编号
    __swig_setmethods__["RequestID"] = _sptraderapi.CTORATstpSPOrderField_RequestID_set
    __swig_getmethods__["RequestID"] = _sptraderapi.CTORATstpSPOrderField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_sptraderapi.CTORATstpSPOrderField_RequestID_get, _sptraderapi.CTORATstpSPOrderField_RequestID_set)

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPOrderField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPOrderField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPOrderField_MarketID_get, _sptraderapi.CTORATstpSPOrderField_MarketID_set)

	# 客户在系统中的编号，编号唯一且遵循交易所制定的编码规则
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPOrderField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPOrderField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPOrderField_ShareholderID_get, _sptraderapi.CTORATstpSPOrderField_ShareholderID_set)

	# 报单操作状态
    __swig_setmethods__["OrderOperateStatus"] = _sptraderapi.CTORATstpSPOrderField_OrderOperateStatus_set
    __swig_getmethods__["OrderOperateStatus"] = _sptraderapi.CTORATstpSPOrderField_OrderOperateStatus_get
    if _newclass:
        OrderOperateStatus = _swig_property(_sptraderapi.CTORATstpSPOrderField_OrderOperateStatus_get, _sptraderapi.CTORATstpSPOrderField_OrderOperateStatus_set)

	# 核心已处理、交易所已接收、部分成交、全部成交、部撤、全撤、废单等
    __swig_setmethods__["OrderStatus"] = _sptraderapi.CTORATstpSPOrderField_OrderStatus_set
    __swig_getmethods__["OrderStatus"] = _sptraderapi.CTORATstpSPOrderField_OrderStatus_get
    if _newclass:
        OrderStatus = _swig_property(_sptraderapi.CTORATstpSPOrderField_OrderStatus_get, _sptraderapi.CTORATstpSPOrderField_OrderStatus_set)

	# 报单完成数量
    __swig_setmethods__["VolumeTraded"] = _sptraderapi.CTORATstpSPOrderField_VolumeTraded_set
    __swig_getmethods__["VolumeTraded"] = _sptraderapi.CTORATstpSPOrderField_VolumeTraded_get
    if _newclass:
        VolumeTraded = _swig_property(_sptraderapi.CTORATstpSPOrderField_VolumeTraded_get, _sptraderapi.CTORATstpSPOrderField_VolumeTraded_set)

	# 报单日期
    __swig_setmethods__["InsertDate"] = _sptraderapi.CTORATstpSPOrderField_InsertDate_set
    __swig_getmethods__["InsertDate"] = _sptraderapi.CTORATstpSPOrderField_InsertDate_get
    if _newclass:
        InsertDate = _swig_property(_sptraderapi.CTORATstpSPOrderField_InsertDate_get, _sptraderapi.CTORATstpSPOrderField_InsertDate_set)

	# 委托时间
    __swig_setmethods__["InsertTime"] = _sptraderapi.CTORATstpSPOrderField_InsertTime_set
    __swig_getmethods__["InsertTime"] = _sptraderapi.CTORATstpSPOrderField_InsertTime_get
    if _newclass:
        InsertTime = _swig_property(_sptraderapi.CTORATstpSPOrderField_InsertTime_get, _sptraderapi.CTORATstpSPOrderField_InsertTime_set)

	# 交易所接收时间
    __swig_setmethods__["AcceptTime"] = _sptraderapi.CTORATstpSPOrderField_AcceptTime_set
    __swig_getmethods__["AcceptTime"] = _sptraderapi.CTORATstpSPOrderField_AcceptTime_get
    if _newclass:
        AcceptTime = _swig_property(_sptraderapi.CTORATstpSPOrderField_AcceptTime_get, _sptraderapi.CTORATstpSPOrderField_AcceptTime_set)

	# 撤销时间
    __swig_setmethods__["CancelTime"] = _sptraderapi.CTORATstpSPOrderField_CancelTime_set
    __swig_getmethods__["CancelTime"] = _sptraderapi.CTORATstpSPOrderField_CancelTime_get
    if _newclass:
        CancelTime = _swig_property(_sptraderapi.CTORATstpSPOrderField_CancelTime_get, _sptraderapi.CTORATstpSPOrderField_CancelTime_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPOrderField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPOrderField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPOrderField_InvestorID_get, _sptraderapi.CTORATstpSPOrderField_InvestorID_set)

	# 状态信息
    __swig_setmethods__["StatusMsg"] = _sptraderapi.CTORATstpSPOrderField_StatusMsg_set
    __swig_getmethods__["StatusMsg"] = _sptraderapi.CTORATstpSPOrderField_StatusMsg_get
    if _newclass:
        StatusMsg = _swig_property(_sptraderapi.CTORATstpSPOrderField_StatusMsg_get, _sptraderapi.CTORATstpSPOrderField_StatusMsg_set)

	# 用户强评标志
    __swig_setmethods__["UserForceClose"] = _sptraderapi.CTORATstpSPOrderField_UserForceClose_set
    __swig_getmethods__["UserForceClose"] = _sptraderapi.CTORATstpSPOrderField_UserForceClose_get
    if _newclass:
        UserForceClose = _swig_property(_sptraderapi.CTORATstpSPOrderField_UserForceClose_get, _sptraderapi.CTORATstpSPOrderField_UserForceClose_set)

	# 申报操作员
    __swig_setmethods__["InsertUserID"] = _sptraderapi.CTORATstpSPOrderField_InsertUserID_set
    __swig_getmethods__["InsertUserID"] = _sptraderapi.CTORATstpSPOrderField_InsertUserID_get
    if _newclass:
        InsertUserID = _swig_property(_sptraderapi.CTORATstpSPOrderField_InsertUserID_get, _sptraderapi.CTORATstpSPOrderField_InsertUserID_set)

	# 申报撤销操作员
    __swig_setmethods__["CancelUserID"] = _sptraderapi.CTORATstpSPOrderField_CancelUserID_set
    __swig_getmethods__["CancelUserID"] = _sptraderapi.CTORATstpSPOrderField_CancelUserID_get
    if _newclass:
        CancelUserID = _swig_property(_sptraderapi.CTORATstpSPOrderField_CancelUserID_get, _sptraderapi.CTORATstpSPOrderField_CancelUserID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPOrderField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPOrderField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPOrderField_BusinessUnitID_get, _sptraderapi.CTORATstpSPOrderField_BusinessUnitID_set)

	# 经纪公司部门代码
    __swig_setmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPOrderField_DepartmentID_set
    __swig_getmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPOrderField_DepartmentID_get
    if _newclass:
        DepartmentID = _swig_property(_sptraderapi.CTORATstpSPOrderField_DepartmentID_get, _sptraderapi.CTORATstpSPOrderField_DepartmentID_set)

	# 资金账户
    __swig_setmethods__["AccountID"] = _sptraderapi.CTORATstpSPOrderField_AccountID_set
    __swig_getmethods__["AccountID"] = _sptraderapi.CTORATstpSPOrderField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_sptraderapi.CTORATstpSPOrderField_AccountID_get, _sptraderapi.CTORATstpSPOrderField_AccountID_set)

	# 币种
    __swig_setmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPOrderField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPOrderField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_sptraderapi.CTORATstpSPOrderField_CurrencyID_get, _sptraderapi.CTORATstpSPOrderField_CurrencyID_set)

	# IP地址
    __swig_setmethods__["IPAddress"] = _sptraderapi.CTORATstpSPOrderField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _sptraderapi.CTORATstpSPOrderField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_sptraderapi.CTORATstpSPOrderField_IPAddress_get, _sptraderapi.CTORATstpSPOrderField_IPAddress_set)

	# Mac地址
    __swig_setmethods__["MacAddress"] = _sptraderapi.CTORATstpSPOrderField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _sptraderapi.CTORATstpSPOrderField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_sptraderapi.CTORATstpSPOrderField_MacAddress_get, _sptraderapi.CTORATstpSPOrderField_MacAddress_set)

	# 长字符串附加信息
    __swig_setmethods__["BInfo"] = _sptraderapi.CTORATstpSPOrderField_BInfo_set
    __swig_getmethods__["BInfo"] = _sptraderapi.CTORATstpSPOrderField_BInfo_get
    if _newclass:
        BInfo = _swig_property(_sptraderapi.CTORATstpSPOrderField_BInfo_get, _sptraderapi.CTORATstpSPOrderField_BInfo_set)

	# 短字符串附加信息
    __swig_setmethods__["SInfo"] = _sptraderapi.CTORATstpSPOrderField_SInfo_set
    __swig_getmethods__["SInfo"] = _sptraderapi.CTORATstpSPOrderField_SInfo_get
    if _newclass:
        SInfo = _swig_property(_sptraderapi.CTORATstpSPOrderField_SInfo_get, _sptraderapi.CTORATstpSPOrderField_SInfo_set)

	# 整形附加信息
    __swig_setmethods__["IInfo"] = _sptraderapi.CTORATstpSPOrderField_IInfo_set
    __swig_getmethods__["IInfo"] = _sptraderapi.CTORATstpSPOrderField_IInfo_get
    if _newclass:
        IInfo = _swig_property(_sptraderapi.CTORATstpSPOrderField_IInfo_get, _sptraderapi.CTORATstpSPOrderField_IInfo_set)

	# 强平原因
    __swig_setmethods__["ForceCloseReason"] = _sptraderapi.CTORATstpSPOrderField_ForceCloseReason_set
    __swig_getmethods__["ForceCloseReason"] = _sptraderapi.CTORATstpSPOrderField_ForceCloseReason_get
    if _newclass:
        ForceCloseReason = _swig_property(_sptraderapi.CTORATstpSPOrderField_ForceCloseReason_get, _sptraderapi.CTORATstpSPOrderField_ForceCloseReason_set)

	# 终端信息
    __swig_setmethods__["TerminalInfo"] = _sptraderapi.CTORATstpSPOrderField_TerminalInfo_set
    __swig_getmethods__["TerminalInfo"] = _sptraderapi.CTORATstpSPOrderField_TerminalInfo_get
    if _newclass:
        TerminalInfo = _swig_property(_sptraderapi.CTORATstpSPOrderField_TerminalInfo_get, _sptraderapi.CTORATstpSPOrderField_TerminalInfo_set)

	# 委托方式
    __swig_setmethods__["Operway"] = _sptraderapi.CTORATstpSPOrderField_Operway_set
    __swig_getmethods__["Operway"] = _sptraderapi.CTORATstpSPOrderField_Operway_get
    if _newclass:
        Operway = _swig_property(_sptraderapi.CTORATstpSPOrderField_Operway_get, _sptraderapi.CTORATstpSPOrderField_Operway_set)

	# 硬盘序列号
    __swig_setmethods__["HDSerial"] = _sptraderapi.CTORATstpSPOrderField_HDSerial_set
    __swig_getmethods__["HDSerial"] = _sptraderapi.CTORATstpSPOrderField_HDSerial_get
    if _newclass:
        HDSerial = _swig_property(_sptraderapi.CTORATstpSPOrderField_HDSerial_get, _sptraderapi.CTORATstpSPOrderField_HDSerial_set)

	# 交易所返回的撤单数量
    __swig_setmethods__["VolumeCanceled"] = _sptraderapi.CTORATstpSPOrderField_VolumeCanceled_set
    __swig_getmethods__["VolumeCanceled"] = _sptraderapi.CTORATstpSPOrderField_VolumeCanceled_get
    if _newclass:
        VolumeCanceled = _swig_property(_sptraderapi.CTORATstpSPOrderField_VolumeCanceled_get, _sptraderapi.CTORATstpSPOrderField_VolumeCanceled_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPOrderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPOrderField
    __del__ = lambda self: None
CTORATstpSPOrderField_swigregister = _sptraderapi.CTORATstpSPOrderField_swigregister
CTORATstpSPOrderField_swigregister(CTORATstpSPOrderField)




#########################################用户标识############################################
class CTORATstpSPUserRefField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPUserRefField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPUserRefField, name)
    __repr__ = _swig_repr

	# 用户代码
    __swig_setmethods__["UserID"] = _sptraderapi.CTORATstpSPUserRefField_UserID_set
    __swig_getmethods__["UserID"] = _sptraderapi.CTORATstpSPUserRefField_UserID_get
    if _newclass:
        UserID = _swig_property(_sptraderapi.CTORATstpSPUserRefField_UserID_get, _sptraderapi.CTORATstpSPUserRefField_UserID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPUserRefField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPUserRefField
    __del__ = lambda self: None
CTORATstpSPUserRefField_swigregister = _sptraderapi.CTORATstpSPUserRefField_swigregister
CTORATstpSPUserRefField_swigregister(CTORATstpSPUserRefField)




#########################################输入撤单操作############################################
class CTORATstpSPInputOrderActionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPInputOrderActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPInputOrderActionField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPInputOrderActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPInputOrderActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPInputOrderActionField_InvestorID_get, _sptraderapi.CTORATstpSPInputOrderActionField_InvestorID_set)

	# 投资者说明的对报单操作的唯一引用
    __swig_setmethods__["OrderActionRef"] = _sptraderapi.CTORATstpSPInputOrderActionField_OrderActionRef_set
    __swig_getmethods__["OrderActionRef"] = _sptraderapi.CTORATstpSPInputOrderActionField_OrderActionRef_get
    if _newclass:
        OrderActionRef = _swig_property(_sptraderapi.CTORATstpSPInputOrderActionField_OrderActionRef_get, _sptraderapi.CTORATstpSPInputOrderActionField_OrderActionRef_set)

	# 投资者说明的对报单的唯一引用
    __swig_setmethods__["OrderRef"] = _sptraderapi.CTORATstpSPInputOrderActionField_OrderRef_set
    __swig_getmethods__["OrderRef"] = _sptraderapi.CTORATstpSPInputOrderActionField_OrderRef_get
    if _newclass:
        OrderRef = _swig_property(_sptraderapi.CTORATstpSPInputOrderActionField_OrderRef_get, _sptraderapi.CTORATstpSPInputOrderActionField_OrderRef_set)

	# 前置编号
    __swig_setmethods__["FrontID"] = _sptraderapi.CTORATstpSPInputOrderActionField_FrontID_set
    __swig_getmethods__["FrontID"] = _sptraderapi.CTORATstpSPInputOrderActionField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_sptraderapi.CTORATstpSPInputOrderActionField_FrontID_get, _sptraderapi.CTORATstpSPInputOrderActionField_FrontID_set)

	# 每一位交易员或其它登录者登录系统获得的会话编号，当前时刻唯一
    __swig_setmethods__["SessionID"] = _sptraderapi.CTORATstpSPInputOrderActionField_SessionID_set
    __swig_getmethods__["SessionID"] = _sptraderapi.CTORATstpSPInputOrderActionField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_sptraderapi.CTORATstpSPInputOrderActionField_SessionID_get, _sptraderapi.CTORATstpSPInputOrderActionField_SessionID_set)

	# 一个交易所的编号
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPInputOrderActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPInputOrderActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPInputOrderActionField_ExchangeID_get, _sptraderapi.CTORATstpSPInputOrderActionField_ExchangeID_set)

	# 报单编号
    __swig_setmethods__["OrderSysID"] = _sptraderapi.CTORATstpSPInputOrderActionField_OrderSysID_set
    __swig_getmethods__["OrderSysID"] = _sptraderapi.CTORATstpSPInputOrderActionField_OrderSysID_get
    if _newclass:
        OrderSysID = _swig_property(_sptraderapi.CTORATstpSPInputOrderActionField_OrderSysID_get, _sptraderapi.CTORATstpSPInputOrderActionField_OrderSysID_set)

	# 委托操作标志
    __swig_setmethods__["OrderActionFlag"] = _sptraderapi.CTORATstpSPInputOrderActionField_OrderActionFlag_set
    __swig_getmethods__["OrderActionFlag"] = _sptraderapi.CTORATstpSPInputOrderActionField_OrderActionFlag_get
    if _newclass:
        OrderActionFlag = _swig_property(_sptraderapi.CTORATstpSPInputOrderActionField_OrderActionFlag_get, _sptraderapi.CTORATstpSPInputOrderActionField_OrderActionFlag_set)

	# 合约在系统中的编号
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPInputOrderActionField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPInputOrderActionField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPInputOrderActionField_SecurityID_get, _sptraderapi.CTORATstpSPInputOrderActionField_SecurityID_set)

	# IP地址
    __swig_setmethods__["IPAddress"] = _sptraderapi.CTORATstpSPInputOrderActionField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _sptraderapi.CTORATstpSPInputOrderActionField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_sptraderapi.CTORATstpSPInputOrderActionField_IPAddress_get, _sptraderapi.CTORATstpSPInputOrderActionField_IPAddress_set)

	# Mac地址
    __swig_setmethods__["MacAddress"] = _sptraderapi.CTORATstpSPInputOrderActionField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _sptraderapi.CTORATstpSPInputOrderActionField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_sptraderapi.CTORATstpSPInputOrderActionField_MacAddress_get, _sptraderapi.CTORATstpSPInputOrderActionField_MacAddress_set)

	# 全系统的唯一报单编号。
    __swig_setmethods__["CancelOrderLocalID"] = _sptraderapi.CTORATstpSPInputOrderActionField_CancelOrderLocalID_set
    __swig_getmethods__["CancelOrderLocalID"] = _sptraderapi.CTORATstpSPInputOrderActionField_CancelOrderLocalID_get
    if _newclass:
        CancelOrderLocalID = _swig_property(_sptraderapi.CTORATstpSPInputOrderActionField_CancelOrderLocalID_get, _sptraderapi.CTORATstpSPInputOrderActionField_CancelOrderLocalID_set)

	# 终端信息
    __swig_setmethods__["TerminalInfo"] = _sptraderapi.CTORATstpSPInputOrderActionField_TerminalInfo_set
    __swig_getmethods__["TerminalInfo"] = _sptraderapi.CTORATstpSPInputOrderActionField_TerminalInfo_get
    if _newclass:
        TerminalInfo = _swig_property(_sptraderapi.CTORATstpSPInputOrderActionField_TerminalInfo_get, _sptraderapi.CTORATstpSPInputOrderActionField_TerminalInfo_set)

	# 长字符串附加信息
    __swig_setmethods__["BInfo"] = _sptraderapi.CTORATstpSPInputOrderActionField_BInfo_set
    __swig_getmethods__["BInfo"] = _sptraderapi.CTORATstpSPInputOrderActionField_BInfo_get
    if _newclass:
        BInfo = _swig_property(_sptraderapi.CTORATstpSPInputOrderActionField_BInfo_get, _sptraderapi.CTORATstpSPInputOrderActionField_BInfo_set)

	# 短字符串附加信息
    __swig_setmethods__["SInfo"] = _sptraderapi.CTORATstpSPInputOrderActionField_SInfo_set
    __swig_getmethods__["SInfo"] = _sptraderapi.CTORATstpSPInputOrderActionField_SInfo_get
    if _newclass:
        SInfo = _swig_property(_sptraderapi.CTORATstpSPInputOrderActionField_SInfo_get, _sptraderapi.CTORATstpSPInputOrderActionField_SInfo_set)

	# 整形附加信息
    __swig_setmethods__["IInfo"] = _sptraderapi.CTORATstpSPInputOrderActionField_IInfo_set
    __swig_getmethods__["IInfo"] = _sptraderapi.CTORATstpSPInputOrderActionField_IInfo_get
    if _newclass:
        IInfo = _swig_property(_sptraderapi.CTORATstpSPInputOrderActionField_IInfo_get, _sptraderapi.CTORATstpSPInputOrderActionField_IInfo_set)

	# 委托方式
    __swig_setmethods__["Operway"] = _sptraderapi.CTORATstpSPInputOrderActionField_Operway_set
    __swig_getmethods__["Operway"] = _sptraderapi.CTORATstpSPInputOrderActionField_Operway_get
    if _newclass:
        Operway = _swig_property(_sptraderapi.CTORATstpSPInputOrderActionField_Operway_get, _sptraderapi.CTORATstpSPInputOrderActionField_Operway_set)

	# 硬盘序列号
    __swig_setmethods__["HDSerial"] = _sptraderapi.CTORATstpSPInputOrderActionField_HDSerial_set
    __swig_getmethods__["HDSerial"] = _sptraderapi.CTORATstpSPInputOrderActionField_HDSerial_get
    if _newclass:
        HDSerial = _swig_property(_sptraderapi.CTORATstpSPInputOrderActionField_HDSerial_get, _sptraderapi.CTORATstpSPInputOrderActionField_HDSerial_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPInputOrderActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPInputOrderActionField
    __del__ = lambda self: None
CTORATstpSPInputOrderActionField_swigregister = _sptraderapi.CTORATstpSPInputOrderActionField_swigregister
CTORATstpSPInputOrderActionField_swigregister(CTORATstpSPInputOrderActionField)




#########################################成交############################################
class CTORATstpSPTradeField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPTradeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPTradeField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPTradeField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPTradeField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPTradeField_InvestorID_get, _sptraderapi.CTORATstpSPTradeField_InvestorID_set)

	# 合约在系统中的编号
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPTradeField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPTradeField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPTradeField_SecurityID_get, _sptraderapi.CTORATstpSPTradeField_SecurityID_set)

	# 用户代码
    __swig_setmethods__["InsertUserID"] = _sptraderapi.CTORATstpSPTradeField_InsertUserID_set
    __swig_getmethods__["InsertUserID"] = _sptraderapi.CTORATstpSPTradeField_InsertUserID_get
    if _newclass:
        InsertUserID = _swig_property(_sptraderapi.CTORATstpSPTradeField_InsertUserID_get, _sptraderapi.CTORATstpSPTradeField_InsertUserID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPTradeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPTradeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPTradeField_ExchangeID_get, _sptraderapi.CTORATstpSPTradeField_ExchangeID_set)

	# 成交编号
    __swig_setmethods__["TradeID"] = _sptraderapi.CTORATstpSPTradeField_TradeID_set
    __swig_getmethods__["TradeID"] = _sptraderapi.CTORATstpSPTradeField_TradeID_get
    if _newclass:
        TradeID = _swig_property(_sptraderapi.CTORATstpSPTradeField_TradeID_get, _sptraderapi.CTORATstpSPTradeField_TradeID_set)

	# 买、卖
    __swig_setmethods__["Direction"] = _sptraderapi.CTORATstpSPTradeField_Direction_set
    __swig_getmethods__["Direction"] = _sptraderapi.CTORATstpSPTradeField_Direction_get
    if _newclass:
        Direction = _swig_property(_sptraderapi.CTORATstpSPTradeField_Direction_get, _sptraderapi.CTORATstpSPTradeField_Direction_set)

	# 报单编号
    __swig_setmethods__["OrderSysID"] = _sptraderapi.CTORATstpSPTradeField_OrderSysID_set
    __swig_getmethods__["OrderSysID"] = _sptraderapi.CTORATstpSPTradeField_OrderSysID_get
    if _newclass:
        OrderSysID = _swig_property(_sptraderapi.CTORATstpSPTradeField_OrderSysID_get, _sptraderapi.CTORATstpSPTradeField_OrderSysID_set)

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPTradeField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPTradeField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPTradeField_MarketID_get, _sptraderapi.CTORATstpSPTradeField_MarketID_set)

	# 客户在系统中的编号，编号唯一且遵循交易所制定的编码规则
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPTradeField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPTradeField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPTradeField_ShareholderID_get, _sptraderapi.CTORATstpSPTradeField_ShareholderID_set)

	# 开仓、平仓等
    __swig_setmethods__["OffsetFlag"] = _sptraderapi.CTORATstpSPTradeField_OffsetFlag_set
    __swig_getmethods__["OffsetFlag"] = _sptraderapi.CTORATstpSPTradeField_OffsetFlag_get
    if _newclass:
        OffsetFlag = _swig_property(_sptraderapi.CTORATstpSPTradeField_OffsetFlag_get, _sptraderapi.CTORATstpSPTradeField_OffsetFlag_set)

	# 投机、套利等
    __swig_setmethods__["HedgeFlag"] = _sptraderapi.CTORATstpSPTradeField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _sptraderapi.CTORATstpSPTradeField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_sptraderapi.CTORATstpSPTradeField_HedgeFlag_get, _sptraderapi.CTORATstpSPTradeField_HedgeFlag_set)

	# 成交价格
    __swig_setmethods__["Price"] = _sptraderapi.CTORATstpSPTradeField_Price_set
    __swig_getmethods__["Price"] = _sptraderapi.CTORATstpSPTradeField_Price_get
    if _newclass:
        Price = _swig_property(_sptraderapi.CTORATstpSPTradeField_Price_get, _sptraderapi.CTORATstpSPTradeField_Price_set)

	# 成交数量
    __swig_setmethods__["Volume"] = _sptraderapi.CTORATstpSPTradeField_Volume_set
    __swig_getmethods__["Volume"] = _sptraderapi.CTORATstpSPTradeField_Volume_get
    if _newclass:
        Volume = _swig_property(_sptraderapi.CTORATstpSPTradeField_Volume_get, _sptraderapi.CTORATstpSPTradeField_Volume_set)

	# 成交日期
    __swig_setmethods__["TradeDate"] = _sptraderapi.CTORATstpSPTradeField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _sptraderapi.CTORATstpSPTradeField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_sptraderapi.CTORATstpSPTradeField_TradeDate_get, _sptraderapi.CTORATstpSPTradeField_TradeDate_set)

	# 成交时间
    __swig_setmethods__["TradeTime"] = _sptraderapi.CTORATstpSPTradeField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _sptraderapi.CTORATstpSPTradeField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_sptraderapi.CTORATstpSPTradeField_TradeTime_get, _sptraderapi.CTORATstpSPTradeField_TradeTime_set)

	# 交易所交易单元代码
    __swig_setmethods__["PbuID"] = _sptraderapi.CTORATstpSPTradeField_PbuID_set
    __swig_getmethods__["PbuID"] = _sptraderapi.CTORATstpSPTradeField_PbuID_get
    if _newclass:
        PbuID = _swig_property(_sptraderapi.CTORATstpSPTradeField_PbuID_get, _sptraderapi.CTORATstpSPTradeField_PbuID_set)

	# 本地报单顺序号
    __swig_setmethods__["OrderLocalID"] = _sptraderapi.CTORATstpSPTradeField_OrderLocalID_set
    __swig_getmethods__["OrderLocalID"] = _sptraderapi.CTORATstpSPTradeField_OrderLocalID_get
    if _newclass:
        OrderLocalID = _swig_property(_sptraderapi.CTORATstpSPTradeField_OrderLocalID_get, _sptraderapi.CTORATstpSPTradeField_OrderLocalID_set)

	# 交易发生的日期
    __swig_setmethods__["TradingDay"] = _sptraderapi.CTORATstpSPTradeField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _sptraderapi.CTORATstpSPTradeField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_sptraderapi.CTORATstpSPTradeField_TradingDay_get, _sptraderapi.CTORATstpSPTradeField_TradingDay_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPTradeField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPTradeField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPTradeField_BusinessUnitID_get, _sptraderapi.CTORATstpSPTradeField_BusinessUnitID_set)

	# 资金账户
    __swig_setmethods__["AccountID"] = _sptraderapi.CTORATstpSPTradeField_AccountID_set
    __swig_getmethods__["AccountID"] = _sptraderapi.CTORATstpSPTradeField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_sptraderapi.CTORATstpSPTradeField_AccountID_get, _sptraderapi.CTORATstpSPTradeField_AccountID_set)

	# 币种
    __swig_setmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPTradeField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPTradeField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_sptraderapi.CTORATstpSPTradeField_CurrencyID_get, _sptraderapi.CTORATstpSPTradeField_CurrencyID_set)

	# 报单引用
    __swig_setmethods__["OrderRef"] = _sptraderapi.CTORATstpSPTradeField_OrderRef_set
    __swig_getmethods__["OrderRef"] = _sptraderapi.CTORATstpSPTradeField_OrderRef_get
    if _newclass:
        OrderRef = _swig_property(_sptraderapi.CTORATstpSPTradeField_OrderRef_get, _sptraderapi.CTORATstpSPTradeField_OrderRef_set)

	# 经纪公司部门代码
    __swig_setmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPTradeField_DepartmentID_set
    __swig_getmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPTradeField_DepartmentID_get
    if _newclass:
        DepartmentID = _swig_property(_sptraderapi.CTORATstpSPTradeField_DepartmentID_get, _sptraderapi.CTORATstpSPTradeField_DepartmentID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPTradeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPTradeField
    __del__ = lambda self: None
CTORATstpSPTradeField_swigregister = _sptraderapi.CTORATstpSPTradeField_swigregister
CTORATstpSPTradeField_swigregister(CTORATstpSPTradeField)




#########################################行权输入############################################
class CTORATstpSPInputExerciseField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPInputExerciseField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPInputExerciseField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPInputExerciseField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPInputExerciseField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPInputExerciseField_InvestorID_get, _sptraderapi.CTORATstpSPInputExerciseField_InvestorID_set)

	# 合约在系统中的编号
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPInputExerciseField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPInputExerciseField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPInputExerciseField_SecurityID_get, _sptraderapi.CTORATstpSPInputExerciseField_SecurityID_set)

	# 投资者说明的对行权的唯一引用
    __swig_setmethods__["ExerciseRef"] = _sptraderapi.CTORATstpSPInputExerciseField_ExerciseRef_set
    __swig_getmethods__["ExerciseRef"] = _sptraderapi.CTORATstpSPInputExerciseField_ExerciseRef_get
    if _newclass:
        ExerciseRef = _swig_property(_sptraderapi.CTORATstpSPInputExerciseField_ExerciseRef_get, _sptraderapi.CTORATstpSPInputExerciseField_ExerciseRef_set)

	# 行权数量
    __swig_setmethods__["Volume"] = _sptraderapi.CTORATstpSPInputExerciseField_Volume_set
    __swig_getmethods__["Volume"] = _sptraderapi.CTORATstpSPInputExerciseField_Volume_get
    if _newclass:
        Volume = _swig_property(_sptraderapi.CTORATstpSPInputExerciseField_Volume_get, _sptraderapi.CTORATstpSPInputExerciseField_Volume_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPInputExerciseField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPInputExerciseField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPInputExerciseField_BusinessUnitID_get, _sptraderapi.CTORATstpSPInputExerciseField_BusinessUnitID_set)

	# 执行类型
    __swig_setmethods__["ExerciseType"] = _sptraderapi.CTORATstpSPInputExerciseField_ExerciseType_set
    __swig_getmethods__["ExerciseType"] = _sptraderapi.CTORATstpSPInputExerciseField_ExerciseType_get
    if _newclass:
        ExerciseType = _swig_property(_sptraderapi.CTORATstpSPInputExerciseField_ExerciseType_get, _sptraderapi.CTORATstpSPInputExerciseField_ExerciseType_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPInputExerciseField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPInputExerciseField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPInputExerciseField_ExchangeID_get, _sptraderapi.CTORATstpSPInputExerciseField_ExchangeID_set)

	# 目前该字段存放的是上证所和深圳的股东代码。
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPInputExerciseField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPInputExerciseField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPInputExerciseField_ShareholderID_get, _sptraderapi.CTORATstpSPInputExerciseField_ShareholderID_set)

	# 资金账户
    __swig_setmethods__["AccountID"] = _sptraderapi.CTORATstpSPInputExerciseField_AccountID_set
    __swig_getmethods__["AccountID"] = _sptraderapi.CTORATstpSPInputExerciseField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_sptraderapi.CTORATstpSPInputExerciseField_AccountID_get, _sptraderapi.CTORATstpSPInputExerciseField_AccountID_set)

	# IP地址
    __swig_setmethods__["IPAddress"] = _sptraderapi.CTORATstpSPInputExerciseField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _sptraderapi.CTORATstpSPInputExerciseField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_sptraderapi.CTORATstpSPInputExerciseField_IPAddress_get, _sptraderapi.CTORATstpSPInputExerciseField_IPAddress_set)

	# Mac地址
    __swig_setmethods__["MacAddress"] = _sptraderapi.CTORATstpSPInputExerciseField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _sptraderapi.CTORATstpSPInputExerciseField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_sptraderapi.CTORATstpSPInputExerciseField_MacAddress_get, _sptraderapi.CTORATstpSPInputExerciseField_MacAddress_set)

	# 系统行权编号
    __swig_setmethods__["ExerciseSysID"] = _sptraderapi.CTORATstpSPInputExerciseField_ExerciseSysID_set
    __swig_getmethods__["ExerciseSysID"] = _sptraderapi.CTORATstpSPInputExerciseField_ExerciseSysID_get
    if _newclass:
        ExerciseSysID = _swig_property(_sptraderapi.CTORATstpSPInputExerciseField_ExerciseSysID_get, _sptraderapi.CTORATstpSPInputExerciseField_ExerciseSysID_set)

	# 终端信息
    __swig_setmethods__["TerminalInfo"] = _sptraderapi.CTORATstpSPInputExerciseField_TerminalInfo_set
    __swig_getmethods__["TerminalInfo"] = _sptraderapi.CTORATstpSPInputExerciseField_TerminalInfo_get
    if _newclass:
        TerminalInfo = _swig_property(_sptraderapi.CTORATstpSPInputExerciseField_TerminalInfo_get, _sptraderapi.CTORATstpSPInputExerciseField_TerminalInfo_set)

	# 长字符串附加信息
    __swig_setmethods__["BInfo"] = _sptraderapi.CTORATstpSPInputExerciseField_BInfo_set
    __swig_getmethods__["BInfo"] = _sptraderapi.CTORATstpSPInputExerciseField_BInfo_get
    if _newclass:
        BInfo = _swig_property(_sptraderapi.CTORATstpSPInputExerciseField_BInfo_get, _sptraderapi.CTORATstpSPInputExerciseField_BInfo_set)

	# 短字符串附加信息
    __swig_setmethods__["SInfo"] = _sptraderapi.CTORATstpSPInputExerciseField_SInfo_set
    __swig_getmethods__["SInfo"] = _sptraderapi.CTORATstpSPInputExerciseField_SInfo_get
    if _newclass:
        SInfo = _swig_property(_sptraderapi.CTORATstpSPInputExerciseField_SInfo_get, _sptraderapi.CTORATstpSPInputExerciseField_SInfo_set)

	# 整形附加信息
    __swig_setmethods__["IInfo"] = _sptraderapi.CTORATstpSPInputExerciseField_IInfo_set
    __swig_getmethods__["IInfo"] = _sptraderapi.CTORATstpSPInputExerciseField_IInfo_get
    if _newclass:
        IInfo = _swig_property(_sptraderapi.CTORATstpSPInputExerciseField_IInfo_get, _sptraderapi.CTORATstpSPInputExerciseField_IInfo_set)

	# 委托方式
    __swig_setmethods__["Operway"] = _sptraderapi.CTORATstpSPInputExerciseField_Operway_set
    __swig_getmethods__["Operway"] = _sptraderapi.CTORATstpSPInputExerciseField_Operway_get
    if _newclass:
        Operway = _swig_property(_sptraderapi.CTORATstpSPInputExerciseField_Operway_get, _sptraderapi.CTORATstpSPInputExerciseField_Operway_set)

	# 硬盘序列号
    __swig_setmethods__["HDSerial"] = _sptraderapi.CTORATstpSPInputExerciseField_HDSerial_set
    __swig_getmethods__["HDSerial"] = _sptraderapi.CTORATstpSPInputExerciseField_HDSerial_get
    if _newclass:
        HDSerial = _swig_property(_sptraderapi.CTORATstpSPInputExerciseField_HDSerial_get, _sptraderapi.CTORATstpSPInputExerciseField_HDSerial_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPInputExerciseField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPInputExerciseField
    __del__ = lambda self: None
CTORATstpSPInputExerciseField_swigregister = _sptraderapi.CTORATstpSPInputExerciseField_swigregister
CTORATstpSPInputExerciseField_swigregister(CTORATstpSPInputExerciseField)




#########################################行权回报############################################
class CTORATstpSPExerciseField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPExerciseField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPExerciseField, name)
    __repr__ = _swig_repr

	# 交易日
    __swig_setmethods__["TradingDay"] = _sptraderapi.CTORATstpSPExerciseField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _sptraderapi.CTORATstpSPExerciseField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_sptraderapi.CTORATstpSPExerciseField_TradingDay_get, _sptraderapi.CTORATstpSPExerciseField_TradingDay_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPExerciseField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPExerciseField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPExerciseField_ExchangeID_get, _sptraderapi.CTORATstpSPExerciseField_ExchangeID_set)

	# 合约在系统中的编号
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPExerciseField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPExerciseField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPExerciseField_SecurityID_get, _sptraderapi.CTORATstpSPExerciseField_SecurityID_set)

	# 前置编号
    __swig_setmethods__["FrontID"] = _sptraderapi.CTORATstpSPExerciseField_FrontID_set
    __swig_getmethods__["FrontID"] = _sptraderapi.CTORATstpSPExerciseField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_sptraderapi.CTORATstpSPExerciseField_FrontID_get, _sptraderapi.CTORATstpSPExerciseField_FrontID_set)

	# 会话编号
    __swig_setmethods__["SessionID"] = _sptraderapi.CTORATstpSPExerciseField_SessionID_set
    __swig_getmethods__["SessionID"] = _sptraderapi.CTORATstpSPExerciseField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_sptraderapi.CTORATstpSPExerciseField_SessionID_get, _sptraderapi.CTORATstpSPExerciseField_SessionID_set)

	# 投资者说明的对报单的唯一引用
    __swig_setmethods__["ExerciseRef"] = _sptraderapi.CTORATstpSPExerciseField_ExerciseRef_set
    __swig_getmethods__["ExerciseRef"] = _sptraderapi.CTORATstpSPExerciseField_ExerciseRef_get
    if _newclass:
        ExerciseRef = _swig_property(_sptraderapi.CTORATstpSPExerciseField_ExerciseRef_get, _sptraderapi.CTORATstpSPExerciseField_ExerciseRef_set)

	# 全系统的唯一报单编号
    __swig_setmethods__["ExerciseSysID"] = _sptraderapi.CTORATstpSPExerciseField_ExerciseSysID_set
    __swig_getmethods__["ExerciseSysID"] = _sptraderapi.CTORATstpSPExerciseField_ExerciseSysID_get
    if _newclass:
        ExerciseSysID = _swig_property(_sptraderapi.CTORATstpSPExerciseField_ExerciseSysID_get, _sptraderapi.CTORATstpSPExerciseField_ExerciseSysID_set)

	# 交易单元代码
    __swig_setmethods__["PbuID"] = _sptraderapi.CTORATstpSPExerciseField_PbuID_set
    __swig_getmethods__["PbuID"] = _sptraderapi.CTORATstpSPExerciseField_PbuID_get
    if _newclass:
        PbuID = _swig_property(_sptraderapi.CTORATstpSPExerciseField_PbuID_get, _sptraderapi.CTORATstpSPExerciseField_PbuID_set)

	# 本地报单编号
    __swig_setmethods__["ExerciseLocalID"] = _sptraderapi.CTORATstpSPExerciseField_ExerciseLocalID_set
    __swig_getmethods__["ExerciseLocalID"] = _sptraderapi.CTORATstpSPExerciseField_ExerciseLocalID_get
    if _newclass:
        ExerciseLocalID = _swig_property(_sptraderapi.CTORATstpSPExerciseField_ExerciseLocalID_get, _sptraderapi.CTORATstpSPExerciseField_ExerciseLocalID_set)

	# 执行类型
    __swig_setmethods__["ExerciseType"] = _sptraderapi.CTORATstpSPExerciseField_ExerciseType_set
    __swig_getmethods__["ExerciseType"] = _sptraderapi.CTORATstpSPExerciseField_ExerciseType_get
    if _newclass:
        ExerciseType = _swig_property(_sptraderapi.CTORATstpSPExerciseField_ExerciseType_get, _sptraderapi.CTORATstpSPExerciseField_ExerciseType_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPExerciseField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPExerciseField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPExerciseField_InvestorID_get, _sptraderapi.CTORATstpSPExerciseField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPExerciseField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPExerciseField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPExerciseField_BusinessUnitID_get, _sptraderapi.CTORATstpSPExerciseField_BusinessUnitID_set)

	# 行权数量
    __swig_setmethods__["Volume"] = _sptraderapi.CTORATstpSPExerciseField_Volume_set
    __swig_getmethods__["Volume"] = _sptraderapi.CTORATstpSPExerciseField_Volume_get
    if _newclass:
        Volume = _swig_property(_sptraderapi.CTORATstpSPExerciseField_Volume_get, _sptraderapi.CTORATstpSPExerciseField_Volume_set)

	# 交易所返回的撤单数量
    __swig_setmethods__["VolumeCanceled"] = _sptraderapi.CTORATstpSPExerciseField_VolumeCanceled_set
    __swig_getmethods__["VolumeCanceled"] = _sptraderapi.CTORATstpSPExerciseField_VolumeCanceled_get
    if _newclass:
        VolumeCanceled = _swig_property(_sptraderapi.CTORATstpSPExerciseField_VolumeCanceled_get, _sptraderapi.CTORATstpSPExerciseField_VolumeCanceled_set)

	# 市场代码
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPExerciseField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPExerciseField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPExerciseField_MarketID_get, _sptraderapi.CTORATstpSPExerciseField_MarketID_set)

	# 目前该字段存放的是上证所和深圳的股东代码。
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPExerciseField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPExerciseField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPExerciseField_ShareholderID_get, _sptraderapi.CTORATstpSPExerciseField_ShareholderID_set)

	# a：普通，b：信用，c：衍生品
    __swig_setmethods__["ShareholderIDType"] = _sptraderapi.CTORATstpSPExerciseField_ShareholderIDType_set
    __swig_getmethods__["ShareholderIDType"] = _sptraderapi.CTORATstpSPExerciseField_ShareholderIDType_get
    if _newclass:
        ShareholderIDType = _swig_property(_sptraderapi.CTORATstpSPExerciseField_ShareholderIDType_get, _sptraderapi.CTORATstpSPExerciseField_ShareholderIDType_set)

	# 经纪公司部门代码
    __swig_setmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPExerciseField_DepartmentID_set
    __swig_getmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPExerciseField_DepartmentID_get
    if _newclass:
        DepartmentID = _swig_property(_sptraderapi.CTORATstpSPExerciseField_DepartmentID_get, _sptraderapi.CTORATstpSPExerciseField_DepartmentID_set)

	# 资金账户
    __swig_setmethods__["AccountID"] = _sptraderapi.CTORATstpSPExerciseField_AccountID_set
    __swig_getmethods__["AccountID"] = _sptraderapi.CTORATstpSPExerciseField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_sptraderapi.CTORATstpSPExerciseField_AccountID_get, _sptraderapi.CTORATstpSPExerciseField_AccountID_set)

	# 币种
    __swig_setmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPExerciseField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPExerciseField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_sptraderapi.CTORATstpSPExerciseField_CurrencyID_get, _sptraderapi.CTORATstpSPExerciseField_CurrencyID_set)

	# 行权状态
    __swig_setmethods__["ExerciseStatus"] = _sptraderapi.CTORATstpSPExerciseField_ExerciseStatus_set
    __swig_getmethods__["ExerciseStatus"] = _sptraderapi.CTORATstpSPExerciseField_ExerciseStatus_get
    if _newclass:
        ExerciseStatus = _swig_property(_sptraderapi.CTORATstpSPExerciseField_ExerciseStatus_get, _sptraderapi.CTORATstpSPExerciseField_ExerciseStatus_set)

	# 行权操作状态
    __swig_setmethods__["ExerciseOperateStatus"] = _sptraderapi.CTORATstpSPExerciseField_ExerciseOperateStatus_set
    __swig_getmethods__["ExerciseOperateStatus"] = _sptraderapi.CTORATstpSPExerciseField_ExerciseOperateStatus_get
    if _newclass:
        ExerciseOperateStatus = _swig_property(_sptraderapi.CTORATstpSPExerciseField_ExerciseOperateStatus_get, _sptraderapi.CTORATstpSPExerciseField_ExerciseOperateStatus_set)

	# 状态信息
    __swig_setmethods__["StatusMsg"] = _sptraderapi.CTORATstpSPExerciseField_StatusMsg_set
    __swig_getmethods__["StatusMsg"] = _sptraderapi.CTORATstpSPExerciseField_StatusMsg_get
    if _newclass:
        StatusMsg = _swig_property(_sptraderapi.CTORATstpSPExerciseField_StatusMsg_get, _sptraderapi.CTORATstpSPExerciseField_StatusMsg_set)

	# 系统错误代码
    __swig_setmethods__["ErrorID"] = _sptraderapi.CTORATstpSPExerciseField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _sptraderapi.CTORATstpSPExerciseField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_sptraderapi.CTORATstpSPExerciseField_ErrorID_get, _sptraderapi.CTORATstpSPExerciseField_ErrorID_set)

	# 交易所为营业部分配的代码
    __swig_setmethods__["BranchID"] = _sptraderapi.CTORATstpSPExerciseField_BranchID_set
    __swig_getmethods__["BranchID"] = _sptraderapi.CTORATstpSPExerciseField_BranchID_get
    if _newclass:
        BranchID = _swig_property(_sptraderapi.CTORATstpSPExerciseField_BranchID_get, _sptraderapi.CTORATstpSPExerciseField_BranchID_set)

	# 报单申报用户
    __swig_setmethods__["InsertUserID"] = _sptraderapi.CTORATstpSPExerciseField_InsertUserID_set
    __swig_getmethods__["InsertUserID"] = _sptraderapi.CTORATstpSPExerciseField_InsertUserID_get
    if _newclass:
        InsertUserID = _swig_property(_sptraderapi.CTORATstpSPExerciseField_InsertUserID_get, _sptraderapi.CTORATstpSPExerciseField_InsertUserID_set)

	# 申报日期
    __swig_setmethods__["InsertDate"] = _sptraderapi.CTORATstpSPExerciseField_InsertDate_set
    __swig_getmethods__["InsertDate"] = _sptraderapi.CTORATstpSPExerciseField_InsertDate_get
    if _newclass:
        InsertDate = _swig_property(_sptraderapi.CTORATstpSPExerciseField_InsertDate_get, _sptraderapi.CTORATstpSPExerciseField_InsertDate_set)

	# 申报时间
    __swig_setmethods__["InsertTime"] = _sptraderapi.CTORATstpSPExerciseField_InsertTime_set
    __swig_getmethods__["InsertTime"] = _sptraderapi.CTORATstpSPExerciseField_InsertTime_get
    if _newclass:
        InsertTime = _swig_property(_sptraderapi.CTORATstpSPExerciseField_InsertTime_get, _sptraderapi.CTORATstpSPExerciseField_InsertTime_set)

	# 申报时间(毫秒)
    __swig_setmethods__["InsertMillisec"] = _sptraderapi.CTORATstpSPExerciseField_InsertMillisec_set
    __swig_getmethods__["InsertMillisec"] = _sptraderapi.CTORATstpSPExerciseField_InsertMillisec_get
    if _newclass:
        InsertMillisec = _swig_property(_sptraderapi.CTORATstpSPExerciseField_InsertMillisec_get, _sptraderapi.CTORATstpSPExerciseField_InsertMillisec_set)

	# 交易所接收时间
    __swig_setmethods__["AcceptTime"] = _sptraderapi.CTORATstpSPExerciseField_AcceptTime_set
    __swig_getmethods__["AcceptTime"] = _sptraderapi.CTORATstpSPExerciseField_AcceptTime_get
    if _newclass:
        AcceptTime = _swig_property(_sptraderapi.CTORATstpSPExerciseField_AcceptTime_get, _sptraderapi.CTORATstpSPExerciseField_AcceptTime_set)

	# 撤销时间
    __swig_setmethods__["CancelTime"] = _sptraderapi.CTORATstpSPExerciseField_CancelTime_set
    __swig_getmethods__["CancelTime"] = _sptraderapi.CTORATstpSPExerciseField_CancelTime_get
    if _newclass:
        CancelTime = _swig_property(_sptraderapi.CTORATstpSPExerciseField_CancelTime_get, _sptraderapi.CTORATstpSPExerciseField_CancelTime_set)

	# 撤销申报用户
    __swig_setmethods__["CancelUserID"] = _sptraderapi.CTORATstpSPExerciseField_CancelUserID_set
    __swig_getmethods__["CancelUserID"] = _sptraderapi.CTORATstpSPExerciseField_CancelUserID_get
    if _newclass:
        CancelUserID = _swig_property(_sptraderapi.CTORATstpSPExerciseField_CancelUserID_get, _sptraderapi.CTORATstpSPExerciseField_CancelUserID_set)

	# 现货仓位行权冻结流水号
    __swig_setmethods__["StockPositionExerciseSerial"] = _sptraderapi.CTORATstpSPExerciseField_StockPositionExerciseSerial_set
    __swig_getmethods__["StockPositionExerciseSerial"] = _sptraderapi.CTORATstpSPExerciseField_StockPositionExerciseSerial_get
    if _newclass:
        StockPositionExerciseSerial = _swig_property(_sptraderapi.CTORATstpSPExerciseField_StockPositionExerciseSerial_get, _sptraderapi.CTORATstpSPExerciseField_StockPositionExerciseSerial_set)

	# 现货系统仓位调拨流水号
    __swig_setmethods__["StockPositionSerial"] = _sptraderapi.CTORATstpSPExerciseField_StockPositionSerial_set
    __swig_getmethods__["StockPositionSerial"] = _sptraderapi.CTORATstpSPExerciseField_StockPositionSerial_get
    if _newclass:
        StockPositionSerial = _swig_property(_sptraderapi.CTORATstpSPExerciseField_StockPositionSerial_get, _sptraderapi.CTORATstpSPExerciseField_StockPositionSerial_set)

	# IP地址
    __swig_setmethods__["IPAddress"] = _sptraderapi.CTORATstpSPExerciseField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _sptraderapi.CTORATstpSPExerciseField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_sptraderapi.CTORATstpSPExerciseField_IPAddress_get, _sptraderapi.CTORATstpSPExerciseField_IPAddress_set)

	# Mac地址
    __swig_setmethods__["MacAddress"] = _sptraderapi.CTORATstpSPExerciseField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _sptraderapi.CTORATstpSPExerciseField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_sptraderapi.CTORATstpSPExerciseField_MacAddress_get, _sptraderapi.CTORATstpSPExerciseField_MacAddress_set)

	# 请求编号
    __swig_setmethods__["RequestID"] = _sptraderapi.CTORATstpSPExerciseField_RequestID_set
    __swig_getmethods__["RequestID"] = _sptraderapi.CTORATstpSPExerciseField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_sptraderapi.CTORATstpSPExerciseField_RequestID_get, _sptraderapi.CTORATstpSPExerciseField_RequestID_set)

	# 终端信息
    __swig_setmethods__["TerminalInfo"] = _sptraderapi.CTORATstpSPExerciseField_TerminalInfo_set
    __swig_getmethods__["TerminalInfo"] = _sptraderapi.CTORATstpSPExerciseField_TerminalInfo_get
    if _newclass:
        TerminalInfo = _swig_property(_sptraderapi.CTORATstpSPExerciseField_TerminalInfo_get, _sptraderapi.CTORATstpSPExerciseField_TerminalInfo_set)

	# 记录序号(仅上证报盘使用)
    __swig_setmethods__["RecordNumber"] = _sptraderapi.CTORATstpSPExerciseField_RecordNumber_set
    __swig_getmethods__["RecordNumber"] = _sptraderapi.CTORATstpSPExerciseField_RecordNumber_get
    if _newclass:
        RecordNumber = _swig_property(_sptraderapi.CTORATstpSPExerciseField_RecordNumber_get, _sptraderapi.CTORATstpSPExerciseField_RecordNumber_set)

	# 长字符串附加信息
    __swig_setmethods__["BInfo"] = _sptraderapi.CTORATstpSPExerciseField_BInfo_set
    __swig_getmethods__["BInfo"] = _sptraderapi.CTORATstpSPExerciseField_BInfo_get
    if _newclass:
        BInfo = _swig_property(_sptraderapi.CTORATstpSPExerciseField_BInfo_get, _sptraderapi.CTORATstpSPExerciseField_BInfo_set)

	# 短字符串附加信息
    __swig_setmethods__["SInfo"] = _sptraderapi.CTORATstpSPExerciseField_SInfo_set
    __swig_getmethods__["SInfo"] = _sptraderapi.CTORATstpSPExerciseField_SInfo_get
    if _newclass:
        SInfo = _swig_property(_sptraderapi.CTORATstpSPExerciseField_SInfo_get, _sptraderapi.CTORATstpSPExerciseField_SInfo_set)

	# 整形附加信息
    __swig_setmethods__["IInfo"] = _sptraderapi.CTORATstpSPExerciseField_IInfo_set
    __swig_getmethods__["IInfo"] = _sptraderapi.CTORATstpSPExerciseField_IInfo_get
    if _newclass:
        IInfo = _swig_property(_sptraderapi.CTORATstpSPExerciseField_IInfo_get, _sptraderapi.CTORATstpSPExerciseField_IInfo_set)

	# 委托方式
    __swig_setmethods__["Operway"] = _sptraderapi.CTORATstpSPExerciseField_Operway_set
    __swig_getmethods__["Operway"] = _sptraderapi.CTORATstpSPExerciseField_Operway_get
    if _newclass:
        Operway = _swig_property(_sptraderapi.CTORATstpSPExerciseField_Operway_get, _sptraderapi.CTORATstpSPExerciseField_Operway_set)

	# 硬盘序列号
    __swig_setmethods__["HDSerial"] = _sptraderapi.CTORATstpSPExerciseField_HDSerial_set
    __swig_getmethods__["HDSerial"] = _sptraderapi.CTORATstpSPExerciseField_HDSerial_get
    if _newclass:
        HDSerial = _swig_property(_sptraderapi.CTORATstpSPExerciseField_HDSerial_get, _sptraderapi.CTORATstpSPExerciseField_HDSerial_set)

	# 移动设备手机号
    __swig_setmethods__["Mobile"] = _sptraderapi.CTORATstpSPExerciseField_Mobile_set
    __swig_getmethods__["Mobile"] = _sptraderapi.CTORATstpSPExerciseField_Mobile_get
    if _newclass:
        Mobile = _swig_property(_sptraderapi.CTORATstpSPExerciseField_Mobile_get, _sptraderapi.CTORATstpSPExerciseField_Mobile_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPExerciseField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPExerciseField
    __del__ = lambda self: None
CTORATstpSPExerciseField_swigregister = _sptraderapi.CTORATstpSPExerciseField_swigregister
CTORATstpSPExerciseField_swigregister(CTORATstpSPExerciseField)




#########################################行权操作输入############################################
class CTORATstpSPInputExerciseActionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPInputExerciseActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPInputExerciseActionField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPInputExerciseActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPInputExerciseActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPInputExerciseActionField_InvestorID_get, _sptraderapi.CTORATstpSPInputExerciseActionField_InvestorID_set)

	# 报单操作引用
    __swig_setmethods__["ExerciseActionRef"] = _sptraderapi.CTORATstpSPInputExerciseActionField_ExerciseActionRef_set
    __swig_getmethods__["ExerciseActionRef"] = _sptraderapi.CTORATstpSPInputExerciseActionField_ExerciseActionRef_get
    if _newclass:
        ExerciseActionRef = _swig_property(_sptraderapi.CTORATstpSPInputExerciseActionField_ExerciseActionRef_get, _sptraderapi.CTORATstpSPInputExerciseActionField_ExerciseActionRef_set)

	# 报单引用
    __swig_setmethods__["ExerciseRef"] = _sptraderapi.CTORATstpSPInputExerciseActionField_ExerciseRef_set
    __swig_getmethods__["ExerciseRef"] = _sptraderapi.CTORATstpSPInputExerciseActionField_ExerciseRef_get
    if _newclass:
        ExerciseRef = _swig_property(_sptraderapi.CTORATstpSPInputExerciseActionField_ExerciseRef_get, _sptraderapi.CTORATstpSPInputExerciseActionField_ExerciseRef_set)

	# 前置编号
    __swig_setmethods__["FrontID"] = _sptraderapi.CTORATstpSPInputExerciseActionField_FrontID_set
    __swig_getmethods__["FrontID"] = _sptraderapi.CTORATstpSPInputExerciseActionField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_sptraderapi.CTORATstpSPInputExerciseActionField_FrontID_get, _sptraderapi.CTORATstpSPInputExerciseActionField_FrontID_set)

	# 会话编号
    __swig_setmethods__["SessionID"] = _sptraderapi.CTORATstpSPInputExerciseActionField_SessionID_set
    __swig_getmethods__["SessionID"] = _sptraderapi.CTORATstpSPInputExerciseActionField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_sptraderapi.CTORATstpSPInputExerciseActionField_SessionID_get, _sptraderapi.CTORATstpSPInputExerciseActionField_SessionID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPInputExerciseActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPInputExerciseActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPInputExerciseActionField_ExchangeID_get, _sptraderapi.CTORATstpSPInputExerciseActionField_ExchangeID_set)

	# 全系统的唯一报单编号。
    __swig_setmethods__["ExerciseSysID"] = _sptraderapi.CTORATstpSPInputExerciseActionField_ExerciseSysID_set
    __swig_getmethods__["ExerciseSysID"] = _sptraderapi.CTORATstpSPInputExerciseActionField_ExerciseSysID_get
    if _newclass:
        ExerciseSysID = _swig_property(_sptraderapi.CTORATstpSPInputExerciseActionField_ExerciseSysID_get, _sptraderapi.CTORATstpSPInputExerciseActionField_ExerciseSysID_set)

	# 操作标志
    __swig_setmethods__["ExerciseActionFlag"] = _sptraderapi.CTORATstpSPInputExerciseActionField_ExerciseActionFlag_set
    __swig_getmethods__["ExerciseActionFlag"] = _sptraderapi.CTORATstpSPInputExerciseActionField_ExerciseActionFlag_get
    if _newclass:
        ExerciseActionFlag = _swig_property(_sptraderapi.CTORATstpSPInputExerciseActionField_ExerciseActionFlag_get, _sptraderapi.CTORATstpSPInputExerciseActionField_ExerciseActionFlag_set)

	# 合约在系统中的编号
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPInputExerciseActionField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPInputExerciseActionField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPInputExerciseActionField_SecurityID_get, _sptraderapi.CTORATstpSPInputExerciseActionField_SecurityID_set)

	# IP地址
    __swig_setmethods__["IPAddress"] = _sptraderapi.CTORATstpSPInputExerciseActionField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _sptraderapi.CTORATstpSPInputExerciseActionField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_sptraderapi.CTORATstpSPInputExerciseActionField_IPAddress_get, _sptraderapi.CTORATstpSPInputExerciseActionField_IPAddress_set)

	# Mac地址
    __swig_setmethods__["MacAddress"] = _sptraderapi.CTORATstpSPInputExerciseActionField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _sptraderapi.CTORATstpSPInputExerciseActionField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_sptraderapi.CTORATstpSPInputExerciseActionField_MacAddress_get, _sptraderapi.CTORATstpSPInputExerciseActionField_MacAddress_set)

	# 全系统的唯一报单编号。
    __swig_setmethods__["CancelExerciseLocalID"] = _sptraderapi.CTORATstpSPInputExerciseActionField_CancelExerciseLocalID_set
    __swig_getmethods__["CancelExerciseLocalID"] = _sptraderapi.CTORATstpSPInputExerciseActionField_CancelExerciseLocalID_get
    if _newclass:
        CancelExerciseLocalID = _swig_property(_sptraderapi.CTORATstpSPInputExerciseActionField_CancelExerciseLocalID_get, _sptraderapi.CTORATstpSPInputExerciseActionField_CancelExerciseLocalID_set)

	# 终端信息
    __swig_setmethods__["TerminalInfo"] = _sptraderapi.CTORATstpSPInputExerciseActionField_TerminalInfo_set
    __swig_getmethods__["TerminalInfo"] = _sptraderapi.CTORATstpSPInputExerciseActionField_TerminalInfo_get
    if _newclass:
        TerminalInfo = _swig_property(_sptraderapi.CTORATstpSPInputExerciseActionField_TerminalInfo_get, _sptraderapi.CTORATstpSPInputExerciseActionField_TerminalInfo_set)

	# 长字符串附加信息
    __swig_setmethods__["BInfo"] = _sptraderapi.CTORATstpSPInputExerciseActionField_BInfo_set
    __swig_getmethods__["BInfo"] = _sptraderapi.CTORATstpSPInputExerciseActionField_BInfo_get
    if _newclass:
        BInfo = _swig_property(_sptraderapi.CTORATstpSPInputExerciseActionField_BInfo_get, _sptraderapi.CTORATstpSPInputExerciseActionField_BInfo_set)

	# 短字符串附加信息
    __swig_setmethods__["SInfo"] = _sptraderapi.CTORATstpSPInputExerciseActionField_SInfo_set
    __swig_getmethods__["SInfo"] = _sptraderapi.CTORATstpSPInputExerciseActionField_SInfo_get
    if _newclass:
        SInfo = _swig_property(_sptraderapi.CTORATstpSPInputExerciseActionField_SInfo_get, _sptraderapi.CTORATstpSPInputExerciseActionField_SInfo_set)

	# 整形附加信息
    __swig_setmethods__["IInfo"] = _sptraderapi.CTORATstpSPInputExerciseActionField_IInfo_set
    __swig_getmethods__["IInfo"] = _sptraderapi.CTORATstpSPInputExerciseActionField_IInfo_get
    if _newclass:
        IInfo = _swig_property(_sptraderapi.CTORATstpSPInputExerciseActionField_IInfo_get, _sptraderapi.CTORATstpSPInputExerciseActionField_IInfo_set)

	# 委托方式
    __swig_setmethods__["Operway"] = _sptraderapi.CTORATstpSPInputExerciseActionField_Operway_set
    __swig_getmethods__["Operway"] = _sptraderapi.CTORATstpSPInputExerciseActionField_Operway_get
    if _newclass:
        Operway = _swig_property(_sptraderapi.CTORATstpSPInputExerciseActionField_Operway_get, _sptraderapi.CTORATstpSPInputExerciseActionField_Operway_set)

	# 硬盘序列号
    __swig_setmethods__["HDSerial"] = _sptraderapi.CTORATstpSPInputExerciseActionField_HDSerial_set
    __swig_getmethods__["HDSerial"] = _sptraderapi.CTORATstpSPInputExerciseActionField_HDSerial_get
    if _newclass:
        HDSerial = _swig_property(_sptraderapi.CTORATstpSPInputExerciseActionField_HDSerial_get, _sptraderapi.CTORATstpSPInputExerciseActionField_HDSerial_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPInputExerciseActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPInputExerciseActionField
    __del__ = lambda self: None
CTORATstpSPInputExerciseActionField_swigregister = _sptraderapi.CTORATstpSPInputExerciseActionField_swigregister
CTORATstpSPInputExerciseActionField_swigregister(CTORATstpSPInputExerciseActionField)




#########################################输入锁定############################################
class CTORATstpSPInputLockField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPInputLockField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPInputLockField, name)
    __repr__ = _swig_repr

	# 合约在系统中的编号
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPInputLockField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPInputLockField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPInputLockField_SecurityID_get, _sptraderapi.CTORATstpSPInputLockField_SecurityID_set)

	# 投资者说明的对锁定的唯一引用
    __swig_setmethods__["LockRef"] = _sptraderapi.CTORATstpSPInputLockField_LockRef_set
    __swig_getmethods__["LockRef"] = _sptraderapi.CTORATstpSPInputLockField_LockRef_get
    if _newclass:
        LockRef = _swig_property(_sptraderapi.CTORATstpSPInputLockField_LockRef_get, _sptraderapi.CTORATstpSPInputLockField_LockRef_set)

	# 锁定类别
    __swig_setmethods__["LockType"] = _sptraderapi.CTORATstpSPInputLockField_LockType_set
    __swig_getmethods__["LockType"] = _sptraderapi.CTORATstpSPInputLockField_LockType_get
    if _newclass:
        LockType = _swig_property(_sptraderapi.CTORATstpSPInputLockField_LockType_get, _sptraderapi.CTORATstpSPInputLockField_LockType_set)

	# 报单数量
    __swig_setmethods__["Volume"] = _sptraderapi.CTORATstpSPInputLockField_Volume_set
    __swig_getmethods__["Volume"] = _sptraderapi.CTORATstpSPInputLockField_Volume_get
    if _newclass:
        Volume = _swig_property(_sptraderapi.CTORATstpSPInputLockField_Volume_get, _sptraderapi.CTORATstpSPInputLockField_Volume_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPInputLockField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPInputLockField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPInputLockField_InvestorID_get, _sptraderapi.CTORATstpSPInputLockField_InvestorID_set)

	# 一个交易所的编号
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPInputLockField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPInputLockField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPInputLockField_ExchangeID_get, _sptraderapi.CTORATstpSPInputLockField_ExchangeID_set)

	# 目前该字段存放的是上证所和深圳的股东代码。
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPInputLockField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPInputLockField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPInputLockField_ShareholderID_get, _sptraderapi.CTORATstpSPInputLockField_ShareholderID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPInputLockField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPInputLockField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPInputLockField_BusinessUnitID_get, _sptraderapi.CTORATstpSPInputLockField_BusinessUnitID_set)

	# IP地址
    __swig_setmethods__["IPAddress"] = _sptraderapi.CTORATstpSPInputLockField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _sptraderapi.CTORATstpSPInputLockField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_sptraderapi.CTORATstpSPInputLockField_IPAddress_get, _sptraderapi.CTORATstpSPInputLockField_IPAddress_set)

	# Mac地址
    __swig_setmethods__["MacAddress"] = _sptraderapi.CTORATstpSPInputLockField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _sptraderapi.CTORATstpSPInputLockField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_sptraderapi.CTORATstpSPInputLockField_MacAddress_get, _sptraderapi.CTORATstpSPInputLockField_MacAddress_set)

	# 终端信息
    __swig_setmethods__["TerminalInfo"] = _sptraderapi.CTORATstpSPInputLockField_TerminalInfo_set
    __swig_getmethods__["TerminalInfo"] = _sptraderapi.CTORATstpSPInputLockField_TerminalInfo_get
    if _newclass:
        TerminalInfo = _swig_property(_sptraderapi.CTORATstpSPInputLockField_TerminalInfo_get, _sptraderapi.CTORATstpSPInputLockField_TerminalInfo_set)

	# 锁定编号
    __swig_setmethods__["LockSysID"] = _sptraderapi.CTORATstpSPInputLockField_LockSysID_set
    __swig_getmethods__["LockSysID"] = _sptraderapi.CTORATstpSPInputLockField_LockSysID_get
    if _newclass:
        LockSysID = _swig_property(_sptraderapi.CTORATstpSPInputLockField_LockSysID_get, _sptraderapi.CTORATstpSPInputLockField_LockSysID_set)

	# 长字符串附加信息
    __swig_setmethods__["BInfo"] = _sptraderapi.CTORATstpSPInputLockField_BInfo_set
    __swig_getmethods__["BInfo"] = _sptraderapi.CTORATstpSPInputLockField_BInfo_get
    if _newclass:
        BInfo = _swig_property(_sptraderapi.CTORATstpSPInputLockField_BInfo_get, _sptraderapi.CTORATstpSPInputLockField_BInfo_set)

	# 短字符串附加信息
    __swig_setmethods__["SInfo"] = _sptraderapi.CTORATstpSPInputLockField_SInfo_set
    __swig_getmethods__["SInfo"] = _sptraderapi.CTORATstpSPInputLockField_SInfo_get
    if _newclass:
        SInfo = _swig_property(_sptraderapi.CTORATstpSPInputLockField_SInfo_get, _sptraderapi.CTORATstpSPInputLockField_SInfo_set)

	# 整形附加信息
    __swig_setmethods__["IInfo"] = _sptraderapi.CTORATstpSPInputLockField_IInfo_set
    __swig_getmethods__["IInfo"] = _sptraderapi.CTORATstpSPInputLockField_IInfo_get
    if _newclass:
        IInfo = _swig_property(_sptraderapi.CTORATstpSPInputLockField_IInfo_get, _sptraderapi.CTORATstpSPInputLockField_IInfo_set)

	# 委托方式
    __swig_setmethods__["Operway"] = _sptraderapi.CTORATstpSPInputLockField_Operway_set
    __swig_getmethods__["Operway"] = _sptraderapi.CTORATstpSPInputLockField_Operway_get
    if _newclass:
        Operway = _swig_property(_sptraderapi.CTORATstpSPInputLockField_Operway_get, _sptraderapi.CTORATstpSPInputLockField_Operway_set)

	# 硬盘序列号
    __swig_setmethods__["HDSerial"] = _sptraderapi.CTORATstpSPInputLockField_HDSerial_set
    __swig_getmethods__["HDSerial"] = _sptraderapi.CTORATstpSPInputLockField_HDSerial_get
    if _newclass:
        HDSerial = _swig_property(_sptraderapi.CTORATstpSPInputLockField_HDSerial_get, _sptraderapi.CTORATstpSPInputLockField_HDSerial_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPInputLockField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPInputLockField
    __del__ = lambda self: None
CTORATstpSPInputLockField_swigregister = _sptraderapi.CTORATstpSPInputLockField_swigregister
CTORATstpSPInputLockField_swigregister(CTORATstpSPInputLockField)




#########################################锁定委托############################################
class CTORATstpSPLockField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPLockField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPLockField, name)
    __repr__ = _swig_repr

	# 交易日
    __swig_setmethods__["TradingDay"] = _sptraderapi.CTORATstpSPLockField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _sptraderapi.CTORATstpSPLockField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_sptraderapi.CTORATstpSPLockField_TradingDay_get, _sptraderapi.CTORATstpSPLockField_TradingDay_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPLockField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPLockField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPLockField_ExchangeID_get, _sptraderapi.CTORATstpSPLockField_ExchangeID_set)

	# 合约在系统中的编号
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPLockField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPLockField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPLockField_SecurityID_get, _sptraderapi.CTORATstpSPLockField_SecurityID_set)

	# 前置编号
    __swig_setmethods__["FrontID"] = _sptraderapi.CTORATstpSPLockField_FrontID_set
    __swig_getmethods__["FrontID"] = _sptraderapi.CTORATstpSPLockField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_sptraderapi.CTORATstpSPLockField_FrontID_get, _sptraderapi.CTORATstpSPLockField_FrontID_set)

	# 每一位交易员或其它登录者登录系统获得的会话编号，当前时刻唯一
    __swig_setmethods__["SessionID"] = _sptraderapi.CTORATstpSPLockField_SessionID_set
    __swig_getmethods__["SessionID"] = _sptraderapi.CTORATstpSPLockField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_sptraderapi.CTORATstpSPLockField_SessionID_get, _sptraderapi.CTORATstpSPLockField_SessionID_set)

	# 投资者说明的对锁定的唯一引用
    __swig_setmethods__["LockRef"] = _sptraderapi.CTORATstpSPLockField_LockRef_set
    __swig_getmethods__["LockRef"] = _sptraderapi.CTORATstpSPLockField_LockRef_get
    if _newclass:
        LockRef = _swig_property(_sptraderapi.CTORATstpSPLockField_LockRef_get, _sptraderapi.CTORATstpSPLockField_LockRef_set)

	# 报单编号
    __swig_setmethods__["LockSysID"] = _sptraderapi.CTORATstpSPLockField_LockSysID_set
    __swig_getmethods__["LockSysID"] = _sptraderapi.CTORATstpSPLockField_LockSysID_get
    if _newclass:
        LockSysID = _swig_property(_sptraderapi.CTORATstpSPLockField_LockSysID_get, _sptraderapi.CTORATstpSPLockField_LockSysID_set)

	# 交易单元代码
    __swig_setmethods__["PbuID"] = _sptraderapi.CTORATstpSPLockField_PbuID_set
    __swig_getmethods__["PbuID"] = _sptraderapi.CTORATstpSPLockField_PbuID_get
    if _newclass:
        PbuID = _swig_property(_sptraderapi.CTORATstpSPLockField_PbuID_get, _sptraderapi.CTORATstpSPLockField_PbuID_set)

	# 本地报单顺序号
    __swig_setmethods__["LockLocalID"] = _sptraderapi.CTORATstpSPLockField_LockLocalID_set
    __swig_getmethods__["LockLocalID"] = _sptraderapi.CTORATstpSPLockField_LockLocalID_get
    if _newclass:
        LockLocalID = _swig_property(_sptraderapi.CTORATstpSPLockField_LockLocalID_get, _sptraderapi.CTORATstpSPLockField_LockLocalID_set)

	# 锁定类别
    __swig_setmethods__["LockType"] = _sptraderapi.CTORATstpSPLockField_LockType_set
    __swig_getmethods__["LockType"] = _sptraderapi.CTORATstpSPLockField_LockType_get
    if _newclass:
        LockType = _swig_property(_sptraderapi.CTORATstpSPLockField_LockType_get, _sptraderapi.CTORATstpSPLockField_LockType_set)

	# 报单数量
    __swig_setmethods__["Volume"] = _sptraderapi.CTORATstpSPLockField_Volume_set
    __swig_getmethods__["Volume"] = _sptraderapi.CTORATstpSPLockField_Volume_get
    if _newclass:
        Volume = _swig_property(_sptraderapi.CTORATstpSPLockField_Volume_get, _sptraderapi.CTORATstpSPLockField_Volume_set)

	# 交易所返回的撤单数量
    __swig_setmethods__["VolumeCanceled"] = _sptraderapi.CTORATstpSPLockField_VolumeCanceled_set
    __swig_getmethods__["VolumeCanceled"] = _sptraderapi.CTORATstpSPLockField_VolumeCanceled_get
    if _newclass:
        VolumeCanceled = _swig_property(_sptraderapi.CTORATstpSPLockField_VolumeCanceled_get, _sptraderapi.CTORATstpSPLockField_VolumeCanceled_set)

	# 请求编号
    __swig_setmethods__["RequestID"] = _sptraderapi.CTORATstpSPLockField_RequestID_set
    __swig_getmethods__["RequestID"] = _sptraderapi.CTORATstpSPLockField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_sptraderapi.CTORATstpSPLockField_RequestID_get, _sptraderapi.CTORATstpSPLockField_RequestID_set)

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPLockField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPLockField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPLockField_MarketID_get, _sptraderapi.CTORATstpSPLockField_MarketID_set)

	# 客户在系统中的编号，编号唯一且遵循交易所制定的编码规则
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPLockField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPLockField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPLockField_ShareholderID_get, _sptraderapi.CTORATstpSPLockField_ShareholderID_set)

	# 普通、信用、衍生品
    __swig_setmethods__["ShareholderIDType"] = _sptraderapi.CTORATstpSPLockField_ShareholderIDType_set
    __swig_getmethods__["ShareholderIDType"] = _sptraderapi.CTORATstpSPLockField_ShareholderIDType_get
    if _newclass:
        ShareholderIDType = _swig_property(_sptraderapi.CTORATstpSPLockField_ShareholderIDType_get, _sptraderapi.CTORATstpSPLockField_ShareholderIDType_set)

	# 锁定状态
    __swig_setmethods__["LockStatus"] = _sptraderapi.CTORATstpSPLockField_LockStatus_set
    __swig_getmethods__["LockStatus"] = _sptraderapi.CTORATstpSPLockField_LockStatus_get
    if _newclass:
        LockStatus = _swig_property(_sptraderapi.CTORATstpSPLockField_LockStatus_get, _sptraderapi.CTORATstpSPLockField_LockStatus_set)

	# 报单日期
    __swig_setmethods__["InsertDate"] = _sptraderapi.CTORATstpSPLockField_InsertDate_set
    __swig_getmethods__["InsertDate"] = _sptraderapi.CTORATstpSPLockField_InsertDate_get
    if _newclass:
        InsertDate = _swig_property(_sptraderapi.CTORATstpSPLockField_InsertDate_get, _sptraderapi.CTORATstpSPLockField_InsertDate_set)

	# 申报时间
    __swig_setmethods__["InsertTime"] = _sptraderapi.CTORATstpSPLockField_InsertTime_set
    __swig_getmethods__["InsertTime"] = _sptraderapi.CTORATstpSPLockField_InsertTime_get
    if _newclass:
        InsertTime = _swig_property(_sptraderapi.CTORATstpSPLockField_InsertTime_get, _sptraderapi.CTORATstpSPLockField_InsertTime_set)

	# 交易所接收时间
    __swig_setmethods__["AcceptTime"] = _sptraderapi.CTORATstpSPLockField_AcceptTime_set
    __swig_getmethods__["AcceptTime"] = _sptraderapi.CTORATstpSPLockField_AcceptTime_get
    if _newclass:
        AcceptTime = _swig_property(_sptraderapi.CTORATstpSPLockField_AcceptTime_get, _sptraderapi.CTORATstpSPLockField_AcceptTime_set)

	# 撤单时间
    __swig_setmethods__["CancelTime"] = _sptraderapi.CTORATstpSPLockField_CancelTime_set
    __swig_getmethods__["CancelTime"] = _sptraderapi.CTORATstpSPLockField_CancelTime_get
    if _newclass:
        CancelTime = _swig_property(_sptraderapi.CTORATstpSPLockField_CancelTime_get, _sptraderapi.CTORATstpSPLockField_CancelTime_set)

	# 交易所营业部编码
    __swig_setmethods__["BranchID"] = _sptraderapi.CTORATstpSPLockField_BranchID_set
    __swig_getmethods__["BranchID"] = _sptraderapi.CTORATstpSPLockField_BranchID_get
    if _newclass:
        BranchID = _swig_property(_sptraderapi.CTORATstpSPLockField_BranchID_get, _sptraderapi.CTORATstpSPLockField_BranchID_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPLockField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPLockField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPLockField_InvestorID_get, _sptraderapi.CTORATstpSPLockField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPLockField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPLockField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPLockField_BusinessUnitID_get, _sptraderapi.CTORATstpSPLockField_BusinessUnitID_set)

	# 报盘错误代码
    __swig_setmethods__["ErrorID"] = _sptraderapi.CTORATstpSPLockField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _sptraderapi.CTORATstpSPLockField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_sptraderapi.CTORATstpSPLockField_ErrorID_get, _sptraderapi.CTORATstpSPLockField_ErrorID_set)

	# 状态信息
    __swig_setmethods__["StatusMsg"] = _sptraderapi.CTORATstpSPLockField_StatusMsg_set
    __swig_getmethods__["StatusMsg"] = _sptraderapi.CTORATstpSPLockField_StatusMsg_get
    if _newclass:
        StatusMsg = _swig_property(_sptraderapi.CTORATstpSPLockField_StatusMsg_get, _sptraderapi.CTORATstpSPLockField_StatusMsg_set)

	# 申报操作员
    __swig_setmethods__["InsertUserID"] = _sptraderapi.CTORATstpSPLockField_InsertUserID_set
    __swig_getmethods__["InsertUserID"] = _sptraderapi.CTORATstpSPLockField_InsertUserID_get
    if _newclass:
        InsertUserID = _swig_property(_sptraderapi.CTORATstpSPLockField_InsertUserID_get, _sptraderapi.CTORATstpSPLockField_InsertUserID_set)

	# 撤销申报用户
    __swig_setmethods__["CancelUserID"] = _sptraderapi.CTORATstpSPLockField_CancelUserID_set
    __swig_getmethods__["CancelUserID"] = _sptraderapi.CTORATstpSPLockField_CancelUserID_get
    if _newclass:
        CancelUserID = _swig_property(_sptraderapi.CTORATstpSPLockField_CancelUserID_get, _sptraderapi.CTORATstpSPLockField_CancelUserID_set)

	# 现货仓位锁定流水号
    __swig_setmethods__["StockPositionLockSerial"] = _sptraderapi.CTORATstpSPLockField_StockPositionLockSerial_set
    __swig_getmethods__["StockPositionLockSerial"] = _sptraderapi.CTORATstpSPLockField_StockPositionLockSerial_get
    if _newclass:
        StockPositionLockSerial = _swig_property(_sptraderapi.CTORATstpSPLockField_StockPositionLockSerial_get, _sptraderapi.CTORATstpSPLockField_StockPositionLockSerial_set)

	# 现货系统仓位调拨流水号
    __swig_setmethods__["StockPositionSerial"] = _sptraderapi.CTORATstpSPLockField_StockPositionSerial_set
    __swig_getmethods__["StockPositionSerial"] = _sptraderapi.CTORATstpSPLockField_StockPositionSerial_get
    if _newclass:
        StockPositionSerial = _swig_property(_sptraderapi.CTORATstpSPLockField_StockPositionSerial_get, _sptraderapi.CTORATstpSPLockField_StockPositionSerial_set)

	# IP地址
    __swig_setmethods__["IPAddress"] = _sptraderapi.CTORATstpSPLockField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _sptraderapi.CTORATstpSPLockField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_sptraderapi.CTORATstpSPLockField_IPAddress_get, _sptraderapi.CTORATstpSPLockField_IPAddress_set)

	# Mac地址
    __swig_setmethods__["MacAddress"] = _sptraderapi.CTORATstpSPLockField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _sptraderapi.CTORATstpSPLockField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_sptraderapi.CTORATstpSPLockField_MacAddress_get, _sptraderapi.CTORATstpSPLockField_MacAddress_set)

	# 终端信息
    __swig_setmethods__["TerminalInfo"] = _sptraderapi.CTORATstpSPLockField_TerminalInfo_set
    __swig_getmethods__["TerminalInfo"] = _sptraderapi.CTORATstpSPLockField_TerminalInfo_get
    if _newclass:
        TerminalInfo = _swig_property(_sptraderapi.CTORATstpSPLockField_TerminalInfo_get, _sptraderapi.CTORATstpSPLockField_TerminalInfo_set)

	# 长字符串附加信息
    __swig_setmethods__["BInfo"] = _sptraderapi.CTORATstpSPLockField_BInfo_set
    __swig_getmethods__["BInfo"] = _sptraderapi.CTORATstpSPLockField_BInfo_get
    if _newclass:
        BInfo = _swig_property(_sptraderapi.CTORATstpSPLockField_BInfo_get, _sptraderapi.CTORATstpSPLockField_BInfo_set)

	# 短字符串附加信息
    __swig_setmethods__["SInfo"] = _sptraderapi.CTORATstpSPLockField_SInfo_set
    __swig_getmethods__["SInfo"] = _sptraderapi.CTORATstpSPLockField_SInfo_get
    if _newclass:
        SInfo = _swig_property(_sptraderapi.CTORATstpSPLockField_SInfo_get, _sptraderapi.CTORATstpSPLockField_SInfo_set)

	# 整形附加信息
    __swig_setmethods__["IInfo"] = _sptraderapi.CTORATstpSPLockField_IInfo_set
    __swig_getmethods__["IInfo"] = _sptraderapi.CTORATstpSPLockField_IInfo_get
    if _newclass:
        IInfo = _swig_property(_sptraderapi.CTORATstpSPLockField_IInfo_get, _sptraderapi.CTORATstpSPLockField_IInfo_set)

	# 记录序号(仅上证报盘使用)
    __swig_setmethods__["RecordNumber"] = _sptraderapi.CTORATstpSPLockField_RecordNumber_set
    __swig_getmethods__["RecordNumber"] = _sptraderapi.CTORATstpSPLockField_RecordNumber_get
    if _newclass:
        RecordNumber = _swig_property(_sptraderapi.CTORATstpSPLockField_RecordNumber_get, _sptraderapi.CTORATstpSPLockField_RecordNumber_set)

	# 委托方式
    __swig_setmethods__["Operway"] = _sptraderapi.CTORATstpSPLockField_Operway_set
    __swig_getmethods__["Operway"] = _sptraderapi.CTORATstpSPLockField_Operway_get
    if _newclass:
        Operway = _swig_property(_sptraderapi.CTORATstpSPLockField_Operway_get, _sptraderapi.CTORATstpSPLockField_Operway_set)

	# 硬盘序列号
    __swig_setmethods__["HDSerial"] = _sptraderapi.CTORATstpSPLockField_HDSerial_set
    __swig_getmethods__["HDSerial"] = _sptraderapi.CTORATstpSPLockField_HDSerial_get
    if _newclass:
        HDSerial = _swig_property(_sptraderapi.CTORATstpSPLockField_HDSerial_get, _sptraderapi.CTORATstpSPLockField_HDSerial_set)

	# 移动设备手机号
    __swig_setmethods__["Mobile"] = _sptraderapi.CTORATstpSPLockField_Mobile_set
    __swig_getmethods__["Mobile"] = _sptraderapi.CTORATstpSPLockField_Mobile_get
    if _newclass:
        Mobile = _swig_property(_sptraderapi.CTORATstpSPLockField_Mobile_get, _sptraderapi.CTORATstpSPLockField_Mobile_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPLockField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPLockField
    __del__ = lambda self: None
CTORATstpSPLockField_swigregister = _sptraderapi.CTORATstpSPLockField_swigregister
CTORATstpSPLockField_swigregister(CTORATstpSPLockField)




#########################################行权操作输入############################################
class CTORATstpSPInputLockActionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPInputLockActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPInputLockActionField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPInputLockActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPInputLockActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPInputLockActionField_InvestorID_get, _sptraderapi.CTORATstpSPInputLockActionField_InvestorID_set)

	# 锁定操作引用
    __swig_setmethods__["LockActionRef"] = _sptraderapi.CTORATstpSPInputLockActionField_LockActionRef_set
    __swig_getmethods__["LockActionRef"] = _sptraderapi.CTORATstpSPInputLockActionField_LockActionRef_get
    if _newclass:
        LockActionRef = _swig_property(_sptraderapi.CTORATstpSPInputLockActionField_LockActionRef_get, _sptraderapi.CTORATstpSPInputLockActionField_LockActionRef_set)

	# 锁定引用
    __swig_setmethods__["LockRef"] = _sptraderapi.CTORATstpSPInputLockActionField_LockRef_set
    __swig_getmethods__["LockRef"] = _sptraderapi.CTORATstpSPInputLockActionField_LockRef_get
    if _newclass:
        LockRef = _swig_property(_sptraderapi.CTORATstpSPInputLockActionField_LockRef_get, _sptraderapi.CTORATstpSPInputLockActionField_LockRef_set)

	# 前置编号
    __swig_setmethods__["FrontID"] = _sptraderapi.CTORATstpSPInputLockActionField_FrontID_set
    __swig_getmethods__["FrontID"] = _sptraderapi.CTORATstpSPInputLockActionField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_sptraderapi.CTORATstpSPInputLockActionField_FrontID_get, _sptraderapi.CTORATstpSPInputLockActionField_FrontID_set)

	# 会话编号
    __swig_setmethods__["SessionID"] = _sptraderapi.CTORATstpSPInputLockActionField_SessionID_set
    __swig_getmethods__["SessionID"] = _sptraderapi.CTORATstpSPInputLockActionField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_sptraderapi.CTORATstpSPInputLockActionField_SessionID_get, _sptraderapi.CTORATstpSPInputLockActionField_SessionID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPInputLockActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPInputLockActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPInputLockActionField_ExchangeID_get, _sptraderapi.CTORATstpSPInputLockActionField_ExchangeID_set)

	# 全系统的唯一报单编号。
    __swig_setmethods__["LockSysID"] = _sptraderapi.CTORATstpSPInputLockActionField_LockSysID_set
    __swig_getmethods__["LockSysID"] = _sptraderapi.CTORATstpSPInputLockActionField_LockSysID_get
    if _newclass:
        LockSysID = _swig_property(_sptraderapi.CTORATstpSPInputLockActionField_LockSysID_get, _sptraderapi.CTORATstpSPInputLockActionField_LockSysID_set)

	# 操作标志
    __swig_setmethods__["LockActionFlag"] = _sptraderapi.CTORATstpSPInputLockActionField_LockActionFlag_set
    __swig_getmethods__["LockActionFlag"] = _sptraderapi.CTORATstpSPInputLockActionField_LockActionFlag_get
    if _newclass:
        LockActionFlag = _swig_property(_sptraderapi.CTORATstpSPInputLockActionField_LockActionFlag_get, _sptraderapi.CTORATstpSPInputLockActionField_LockActionFlag_set)

	# 合约在系统中的编号
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPInputLockActionField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPInputLockActionField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPInputLockActionField_SecurityID_get, _sptraderapi.CTORATstpSPInputLockActionField_SecurityID_set)

	# IP地址
    __swig_setmethods__["IPAddress"] = _sptraderapi.CTORATstpSPInputLockActionField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _sptraderapi.CTORATstpSPInputLockActionField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_sptraderapi.CTORATstpSPInputLockActionField_IPAddress_get, _sptraderapi.CTORATstpSPInputLockActionField_IPAddress_set)

	# Mac地址
    __swig_setmethods__["MacAddress"] = _sptraderapi.CTORATstpSPInputLockActionField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _sptraderapi.CTORATstpSPInputLockActionField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_sptraderapi.CTORATstpSPInputLockActionField_MacAddress_get, _sptraderapi.CTORATstpSPInputLockActionField_MacAddress_set)

	# 全系统的唯一报单编号。
    __swig_setmethods__["CancelLockLocalID"] = _sptraderapi.CTORATstpSPInputLockActionField_CancelLockLocalID_set
    __swig_getmethods__["CancelLockLocalID"] = _sptraderapi.CTORATstpSPInputLockActionField_CancelLockLocalID_get
    if _newclass:
        CancelLockLocalID = _swig_property(_sptraderapi.CTORATstpSPInputLockActionField_CancelLockLocalID_get, _sptraderapi.CTORATstpSPInputLockActionField_CancelLockLocalID_set)

	# 终端信息
    __swig_setmethods__["TerminalInfo"] = _sptraderapi.CTORATstpSPInputLockActionField_TerminalInfo_set
    __swig_getmethods__["TerminalInfo"] = _sptraderapi.CTORATstpSPInputLockActionField_TerminalInfo_get
    if _newclass:
        TerminalInfo = _swig_property(_sptraderapi.CTORATstpSPInputLockActionField_TerminalInfo_get, _sptraderapi.CTORATstpSPInputLockActionField_TerminalInfo_set)

	# 长字符串附加信息
    __swig_setmethods__["BInfo"] = _sptraderapi.CTORATstpSPInputLockActionField_BInfo_set
    __swig_getmethods__["BInfo"] = _sptraderapi.CTORATstpSPInputLockActionField_BInfo_get
    if _newclass:
        BInfo = _swig_property(_sptraderapi.CTORATstpSPInputLockActionField_BInfo_get, _sptraderapi.CTORATstpSPInputLockActionField_BInfo_set)

	# 短字符串附加信息
    __swig_setmethods__["SInfo"] = _sptraderapi.CTORATstpSPInputLockActionField_SInfo_set
    __swig_getmethods__["SInfo"] = _sptraderapi.CTORATstpSPInputLockActionField_SInfo_get
    if _newclass:
        SInfo = _swig_property(_sptraderapi.CTORATstpSPInputLockActionField_SInfo_get, _sptraderapi.CTORATstpSPInputLockActionField_SInfo_set)

	# 整形附加信息
    __swig_setmethods__["IInfo"] = _sptraderapi.CTORATstpSPInputLockActionField_IInfo_set
    __swig_getmethods__["IInfo"] = _sptraderapi.CTORATstpSPInputLockActionField_IInfo_get
    if _newclass:
        IInfo = _swig_property(_sptraderapi.CTORATstpSPInputLockActionField_IInfo_get, _sptraderapi.CTORATstpSPInputLockActionField_IInfo_set)

	# 委托方式
    __swig_setmethods__["Operway"] = _sptraderapi.CTORATstpSPInputLockActionField_Operway_set
    __swig_getmethods__["Operway"] = _sptraderapi.CTORATstpSPInputLockActionField_Operway_get
    if _newclass:
        Operway = _swig_property(_sptraderapi.CTORATstpSPInputLockActionField_Operway_get, _sptraderapi.CTORATstpSPInputLockActionField_Operway_set)

	# 硬盘序列号
    __swig_setmethods__["HDSerial"] = _sptraderapi.CTORATstpSPInputLockActionField_HDSerial_set
    __swig_getmethods__["HDSerial"] = _sptraderapi.CTORATstpSPInputLockActionField_HDSerial_get
    if _newclass:
        HDSerial = _swig_property(_sptraderapi.CTORATstpSPInputLockActionField_HDSerial_get, _sptraderapi.CTORATstpSPInputLockActionField_HDSerial_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPInputLockActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPInputLockActionField
    __del__ = lambda self: None
CTORATstpSPInputLockActionField_swigregister = _sptraderapi.CTORATstpSPInputLockActionField_swigregister
CTORATstpSPInputLockActionField_swigregister(CTORATstpSPInputLockActionField)




#########################################证券处置输入############################################
class CTORATstpSPInputStockDisposalField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPInputStockDisposalField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPInputStockDisposalField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPInputStockDisposalField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPInputStockDisposalField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPInputStockDisposalField_InvestorID_get, _sptraderapi.CTORATstpSPInputStockDisposalField_InvestorID_set)

	# 个股期权标的合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPInputStockDisposalField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPInputStockDisposalField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPInputStockDisposalField_SecurityID_get, _sptraderapi.CTORATstpSPInputStockDisposalField_SecurityID_set)

	# 投资者说明的对证券处置的唯一引用
    __swig_setmethods__["StockDisposalRef"] = _sptraderapi.CTORATstpSPInputStockDisposalField_StockDisposalRef_set
    __swig_getmethods__["StockDisposalRef"] = _sptraderapi.CTORATstpSPInputStockDisposalField_StockDisposalRef_get
    if _newclass:
        StockDisposalRef = _swig_property(_sptraderapi.CTORATstpSPInputStockDisposalField_StockDisposalRef_get, _sptraderapi.CTORATstpSPInputStockDisposalField_StockDisposalRef_set)

	# 证券处置数量（个股单位为股，ETF单位为份）
    __swig_setmethods__["Volume"] = _sptraderapi.CTORATstpSPInputStockDisposalField_Volume_set
    __swig_getmethods__["Volume"] = _sptraderapi.CTORATstpSPInputStockDisposalField_Volume_get
    if _newclass:
        Volume = _swig_property(_sptraderapi.CTORATstpSPInputStockDisposalField_Volume_get, _sptraderapi.CTORATstpSPInputStockDisposalField_Volume_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPInputStockDisposalField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPInputStockDisposalField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPInputStockDisposalField_BusinessUnitID_get, _sptraderapi.CTORATstpSPInputStockDisposalField_BusinessUnitID_set)

	# 证券处置类别
    __swig_setmethods__["StockDisposalType"] = _sptraderapi.CTORATstpSPInputStockDisposalField_StockDisposalType_set
    __swig_getmethods__["StockDisposalType"] = _sptraderapi.CTORATstpSPInputStockDisposalField_StockDisposalType_get
    if _newclass:
        StockDisposalType = _swig_property(_sptraderapi.CTORATstpSPInputStockDisposalField_StockDisposalType_get, _sptraderapi.CTORATstpSPInputStockDisposalField_StockDisposalType_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPInputStockDisposalField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPInputStockDisposalField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPInputStockDisposalField_ExchangeID_get, _sptraderapi.CTORATstpSPInputStockDisposalField_ExchangeID_set)

	# 目前该字段存放的是上证所和深圳的股东代码。
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPInputStockDisposalField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPInputStockDisposalField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPInputStockDisposalField_ShareholderID_get, _sptraderapi.CTORATstpSPInputStockDisposalField_ShareholderID_set)

	# IP地址
    __swig_setmethods__["IPAddress"] = _sptraderapi.CTORATstpSPInputStockDisposalField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _sptraderapi.CTORATstpSPInputStockDisposalField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_sptraderapi.CTORATstpSPInputStockDisposalField_IPAddress_get, _sptraderapi.CTORATstpSPInputStockDisposalField_IPAddress_set)

	# Mac地址
    __swig_setmethods__["MacAddress"] = _sptraderapi.CTORATstpSPInputStockDisposalField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _sptraderapi.CTORATstpSPInputStockDisposalField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_sptraderapi.CTORATstpSPInputStockDisposalField_MacAddress_get, _sptraderapi.CTORATstpSPInputStockDisposalField_MacAddress_set)

	# 系统证券处置编号
    __swig_setmethods__["StockDisposalSysID"] = _sptraderapi.CTORATstpSPInputStockDisposalField_StockDisposalSysID_set
    __swig_getmethods__["StockDisposalSysID"] = _sptraderapi.CTORATstpSPInputStockDisposalField_StockDisposalSysID_get
    if _newclass:
        StockDisposalSysID = _swig_property(_sptraderapi.CTORATstpSPInputStockDisposalField_StockDisposalSysID_get, _sptraderapi.CTORATstpSPInputStockDisposalField_StockDisposalSysID_set)

	# 终端信息
    __swig_setmethods__["TerminalInfo"] = _sptraderapi.CTORATstpSPInputStockDisposalField_TerminalInfo_set
    __swig_getmethods__["TerminalInfo"] = _sptraderapi.CTORATstpSPInputStockDisposalField_TerminalInfo_get
    if _newclass:
        TerminalInfo = _swig_property(_sptraderapi.CTORATstpSPInputStockDisposalField_TerminalInfo_get, _sptraderapi.CTORATstpSPInputStockDisposalField_TerminalInfo_set)

	# 长字符串附加信息
    __swig_setmethods__["BInfo"] = _sptraderapi.CTORATstpSPInputStockDisposalField_BInfo_set
    __swig_getmethods__["BInfo"] = _sptraderapi.CTORATstpSPInputStockDisposalField_BInfo_get
    if _newclass:
        BInfo = _swig_property(_sptraderapi.CTORATstpSPInputStockDisposalField_BInfo_get, _sptraderapi.CTORATstpSPInputStockDisposalField_BInfo_set)

	# 短字符串附加信息
    __swig_setmethods__["SInfo"] = _sptraderapi.CTORATstpSPInputStockDisposalField_SInfo_set
    __swig_getmethods__["SInfo"] = _sptraderapi.CTORATstpSPInputStockDisposalField_SInfo_get
    if _newclass:
        SInfo = _swig_property(_sptraderapi.CTORATstpSPInputStockDisposalField_SInfo_get, _sptraderapi.CTORATstpSPInputStockDisposalField_SInfo_set)

	# 整形附加信息
    __swig_setmethods__["IInfo"] = _sptraderapi.CTORATstpSPInputStockDisposalField_IInfo_set
    __swig_getmethods__["IInfo"] = _sptraderapi.CTORATstpSPInputStockDisposalField_IInfo_get
    if _newclass:
        IInfo = _swig_property(_sptraderapi.CTORATstpSPInputStockDisposalField_IInfo_get, _sptraderapi.CTORATstpSPInputStockDisposalField_IInfo_set)

	# 委托方式
    __swig_setmethods__["Operway"] = _sptraderapi.CTORATstpSPInputStockDisposalField_Operway_set
    __swig_getmethods__["Operway"] = _sptraderapi.CTORATstpSPInputStockDisposalField_Operway_get
    if _newclass:
        Operway = _swig_property(_sptraderapi.CTORATstpSPInputStockDisposalField_Operway_get, _sptraderapi.CTORATstpSPInputStockDisposalField_Operway_set)

	# 硬盘序列号
    __swig_setmethods__["HDSerial"] = _sptraderapi.CTORATstpSPInputStockDisposalField_HDSerial_set
    __swig_getmethods__["HDSerial"] = _sptraderapi.CTORATstpSPInputStockDisposalField_HDSerial_get
    if _newclass:
        HDSerial = _swig_property(_sptraderapi.CTORATstpSPInputStockDisposalField_HDSerial_get, _sptraderapi.CTORATstpSPInputStockDisposalField_HDSerial_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPInputStockDisposalField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPInputStockDisposalField
    __del__ = lambda self: None
CTORATstpSPInputStockDisposalField_swigregister = _sptraderapi.CTORATstpSPInputStockDisposalField_swigregister
CTORATstpSPInputStockDisposalField_swigregister(CTORATstpSPInputStockDisposalField)




#########################################证券处置表############################################
class CTORATstpSPStockDisposalField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPStockDisposalField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPStockDisposalField, name)
    __repr__ = _swig_repr

	# 交易日
    __swig_setmethods__["TradingDay"] = _sptraderapi.CTORATstpSPStockDisposalField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _sptraderapi.CTORATstpSPStockDisposalField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_sptraderapi.CTORATstpSPStockDisposalField_TradingDay_get, _sptraderapi.CTORATstpSPStockDisposalField_TradingDay_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPStockDisposalField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPStockDisposalField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPStockDisposalField_ExchangeID_get, _sptraderapi.CTORATstpSPStockDisposalField_ExchangeID_set)

	# 个股期权标的合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPStockDisposalField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPStockDisposalField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPStockDisposalField_SecurityID_get, _sptraderapi.CTORATstpSPStockDisposalField_SecurityID_set)

	# 前置编号
    __swig_setmethods__["FrontID"] = _sptraderapi.CTORATstpSPStockDisposalField_FrontID_set
    __swig_getmethods__["FrontID"] = _sptraderapi.CTORATstpSPStockDisposalField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_sptraderapi.CTORATstpSPStockDisposalField_FrontID_get, _sptraderapi.CTORATstpSPStockDisposalField_FrontID_set)

	# 会话编号
    __swig_setmethods__["SessionID"] = _sptraderapi.CTORATstpSPStockDisposalField_SessionID_set
    __swig_getmethods__["SessionID"] = _sptraderapi.CTORATstpSPStockDisposalField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_sptraderapi.CTORATstpSPStockDisposalField_SessionID_get, _sptraderapi.CTORATstpSPStockDisposalField_SessionID_set)

	# 投资者说明的对证券处置的唯一引用
    __swig_setmethods__["StockDisposalRef"] = _sptraderapi.CTORATstpSPStockDisposalField_StockDisposalRef_set
    __swig_getmethods__["StockDisposalRef"] = _sptraderapi.CTORATstpSPStockDisposalField_StockDisposalRef_get
    if _newclass:
        StockDisposalRef = _swig_property(_sptraderapi.CTORATstpSPStockDisposalField_StockDisposalRef_get, _sptraderapi.CTORATstpSPStockDisposalField_StockDisposalRef_set)

	# 系统证券处置编号
    __swig_setmethods__["StockDisposalSysID"] = _sptraderapi.CTORATstpSPStockDisposalField_StockDisposalSysID_set
    __swig_getmethods__["StockDisposalSysID"] = _sptraderapi.CTORATstpSPStockDisposalField_StockDisposalSysID_get
    if _newclass:
        StockDisposalSysID = _swig_property(_sptraderapi.CTORATstpSPStockDisposalField_StockDisposalSysID_get, _sptraderapi.CTORATstpSPStockDisposalField_StockDisposalSysID_set)

	# 交易单元代码
    __swig_setmethods__["PbuID"] = _sptraderapi.CTORATstpSPStockDisposalField_PbuID_set
    __swig_getmethods__["PbuID"] = _sptraderapi.CTORATstpSPStockDisposalField_PbuID_get
    if _newclass:
        PbuID = _swig_property(_sptraderapi.CTORATstpSPStockDisposalField_PbuID_get, _sptraderapi.CTORATstpSPStockDisposalField_PbuID_set)

	# 本地证券处置编号
    __swig_setmethods__["StockDisposalLocalID"] = _sptraderapi.CTORATstpSPStockDisposalField_StockDisposalLocalID_set
    __swig_getmethods__["StockDisposalLocalID"] = _sptraderapi.CTORATstpSPStockDisposalField_StockDisposalLocalID_get
    if _newclass:
        StockDisposalLocalID = _swig_property(_sptraderapi.CTORATstpSPStockDisposalField_StockDisposalLocalID_get, _sptraderapi.CTORATstpSPStockDisposalField_StockDisposalLocalID_set)

	# 证券处置类别
    __swig_setmethods__["StockDisposalType"] = _sptraderapi.CTORATstpSPStockDisposalField_StockDisposalType_set
    __swig_getmethods__["StockDisposalType"] = _sptraderapi.CTORATstpSPStockDisposalField_StockDisposalType_get
    if _newclass:
        StockDisposalType = _swig_property(_sptraderapi.CTORATstpSPStockDisposalField_StockDisposalType_get, _sptraderapi.CTORATstpSPStockDisposalField_StockDisposalType_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPStockDisposalField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPStockDisposalField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPStockDisposalField_InvestorID_get, _sptraderapi.CTORATstpSPStockDisposalField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPStockDisposalField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPStockDisposalField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPStockDisposalField_BusinessUnitID_get, _sptraderapi.CTORATstpSPStockDisposalField_BusinessUnitID_set)

	# 证券处置数量
    __swig_setmethods__["Volume"] = _sptraderapi.CTORATstpSPStockDisposalField_Volume_set
    __swig_getmethods__["Volume"] = _sptraderapi.CTORATstpSPStockDisposalField_Volume_get
    if _newclass:
        Volume = _swig_property(_sptraderapi.CTORATstpSPStockDisposalField_Volume_get, _sptraderapi.CTORATstpSPStockDisposalField_Volume_set)

	# 证券处置撤销数量
    __swig_setmethods__["VolumeCanceled"] = _sptraderapi.CTORATstpSPStockDisposalField_VolumeCanceled_set
    __swig_getmethods__["VolumeCanceled"] = _sptraderapi.CTORATstpSPStockDisposalField_VolumeCanceled_get
    if _newclass:
        VolumeCanceled = _swig_property(_sptraderapi.CTORATstpSPStockDisposalField_VolumeCanceled_get, _sptraderapi.CTORATstpSPStockDisposalField_VolumeCanceled_set)

	# 市场代码
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPStockDisposalField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPStockDisposalField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPStockDisposalField_MarketID_get, _sptraderapi.CTORATstpSPStockDisposalField_MarketID_set)

	# 目前该字段存放的是上证所和深圳的股东代码。
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPStockDisposalField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPStockDisposalField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPStockDisposalField_ShareholderID_get, _sptraderapi.CTORATstpSPStockDisposalField_ShareholderID_set)

	# 普通、信用、衍生品
    __swig_setmethods__["ShareholderIDType"] = _sptraderapi.CTORATstpSPStockDisposalField_ShareholderIDType_set
    __swig_getmethods__["ShareholderIDType"] = _sptraderapi.CTORATstpSPStockDisposalField_ShareholderIDType_get
    if _newclass:
        ShareholderIDType = _swig_property(_sptraderapi.CTORATstpSPStockDisposalField_ShareholderIDType_get, _sptraderapi.CTORATstpSPStockDisposalField_ShareholderIDType_set)

	# 经纪公司部门代码
    __swig_setmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPStockDisposalField_DepartmentID_set
    __swig_getmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPStockDisposalField_DepartmentID_get
    if _newclass:
        DepartmentID = _swig_property(_sptraderapi.CTORATstpSPStockDisposalField_DepartmentID_get, _sptraderapi.CTORATstpSPStockDisposalField_DepartmentID_set)

	# 证券处置状态
    __swig_setmethods__["StockDisposalStatus"] = _sptraderapi.CTORATstpSPStockDisposalField_StockDisposalStatus_set
    __swig_getmethods__["StockDisposalStatus"] = _sptraderapi.CTORATstpSPStockDisposalField_StockDisposalStatus_get
    if _newclass:
        StockDisposalStatus = _swig_property(_sptraderapi.CTORATstpSPStockDisposalField_StockDisposalStatus_get, _sptraderapi.CTORATstpSPStockDisposalField_StockDisposalStatus_set)

	# 证券处置操作状态
    __swig_setmethods__["StockDisposalOperateStatus"] = _sptraderapi.CTORATstpSPStockDisposalField_StockDisposalOperateStatus_set
    __swig_getmethods__["StockDisposalOperateStatus"] = _sptraderapi.CTORATstpSPStockDisposalField_StockDisposalOperateStatus_get
    if _newclass:
        StockDisposalOperateStatus = _swig_property(_sptraderapi.CTORATstpSPStockDisposalField_StockDisposalOperateStatus_get, _sptraderapi.CTORATstpSPStockDisposalField_StockDisposalOperateStatus_set)

	# 状态信息
    __swig_setmethods__["StatusMsg"] = _sptraderapi.CTORATstpSPStockDisposalField_StatusMsg_set
    __swig_getmethods__["StatusMsg"] = _sptraderapi.CTORATstpSPStockDisposalField_StatusMsg_get
    if _newclass:
        StatusMsg = _swig_property(_sptraderapi.CTORATstpSPStockDisposalField_StatusMsg_get, _sptraderapi.CTORATstpSPStockDisposalField_StatusMsg_set)

	# 系统错误代码
    __swig_setmethods__["ErrorID"] = _sptraderapi.CTORATstpSPStockDisposalField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _sptraderapi.CTORATstpSPStockDisposalField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_sptraderapi.CTORATstpSPStockDisposalField_ErrorID_get, _sptraderapi.CTORATstpSPStockDisposalField_ErrorID_set)

	# 交易所为营业部分配的代码
    __swig_setmethods__["BranchID"] = _sptraderapi.CTORATstpSPStockDisposalField_BranchID_set
    __swig_getmethods__["BranchID"] = _sptraderapi.CTORATstpSPStockDisposalField_BranchID_get
    if _newclass:
        BranchID = _swig_property(_sptraderapi.CTORATstpSPStockDisposalField_BranchID_get, _sptraderapi.CTORATstpSPStockDisposalField_BranchID_set)

	# 报单申报用户
    __swig_setmethods__["InsertUserID"] = _sptraderapi.CTORATstpSPStockDisposalField_InsertUserID_set
    __swig_getmethods__["InsertUserID"] = _sptraderapi.CTORATstpSPStockDisposalField_InsertUserID_get
    if _newclass:
        InsertUserID = _swig_property(_sptraderapi.CTORATstpSPStockDisposalField_InsertUserID_get, _sptraderapi.CTORATstpSPStockDisposalField_InsertUserID_set)

	# 申报日期
    __swig_setmethods__["InsertDate"] = _sptraderapi.CTORATstpSPStockDisposalField_InsertDate_set
    __swig_getmethods__["InsertDate"] = _sptraderapi.CTORATstpSPStockDisposalField_InsertDate_get
    if _newclass:
        InsertDate = _swig_property(_sptraderapi.CTORATstpSPStockDisposalField_InsertDate_get, _sptraderapi.CTORATstpSPStockDisposalField_InsertDate_set)

	# 申报时间
    __swig_setmethods__["InsertTime"] = _sptraderapi.CTORATstpSPStockDisposalField_InsertTime_set
    __swig_getmethods__["InsertTime"] = _sptraderapi.CTORATstpSPStockDisposalField_InsertTime_get
    if _newclass:
        InsertTime = _swig_property(_sptraderapi.CTORATstpSPStockDisposalField_InsertTime_get, _sptraderapi.CTORATstpSPStockDisposalField_InsertTime_set)

	# 申报时间(毫秒)
    __swig_setmethods__["InsertMillisec"] = _sptraderapi.CTORATstpSPStockDisposalField_InsertMillisec_set
    __swig_getmethods__["InsertMillisec"] = _sptraderapi.CTORATstpSPStockDisposalField_InsertMillisec_get
    if _newclass:
        InsertMillisec = _swig_property(_sptraderapi.CTORATstpSPStockDisposalField_InsertMillisec_get, _sptraderapi.CTORATstpSPStockDisposalField_InsertMillisec_set)

	# 交易所接收时间
    __swig_setmethods__["AcceptTime"] = _sptraderapi.CTORATstpSPStockDisposalField_AcceptTime_set
    __swig_getmethods__["AcceptTime"] = _sptraderapi.CTORATstpSPStockDisposalField_AcceptTime_get
    if _newclass:
        AcceptTime = _swig_property(_sptraderapi.CTORATstpSPStockDisposalField_AcceptTime_get, _sptraderapi.CTORATstpSPStockDisposalField_AcceptTime_set)

	# 撤销时间
    __swig_setmethods__["CancelTime"] = _sptraderapi.CTORATstpSPStockDisposalField_CancelTime_set
    __swig_getmethods__["CancelTime"] = _sptraderapi.CTORATstpSPStockDisposalField_CancelTime_get
    if _newclass:
        CancelTime = _swig_property(_sptraderapi.CTORATstpSPStockDisposalField_CancelTime_get, _sptraderapi.CTORATstpSPStockDisposalField_CancelTime_set)

	# 撤销申报用户
    __swig_setmethods__["CancelUserID"] = _sptraderapi.CTORATstpSPStockDisposalField_CancelUserID_set
    __swig_getmethods__["CancelUserID"] = _sptraderapi.CTORATstpSPStockDisposalField_CancelUserID_get
    if _newclass:
        CancelUserID = _swig_property(_sptraderapi.CTORATstpSPStockDisposalField_CancelUserID_get, _sptraderapi.CTORATstpSPStockDisposalField_CancelUserID_set)

	# IP地址
    __swig_setmethods__["IPAddress"] = _sptraderapi.CTORATstpSPStockDisposalField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _sptraderapi.CTORATstpSPStockDisposalField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_sptraderapi.CTORATstpSPStockDisposalField_IPAddress_get, _sptraderapi.CTORATstpSPStockDisposalField_IPAddress_set)

	# Mac地址
    __swig_setmethods__["MacAddress"] = _sptraderapi.CTORATstpSPStockDisposalField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _sptraderapi.CTORATstpSPStockDisposalField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_sptraderapi.CTORATstpSPStockDisposalField_MacAddress_get, _sptraderapi.CTORATstpSPStockDisposalField_MacAddress_set)

	# 请求编号
    __swig_setmethods__["RequestID"] = _sptraderapi.CTORATstpSPStockDisposalField_RequestID_set
    __swig_getmethods__["RequestID"] = _sptraderapi.CTORATstpSPStockDisposalField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_sptraderapi.CTORATstpSPStockDisposalField_RequestID_get, _sptraderapi.CTORATstpSPStockDisposalField_RequestID_set)

	# 终端信息
    __swig_setmethods__["TerminalInfo"] = _sptraderapi.CTORATstpSPStockDisposalField_TerminalInfo_set
    __swig_getmethods__["TerminalInfo"] = _sptraderapi.CTORATstpSPStockDisposalField_TerminalInfo_get
    if _newclass:
        TerminalInfo = _swig_property(_sptraderapi.CTORATstpSPStockDisposalField_TerminalInfo_get, _sptraderapi.CTORATstpSPStockDisposalField_TerminalInfo_set)

	# 记录序号(仅上证报盘使用)
    __swig_setmethods__["RecordNumber"] = _sptraderapi.CTORATstpSPStockDisposalField_RecordNumber_set
    __swig_getmethods__["RecordNumber"] = _sptraderapi.CTORATstpSPStockDisposalField_RecordNumber_get
    if _newclass:
        RecordNumber = _swig_property(_sptraderapi.CTORATstpSPStockDisposalField_RecordNumber_get, _sptraderapi.CTORATstpSPStockDisposalField_RecordNumber_set)

	# 长字符串附加信息
    __swig_setmethods__["BInfo"] = _sptraderapi.CTORATstpSPStockDisposalField_BInfo_set
    __swig_getmethods__["BInfo"] = _sptraderapi.CTORATstpSPStockDisposalField_BInfo_get
    if _newclass:
        BInfo = _swig_property(_sptraderapi.CTORATstpSPStockDisposalField_BInfo_get, _sptraderapi.CTORATstpSPStockDisposalField_BInfo_set)

	# 短字符串附加信息
    __swig_setmethods__["SInfo"] = _sptraderapi.CTORATstpSPStockDisposalField_SInfo_set
    __swig_getmethods__["SInfo"] = _sptraderapi.CTORATstpSPStockDisposalField_SInfo_get
    if _newclass:
        SInfo = _swig_property(_sptraderapi.CTORATstpSPStockDisposalField_SInfo_get, _sptraderapi.CTORATstpSPStockDisposalField_SInfo_set)

	# 整形附加信息
    __swig_setmethods__["IInfo"] = _sptraderapi.CTORATstpSPStockDisposalField_IInfo_set
    __swig_getmethods__["IInfo"] = _sptraderapi.CTORATstpSPStockDisposalField_IInfo_get
    if _newclass:
        IInfo = _swig_property(_sptraderapi.CTORATstpSPStockDisposalField_IInfo_get, _sptraderapi.CTORATstpSPStockDisposalField_IInfo_set)

	# 委托方式
    __swig_setmethods__["Operway"] = _sptraderapi.CTORATstpSPStockDisposalField_Operway_set
    __swig_getmethods__["Operway"] = _sptraderapi.CTORATstpSPStockDisposalField_Operway_get
    if _newclass:
        Operway = _swig_property(_sptraderapi.CTORATstpSPStockDisposalField_Operway_get, _sptraderapi.CTORATstpSPStockDisposalField_Operway_set)

	# 硬盘序列号
    __swig_setmethods__["HDSerial"] = _sptraderapi.CTORATstpSPStockDisposalField_HDSerial_set
    __swig_getmethods__["HDSerial"] = _sptraderapi.CTORATstpSPStockDisposalField_HDSerial_get
    if _newclass:
        HDSerial = _swig_property(_sptraderapi.CTORATstpSPStockDisposalField_HDSerial_get, _sptraderapi.CTORATstpSPStockDisposalField_HDSerial_set)

	# 移动设备手机号
    __swig_setmethods__["Mobile"] = _sptraderapi.CTORATstpSPStockDisposalField_Mobile_set
    __swig_getmethods__["Mobile"] = _sptraderapi.CTORATstpSPStockDisposalField_Mobile_get
    if _newclass:
        Mobile = _swig_property(_sptraderapi.CTORATstpSPStockDisposalField_Mobile_get, _sptraderapi.CTORATstpSPStockDisposalField_Mobile_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPStockDisposalField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPStockDisposalField
    __del__ = lambda self: None
CTORATstpSPStockDisposalField_swigregister = _sptraderapi.CTORATstpSPStockDisposalField_swigregister
CTORATstpSPStockDisposalField_swigregister(CTORATstpSPStockDisposalField)




#########################################证券处置操作输入############################################
class CTORATstpSPInputStockDisposalActionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPInputStockDisposalActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPInputStockDisposalActionField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPInputStockDisposalActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPInputStockDisposalActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPInputStockDisposalActionField_InvestorID_get, _sptraderapi.CTORATstpSPInputStockDisposalActionField_InvestorID_set)

	# 证券处置操作引用
    __swig_setmethods__["StockDisposalActionRef"] = _sptraderapi.CTORATstpSPInputStockDisposalActionField_StockDisposalActionRef_set
    __swig_getmethods__["StockDisposalActionRef"] = _sptraderapi.CTORATstpSPInputStockDisposalActionField_StockDisposalActionRef_get
    if _newclass:
        StockDisposalActionRef = _swig_property(_sptraderapi.CTORATstpSPInputStockDisposalActionField_StockDisposalActionRef_get, _sptraderapi.CTORATstpSPInputStockDisposalActionField_StockDisposalActionRef_set)

	# 证券处置引用
    __swig_setmethods__["StockDisposalRef"] = _sptraderapi.CTORATstpSPInputStockDisposalActionField_StockDisposalRef_set
    __swig_getmethods__["StockDisposalRef"] = _sptraderapi.CTORATstpSPInputStockDisposalActionField_StockDisposalRef_get
    if _newclass:
        StockDisposalRef = _swig_property(_sptraderapi.CTORATstpSPInputStockDisposalActionField_StockDisposalRef_get, _sptraderapi.CTORATstpSPInputStockDisposalActionField_StockDisposalRef_set)

	# 前置编号
    __swig_setmethods__["FrontID"] = _sptraderapi.CTORATstpSPInputStockDisposalActionField_FrontID_set
    __swig_getmethods__["FrontID"] = _sptraderapi.CTORATstpSPInputStockDisposalActionField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_sptraderapi.CTORATstpSPInputStockDisposalActionField_FrontID_get, _sptraderapi.CTORATstpSPInputStockDisposalActionField_FrontID_set)

	# 会话编号
    __swig_setmethods__["SessionID"] = _sptraderapi.CTORATstpSPInputStockDisposalActionField_SessionID_set
    __swig_getmethods__["SessionID"] = _sptraderapi.CTORATstpSPInputStockDisposalActionField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_sptraderapi.CTORATstpSPInputStockDisposalActionField_SessionID_get, _sptraderapi.CTORATstpSPInputStockDisposalActionField_SessionID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPInputStockDisposalActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPInputStockDisposalActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPInputStockDisposalActionField_ExchangeID_get, _sptraderapi.CTORATstpSPInputStockDisposalActionField_ExchangeID_set)

	# 证券处置系统编号
    __swig_setmethods__["StockDisposalSysID"] = _sptraderapi.CTORATstpSPInputStockDisposalActionField_StockDisposalSysID_set
    __swig_getmethods__["StockDisposalSysID"] = _sptraderapi.CTORATstpSPInputStockDisposalActionField_StockDisposalSysID_get
    if _newclass:
        StockDisposalSysID = _swig_property(_sptraderapi.CTORATstpSPInputStockDisposalActionField_StockDisposalSysID_get, _sptraderapi.CTORATstpSPInputStockDisposalActionField_StockDisposalSysID_set)

	# 操作标志
    __swig_setmethods__["StockDisposalActionFlag"] = _sptraderapi.CTORATstpSPInputStockDisposalActionField_StockDisposalActionFlag_set
    __swig_getmethods__["StockDisposalActionFlag"] = _sptraderapi.CTORATstpSPInputStockDisposalActionField_StockDisposalActionFlag_get
    if _newclass:
        StockDisposalActionFlag = _swig_property(_sptraderapi.CTORATstpSPInputStockDisposalActionField_StockDisposalActionFlag_get, _sptraderapi.CTORATstpSPInputStockDisposalActionField_StockDisposalActionFlag_set)

	# 合约在系统中的编号
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPInputStockDisposalActionField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPInputStockDisposalActionField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPInputStockDisposalActionField_SecurityID_get, _sptraderapi.CTORATstpSPInputStockDisposalActionField_SecurityID_set)

	# IP地址
    __swig_setmethods__["IPAddress"] = _sptraderapi.CTORATstpSPInputStockDisposalActionField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _sptraderapi.CTORATstpSPInputStockDisposalActionField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_sptraderapi.CTORATstpSPInputStockDisposalActionField_IPAddress_get, _sptraderapi.CTORATstpSPInputStockDisposalActionField_IPAddress_set)

	# Mac地址
    __swig_setmethods__["MacAddress"] = _sptraderapi.CTORATstpSPInputStockDisposalActionField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _sptraderapi.CTORATstpSPInputStockDisposalActionField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_sptraderapi.CTORATstpSPInputStockDisposalActionField_MacAddress_get, _sptraderapi.CTORATstpSPInputStockDisposalActionField_MacAddress_set)

	# 全系统的唯一报单编号。
    __swig_setmethods__["CancelStockDisposalLocalID"] = _sptraderapi.CTORATstpSPInputStockDisposalActionField_CancelStockDisposalLocalID_set
    __swig_getmethods__["CancelStockDisposalLocalID"] = _sptraderapi.CTORATstpSPInputStockDisposalActionField_CancelStockDisposalLocalID_get
    if _newclass:
        CancelStockDisposalLocalID = _swig_property(_sptraderapi.CTORATstpSPInputStockDisposalActionField_CancelStockDisposalLocalID_get, _sptraderapi.CTORATstpSPInputStockDisposalActionField_CancelStockDisposalLocalID_set)

	# 终端信息
    __swig_setmethods__["TerminalInfo"] = _sptraderapi.CTORATstpSPInputStockDisposalActionField_TerminalInfo_set
    __swig_getmethods__["TerminalInfo"] = _sptraderapi.CTORATstpSPInputStockDisposalActionField_TerminalInfo_get
    if _newclass:
        TerminalInfo = _swig_property(_sptraderapi.CTORATstpSPInputStockDisposalActionField_TerminalInfo_get, _sptraderapi.CTORATstpSPInputStockDisposalActionField_TerminalInfo_set)

	# 长字符串附加信息
    __swig_setmethods__["BInfo"] = _sptraderapi.CTORATstpSPInputStockDisposalActionField_BInfo_set
    __swig_getmethods__["BInfo"] = _sptraderapi.CTORATstpSPInputStockDisposalActionField_BInfo_get
    if _newclass:
        BInfo = _swig_property(_sptraderapi.CTORATstpSPInputStockDisposalActionField_BInfo_get, _sptraderapi.CTORATstpSPInputStockDisposalActionField_BInfo_set)

	# 短字符串附加信息
    __swig_setmethods__["SInfo"] = _sptraderapi.CTORATstpSPInputStockDisposalActionField_SInfo_set
    __swig_getmethods__["SInfo"] = _sptraderapi.CTORATstpSPInputStockDisposalActionField_SInfo_get
    if _newclass:
        SInfo = _swig_property(_sptraderapi.CTORATstpSPInputStockDisposalActionField_SInfo_get, _sptraderapi.CTORATstpSPInputStockDisposalActionField_SInfo_set)

	# 整形附加信息
    __swig_setmethods__["IInfo"] = _sptraderapi.CTORATstpSPInputStockDisposalActionField_IInfo_set
    __swig_getmethods__["IInfo"] = _sptraderapi.CTORATstpSPInputStockDisposalActionField_IInfo_get
    if _newclass:
        IInfo = _swig_property(_sptraderapi.CTORATstpSPInputStockDisposalActionField_IInfo_get, _sptraderapi.CTORATstpSPInputStockDisposalActionField_IInfo_set)

	# 委托方式
    __swig_setmethods__["Operway"] = _sptraderapi.CTORATstpSPInputStockDisposalActionField_Operway_set
    __swig_getmethods__["Operway"] = _sptraderapi.CTORATstpSPInputStockDisposalActionField_Operway_get
    if _newclass:
        Operway = _swig_property(_sptraderapi.CTORATstpSPInputStockDisposalActionField_Operway_get, _sptraderapi.CTORATstpSPInputStockDisposalActionField_Operway_set)

	# 硬盘序列号
    __swig_setmethods__["HDSerial"] = _sptraderapi.CTORATstpSPInputStockDisposalActionField_HDSerial_set
    __swig_getmethods__["HDSerial"] = _sptraderapi.CTORATstpSPInputStockDisposalActionField_HDSerial_get
    if _newclass:
        HDSerial = _swig_property(_sptraderapi.CTORATstpSPInputStockDisposalActionField_HDSerial_get, _sptraderapi.CTORATstpSPInputStockDisposalActionField_HDSerial_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPInputStockDisposalActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPInputStockDisposalActionField
    __del__ = lambda self: None
CTORATstpSPInputStockDisposalActionField_swigregister = _sptraderapi.CTORATstpSPInputStockDisposalActionField_swigregister
CTORATstpSPInputStockDisposalActionField_swigregister(CTORATstpSPInputStockDisposalActionField)




#########################################组合委托输入############################################
class CTORATstpSPInputCombOrderField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPInputCombOrderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPInputCombOrderField, name)
    __repr__ = _swig_repr

	# 组合合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPInputCombOrderField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPInputCombOrderField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPInputCombOrderField_SecurityID_get, _sptraderapi.CTORATstpSPInputCombOrderField_SecurityID_set)

	# 投资者说明的对组合的唯一引用
    __swig_setmethods__["CombOrderRef"] = _sptraderapi.CTORATstpSPInputCombOrderField_CombOrderRef_set
    __swig_getmethods__["CombOrderRef"] = _sptraderapi.CTORATstpSPInputCombOrderField_CombOrderRef_get
    if _newclass:
        CombOrderRef = _swig_property(_sptraderapi.CTORATstpSPInputCombOrderField_CombOrderRef_get, _sptraderapi.CTORATstpSPInputCombOrderField_CombOrderRef_set)

	# 组合策略
    __swig_setmethods__["CombinationStrategy"] = _sptraderapi.CTORATstpSPInputCombOrderField_CombinationStrategy_set
    __swig_getmethods__["CombinationStrategy"] = _sptraderapi.CTORATstpSPInputCombOrderField_CombinationStrategy_get
    if _newclass:
        CombinationStrategy = _swig_property(_sptraderapi.CTORATstpSPInputCombOrderField_CombinationStrategy_get, _sptraderapi.CTORATstpSPInputCombOrderField_CombinationStrategy_set)

	# 组合报单类别
    __swig_setmethods__["CombDirection"] = _sptraderapi.CTORATstpSPInputCombOrderField_CombDirection_set
    __swig_getmethods__["CombDirection"] = _sptraderapi.CTORATstpSPInputCombOrderField_CombDirection_get
    if _newclass:
        CombDirection = _swig_property(_sptraderapi.CTORATstpSPInputCombOrderField_CombDirection_get, _sptraderapi.CTORATstpSPInputCombOrderField_CombDirection_set)

	# 交易所组合编码(拆分时必填)
    __swig_setmethods__["ExchangeCombID"] = _sptraderapi.CTORATstpSPInputCombOrderField_ExchangeCombID_set
    __swig_getmethods__["ExchangeCombID"] = _sptraderapi.CTORATstpSPInputCombOrderField_ExchangeCombID_get
    if _newclass:
        ExchangeCombID = _swig_property(_sptraderapi.CTORATstpSPInputCombOrderField_ExchangeCombID_get, _sptraderapi.CTORATstpSPInputCombOrderField_ExchangeCombID_set)

	# 报单数量
    __swig_setmethods__["Volume"] = _sptraderapi.CTORATstpSPInputCombOrderField_Volume_set
    __swig_getmethods__["Volume"] = _sptraderapi.CTORATstpSPInputCombOrderField_Volume_get
    if _newclass:
        Volume = _swig_property(_sptraderapi.CTORATstpSPInputCombOrderField_Volume_get, _sptraderapi.CTORATstpSPInputCombOrderField_Volume_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPInputCombOrderField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPInputCombOrderField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPInputCombOrderField_InvestorID_get, _sptraderapi.CTORATstpSPInputCombOrderField_InvestorID_set)

	# 一个交易所的编号
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPInputCombOrderField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPInputCombOrderField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPInputCombOrderField_ExchangeID_get, _sptraderapi.CTORATstpSPInputCombOrderField_ExchangeID_set)

	# 目前该字段存放的是上证所和深圳的股东代码
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPInputCombOrderField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPInputCombOrderField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPInputCombOrderField_ShareholderID_get, _sptraderapi.CTORATstpSPInputCombOrderField_ShareholderID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPInputCombOrderField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPInputCombOrderField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPInputCombOrderField_BusinessUnitID_get, _sptraderapi.CTORATstpSPInputCombOrderField_BusinessUnitID_set)

	# 资金账户
    __swig_setmethods__["AccountID"] = _sptraderapi.CTORATstpSPInputCombOrderField_AccountID_set
    __swig_getmethods__["AccountID"] = _sptraderapi.CTORATstpSPInputCombOrderField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_sptraderapi.CTORATstpSPInputCombOrderField_AccountID_get, _sptraderapi.CTORATstpSPInputCombOrderField_AccountID_set)

	# IP地址（已废弃）
    __swig_setmethods__["IPAddress"] = _sptraderapi.CTORATstpSPInputCombOrderField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _sptraderapi.CTORATstpSPInputCombOrderField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_sptraderapi.CTORATstpSPInputCombOrderField_IPAddress_get, _sptraderapi.CTORATstpSPInputCombOrderField_IPAddress_set)

	# Mac地址（已废弃）
    __swig_setmethods__["MacAddress"] = _sptraderapi.CTORATstpSPInputCombOrderField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _sptraderapi.CTORATstpSPInputCombOrderField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_sptraderapi.CTORATstpSPInputCombOrderField_MacAddress_get, _sptraderapi.CTORATstpSPInputCombOrderField_MacAddress_set)

	# 终端信息
    __swig_setmethods__["TerminalInfo"] = _sptraderapi.CTORATstpSPInputCombOrderField_TerminalInfo_set
    __swig_getmethods__["TerminalInfo"] = _sptraderapi.CTORATstpSPInputCombOrderField_TerminalInfo_get
    if _newclass:
        TerminalInfo = _swig_property(_sptraderapi.CTORATstpSPInputCombOrderField_TerminalInfo_get, _sptraderapi.CTORATstpSPInputCombOrderField_TerminalInfo_set)

	# 组合系统编号
    __swig_setmethods__["CombOrderSysID"] = _sptraderapi.CTORATstpSPInputCombOrderField_CombOrderSysID_set
    __swig_getmethods__["CombOrderSysID"] = _sptraderapi.CTORATstpSPInputCombOrderField_CombOrderSysID_get
    if _newclass:
        CombOrderSysID = _swig_property(_sptraderapi.CTORATstpSPInputCombOrderField_CombOrderSysID_get, _sptraderapi.CTORATstpSPInputCombOrderField_CombOrderSysID_set)

	# 长字符串附加信息
    __swig_setmethods__["BInfo"] = _sptraderapi.CTORATstpSPInputCombOrderField_BInfo_set
    __swig_getmethods__["BInfo"] = _sptraderapi.CTORATstpSPInputCombOrderField_BInfo_get
    if _newclass:
        BInfo = _swig_property(_sptraderapi.CTORATstpSPInputCombOrderField_BInfo_get, _sptraderapi.CTORATstpSPInputCombOrderField_BInfo_set)

	# 短字符串附加信息
    __swig_setmethods__["SInfo"] = _sptraderapi.CTORATstpSPInputCombOrderField_SInfo_set
    __swig_getmethods__["SInfo"] = _sptraderapi.CTORATstpSPInputCombOrderField_SInfo_get
    if _newclass:
        SInfo = _swig_property(_sptraderapi.CTORATstpSPInputCombOrderField_SInfo_get, _sptraderapi.CTORATstpSPInputCombOrderField_SInfo_set)

	# 整形附加信息
    __swig_setmethods__["IInfo"] = _sptraderapi.CTORATstpSPInputCombOrderField_IInfo_set
    __swig_getmethods__["IInfo"] = _sptraderapi.CTORATstpSPInputCombOrderField_IInfo_get
    if _newclass:
        IInfo = _swig_property(_sptraderapi.CTORATstpSPInputCombOrderField_IInfo_get, _sptraderapi.CTORATstpSPInputCombOrderField_IInfo_set)

	# 委托方式
    __swig_setmethods__["Operway"] = _sptraderapi.CTORATstpSPInputCombOrderField_Operway_set
    __swig_getmethods__["Operway"] = _sptraderapi.CTORATstpSPInputCombOrderField_Operway_get
    if _newclass:
        Operway = _swig_property(_sptraderapi.CTORATstpSPInputCombOrderField_Operway_get, _sptraderapi.CTORATstpSPInputCombOrderField_Operway_set)

	# 硬盘序列号
    __swig_setmethods__["HDSerial"] = _sptraderapi.CTORATstpSPInputCombOrderField_HDSerial_set
    __swig_getmethods__["HDSerial"] = _sptraderapi.CTORATstpSPInputCombOrderField_HDSerial_get
    if _newclass:
        HDSerial = _swig_property(_sptraderapi.CTORATstpSPInputCombOrderField_HDSerial_get, _sptraderapi.CTORATstpSPInputCombOrderField_HDSerial_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPInputCombOrderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPInputCombOrderField
    __del__ = lambda self: None
CTORATstpSPInputCombOrderField_swigregister = _sptraderapi.CTORATstpSPInputCombOrderField_swigregister
CTORATstpSPInputCombOrderField_swigregister(CTORATstpSPInputCombOrderField)




#########################################证券组合委托############################################
class CTORATstpSPCombOrderField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPCombOrderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPCombOrderField, name)
    __repr__ = _swig_repr

	# 交易日
    __swig_setmethods__["TradingDay"] = _sptraderapi.CTORATstpSPCombOrderField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _sptraderapi.CTORATstpSPCombOrderField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_sptraderapi.CTORATstpSPCombOrderField_TradingDay_get, _sptraderapi.CTORATstpSPCombOrderField_TradingDay_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPCombOrderField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPCombOrderField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPCombOrderField_ExchangeID_get, _sptraderapi.CTORATstpSPCombOrderField_ExchangeID_set)

	# 组合合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPCombOrderField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPCombOrderField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPCombOrderField_SecurityID_get, _sptraderapi.CTORATstpSPCombOrderField_SecurityID_set)

	# 组合策略
    __swig_setmethods__["CombinationStrategy"] = _sptraderapi.CTORATstpSPCombOrderField_CombinationStrategy_set
    __swig_getmethods__["CombinationStrategy"] = _sptraderapi.CTORATstpSPCombOrderField_CombinationStrategy_get
    if _newclass:
        CombinationStrategy = _swig_property(_sptraderapi.CTORATstpSPCombOrderField_CombinationStrategy_get, _sptraderapi.CTORATstpSPCombOrderField_CombinationStrategy_set)

	# 组合报单类别
    __swig_setmethods__["CombDirection"] = _sptraderapi.CTORATstpSPCombOrderField_CombDirection_set
    __swig_getmethods__["CombDirection"] = _sptraderapi.CTORATstpSPCombOrderField_CombDirection_get
    if _newclass:
        CombDirection = _swig_property(_sptraderapi.CTORATstpSPCombOrderField_CombDirection_get, _sptraderapi.CTORATstpSPCombOrderField_CombDirection_set)

	# 前置编号
    __swig_setmethods__["FrontID"] = _sptraderapi.CTORATstpSPCombOrderField_FrontID_set
    __swig_getmethods__["FrontID"] = _sptraderapi.CTORATstpSPCombOrderField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_sptraderapi.CTORATstpSPCombOrderField_FrontID_get, _sptraderapi.CTORATstpSPCombOrderField_FrontID_set)

	# 每一位交易员或其它登录者登录系统获得的会话编号，当前时刻唯一
    __swig_setmethods__["SessionID"] = _sptraderapi.CTORATstpSPCombOrderField_SessionID_set
    __swig_getmethods__["SessionID"] = _sptraderapi.CTORATstpSPCombOrderField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_sptraderapi.CTORATstpSPCombOrderField_SessionID_get, _sptraderapi.CTORATstpSPCombOrderField_SessionID_set)

	# 投资者说明的对组合的唯一引用
    __swig_setmethods__["CombOrderRef"] = _sptraderapi.CTORATstpSPCombOrderField_CombOrderRef_set
    __swig_getmethods__["CombOrderRef"] = _sptraderapi.CTORATstpSPCombOrderField_CombOrderRef_get
    if _newclass:
        CombOrderRef = _swig_property(_sptraderapi.CTORATstpSPCombOrderField_CombOrderRef_get, _sptraderapi.CTORATstpSPCombOrderField_CombOrderRef_set)

	# 组合系统编号
    __swig_setmethods__["CombOrderSysID"] = _sptraderapi.CTORATstpSPCombOrderField_CombOrderSysID_set
    __swig_getmethods__["CombOrderSysID"] = _sptraderapi.CTORATstpSPCombOrderField_CombOrderSysID_get
    if _newclass:
        CombOrderSysID = _swig_property(_sptraderapi.CTORATstpSPCombOrderField_CombOrderSysID_get, _sptraderapi.CTORATstpSPCombOrderField_CombOrderSysID_set)

	# 交易单元代码
    __swig_setmethods__["PbuID"] = _sptraderapi.CTORATstpSPCombOrderField_PbuID_set
    __swig_getmethods__["PbuID"] = _sptraderapi.CTORATstpSPCombOrderField_PbuID_get
    if _newclass:
        PbuID = _swig_property(_sptraderapi.CTORATstpSPCombOrderField_PbuID_get, _sptraderapi.CTORATstpSPCombOrderField_PbuID_set)

	# 本地组合报单编号
    __swig_setmethods__["CombOrderLocalID"] = _sptraderapi.CTORATstpSPCombOrderField_CombOrderLocalID_set
    __swig_getmethods__["CombOrderLocalID"] = _sptraderapi.CTORATstpSPCombOrderField_CombOrderLocalID_get
    if _newclass:
        CombOrderLocalID = _swig_property(_sptraderapi.CTORATstpSPCombOrderField_CombOrderLocalID_get, _sptraderapi.CTORATstpSPCombOrderField_CombOrderLocalID_set)

	# 报单数量
    __swig_setmethods__["Volume"] = _sptraderapi.CTORATstpSPCombOrderField_Volume_set
    __swig_getmethods__["Volume"] = _sptraderapi.CTORATstpSPCombOrderField_Volume_get
    if _newclass:
        Volume = _swig_property(_sptraderapi.CTORATstpSPCombOrderField_Volume_get, _sptraderapi.CTORATstpSPCombOrderField_Volume_set)

	# 交易所返回的撤单数量
    __swig_setmethods__["VolumeCanceled"] = _sptraderapi.CTORATstpSPCombOrderField_VolumeCanceled_set
    __swig_getmethods__["VolumeCanceled"] = _sptraderapi.CTORATstpSPCombOrderField_VolumeCanceled_get
    if _newclass:
        VolumeCanceled = _swig_property(_sptraderapi.CTORATstpSPCombOrderField_VolumeCanceled_get, _sptraderapi.CTORATstpSPCombOrderField_VolumeCanceled_set)

	# 请求编号
    __swig_setmethods__["RequestID"] = _sptraderapi.CTORATstpSPCombOrderField_RequestID_set
    __swig_getmethods__["RequestID"] = _sptraderapi.CTORATstpSPCombOrderField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_sptraderapi.CTORATstpSPCombOrderField_RequestID_get, _sptraderapi.CTORATstpSPCombOrderField_RequestID_set)

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPCombOrderField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPCombOrderField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPCombOrderField_MarketID_get, _sptraderapi.CTORATstpSPCombOrderField_MarketID_set)

	# 客户在系统中的编号，编号唯一且遵循交易所制定的编码规则
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPCombOrderField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPCombOrderField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPCombOrderField_ShareholderID_get, _sptraderapi.CTORATstpSPCombOrderField_ShareholderID_set)

	# 普通、信用、衍生品
    __swig_setmethods__["ShareholderIDType"] = _sptraderapi.CTORATstpSPCombOrderField_ShareholderIDType_set
    __swig_getmethods__["ShareholderIDType"] = _sptraderapi.CTORATstpSPCombOrderField_ShareholderIDType_get
    if _newclass:
        ShareholderIDType = _swig_property(_sptraderapi.CTORATstpSPCombOrderField_ShareholderIDType_get, _sptraderapi.CTORATstpSPCombOrderField_ShareholderIDType_set)

	# 组合委托状态
    __swig_setmethods__["CombOrderStatus"] = _sptraderapi.CTORATstpSPCombOrderField_CombOrderStatus_set
    __swig_getmethods__["CombOrderStatus"] = _sptraderapi.CTORATstpSPCombOrderField_CombOrderStatus_get
    if _newclass:
        CombOrderStatus = _swig_property(_sptraderapi.CTORATstpSPCombOrderField_CombOrderStatus_get, _sptraderapi.CTORATstpSPCombOrderField_CombOrderStatus_set)

	# 组合委托操作状态
    __swig_setmethods__["CombOrderOperateStatus"] = _sptraderapi.CTORATstpSPCombOrderField_CombOrderOperateStatus_set
    __swig_getmethods__["CombOrderOperateStatus"] = _sptraderapi.CTORATstpSPCombOrderField_CombOrderOperateStatus_get
    if _newclass:
        CombOrderOperateStatus = _swig_property(_sptraderapi.CTORATstpSPCombOrderField_CombOrderOperateStatus_get, _sptraderapi.CTORATstpSPCombOrderField_CombOrderOperateStatus_set)

	# 经纪公司部门代码
    __swig_setmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPCombOrderField_DepartmentID_set
    __swig_getmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPCombOrderField_DepartmentID_get
    if _newclass:
        DepartmentID = _swig_property(_sptraderapi.CTORATstpSPCombOrderField_DepartmentID_get, _sptraderapi.CTORATstpSPCombOrderField_DepartmentID_set)

	# 资金账户
    __swig_setmethods__["AccountID"] = _sptraderapi.CTORATstpSPCombOrderField_AccountID_set
    __swig_getmethods__["AccountID"] = _sptraderapi.CTORATstpSPCombOrderField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_sptraderapi.CTORATstpSPCombOrderField_AccountID_get, _sptraderapi.CTORATstpSPCombOrderField_AccountID_set)

	# 币种
    __swig_setmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPCombOrderField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPCombOrderField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_sptraderapi.CTORATstpSPCombOrderField_CurrencyID_get, _sptraderapi.CTORATstpSPCombOrderField_CurrencyID_set)

	# 交易所组合编码
    __swig_setmethods__["ExchangeCombID"] = _sptraderapi.CTORATstpSPCombOrderField_ExchangeCombID_set
    __swig_getmethods__["ExchangeCombID"] = _sptraderapi.CTORATstpSPCombOrderField_ExchangeCombID_get
    if _newclass:
        ExchangeCombID = _swig_property(_sptraderapi.CTORATstpSPCombOrderField_ExchangeCombID_get, _sptraderapi.CTORATstpSPCombOrderField_ExchangeCombID_set)

	# 报单日期
    __swig_setmethods__["InsertDate"] = _sptraderapi.CTORATstpSPCombOrderField_InsertDate_set
    __swig_getmethods__["InsertDate"] = _sptraderapi.CTORATstpSPCombOrderField_InsertDate_get
    if _newclass:
        InsertDate = _swig_property(_sptraderapi.CTORATstpSPCombOrderField_InsertDate_get, _sptraderapi.CTORATstpSPCombOrderField_InsertDate_set)

	# 申报时间
    __swig_setmethods__["InsertTime"] = _sptraderapi.CTORATstpSPCombOrderField_InsertTime_set
    __swig_getmethods__["InsertTime"] = _sptraderapi.CTORATstpSPCombOrderField_InsertTime_get
    if _newclass:
        InsertTime = _swig_property(_sptraderapi.CTORATstpSPCombOrderField_InsertTime_get, _sptraderapi.CTORATstpSPCombOrderField_InsertTime_set)

	# 申报时间(毫秒)
    __swig_setmethods__["InsertMillisec"] = _sptraderapi.CTORATstpSPCombOrderField_InsertMillisec_set
    __swig_getmethods__["InsertMillisec"] = _sptraderapi.CTORATstpSPCombOrderField_InsertMillisec_get
    if _newclass:
        InsertMillisec = _swig_property(_sptraderapi.CTORATstpSPCombOrderField_InsertMillisec_get, _sptraderapi.CTORATstpSPCombOrderField_InsertMillisec_set)

	# 交易所接收时间
    __swig_setmethods__["AcceptTime"] = _sptraderapi.CTORATstpSPCombOrderField_AcceptTime_set
    __swig_getmethods__["AcceptTime"] = _sptraderapi.CTORATstpSPCombOrderField_AcceptTime_get
    if _newclass:
        AcceptTime = _swig_property(_sptraderapi.CTORATstpSPCombOrderField_AcceptTime_get, _sptraderapi.CTORATstpSPCombOrderField_AcceptTime_set)

	# 撤单时间
    __swig_setmethods__["CancelTime"] = _sptraderapi.CTORATstpSPCombOrderField_CancelTime_set
    __swig_getmethods__["CancelTime"] = _sptraderapi.CTORATstpSPCombOrderField_CancelTime_get
    if _newclass:
        CancelTime = _swig_property(_sptraderapi.CTORATstpSPCombOrderField_CancelTime_get, _sptraderapi.CTORATstpSPCombOrderField_CancelTime_set)

	# 交易所营业部编码
    __swig_setmethods__["BranchID"] = _sptraderapi.CTORATstpSPCombOrderField_BranchID_set
    __swig_getmethods__["BranchID"] = _sptraderapi.CTORATstpSPCombOrderField_BranchID_get
    if _newclass:
        BranchID = _swig_property(_sptraderapi.CTORATstpSPCombOrderField_BranchID_get, _sptraderapi.CTORATstpSPCombOrderField_BranchID_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPCombOrderField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPCombOrderField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPCombOrderField_InvestorID_get, _sptraderapi.CTORATstpSPCombOrderField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPCombOrderField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPCombOrderField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPCombOrderField_BusinessUnitID_get, _sptraderapi.CTORATstpSPCombOrderField_BusinessUnitID_set)

	# 报盘错误代码
    __swig_setmethods__["ErrorID"] = _sptraderapi.CTORATstpSPCombOrderField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _sptraderapi.CTORATstpSPCombOrderField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_sptraderapi.CTORATstpSPCombOrderField_ErrorID_get, _sptraderapi.CTORATstpSPCombOrderField_ErrorID_set)

	# 状态信息
    __swig_setmethods__["StatusMsg"] = _sptraderapi.CTORATstpSPCombOrderField_StatusMsg_set
    __swig_getmethods__["StatusMsg"] = _sptraderapi.CTORATstpSPCombOrderField_StatusMsg_get
    if _newclass:
        StatusMsg = _swig_property(_sptraderapi.CTORATstpSPCombOrderField_StatusMsg_get, _sptraderapi.CTORATstpSPCombOrderField_StatusMsg_set)

	# 申报操作员
    __swig_setmethods__["InsertUserID"] = _sptraderapi.CTORATstpSPCombOrderField_InsertUserID_set
    __swig_getmethods__["InsertUserID"] = _sptraderapi.CTORATstpSPCombOrderField_InsertUserID_get
    if _newclass:
        InsertUserID = _swig_property(_sptraderapi.CTORATstpSPCombOrderField_InsertUserID_get, _sptraderapi.CTORATstpSPCombOrderField_InsertUserID_set)

	# 撤销申报用户
    __swig_setmethods__["CancelUserID"] = _sptraderapi.CTORATstpSPCombOrderField_CancelUserID_set
    __swig_getmethods__["CancelUserID"] = _sptraderapi.CTORATstpSPCombOrderField_CancelUserID_get
    if _newclass:
        CancelUserID = _swig_property(_sptraderapi.CTORATstpSPCombOrderField_CancelUserID_get, _sptraderapi.CTORATstpSPCombOrderField_CancelUserID_set)

	# IP地址
    __swig_setmethods__["IPAddress"] = _sptraderapi.CTORATstpSPCombOrderField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _sptraderapi.CTORATstpSPCombOrderField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_sptraderapi.CTORATstpSPCombOrderField_IPAddress_get, _sptraderapi.CTORATstpSPCombOrderField_IPAddress_set)

	# Mac地址
    __swig_setmethods__["MacAddress"] = _sptraderapi.CTORATstpSPCombOrderField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _sptraderapi.CTORATstpSPCombOrderField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_sptraderapi.CTORATstpSPCombOrderField_MacAddress_get, _sptraderapi.CTORATstpSPCombOrderField_MacAddress_set)

	# 终端信息
    __swig_setmethods__["TerminalInfo"] = _sptraderapi.CTORATstpSPCombOrderField_TerminalInfo_set
    __swig_getmethods__["TerminalInfo"] = _sptraderapi.CTORATstpSPCombOrderField_TerminalInfo_get
    if _newclass:
        TerminalInfo = _swig_property(_sptraderapi.CTORATstpSPCombOrderField_TerminalInfo_get, _sptraderapi.CTORATstpSPCombOrderField_TerminalInfo_set)

	# 记录序号(仅上证报盘使用)
    __swig_setmethods__["RecordNumber"] = _sptraderapi.CTORATstpSPCombOrderField_RecordNumber_set
    __swig_getmethods__["RecordNumber"] = _sptraderapi.CTORATstpSPCombOrderField_RecordNumber_get
    if _newclass:
        RecordNumber = _swig_property(_sptraderapi.CTORATstpSPCombOrderField_RecordNumber_get, _sptraderapi.CTORATstpSPCombOrderField_RecordNumber_set)

	# 长字符串附加信息
    __swig_setmethods__["BInfo"] = _sptraderapi.CTORATstpSPCombOrderField_BInfo_set
    __swig_getmethods__["BInfo"] = _sptraderapi.CTORATstpSPCombOrderField_BInfo_get
    if _newclass:
        BInfo = _swig_property(_sptraderapi.CTORATstpSPCombOrderField_BInfo_get, _sptraderapi.CTORATstpSPCombOrderField_BInfo_set)

	# 短字符串附加信息
    __swig_setmethods__["SInfo"] = _sptraderapi.CTORATstpSPCombOrderField_SInfo_set
    __swig_getmethods__["SInfo"] = _sptraderapi.CTORATstpSPCombOrderField_SInfo_get
    if _newclass:
        SInfo = _swig_property(_sptraderapi.CTORATstpSPCombOrderField_SInfo_get, _sptraderapi.CTORATstpSPCombOrderField_SInfo_set)

	# 整形附加信息
    __swig_setmethods__["IInfo"] = _sptraderapi.CTORATstpSPCombOrderField_IInfo_set
    __swig_getmethods__["IInfo"] = _sptraderapi.CTORATstpSPCombOrderField_IInfo_get
    if _newclass:
        IInfo = _swig_property(_sptraderapi.CTORATstpSPCombOrderField_IInfo_get, _sptraderapi.CTORATstpSPCombOrderField_IInfo_set)

	# 委托方式
    __swig_setmethods__["Operway"] = _sptraderapi.CTORATstpSPCombOrderField_Operway_set
    __swig_getmethods__["Operway"] = _sptraderapi.CTORATstpSPCombOrderField_Operway_get
    if _newclass:
        Operway = _swig_property(_sptraderapi.CTORATstpSPCombOrderField_Operway_get, _sptraderapi.CTORATstpSPCombOrderField_Operway_set)

	# 硬盘序列号
    __swig_setmethods__["HDSerial"] = _sptraderapi.CTORATstpSPCombOrderField_HDSerial_set
    __swig_getmethods__["HDSerial"] = _sptraderapi.CTORATstpSPCombOrderField_HDSerial_get
    if _newclass:
        HDSerial = _swig_property(_sptraderapi.CTORATstpSPCombOrderField_HDSerial_get, _sptraderapi.CTORATstpSPCombOrderField_HDSerial_set)

	# 移动设备手机号
    __swig_setmethods__["Mobile"] = _sptraderapi.CTORATstpSPCombOrderField_Mobile_set
    __swig_getmethods__["Mobile"] = _sptraderapi.CTORATstpSPCombOrderField_Mobile_get
    if _newclass:
        Mobile = _swig_property(_sptraderapi.CTORATstpSPCombOrderField_Mobile_get, _sptraderapi.CTORATstpSPCombOrderField_Mobile_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPCombOrderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPCombOrderField
    __del__ = lambda self: None
CTORATstpSPCombOrderField_swigregister = _sptraderapi.CTORATstpSPCombOrderField_swigregister
CTORATstpSPCombOrderField_swigregister(CTORATstpSPCombOrderField)




#########################################组合委托操作输入############################################
class CTORATstpSPInputCombOrderActionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPInputCombOrderActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPInputCombOrderActionField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPInputCombOrderActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPInputCombOrderActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPInputCombOrderActionField_InvestorID_get, _sptraderapi.CTORATstpSPInputCombOrderActionField_InvestorID_set)

	# 组合报单操作引用
    __swig_setmethods__["CombOrderActionRef"] = _sptraderapi.CTORATstpSPInputCombOrderActionField_CombOrderActionRef_set
    __swig_getmethods__["CombOrderActionRef"] = _sptraderapi.CTORATstpSPInputCombOrderActionField_CombOrderActionRef_get
    if _newclass:
        CombOrderActionRef = _swig_property(_sptraderapi.CTORATstpSPInputCombOrderActionField_CombOrderActionRef_get, _sptraderapi.CTORATstpSPInputCombOrderActionField_CombOrderActionRef_set)

	# 组合报单引用
    __swig_setmethods__["CombOrderRef"] = _sptraderapi.CTORATstpSPInputCombOrderActionField_CombOrderRef_set
    __swig_getmethods__["CombOrderRef"] = _sptraderapi.CTORATstpSPInputCombOrderActionField_CombOrderRef_get
    if _newclass:
        CombOrderRef = _swig_property(_sptraderapi.CTORATstpSPInputCombOrderActionField_CombOrderRef_get, _sptraderapi.CTORATstpSPInputCombOrderActionField_CombOrderRef_set)

	# 前置编号
    __swig_setmethods__["FrontID"] = _sptraderapi.CTORATstpSPInputCombOrderActionField_FrontID_set
    __swig_getmethods__["FrontID"] = _sptraderapi.CTORATstpSPInputCombOrderActionField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_sptraderapi.CTORATstpSPInputCombOrderActionField_FrontID_get, _sptraderapi.CTORATstpSPInputCombOrderActionField_FrontID_set)

	# 会话编号
    __swig_setmethods__["SessionID"] = _sptraderapi.CTORATstpSPInputCombOrderActionField_SessionID_set
    __swig_getmethods__["SessionID"] = _sptraderapi.CTORATstpSPInputCombOrderActionField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_sptraderapi.CTORATstpSPInputCombOrderActionField_SessionID_get, _sptraderapi.CTORATstpSPInputCombOrderActionField_SessionID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPInputCombOrderActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPInputCombOrderActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPInputCombOrderActionField_ExchangeID_get, _sptraderapi.CTORATstpSPInputCombOrderActionField_ExchangeID_set)

	# 全系统的唯一组合报单编号。
    __swig_setmethods__["CombOrderSysID"] = _sptraderapi.CTORATstpSPInputCombOrderActionField_CombOrderSysID_set
    __swig_getmethods__["CombOrderSysID"] = _sptraderapi.CTORATstpSPInputCombOrderActionField_CombOrderSysID_get
    if _newclass:
        CombOrderSysID = _swig_property(_sptraderapi.CTORATstpSPInputCombOrderActionField_CombOrderSysID_get, _sptraderapi.CTORATstpSPInputCombOrderActionField_CombOrderSysID_set)

	# 组合报单操作标志
    __swig_setmethods__["CombOrderActionFlag"] = _sptraderapi.CTORATstpSPInputCombOrderActionField_CombOrderActionFlag_set
    __swig_getmethods__["CombOrderActionFlag"] = _sptraderapi.CTORATstpSPInputCombOrderActionField_CombOrderActionFlag_get
    if _newclass:
        CombOrderActionFlag = _swig_property(_sptraderapi.CTORATstpSPInputCombOrderActionField_CombOrderActionFlag_get, _sptraderapi.CTORATstpSPInputCombOrderActionField_CombOrderActionFlag_set)

	# 组合合约在系统中的编号
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPInputCombOrderActionField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPInputCombOrderActionField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPInputCombOrderActionField_SecurityID_get, _sptraderapi.CTORATstpSPInputCombOrderActionField_SecurityID_set)

	# IP地址（已废弃）
    __swig_setmethods__["IPAddress"] = _sptraderapi.CTORATstpSPInputCombOrderActionField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _sptraderapi.CTORATstpSPInputCombOrderActionField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_sptraderapi.CTORATstpSPInputCombOrderActionField_IPAddress_get, _sptraderapi.CTORATstpSPInputCombOrderActionField_IPAddress_set)

	# Mac地址（已废弃）
    __swig_setmethods__["MacAddress"] = _sptraderapi.CTORATstpSPInputCombOrderActionField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _sptraderapi.CTORATstpSPInputCombOrderActionField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_sptraderapi.CTORATstpSPInputCombOrderActionField_MacAddress_get, _sptraderapi.CTORATstpSPInputCombOrderActionField_MacAddress_set)

	# 全系统的唯一的组合报单撤单编号
    __swig_setmethods__["CancelCombOrderLocalID"] = _sptraderapi.CTORATstpSPInputCombOrderActionField_CancelCombOrderLocalID_set
    __swig_getmethods__["CancelCombOrderLocalID"] = _sptraderapi.CTORATstpSPInputCombOrderActionField_CancelCombOrderLocalID_get
    if _newclass:
        CancelCombOrderLocalID = _swig_property(_sptraderapi.CTORATstpSPInputCombOrderActionField_CancelCombOrderLocalID_get, _sptraderapi.CTORATstpSPInputCombOrderActionField_CancelCombOrderLocalID_set)

	# 终端信息
    __swig_setmethods__["TerminalInfo"] = _sptraderapi.CTORATstpSPInputCombOrderActionField_TerminalInfo_set
    __swig_getmethods__["TerminalInfo"] = _sptraderapi.CTORATstpSPInputCombOrderActionField_TerminalInfo_get
    if _newclass:
        TerminalInfo = _swig_property(_sptraderapi.CTORATstpSPInputCombOrderActionField_TerminalInfo_get, _sptraderapi.CTORATstpSPInputCombOrderActionField_TerminalInfo_set)

	# 长字符串附加信息
    __swig_setmethods__["BInfo"] = _sptraderapi.CTORATstpSPInputCombOrderActionField_BInfo_set
    __swig_getmethods__["BInfo"] = _sptraderapi.CTORATstpSPInputCombOrderActionField_BInfo_get
    if _newclass:
        BInfo = _swig_property(_sptraderapi.CTORATstpSPInputCombOrderActionField_BInfo_get, _sptraderapi.CTORATstpSPInputCombOrderActionField_BInfo_set)

	# 短字符串附加信息
    __swig_setmethods__["SInfo"] = _sptraderapi.CTORATstpSPInputCombOrderActionField_SInfo_set
    __swig_getmethods__["SInfo"] = _sptraderapi.CTORATstpSPInputCombOrderActionField_SInfo_get
    if _newclass:
        SInfo = _swig_property(_sptraderapi.CTORATstpSPInputCombOrderActionField_SInfo_get, _sptraderapi.CTORATstpSPInputCombOrderActionField_SInfo_set)

	# 整形附加信息
    __swig_setmethods__["IInfo"] = _sptraderapi.CTORATstpSPInputCombOrderActionField_IInfo_set
    __swig_getmethods__["IInfo"] = _sptraderapi.CTORATstpSPInputCombOrderActionField_IInfo_get
    if _newclass:
        IInfo = _swig_property(_sptraderapi.CTORATstpSPInputCombOrderActionField_IInfo_get, _sptraderapi.CTORATstpSPInputCombOrderActionField_IInfo_set)

	# 委托方式
    __swig_setmethods__["Operway"] = _sptraderapi.CTORATstpSPInputCombOrderActionField_Operway_set
    __swig_getmethods__["Operway"] = _sptraderapi.CTORATstpSPInputCombOrderActionField_Operway_get
    if _newclass:
        Operway = _swig_property(_sptraderapi.CTORATstpSPInputCombOrderActionField_Operway_get, _sptraderapi.CTORATstpSPInputCombOrderActionField_Operway_set)

	# 硬盘序列号
    __swig_setmethods__["HDSerial"] = _sptraderapi.CTORATstpSPInputCombOrderActionField_HDSerial_set
    __swig_getmethods__["HDSerial"] = _sptraderapi.CTORATstpSPInputCombOrderActionField_HDSerial_get
    if _newclass:
        HDSerial = _swig_property(_sptraderapi.CTORATstpSPInputCombOrderActionField_HDSerial_get, _sptraderapi.CTORATstpSPInputCombOrderActionField_HDSerial_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPInputCombOrderActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPInputCombOrderActionField
    __del__ = lambda self: None
CTORATstpSPInputCombOrderActionField_swigregister = _sptraderapi.CTORATstpSPInputCombOrderActionField_swigregister
CTORATstpSPInputCombOrderActionField_swigregister(CTORATstpSPInputCombOrderActionField)




#########################################条件单录入域############################################
class CTORATstpSPInputCondOrderField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPInputCondOrderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPInputCondOrderField, name)
    __repr__ = _swig_repr

	# 合约在系统中的编号
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPInputCondOrderField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPInputCondOrderField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderField_SecurityID_get, _sptraderapi.CTORATstpSPInputCondOrderField_SecurityID_set)

	# 投资者说明的对条件单的唯一引用
    __swig_setmethods__["CondOrderRef"] = _sptraderapi.CTORATstpSPInputCondOrderField_CondOrderRef_set
    __swig_getmethods__["CondOrderRef"] = _sptraderapi.CTORATstpSPInputCondOrderField_CondOrderRef_get
    if _newclass:
        CondOrderRef = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderField_CondOrderRef_get, _sptraderapi.CTORATstpSPInputCondOrderField_CondOrderRef_set)

	# 限价单或市价单
    __swig_setmethods__["OrderPriceType"] = _sptraderapi.CTORATstpSPInputCondOrderField_OrderPriceType_set
    __swig_getmethods__["OrderPriceType"] = _sptraderapi.CTORATstpSPInputCondOrderField_OrderPriceType_get
    if _newclass:
        OrderPriceType = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderField_OrderPriceType_get, _sptraderapi.CTORATstpSPInputCondOrderField_OrderPriceType_set)

	# 买、卖
    __swig_setmethods__["Direction"] = _sptraderapi.CTORATstpSPInputCondOrderField_Direction_set
    __swig_getmethods__["Direction"] = _sptraderapi.CTORATstpSPInputCondOrderField_Direction_get
    if _newclass:
        Direction = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderField_Direction_get, _sptraderapi.CTORATstpSPInputCondOrderField_Direction_set)

	# 按字节表示各单个合约的开平方向
    __swig_setmethods__["CombOffsetFlag"] = _sptraderapi.CTORATstpSPInputCondOrderField_CombOffsetFlag_set
    __swig_getmethods__["CombOffsetFlag"] = _sptraderapi.CTORATstpSPInputCondOrderField_CombOffsetFlag_get
    if _newclass:
        CombOffsetFlag = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderField_CombOffsetFlag_get, _sptraderapi.CTORATstpSPInputCondOrderField_CombOffsetFlag_set)

	# 按字节表示各单个合约的组合套保标志
    __swig_setmethods__["CombHedgeFlag"] = _sptraderapi.CTORATstpSPInputCondOrderField_CombHedgeFlag_set
    __swig_getmethods__["CombHedgeFlag"] = _sptraderapi.CTORATstpSPInputCondOrderField_CombHedgeFlag_get
    if _newclass:
        CombHedgeFlag = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderField_CombHedgeFlag_get, _sptraderapi.CTORATstpSPInputCondOrderField_CombHedgeFlag_set)

	# 限价单价格
    __swig_setmethods__["LimitPrice"] = _sptraderapi.CTORATstpSPInputCondOrderField_LimitPrice_set
    __swig_getmethods__["LimitPrice"] = _sptraderapi.CTORATstpSPInputCondOrderField_LimitPrice_get
    if _newclass:
        LimitPrice = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderField_LimitPrice_get, _sptraderapi.CTORATstpSPInputCondOrderField_LimitPrice_set)

	# 报单数量
    __swig_setmethods__["VolumeTotalOriginal"] = _sptraderapi.CTORATstpSPInputCondOrderField_VolumeTotalOriginal_set
    __swig_getmethods__["VolumeTotalOriginal"] = _sptraderapi.CTORATstpSPInputCondOrderField_VolumeTotalOriginal_get
    if _newclass:
        VolumeTotalOriginal = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderField_VolumeTotalOriginal_get, _sptraderapi.CTORATstpSPInputCondOrderField_VolumeTotalOriginal_set)

	# IOC、GFS、GFD、GTD、GTC、GFA
    __swig_setmethods__["TimeCondition"] = _sptraderapi.CTORATstpSPInputCondOrderField_TimeCondition_set
    __swig_getmethods__["TimeCondition"] = _sptraderapi.CTORATstpSPInputCondOrderField_TimeCondition_get
    if _newclass:
        TimeCondition = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderField_TimeCondition_get, _sptraderapi.CTORATstpSPInputCondOrderField_TimeCondition_set)

	# AV、MV、CV
    __swig_setmethods__["VolumeCondition"] = _sptraderapi.CTORATstpSPInputCondOrderField_VolumeCondition_set
    __swig_getmethods__["VolumeCondition"] = _sptraderapi.CTORATstpSPInputCondOrderField_VolumeCondition_get
    if _newclass:
        VolumeCondition = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderField_VolumeCondition_get, _sptraderapi.CTORATstpSPInputCondOrderField_VolumeCondition_set)

	# 当成交量类型为MV时有效
    __swig_setmethods__["MinVolume"] = _sptraderapi.CTORATstpSPInputCondOrderField_MinVolume_set
    __swig_getmethods__["MinVolume"] = _sptraderapi.CTORATstpSPInputCondOrderField_MinVolume_get
    if _newclass:
        MinVolume = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderField_MinVolume_get, _sptraderapi.CTORATstpSPInputCondOrderField_MinVolume_set)

	# 强平原因
    __swig_setmethods__["ForceCloseReason"] = _sptraderapi.CTORATstpSPInputCondOrderField_ForceCloseReason_set
    __swig_getmethods__["ForceCloseReason"] = _sptraderapi.CTORATstpSPInputCondOrderField_ForceCloseReason_get
    if _newclass:
        ForceCloseReason = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderField_ForceCloseReason_get, _sptraderapi.CTORATstpSPInputCondOrderField_ForceCloseReason_set)

	# 用户强评标志
    __swig_setmethods__["UserForceClose"] = _sptraderapi.CTORATstpSPInputCondOrderField_UserForceClose_set
    __swig_getmethods__["UserForceClose"] = _sptraderapi.CTORATstpSPInputCondOrderField_UserForceClose_get
    if _newclass:
        UserForceClose = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderField_UserForceClose_get, _sptraderapi.CTORATstpSPInputCondOrderField_UserForceClose_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPInputCondOrderField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPInputCondOrderField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderField_InvestorID_get, _sptraderapi.CTORATstpSPInputCondOrderField_InvestorID_set)

	# 一个交易所的编号
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPInputCondOrderField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPInputCondOrderField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderField_ExchangeID_get, _sptraderapi.CTORATstpSPInputCondOrderField_ExchangeID_set)

	# 目前该字段存放的是上证所和深圳的股东代码
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPInputCondOrderField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPInputCondOrderField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderField_ShareholderID_get, _sptraderapi.CTORATstpSPInputCondOrderField_ShareholderID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPInputCondOrderField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPInputCondOrderField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderField_BusinessUnitID_get, _sptraderapi.CTORATstpSPInputCondOrderField_BusinessUnitID_set)

	# 资金账户
    __swig_setmethods__["AccountID"] = _sptraderapi.CTORATstpSPInputCondOrderField_AccountID_set
    __swig_getmethods__["AccountID"] = _sptraderapi.CTORATstpSPInputCondOrderField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderField_AccountID_get, _sptraderapi.CTORATstpSPInputCondOrderField_AccountID_set)

	# IP地址（已废弃）
    __swig_setmethods__["IPAddress"] = _sptraderapi.CTORATstpSPInputCondOrderField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _sptraderapi.CTORATstpSPInputCondOrderField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderField_IPAddress_get, _sptraderapi.CTORATstpSPInputCondOrderField_IPAddress_set)

	# Mac地址（已废弃）
    __swig_setmethods__["MacAddress"] = _sptraderapi.CTORATstpSPInputCondOrderField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _sptraderapi.CTORATstpSPInputCondOrderField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderField_MacAddress_get, _sptraderapi.CTORATstpSPInputCondOrderField_MacAddress_set)

	# 报单编号
    __swig_setmethods__["CondOrderID"] = _sptraderapi.CTORATstpSPInputCondOrderField_CondOrderID_set
    __swig_getmethods__["CondOrderID"] = _sptraderapi.CTORATstpSPInputCondOrderField_CondOrderID_get
    if _newclass:
        CondOrderID = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderField_CondOrderID_get, _sptraderapi.CTORATstpSPInputCondOrderField_CondOrderID_set)

	# 终端信息
    __swig_setmethods__["TerminalInfo"] = _sptraderapi.CTORATstpSPInputCondOrderField_TerminalInfo_set
    __swig_getmethods__["TerminalInfo"] = _sptraderapi.CTORATstpSPInputCondOrderField_TerminalInfo_get
    if _newclass:
        TerminalInfo = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderField_TerminalInfo_get, _sptraderapi.CTORATstpSPInputCondOrderField_TerminalInfo_set)

	# 长字符串附加信息
    __swig_setmethods__["BInfo"] = _sptraderapi.CTORATstpSPInputCondOrderField_BInfo_set
    __swig_getmethods__["BInfo"] = _sptraderapi.CTORATstpSPInputCondOrderField_BInfo_get
    if _newclass:
        BInfo = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderField_BInfo_get, _sptraderapi.CTORATstpSPInputCondOrderField_BInfo_set)

	# 短字符串附加信息
    __swig_setmethods__["SInfo"] = _sptraderapi.CTORATstpSPInputCondOrderField_SInfo_set
    __swig_getmethods__["SInfo"] = _sptraderapi.CTORATstpSPInputCondOrderField_SInfo_get
    if _newclass:
        SInfo = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderField_SInfo_get, _sptraderapi.CTORATstpSPInputCondOrderField_SInfo_set)

	# 整形附加信息
    __swig_setmethods__["IInfo"] = _sptraderapi.CTORATstpSPInputCondOrderField_IInfo_set
    __swig_getmethods__["IInfo"] = _sptraderapi.CTORATstpSPInputCondOrderField_IInfo_get
    if _newclass:
        IInfo = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderField_IInfo_get, _sptraderapi.CTORATstpSPInputCondOrderField_IInfo_set)

	# 报单数量类型
    __swig_setmethods__["OrderVolumeType"] = _sptraderapi.CTORATstpSPInputCondOrderField_OrderVolumeType_set
    __swig_getmethods__["OrderVolumeType"] = _sptraderapi.CTORATstpSPInputCondOrderField_OrderVolumeType_get
    if _newclass:
        OrderVolumeType = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderField_OrderVolumeType_get, _sptraderapi.CTORATstpSPInputCondOrderField_OrderVolumeType_set)

	# 条件单触发条件
    __swig_setmethods__["ContingentCondition"] = _sptraderapi.CTORATstpSPInputCondOrderField_ContingentCondition_set
    __swig_getmethods__["ContingentCondition"] = _sptraderapi.CTORATstpSPInputCondOrderField_ContingentCondition_get
    if _newclass:
        ContingentCondition = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderField_ContingentCondition_get, _sptraderapi.CTORATstpSPInputCondOrderField_ContingentCondition_set)

	# 条件价
    __swig_setmethods__["ConditionPrice"] = _sptraderapi.CTORATstpSPInputCondOrderField_ConditionPrice_set
    __swig_getmethods__["ConditionPrice"] = _sptraderapi.CTORATstpSPInputCondOrderField_ConditionPrice_get
    if _newclass:
        ConditionPrice = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderField_ConditionPrice_get, _sptraderapi.CTORATstpSPInputCondOrderField_ConditionPrice_set)

	# 价格浮动tick数,>0向上浮动,<0向下浮动,=0不浮动
    __swig_setmethods__["PriceTicks"] = _sptraderapi.CTORATstpSPInputCondOrderField_PriceTicks_set
    __swig_getmethods__["PriceTicks"] = _sptraderapi.CTORATstpSPInputCondOrderField_PriceTicks_get
    if _newclass:
        PriceTicks = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderField_PriceTicks_get, _sptraderapi.CTORATstpSPInputCondOrderField_PriceTicks_set)

	# 数量浮动倍数,必须>=0
    __swig_setmethods__["VolumeMultiple"] = _sptraderapi.CTORATstpSPInputCondOrderField_VolumeMultiple_set
    __swig_getmethods__["VolumeMultiple"] = _sptraderapi.CTORATstpSPInputCondOrderField_VolumeMultiple_get
    if _newclass:
        VolumeMultiple = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderField_VolumeMultiple_get, _sptraderapi.CTORATstpSPInputCondOrderField_VolumeMultiple_set)

	# 相关前置编号
    __swig_setmethods__["RelativeFrontID"] = _sptraderapi.CTORATstpSPInputCondOrderField_RelativeFrontID_set
    __swig_getmethods__["RelativeFrontID"] = _sptraderapi.CTORATstpSPInputCondOrderField_RelativeFrontID_get
    if _newclass:
        RelativeFrontID = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderField_RelativeFrontID_get, _sptraderapi.CTORATstpSPInputCondOrderField_RelativeFrontID_set)

	# 相关会话编号
    __swig_setmethods__["RelativeSessionID"] = _sptraderapi.CTORATstpSPInputCondOrderField_RelativeSessionID_set
    __swig_getmethods__["RelativeSessionID"] = _sptraderapi.CTORATstpSPInputCondOrderField_RelativeSessionID_get
    if _newclass:
        RelativeSessionID = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderField_RelativeSessionID_get, _sptraderapi.CTORATstpSPInputCondOrderField_RelativeSessionID_set)

	# 相关条件参数,可能为OrderRef、OrderSysID、Time和SecurityID
    __swig_setmethods__["RelativeParam"] = _sptraderapi.CTORATstpSPInputCondOrderField_RelativeParam_set
    __swig_getmethods__["RelativeParam"] = _sptraderapi.CTORATstpSPInputCondOrderField_RelativeParam_get
    if _newclass:
        RelativeParam = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderField_RelativeParam_get, _sptraderapi.CTORATstpSPInputCondOrderField_RelativeParam_set)

	# 附加触发条件
    __swig_setmethods__["AppendContingentCondition"] = _sptraderapi.CTORATstpSPInputCondOrderField_AppendContingentCondition_set
    __swig_getmethods__["AppendContingentCondition"] = _sptraderapi.CTORATstpSPInputCondOrderField_AppendContingentCondition_get
    if _newclass:
        AppendContingentCondition = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderField_AppendContingentCondition_get, _sptraderapi.CTORATstpSPInputCondOrderField_AppendContingentCondition_set)

	# 附加条件价
    __swig_setmethods__["AppendConditionPrice"] = _sptraderapi.CTORATstpSPInputCondOrderField_AppendConditionPrice_set
    __swig_getmethods__["AppendConditionPrice"] = _sptraderapi.CTORATstpSPInputCondOrderField_AppendConditionPrice_get
    if _newclass:
        AppendConditionPrice = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderField_AppendConditionPrice_get, _sptraderapi.CTORATstpSPInputCondOrderField_AppendConditionPrice_set)

	# 附加相关前置编号
    __swig_setmethods__["AppendRelativeFrontID"] = _sptraderapi.CTORATstpSPInputCondOrderField_AppendRelativeFrontID_set
    __swig_getmethods__["AppendRelativeFrontID"] = _sptraderapi.CTORATstpSPInputCondOrderField_AppendRelativeFrontID_get
    if _newclass:
        AppendRelativeFrontID = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderField_AppendRelativeFrontID_get, _sptraderapi.CTORATstpSPInputCondOrderField_AppendRelativeFrontID_set)

	# 附加相关会话编号
    __swig_setmethods__["AppendRelativeSessionID"] = _sptraderapi.CTORATstpSPInputCondOrderField_AppendRelativeSessionID_set
    __swig_getmethods__["AppendRelativeSessionID"] = _sptraderapi.CTORATstpSPInputCondOrderField_AppendRelativeSessionID_get
    if _newclass:
        AppendRelativeSessionID = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderField_AppendRelativeSessionID_get, _sptraderapi.CTORATstpSPInputCondOrderField_AppendRelativeSessionID_set)

	# 附加相关条件参数,可能为OrderRef、OrderSysID、Time和SecurityID
    __swig_setmethods__["AppendRelativeParam"] = _sptraderapi.CTORATstpSPInputCondOrderField_AppendRelativeParam_set
    __swig_getmethods__["AppendRelativeParam"] = _sptraderapi.CTORATstpSPInputCondOrderField_AppendRelativeParam_get
    if _newclass:
        AppendRelativeParam = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderField_AppendRelativeParam_get, _sptraderapi.CTORATstpSPInputCondOrderField_AppendRelativeParam_set)

	# 委托方式
    __swig_setmethods__["Operway"] = _sptraderapi.CTORATstpSPInputCondOrderField_Operway_set
    __swig_getmethods__["Operway"] = _sptraderapi.CTORATstpSPInputCondOrderField_Operway_get
    if _newclass:
        Operway = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderField_Operway_get, _sptraderapi.CTORATstpSPInputCondOrderField_Operway_set)

	# 硬盘序列号
    __swig_setmethods__["HDSerial"] = _sptraderapi.CTORATstpSPInputCondOrderField_HDSerial_set
    __swig_getmethods__["HDSerial"] = _sptraderapi.CTORATstpSPInputCondOrderField_HDSerial_get
    if _newclass:
        HDSerial = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderField_HDSerial_get, _sptraderapi.CTORATstpSPInputCondOrderField_HDSerial_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPInputCondOrderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPInputCondOrderField
    __del__ = lambda self: None
CTORATstpSPInputCondOrderField_swigregister = _sptraderapi.CTORATstpSPInputCondOrderField_swigregister
CTORATstpSPInputCondOrderField_swigregister(CTORATstpSPInputCondOrderField)




#########################################条件单域############################################
class CTORATstpSPConditionOrderField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPConditionOrderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPConditionOrderField, name)
    __repr__ = _swig_repr

	# 交易日
    __swig_setmethods__["TradingDay"] = _sptraderapi.CTORATstpSPConditionOrderField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _sptraderapi.CTORATstpSPConditionOrderField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_TradingDay_get, _sptraderapi.CTORATstpSPConditionOrderField_TradingDay_set)

	# 合约在系统中的编号
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPConditionOrderField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPConditionOrderField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_SecurityID_get, _sptraderapi.CTORATstpSPConditionOrderField_SecurityID_set)

	# 投资者说明的对条件单的唯一引用
    __swig_setmethods__["CondOrderRef"] = _sptraderapi.CTORATstpSPConditionOrderField_CondOrderRef_set
    __swig_getmethods__["CondOrderRef"] = _sptraderapi.CTORATstpSPConditionOrderField_CondOrderRef_get
    if _newclass:
        CondOrderRef = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_CondOrderRef_get, _sptraderapi.CTORATstpSPConditionOrderField_CondOrderRef_set)

	# 限价单或市价单
    __swig_setmethods__["OrderPriceType"] = _sptraderapi.CTORATstpSPConditionOrderField_OrderPriceType_set
    __swig_getmethods__["OrderPriceType"] = _sptraderapi.CTORATstpSPConditionOrderField_OrderPriceType_get
    if _newclass:
        OrderPriceType = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_OrderPriceType_get, _sptraderapi.CTORATstpSPConditionOrderField_OrderPriceType_set)

	# 买、卖
    __swig_setmethods__["Direction"] = _sptraderapi.CTORATstpSPConditionOrderField_Direction_set
    __swig_getmethods__["Direction"] = _sptraderapi.CTORATstpSPConditionOrderField_Direction_get
    if _newclass:
        Direction = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_Direction_get, _sptraderapi.CTORATstpSPConditionOrderField_Direction_set)

	# 按字节表示各单个合约的开平方向
    __swig_setmethods__["CombOffsetFlag"] = _sptraderapi.CTORATstpSPConditionOrderField_CombOffsetFlag_set
    __swig_getmethods__["CombOffsetFlag"] = _sptraderapi.CTORATstpSPConditionOrderField_CombOffsetFlag_get
    if _newclass:
        CombOffsetFlag = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_CombOffsetFlag_get, _sptraderapi.CTORATstpSPConditionOrderField_CombOffsetFlag_set)

	# 按字节表示各单个合约的组合套保标志
    __swig_setmethods__["CombHedgeFlag"] = _sptraderapi.CTORATstpSPConditionOrderField_CombHedgeFlag_set
    __swig_getmethods__["CombHedgeFlag"] = _sptraderapi.CTORATstpSPConditionOrderField_CombHedgeFlag_get
    if _newclass:
        CombHedgeFlag = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_CombHedgeFlag_get, _sptraderapi.CTORATstpSPConditionOrderField_CombHedgeFlag_set)

	# 限价单价格
    __swig_setmethods__["LimitPrice"] = _sptraderapi.CTORATstpSPConditionOrderField_LimitPrice_set
    __swig_getmethods__["LimitPrice"] = _sptraderapi.CTORATstpSPConditionOrderField_LimitPrice_get
    if _newclass:
        LimitPrice = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_LimitPrice_get, _sptraderapi.CTORATstpSPConditionOrderField_LimitPrice_set)

	# 报单数量
    __swig_setmethods__["VolumeTotalOriginal"] = _sptraderapi.CTORATstpSPConditionOrderField_VolumeTotalOriginal_set
    __swig_getmethods__["VolumeTotalOriginal"] = _sptraderapi.CTORATstpSPConditionOrderField_VolumeTotalOriginal_get
    if _newclass:
        VolumeTotalOriginal = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_VolumeTotalOriginal_get, _sptraderapi.CTORATstpSPConditionOrderField_VolumeTotalOriginal_set)

	# IOC、GFS、GFD、GTD、GTC、GFA
    __swig_setmethods__["TimeCondition"] = _sptraderapi.CTORATstpSPConditionOrderField_TimeCondition_set
    __swig_getmethods__["TimeCondition"] = _sptraderapi.CTORATstpSPConditionOrderField_TimeCondition_get
    if _newclass:
        TimeCondition = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_TimeCondition_get, _sptraderapi.CTORATstpSPConditionOrderField_TimeCondition_set)

	# AV、MV、CV
    __swig_setmethods__["VolumeCondition"] = _sptraderapi.CTORATstpSPConditionOrderField_VolumeCondition_set
    __swig_getmethods__["VolumeCondition"] = _sptraderapi.CTORATstpSPConditionOrderField_VolumeCondition_get
    if _newclass:
        VolumeCondition = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_VolumeCondition_get, _sptraderapi.CTORATstpSPConditionOrderField_VolumeCondition_set)

	# 当成交量类型为MV时有效
    __swig_setmethods__["MinVolume"] = _sptraderapi.CTORATstpSPConditionOrderField_MinVolume_set
    __swig_getmethods__["MinVolume"] = _sptraderapi.CTORATstpSPConditionOrderField_MinVolume_get
    if _newclass:
        MinVolume = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_MinVolume_get, _sptraderapi.CTORATstpSPConditionOrderField_MinVolume_set)

	# 强平原因
    __swig_setmethods__["ForceCloseReason"] = _sptraderapi.CTORATstpSPConditionOrderField_ForceCloseReason_set
    __swig_getmethods__["ForceCloseReason"] = _sptraderapi.CTORATstpSPConditionOrderField_ForceCloseReason_get
    if _newclass:
        ForceCloseReason = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_ForceCloseReason_get, _sptraderapi.CTORATstpSPConditionOrderField_ForceCloseReason_set)

	# 请求编号
    __swig_setmethods__["RequestID"] = _sptraderapi.CTORATstpSPConditionOrderField_RequestID_set
    __swig_getmethods__["RequestID"] = _sptraderapi.CTORATstpSPConditionOrderField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_RequestID_get, _sptraderapi.CTORATstpSPConditionOrderField_RequestID_set)

	# 用户强评标志
    __swig_setmethods__["UserForceClose"] = _sptraderapi.CTORATstpSPConditionOrderField_UserForceClose_set
    __swig_getmethods__["UserForceClose"] = _sptraderapi.CTORATstpSPConditionOrderField_UserForceClose_get
    if _newclass:
        UserForceClose = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_UserForceClose_get, _sptraderapi.CTORATstpSPConditionOrderField_UserForceClose_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPConditionOrderField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPConditionOrderField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_InvestorID_get, _sptraderapi.CTORATstpSPConditionOrderField_InvestorID_set)

	# 一个交易所的编号
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPConditionOrderField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPConditionOrderField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_ExchangeID_get, _sptraderapi.CTORATstpSPConditionOrderField_ExchangeID_set)

	# 目前该字段存放的是上证所和深圳的股东代码
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPConditionOrderField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPConditionOrderField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_ShareholderID_get, _sptraderapi.CTORATstpSPConditionOrderField_ShareholderID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPConditionOrderField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPConditionOrderField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_BusinessUnitID_get, _sptraderapi.CTORATstpSPConditionOrderField_BusinessUnitID_set)

	# 资金账户
    __swig_setmethods__["AccountID"] = _sptraderapi.CTORATstpSPConditionOrderField_AccountID_set
    __swig_getmethods__["AccountID"] = _sptraderapi.CTORATstpSPConditionOrderField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_AccountID_get, _sptraderapi.CTORATstpSPConditionOrderField_AccountID_set)

	# IP地址（已废弃）
    __swig_setmethods__["IPAddress"] = _sptraderapi.CTORATstpSPConditionOrderField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _sptraderapi.CTORATstpSPConditionOrderField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_IPAddress_get, _sptraderapi.CTORATstpSPConditionOrderField_IPAddress_set)

	# Mac地址（已废弃）
    __swig_setmethods__["MacAddress"] = _sptraderapi.CTORATstpSPConditionOrderField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _sptraderapi.CTORATstpSPConditionOrderField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_MacAddress_get, _sptraderapi.CTORATstpSPConditionOrderField_MacAddress_set)

	# 报单编号
    __swig_setmethods__["CondOrderID"] = _sptraderapi.CTORATstpSPConditionOrderField_CondOrderID_set
    __swig_getmethods__["CondOrderID"] = _sptraderapi.CTORATstpSPConditionOrderField_CondOrderID_get
    if _newclass:
        CondOrderID = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_CondOrderID_get, _sptraderapi.CTORATstpSPConditionOrderField_CondOrderID_set)

	# 终端信息
    __swig_setmethods__["TerminalInfo"] = _sptraderapi.CTORATstpSPConditionOrderField_TerminalInfo_set
    __swig_getmethods__["TerminalInfo"] = _sptraderapi.CTORATstpSPConditionOrderField_TerminalInfo_get
    if _newclass:
        TerminalInfo = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_TerminalInfo_get, _sptraderapi.CTORATstpSPConditionOrderField_TerminalInfo_set)

	# 长字符串附加信息
    __swig_setmethods__["BInfo"] = _sptraderapi.CTORATstpSPConditionOrderField_BInfo_set
    __swig_getmethods__["BInfo"] = _sptraderapi.CTORATstpSPConditionOrderField_BInfo_get
    if _newclass:
        BInfo = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_BInfo_get, _sptraderapi.CTORATstpSPConditionOrderField_BInfo_set)

	# 短字符串附加信息
    __swig_setmethods__["SInfo"] = _sptraderapi.CTORATstpSPConditionOrderField_SInfo_set
    __swig_getmethods__["SInfo"] = _sptraderapi.CTORATstpSPConditionOrderField_SInfo_get
    if _newclass:
        SInfo = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_SInfo_get, _sptraderapi.CTORATstpSPConditionOrderField_SInfo_set)

	# 整形附加信息
    __swig_setmethods__["IInfo"] = _sptraderapi.CTORATstpSPConditionOrderField_IInfo_set
    __swig_getmethods__["IInfo"] = _sptraderapi.CTORATstpSPConditionOrderField_IInfo_get
    if _newclass:
        IInfo = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_IInfo_get, _sptraderapi.CTORATstpSPConditionOrderField_IInfo_set)

	# 报单数量类型
    __swig_setmethods__["OrderVolumeType"] = _sptraderapi.CTORATstpSPConditionOrderField_OrderVolumeType_set
    __swig_getmethods__["OrderVolumeType"] = _sptraderapi.CTORATstpSPConditionOrderField_OrderVolumeType_get
    if _newclass:
        OrderVolumeType = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_OrderVolumeType_get, _sptraderapi.CTORATstpSPConditionOrderField_OrderVolumeType_set)

	# 条件单触发条件
    __swig_setmethods__["ContingentCondition"] = _sptraderapi.CTORATstpSPConditionOrderField_ContingentCondition_set
    __swig_getmethods__["ContingentCondition"] = _sptraderapi.CTORATstpSPConditionOrderField_ContingentCondition_get
    if _newclass:
        ContingentCondition = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_ContingentCondition_get, _sptraderapi.CTORATstpSPConditionOrderField_ContingentCondition_set)

	# 条件价
    __swig_setmethods__["ConditionPrice"] = _sptraderapi.CTORATstpSPConditionOrderField_ConditionPrice_set
    __swig_getmethods__["ConditionPrice"] = _sptraderapi.CTORATstpSPConditionOrderField_ConditionPrice_get
    if _newclass:
        ConditionPrice = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_ConditionPrice_get, _sptraderapi.CTORATstpSPConditionOrderField_ConditionPrice_set)

	# 价格浮动tick数,>0向上浮动,<0向下浮动,=0不浮动
    __swig_setmethods__["PriceTicks"] = _sptraderapi.CTORATstpSPConditionOrderField_PriceTicks_set
    __swig_getmethods__["PriceTicks"] = _sptraderapi.CTORATstpSPConditionOrderField_PriceTicks_get
    if _newclass:
        PriceTicks = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_PriceTicks_get, _sptraderapi.CTORATstpSPConditionOrderField_PriceTicks_set)

	# 数量浮动倍数,必须>=0
    __swig_setmethods__["VolumeMultiple"] = _sptraderapi.CTORATstpSPConditionOrderField_VolumeMultiple_set
    __swig_getmethods__["VolumeMultiple"] = _sptraderapi.CTORATstpSPConditionOrderField_VolumeMultiple_get
    if _newclass:
        VolumeMultiple = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_VolumeMultiple_get, _sptraderapi.CTORATstpSPConditionOrderField_VolumeMultiple_set)

	# 相关前置编号
    __swig_setmethods__["RelativeFrontID"] = _sptraderapi.CTORATstpSPConditionOrderField_RelativeFrontID_set
    __swig_getmethods__["RelativeFrontID"] = _sptraderapi.CTORATstpSPConditionOrderField_RelativeFrontID_get
    if _newclass:
        RelativeFrontID = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_RelativeFrontID_get, _sptraderapi.CTORATstpSPConditionOrderField_RelativeFrontID_set)

	# 相关会话编号
    __swig_setmethods__["RelativeSessionID"] = _sptraderapi.CTORATstpSPConditionOrderField_RelativeSessionID_set
    __swig_getmethods__["RelativeSessionID"] = _sptraderapi.CTORATstpSPConditionOrderField_RelativeSessionID_get
    if _newclass:
        RelativeSessionID = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_RelativeSessionID_get, _sptraderapi.CTORATstpSPConditionOrderField_RelativeSessionID_set)

	# 相关条件参数,可能为OrderRef、OrderSysID、Time和SecurityID
    __swig_setmethods__["RelativeParam"] = _sptraderapi.CTORATstpSPConditionOrderField_RelativeParam_set
    __swig_getmethods__["RelativeParam"] = _sptraderapi.CTORATstpSPConditionOrderField_RelativeParam_get
    if _newclass:
        RelativeParam = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_RelativeParam_get, _sptraderapi.CTORATstpSPConditionOrderField_RelativeParam_set)

	# 附加触发条件
    __swig_setmethods__["AppendContingentCondition"] = _sptraderapi.CTORATstpSPConditionOrderField_AppendContingentCondition_set
    __swig_getmethods__["AppendContingentCondition"] = _sptraderapi.CTORATstpSPConditionOrderField_AppendContingentCondition_get
    if _newclass:
        AppendContingentCondition = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_AppendContingentCondition_get, _sptraderapi.CTORATstpSPConditionOrderField_AppendContingentCondition_set)

	# 附加条件价
    __swig_setmethods__["AppendConditionPrice"] = _sptraderapi.CTORATstpSPConditionOrderField_AppendConditionPrice_set
    __swig_getmethods__["AppendConditionPrice"] = _sptraderapi.CTORATstpSPConditionOrderField_AppendConditionPrice_get
    if _newclass:
        AppendConditionPrice = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_AppendConditionPrice_get, _sptraderapi.CTORATstpSPConditionOrderField_AppendConditionPrice_set)

	# 附加相关前置编号
    __swig_setmethods__["AppendRelativeFrontID"] = _sptraderapi.CTORATstpSPConditionOrderField_AppendRelativeFrontID_set
    __swig_getmethods__["AppendRelativeFrontID"] = _sptraderapi.CTORATstpSPConditionOrderField_AppendRelativeFrontID_get
    if _newclass:
        AppendRelativeFrontID = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_AppendRelativeFrontID_get, _sptraderapi.CTORATstpSPConditionOrderField_AppendRelativeFrontID_set)

	# 附加相关会话编号
    __swig_setmethods__["AppendRelativeSessionID"] = _sptraderapi.CTORATstpSPConditionOrderField_AppendRelativeSessionID_set
    __swig_getmethods__["AppendRelativeSessionID"] = _sptraderapi.CTORATstpSPConditionOrderField_AppendRelativeSessionID_get
    if _newclass:
        AppendRelativeSessionID = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_AppendRelativeSessionID_get, _sptraderapi.CTORATstpSPConditionOrderField_AppendRelativeSessionID_set)

	# 附加相关条件参数,可能为OrderRef、OrderSysID、Time和SecurityID
    __swig_setmethods__["AppendRelativeParam"] = _sptraderapi.CTORATstpSPConditionOrderField_AppendRelativeParam_set
    __swig_getmethods__["AppendRelativeParam"] = _sptraderapi.CTORATstpSPConditionOrderField_AppendRelativeParam_get
    if _newclass:
        AppendRelativeParam = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_AppendRelativeParam_get, _sptraderapi.CTORATstpSPConditionOrderField_AppendRelativeParam_set)

	# 前置编号
    __swig_setmethods__["FrontID"] = _sptraderapi.CTORATstpSPConditionOrderField_FrontID_set
    __swig_getmethods__["FrontID"] = _sptraderapi.CTORATstpSPConditionOrderField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_FrontID_get, _sptraderapi.CTORATstpSPConditionOrderField_FrontID_set)

	# 会话编号
    __swig_setmethods__["SessionID"] = _sptraderapi.CTORATstpSPConditionOrderField_SessionID_set
    __swig_getmethods__["SessionID"] = _sptraderapi.CTORATstpSPConditionOrderField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_SessionID_get, _sptraderapi.CTORATstpSPConditionOrderField_SessionID_set)

	# 经纪公司部门代码
    __swig_setmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPConditionOrderField_DepartmentID_set
    __swig_getmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPConditionOrderField_DepartmentID_get
    if _newclass:
        DepartmentID = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_DepartmentID_get, _sptraderapi.CTORATstpSPConditionOrderField_DepartmentID_set)

	# 条件单状态
    __swig_setmethods__["CondOrderStatus"] = _sptraderapi.CTORATstpSPConditionOrderField_CondOrderStatus_set
    __swig_getmethods__["CondOrderStatus"] = _sptraderapi.CTORATstpSPConditionOrderField_CondOrderStatus_get
    if _newclass:
        CondOrderStatus = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_CondOrderStatus_get, _sptraderapi.CTORATstpSPConditionOrderField_CondOrderStatus_set)

	# 状态信息
    __swig_setmethods__["StatusMsg"] = _sptraderapi.CTORATstpSPConditionOrderField_StatusMsg_set
    __swig_getmethods__["StatusMsg"] = _sptraderapi.CTORATstpSPConditionOrderField_StatusMsg_get
    if _newclass:
        StatusMsg = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_StatusMsg_get, _sptraderapi.CTORATstpSPConditionOrderField_StatusMsg_set)

	# 报单申报用户
    __swig_setmethods__["InsertUserID"] = _sptraderapi.CTORATstpSPConditionOrderField_InsertUserID_set
    __swig_getmethods__["InsertUserID"] = _sptraderapi.CTORATstpSPConditionOrderField_InsertUserID_get
    if _newclass:
        InsertUserID = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_InsertUserID_get, _sptraderapi.CTORATstpSPConditionOrderField_InsertUserID_set)

	# 报单日期
    __swig_setmethods__["InsertDate"] = _sptraderapi.CTORATstpSPConditionOrderField_InsertDate_set
    __swig_getmethods__["InsertDate"] = _sptraderapi.CTORATstpSPConditionOrderField_InsertDate_get
    if _newclass:
        InsertDate = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_InsertDate_get, _sptraderapi.CTORATstpSPConditionOrderField_InsertDate_set)

	# 委托时间
    __swig_setmethods__["InsertTime"] = _sptraderapi.CTORATstpSPConditionOrderField_InsertTime_set
    __swig_getmethods__["InsertTime"] = _sptraderapi.CTORATstpSPConditionOrderField_InsertTime_get
    if _newclass:
        InsertTime = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_InsertTime_get, _sptraderapi.CTORATstpSPConditionOrderField_InsertTime_set)

	# 申报时间(毫秒)
    __swig_setmethods__["InsertMillisec"] = _sptraderapi.CTORATstpSPConditionOrderField_InsertMillisec_set
    __swig_getmethods__["InsertMillisec"] = _sptraderapi.CTORATstpSPConditionOrderField_InsertMillisec_get
    if _newclass:
        InsertMillisec = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_InsertMillisec_get, _sptraderapi.CTORATstpSPConditionOrderField_InsertMillisec_set)

	# 撤销时间
    __swig_setmethods__["CancelTime"] = _sptraderapi.CTORATstpSPConditionOrderField_CancelTime_set
    __swig_getmethods__["CancelTime"] = _sptraderapi.CTORATstpSPConditionOrderField_CancelTime_get
    if _newclass:
        CancelTime = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_CancelTime_get, _sptraderapi.CTORATstpSPConditionOrderField_CancelTime_set)

	# 撤销用户
    __swig_setmethods__["CancelUserID"] = _sptraderapi.CTORATstpSPConditionOrderField_CancelUserID_set
    __swig_getmethods__["CancelUserID"] = _sptraderapi.CTORATstpSPConditionOrderField_CancelUserID_get
    if _newclass:
        CancelUserID = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_CancelUserID_get, _sptraderapi.CTORATstpSPConditionOrderField_CancelUserID_set)

	# 触发时间
    __swig_setmethods__["ActiveTime"] = _sptraderapi.CTORATstpSPConditionOrderField_ActiveTime_set
    __swig_getmethods__["ActiveTime"] = _sptraderapi.CTORATstpSPConditionOrderField_ActiveTime_get
    if _newclass:
        ActiveTime = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_ActiveTime_get, _sptraderapi.CTORATstpSPConditionOrderField_ActiveTime_set)

	# 委托方式
    __swig_setmethods__["Operway"] = _sptraderapi.CTORATstpSPConditionOrderField_Operway_set
    __swig_getmethods__["Operway"] = _sptraderapi.CTORATstpSPConditionOrderField_Operway_get
    if _newclass:
        Operway = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_Operway_get, _sptraderapi.CTORATstpSPConditionOrderField_Operway_set)

	# 硬盘序列号
    __swig_setmethods__["HDSerial"] = _sptraderapi.CTORATstpSPConditionOrderField_HDSerial_set
    __swig_getmethods__["HDSerial"] = _sptraderapi.CTORATstpSPConditionOrderField_HDSerial_get
    if _newclass:
        HDSerial = _swig_property(_sptraderapi.CTORATstpSPConditionOrderField_HDSerial_get, _sptraderapi.CTORATstpSPConditionOrderField_HDSerial_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPConditionOrderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPConditionOrderField
    __del__ = lambda self: None
CTORATstpSPConditionOrderField_swigregister = _sptraderapi.CTORATstpSPConditionOrderField_swigregister
CTORATstpSPConditionOrderField_swigregister(CTORATstpSPConditionOrderField)




#########################################条件单操作录入############################################
class CTORATstpSPInputCondOrderActionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPInputCondOrderActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPInputCondOrderActionField, name)
    __repr__ = _swig_repr

	# 一个交易所的编号
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPInputCondOrderActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPInputCondOrderActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderActionField_ExchangeID_get, _sptraderapi.CTORATstpSPInputCondOrderActionField_ExchangeID_set)

	# 条件单操作引用
    __swig_setmethods__["CondOrderActionRef"] = _sptraderapi.CTORATstpSPInputCondOrderActionField_CondOrderActionRef_set
    __swig_getmethods__["CondOrderActionRef"] = _sptraderapi.CTORATstpSPInputCondOrderActionField_CondOrderActionRef_get
    if _newclass:
        CondOrderActionRef = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderActionField_CondOrderActionRef_get, _sptraderapi.CTORATstpSPInputCondOrderActionField_CondOrderActionRef_set)

	# 条件单引用
    __swig_setmethods__["CondOrderRef"] = _sptraderapi.CTORATstpSPInputCondOrderActionField_CondOrderRef_set
    __swig_getmethods__["CondOrderRef"] = _sptraderapi.CTORATstpSPInputCondOrderActionField_CondOrderRef_get
    if _newclass:
        CondOrderRef = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderActionField_CondOrderRef_get, _sptraderapi.CTORATstpSPInputCondOrderActionField_CondOrderRef_set)

	# 前置编号
    __swig_setmethods__["FrontID"] = _sptraderapi.CTORATstpSPInputCondOrderActionField_FrontID_set
    __swig_getmethods__["FrontID"] = _sptraderapi.CTORATstpSPInputCondOrderActionField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderActionField_FrontID_get, _sptraderapi.CTORATstpSPInputCondOrderActionField_FrontID_set)

	# 会话编号
    __swig_setmethods__["SessionID"] = _sptraderapi.CTORATstpSPInputCondOrderActionField_SessionID_set
    __swig_getmethods__["SessionID"] = _sptraderapi.CTORATstpSPInputCondOrderActionField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderActionField_SessionID_get, _sptraderapi.CTORATstpSPInputCondOrderActionField_SessionID_set)

	# 报单编号
    __swig_setmethods__["CondOrderID"] = _sptraderapi.CTORATstpSPInputCondOrderActionField_CondOrderID_set
    __swig_getmethods__["CondOrderID"] = _sptraderapi.CTORATstpSPInputCondOrderActionField_CondOrderID_get
    if _newclass:
        CondOrderID = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderActionField_CondOrderID_get, _sptraderapi.CTORATstpSPInputCondOrderActionField_CondOrderID_set)

	# 委托操作标志
    __swig_setmethods__["OrderActionFlag"] = _sptraderapi.CTORATstpSPInputCondOrderActionField_OrderActionFlag_set
    __swig_getmethods__["OrderActionFlag"] = _sptraderapi.CTORATstpSPInputCondOrderActionField_OrderActionFlag_get
    if _newclass:
        OrderActionFlag = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderActionField_OrderActionFlag_get, _sptraderapi.CTORATstpSPInputCondOrderActionField_OrderActionFlag_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPInputCondOrderActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPInputCondOrderActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderActionField_InvestorID_get, _sptraderapi.CTORATstpSPInputCondOrderActionField_InvestorID_set)

	# 合约在系统中的编号
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPInputCondOrderActionField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPInputCondOrderActionField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderActionField_SecurityID_get, _sptraderapi.CTORATstpSPInputCondOrderActionField_SecurityID_set)

	# IP地址（已废弃）
    __swig_setmethods__["IPAddress"] = _sptraderapi.CTORATstpSPInputCondOrderActionField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _sptraderapi.CTORATstpSPInputCondOrderActionField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderActionField_IPAddress_get, _sptraderapi.CTORATstpSPInputCondOrderActionField_IPAddress_set)

	# Mac地址（已废弃）
    __swig_setmethods__["MacAddress"] = _sptraderapi.CTORATstpSPInputCondOrderActionField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _sptraderapi.CTORATstpSPInputCondOrderActionField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderActionField_MacAddress_get, _sptraderapi.CTORATstpSPInputCondOrderActionField_MacAddress_set)

	# 条件单撤单编号
    __swig_setmethods__["CancelCondOrderID"] = _sptraderapi.CTORATstpSPInputCondOrderActionField_CancelCondOrderID_set
    __swig_getmethods__["CancelCondOrderID"] = _sptraderapi.CTORATstpSPInputCondOrderActionField_CancelCondOrderID_get
    if _newclass:
        CancelCondOrderID = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderActionField_CancelCondOrderID_get, _sptraderapi.CTORATstpSPInputCondOrderActionField_CancelCondOrderID_set)

	# 终端信息
    __swig_setmethods__["TerminalInfo"] = _sptraderapi.CTORATstpSPInputCondOrderActionField_TerminalInfo_set
    __swig_getmethods__["TerminalInfo"] = _sptraderapi.CTORATstpSPInputCondOrderActionField_TerminalInfo_get
    if _newclass:
        TerminalInfo = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderActionField_TerminalInfo_get, _sptraderapi.CTORATstpSPInputCondOrderActionField_TerminalInfo_set)

	# 长字符串附加信息
    __swig_setmethods__["BInfo"] = _sptraderapi.CTORATstpSPInputCondOrderActionField_BInfo_set
    __swig_getmethods__["BInfo"] = _sptraderapi.CTORATstpSPInputCondOrderActionField_BInfo_get
    if _newclass:
        BInfo = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderActionField_BInfo_get, _sptraderapi.CTORATstpSPInputCondOrderActionField_BInfo_set)

	# 短字符串附加信息
    __swig_setmethods__["SInfo"] = _sptraderapi.CTORATstpSPInputCondOrderActionField_SInfo_set
    __swig_getmethods__["SInfo"] = _sptraderapi.CTORATstpSPInputCondOrderActionField_SInfo_get
    if _newclass:
        SInfo = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderActionField_SInfo_get, _sptraderapi.CTORATstpSPInputCondOrderActionField_SInfo_set)

	# 整形附加信息
    __swig_setmethods__["IInfo"] = _sptraderapi.CTORATstpSPInputCondOrderActionField_IInfo_set
    __swig_getmethods__["IInfo"] = _sptraderapi.CTORATstpSPInputCondOrderActionField_IInfo_get
    if _newclass:
        IInfo = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderActionField_IInfo_get, _sptraderapi.CTORATstpSPInputCondOrderActionField_IInfo_set)

	# 委托方式
    __swig_setmethods__["Operway"] = _sptraderapi.CTORATstpSPInputCondOrderActionField_Operway_set
    __swig_getmethods__["Operway"] = _sptraderapi.CTORATstpSPInputCondOrderActionField_Operway_get
    if _newclass:
        Operway = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderActionField_Operway_get, _sptraderapi.CTORATstpSPInputCondOrderActionField_Operway_set)

	# 硬盘序列号
    __swig_setmethods__["HDSerial"] = _sptraderapi.CTORATstpSPInputCondOrderActionField_HDSerial_set
    __swig_getmethods__["HDSerial"] = _sptraderapi.CTORATstpSPInputCondOrderActionField_HDSerial_get
    if _newclass:
        HDSerial = _swig_property(_sptraderapi.CTORATstpSPInputCondOrderActionField_HDSerial_get, _sptraderapi.CTORATstpSPInputCondOrderActionField_HDSerial_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPInputCondOrderActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPInputCondOrderActionField
    __del__ = lambda self: None
CTORATstpSPInputCondOrderActionField_swigregister = _sptraderapi.CTORATstpSPInputCondOrderActionField_swigregister
CTORATstpSPInputCondOrderActionField_swigregister(CTORATstpSPInputCondOrderActionField)




#########################################资金转移############################################
class CTORATstpSPInputTransferFundField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPInputTransferFundField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPInputTransferFundField, name)
    __repr__ = _swig_repr

	# 申请流水号
    __swig_setmethods__["ApplySerial"] = _sptraderapi.CTORATstpSPInputTransferFundField_ApplySerial_set
    __swig_getmethods__["ApplySerial"] = _sptraderapi.CTORATstpSPInputTransferFundField_ApplySerial_get
    if _newclass:
        ApplySerial = _swig_property(_sptraderapi.CTORATstpSPInputTransferFundField_ApplySerial_get, _sptraderapi.CTORATstpSPInputTransferFundField_ApplySerial_set)

	# 资金账户
    __swig_setmethods__["AccountID"] = _sptraderapi.CTORATstpSPInputTransferFundField_AccountID_set
    __swig_getmethods__["AccountID"] = _sptraderapi.CTORATstpSPInputTransferFundField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_sptraderapi.CTORATstpSPInputTransferFundField_AccountID_get, _sptraderapi.CTORATstpSPInputTransferFundField_AccountID_set)

	# 币种
    __swig_setmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPInputTransferFundField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPInputTransferFundField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_sptraderapi.CTORATstpSPInputTransferFundField_CurrencyID_get, _sptraderapi.CTORATstpSPInputTransferFundField_CurrencyID_set)

	# 转移方向
    __swig_setmethods__["TransferDirection"] = _sptraderapi.CTORATstpSPInputTransferFundField_TransferDirection_set
    __swig_getmethods__["TransferDirection"] = _sptraderapi.CTORATstpSPInputTransferFundField_TransferDirection_get
    if _newclass:
        TransferDirection = _swig_property(_sptraderapi.CTORATstpSPInputTransferFundField_TransferDirection_get, _sptraderapi.CTORATstpSPInputTransferFundField_TransferDirection_set)

	# 转账金额
    __swig_setmethods__["Amount"] = _sptraderapi.CTORATstpSPInputTransferFundField_Amount_set
    __swig_getmethods__["Amount"] = _sptraderapi.CTORATstpSPInputTransferFundField_Amount_get
    if _newclass:
        Amount = _swig_property(_sptraderapi.CTORATstpSPInputTransferFundField_Amount_get, _sptraderapi.CTORATstpSPInputTransferFundField_Amount_set)

	# 经纪公司部门代码
    __swig_setmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPInputTransferFundField_DepartmentID_set
    __swig_getmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPInputTransferFundField_DepartmentID_get
    if _newclass:
        DepartmentID = _swig_property(_sptraderapi.CTORATstpSPInputTransferFundField_DepartmentID_get, _sptraderapi.CTORATstpSPInputTransferFundField_DepartmentID_set)

	# 资金密码
    __swig_setmethods__["TradingAccountPassword"] = _sptraderapi.CTORATstpSPInputTransferFundField_TradingAccountPassword_set
    __swig_getmethods__["TradingAccountPassword"] = _sptraderapi.CTORATstpSPInputTransferFundField_TradingAccountPassword_get
    if _newclass:
        TradingAccountPassword = _swig_property(_sptraderapi.CTORATstpSPInputTransferFundField_TradingAccountPassword_get, _sptraderapi.CTORATstpSPInputTransferFundField_TradingAccountPassword_set)

	# 银行代码
    __swig_setmethods__["BankID"] = _sptraderapi.CTORATstpSPInputTransferFundField_BankID_set
    __swig_getmethods__["BankID"] = _sptraderapi.CTORATstpSPInputTransferFundField_BankID_get
    if _newclass:
        BankID = _swig_property(_sptraderapi.CTORATstpSPInputTransferFundField_BankID_get, _sptraderapi.CTORATstpSPInputTransferFundField_BankID_set)

	# 银行账户密码
    __swig_setmethods__["BankAccountPassword"] = _sptraderapi.CTORATstpSPInputTransferFundField_BankAccountPassword_set
    __swig_getmethods__["BankAccountPassword"] = _sptraderapi.CTORATstpSPInputTransferFundField_BankAccountPassword_get
    if _newclass:
        BankAccountPassword = _swig_property(_sptraderapi.CTORATstpSPInputTransferFundField_BankAccountPassword_get, _sptraderapi.CTORATstpSPInputTransferFundField_BankAccountPassword_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPInputTransferFundField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPInputTransferFundField
    __del__ = lambda self: None
CTORATstpSPInputTransferFundField_swigregister = _sptraderapi.CTORATstpSPInputTransferFundField_swigregister
CTORATstpSPInputTransferFundField_swigregister(CTORATstpSPInputTransferFundField)




#########################################资金转移回报############################################
class CTORATstpSPTransferFundField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPTransferFundField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPTransferFundField, name)
    __repr__ = _swig_repr

	# 转账流水号(后台编号)
    __swig_setmethods__["FundSerial"] = _sptraderapi.CTORATstpSPTransferFundField_FundSerial_set
    __swig_getmethods__["FundSerial"] = _sptraderapi.CTORATstpSPTransferFundField_FundSerial_get
    if _newclass:
        FundSerial = _swig_property(_sptraderapi.CTORATstpSPTransferFundField_FundSerial_get, _sptraderapi.CTORATstpSPTransferFundField_FundSerial_set)

	# 申请流水号
    __swig_setmethods__["ApplySerial"] = _sptraderapi.CTORATstpSPTransferFundField_ApplySerial_set
    __swig_getmethods__["ApplySerial"] = _sptraderapi.CTORATstpSPTransferFundField_ApplySerial_get
    if _newclass:
        ApplySerial = _swig_property(_sptraderapi.CTORATstpSPTransferFundField_ApplySerial_get, _sptraderapi.CTORATstpSPTransferFundField_ApplySerial_set)

	# 前置编号
    __swig_setmethods__["FrontID"] = _sptraderapi.CTORATstpSPTransferFundField_FrontID_set
    __swig_getmethods__["FrontID"] = _sptraderapi.CTORATstpSPTransferFundField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_sptraderapi.CTORATstpSPTransferFundField_FrontID_get, _sptraderapi.CTORATstpSPTransferFundField_FrontID_set)

	# 会话编号
    __swig_setmethods__["SessionID"] = _sptraderapi.CTORATstpSPTransferFundField_SessionID_set
    __swig_getmethods__["SessionID"] = _sptraderapi.CTORATstpSPTransferFundField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_sptraderapi.CTORATstpSPTransferFundField_SessionID_get, _sptraderapi.CTORATstpSPTransferFundField_SessionID_set)

	# 资金账户代码
    __swig_setmethods__["AccountID"] = _sptraderapi.CTORATstpSPTransferFundField_AccountID_set
    __swig_getmethods__["AccountID"] = _sptraderapi.CTORATstpSPTransferFundField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_sptraderapi.CTORATstpSPTransferFundField_AccountID_get, _sptraderapi.CTORATstpSPTransferFundField_AccountID_set)

	# 币种代码
    __swig_setmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPTransferFundField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPTransferFundField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_sptraderapi.CTORATstpSPTransferFundField_CurrencyID_get, _sptraderapi.CTORATstpSPTransferFundField_CurrencyID_set)

	# 转移方向
    __swig_setmethods__["TransferDirection"] = _sptraderapi.CTORATstpSPTransferFundField_TransferDirection_set
    __swig_getmethods__["TransferDirection"] = _sptraderapi.CTORATstpSPTransferFundField_TransferDirection_get
    if _newclass:
        TransferDirection = _swig_property(_sptraderapi.CTORATstpSPTransferFundField_TransferDirection_get, _sptraderapi.CTORATstpSPTransferFundField_TransferDirection_set)

	# 资金账户当日出入金金额
    __swig_setmethods__["Amount"] = _sptraderapi.CTORATstpSPTransferFundField_Amount_set
    __swig_getmethods__["Amount"] = _sptraderapi.CTORATstpSPTransferFundField_Amount_get
    if _newclass:
        Amount = _swig_property(_sptraderapi.CTORATstpSPTransferFundField_Amount_get, _sptraderapi.CTORATstpSPTransferFundField_Amount_set)

	# 转移状态
    __swig_setmethods__["TransferStatus"] = _sptraderapi.CTORATstpSPTransferFundField_TransferStatus_set
    __swig_getmethods__["TransferStatus"] = _sptraderapi.CTORATstpSPTransferFundField_TransferStatus_get
    if _newclass:
        TransferStatus = _swig_property(_sptraderapi.CTORATstpSPTransferFundField_TransferStatus_get, _sptraderapi.CTORATstpSPTransferFundField_TransferStatus_set)

	# 操作人员
    __swig_setmethods__["OperatorID"] = _sptraderapi.CTORATstpSPTransferFundField_OperatorID_set
    __swig_getmethods__["OperatorID"] = _sptraderapi.CTORATstpSPTransferFundField_OperatorID_get
    if _newclass:
        OperatorID = _swig_property(_sptraderapi.CTORATstpSPTransferFundField_OperatorID_get, _sptraderapi.CTORATstpSPTransferFundField_OperatorID_set)

	# 操作日期
    __swig_setmethods__["OperateDate"] = _sptraderapi.CTORATstpSPTransferFundField_OperateDate_set
    __swig_getmethods__["OperateDate"] = _sptraderapi.CTORATstpSPTransferFundField_OperateDate_get
    if _newclass:
        OperateDate = _swig_property(_sptraderapi.CTORATstpSPTransferFundField_OperateDate_get, _sptraderapi.CTORATstpSPTransferFundField_OperateDate_set)

	# 操作时间
    __swig_setmethods__["OperateTime"] = _sptraderapi.CTORATstpSPTransferFundField_OperateTime_set
    __swig_getmethods__["OperateTime"] = _sptraderapi.CTORATstpSPTransferFundField_OperateTime_get
    if _newclass:
        OperateTime = _swig_property(_sptraderapi.CTORATstpSPTransferFundField_OperateTime_get, _sptraderapi.CTORATstpSPTransferFundField_OperateTime_set)

	# 经纪公司部门代码
    __swig_setmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPTransferFundField_DepartmentID_set
    __swig_getmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPTransferFundField_DepartmentID_get
    if _newclass:
        DepartmentID = _swig_property(_sptraderapi.CTORATstpSPTransferFundField_DepartmentID_get, _sptraderapi.CTORATstpSPTransferFundField_DepartmentID_set)

	# 签约银行账户
    __swig_setmethods__["BankAccountID"] = _sptraderapi.CTORATstpSPTransferFundField_BankAccountID_set
    __swig_getmethods__["BankAccountID"] = _sptraderapi.CTORATstpSPTransferFundField_BankAccountID_get
    if _newclass:
        BankAccountID = _swig_property(_sptraderapi.CTORATstpSPTransferFundField_BankAccountID_get, _sptraderapi.CTORATstpSPTransferFundField_BankAccountID_set)

	# 银行代码
    __swig_setmethods__["BankID"] = _sptraderapi.CTORATstpSPTransferFundField_BankID_set
    __swig_getmethods__["BankID"] = _sptraderapi.CTORATstpSPTransferFundField_BankID_get
    if _newclass:
        BankID = _swig_property(_sptraderapi.CTORATstpSPTransferFundField_BankID_get, _sptraderapi.CTORATstpSPTransferFundField_BankID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPTransferFundField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPTransferFundField
    __del__ = lambda self: None
CTORATstpSPTransferFundField_swigregister = _sptraderapi.CTORATstpSPTransferFundField_swigregister
CTORATstpSPTransferFundField_swigregister(CTORATstpSPTransferFundField)




#########################################仓位转移############################################
class CTORATstpSPInputTransferPositionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPInputTransferPositionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPInputTransferPositionField, name)
    __repr__ = _swig_repr

	# 申请流水号
    __swig_setmethods__["ApplySerial"] = _sptraderapi.CTORATstpSPInputTransferPositionField_ApplySerial_set
    __swig_getmethods__["ApplySerial"] = _sptraderapi.CTORATstpSPInputTransferPositionField_ApplySerial_get
    if _newclass:
        ApplySerial = _swig_property(_sptraderapi.CTORATstpSPInputTransferPositionField_ApplySerial_get, _sptraderapi.CTORATstpSPInputTransferPositionField_ApplySerial_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPInputTransferPositionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPInputTransferPositionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPInputTransferPositionField_InvestorID_get, _sptraderapi.CTORATstpSPInputTransferPositionField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPInputTransferPositionField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPInputTransferPositionField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPInputTransferPositionField_BusinessUnitID_get, _sptraderapi.CTORATstpSPInputTransferPositionField_BusinessUnitID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPInputTransferPositionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPInputTransferPositionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPInputTransferPositionField_ExchangeID_get, _sptraderapi.CTORATstpSPInputTransferPositionField_ExchangeID_set)

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPInputTransferPositionField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPInputTransferPositionField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPInputTransferPositionField_MarketID_get, _sptraderapi.CTORATstpSPInputTransferPositionField_MarketID_set)

	# 目前该字段存放的是上证所和深圳的股东代码。
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPInputTransferPositionField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPInputTransferPositionField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPInputTransferPositionField_ShareholderID_get, _sptraderapi.CTORATstpSPInputTransferPositionField_ShareholderID_set)

	# 合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPInputTransferPositionField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPInputTransferPositionField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPInputTransferPositionField_SecurityID_get, _sptraderapi.CTORATstpSPInputTransferPositionField_SecurityID_set)

	# 转移方向
    __swig_setmethods__["TransferDirection"] = _sptraderapi.CTORATstpSPInputTransferPositionField_TransferDirection_set
    __swig_getmethods__["TransferDirection"] = _sptraderapi.CTORATstpSPInputTransferPositionField_TransferDirection_get
    if _newclass:
        TransferDirection = _swig_property(_sptraderapi.CTORATstpSPInputTransferPositionField_TransferDirection_get, _sptraderapi.CTORATstpSPInputTransferPositionField_TransferDirection_set)

	# 数量
    __swig_setmethods__["Volume"] = _sptraderapi.CTORATstpSPInputTransferPositionField_Volume_set
    __swig_getmethods__["Volume"] = _sptraderapi.CTORATstpSPInputTransferPositionField_Volume_get
    if _newclass:
        Volume = _swig_property(_sptraderapi.CTORATstpSPInputTransferPositionField_Volume_get, _sptraderapi.CTORATstpSPInputTransferPositionField_Volume_set)

	# 转移持仓类型
    __swig_setmethods__["TransferPositionType"] = _sptraderapi.CTORATstpSPInputTransferPositionField_TransferPositionType_set
    __swig_getmethods__["TransferPositionType"] = _sptraderapi.CTORATstpSPInputTransferPositionField_TransferPositionType_get
    if _newclass:
        TransferPositionType = _swig_property(_sptraderapi.CTORATstpSPInputTransferPositionField_TransferPositionType_get, _sptraderapi.CTORATstpSPInputTransferPositionField_TransferPositionType_set)

	# 多、空
    __swig_setmethods__["PosiDirection"] = _sptraderapi.CTORATstpSPInputTransferPositionField_PosiDirection_set
    __swig_getmethods__["PosiDirection"] = _sptraderapi.CTORATstpSPInputTransferPositionField_PosiDirection_get
    if _newclass:
        PosiDirection = _swig_property(_sptraderapi.CTORATstpSPInputTransferPositionField_PosiDirection_get, _sptraderapi.CTORATstpSPInputTransferPositionField_PosiDirection_set)

	# 投机套保标志
    __swig_setmethods__["HedgeFlag"] = _sptraderapi.CTORATstpSPInputTransferPositionField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _sptraderapi.CTORATstpSPInputTransferPositionField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_sptraderapi.CTORATstpSPInputTransferPositionField_HedgeFlag_get, _sptraderapi.CTORATstpSPInputTransferPositionField_HedgeFlag_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPInputTransferPositionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPInputTransferPositionField
    __del__ = lambda self: None
CTORATstpSPInputTransferPositionField_swigregister = _sptraderapi.CTORATstpSPInputTransferPositionField_swigregister
CTORATstpSPInputTransferPositionField_swigregister(CTORATstpSPInputTransferPositionField)




#########################################仓位转移回报############################################
class CTORATstpSPTransferPositionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPTransferPositionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPTransferPositionField, name)
    __repr__ = _swig_repr

	# 仓位转移流水号
    __swig_setmethods__["PositionSerial"] = _sptraderapi.CTORATstpSPTransferPositionField_PositionSerial_set
    __swig_getmethods__["PositionSerial"] = _sptraderapi.CTORATstpSPTransferPositionField_PositionSerial_get
    if _newclass:
        PositionSerial = _swig_property(_sptraderapi.CTORATstpSPTransferPositionField_PositionSerial_get, _sptraderapi.CTORATstpSPTransferPositionField_PositionSerial_set)

	# 申请流水号
    __swig_setmethods__["ApplySerial"] = _sptraderapi.CTORATstpSPTransferPositionField_ApplySerial_set
    __swig_getmethods__["ApplySerial"] = _sptraderapi.CTORATstpSPTransferPositionField_ApplySerial_get
    if _newclass:
        ApplySerial = _swig_property(_sptraderapi.CTORATstpSPTransferPositionField_ApplySerial_get, _sptraderapi.CTORATstpSPTransferPositionField_ApplySerial_set)

	# 前置编号
    __swig_setmethods__["FrontID"] = _sptraderapi.CTORATstpSPTransferPositionField_FrontID_set
    __swig_getmethods__["FrontID"] = _sptraderapi.CTORATstpSPTransferPositionField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_sptraderapi.CTORATstpSPTransferPositionField_FrontID_get, _sptraderapi.CTORATstpSPTransferPositionField_FrontID_set)

	# 会话编号
    __swig_setmethods__["SessionID"] = _sptraderapi.CTORATstpSPTransferPositionField_SessionID_set
    __swig_getmethods__["SessionID"] = _sptraderapi.CTORATstpSPTransferPositionField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_sptraderapi.CTORATstpSPTransferPositionField_SessionID_get, _sptraderapi.CTORATstpSPTransferPositionField_SessionID_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPTransferPositionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPTransferPositionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPTransferPositionField_InvestorID_get, _sptraderapi.CTORATstpSPTransferPositionField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPTransferPositionField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPTransferPositionField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPTransferPositionField_BusinessUnitID_get, _sptraderapi.CTORATstpSPTransferPositionField_BusinessUnitID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPTransferPositionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPTransferPositionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPTransferPositionField_ExchangeID_get, _sptraderapi.CTORATstpSPTransferPositionField_ExchangeID_set)

	# 目前该字段存放的是上证所和深圳的股东代码。
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPTransferPositionField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPTransferPositionField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPTransferPositionField_ShareholderID_get, _sptraderapi.CTORATstpSPTransferPositionField_ShareholderID_set)

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPTransferPositionField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPTransferPositionField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPTransferPositionField_MarketID_get, _sptraderapi.CTORATstpSPTransferPositionField_MarketID_set)

	# 多、空
    __swig_setmethods__["PosiDirection"] = _sptraderapi.CTORATstpSPTransferPositionField_PosiDirection_set
    __swig_getmethods__["PosiDirection"] = _sptraderapi.CTORATstpSPTransferPositionField_PosiDirection_get
    if _newclass:
        PosiDirection = _swig_property(_sptraderapi.CTORATstpSPTransferPositionField_PosiDirection_get, _sptraderapi.CTORATstpSPTransferPositionField_PosiDirection_set)

	# 投机套保标志
    __swig_setmethods__["HedgeFlag"] = _sptraderapi.CTORATstpSPTransferPositionField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _sptraderapi.CTORATstpSPTransferPositionField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_sptraderapi.CTORATstpSPTransferPositionField_HedgeFlag_get, _sptraderapi.CTORATstpSPTransferPositionField_HedgeFlag_set)

	# 证券代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPTransferPositionField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPTransferPositionField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPTransferPositionField_SecurityID_get, _sptraderapi.CTORATstpSPTransferPositionField_SecurityID_set)

	# 交易日
    __swig_setmethods__["TradingDay"] = _sptraderapi.CTORATstpSPTransferPositionField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _sptraderapi.CTORATstpSPTransferPositionField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_sptraderapi.CTORATstpSPTransferPositionField_TradingDay_get, _sptraderapi.CTORATstpSPTransferPositionField_TradingDay_set)

	# 转移方向
    __swig_setmethods__["TransferDirection"] = _sptraderapi.CTORATstpSPTransferPositionField_TransferDirection_set
    __swig_getmethods__["TransferDirection"] = _sptraderapi.CTORATstpSPTransferPositionField_TransferDirection_get
    if _newclass:
        TransferDirection = _swig_property(_sptraderapi.CTORATstpSPTransferPositionField_TransferDirection_get, _sptraderapi.CTORATstpSPTransferPositionField_TransferDirection_set)

	# 转移持仓类型
    __swig_setmethods__["TransferPositionType"] = _sptraderapi.CTORATstpSPTransferPositionField_TransferPositionType_set
    __swig_getmethods__["TransferPositionType"] = _sptraderapi.CTORATstpSPTransferPositionField_TransferPositionType_get
    if _newclass:
        TransferPositionType = _swig_property(_sptraderapi.CTORATstpSPTransferPositionField_TransferPositionType_get, _sptraderapi.CTORATstpSPTransferPositionField_TransferPositionType_set)

	# 昨日仓位转入转出数量。
    __swig_setmethods__["HistoryVolume"] = _sptraderapi.CTORATstpSPTransferPositionField_HistoryVolume_set
    __swig_getmethods__["HistoryVolume"] = _sptraderapi.CTORATstpSPTransferPositionField_HistoryVolume_get
    if _newclass:
        HistoryVolume = _swig_property(_sptraderapi.CTORATstpSPTransferPositionField_HistoryVolume_get, _sptraderapi.CTORATstpSPTransferPositionField_HistoryVolume_set)

	# 今日仓位转入转出数量。
    __swig_setmethods__["TodayVolume"] = _sptraderapi.CTORATstpSPTransferPositionField_TodayVolume_set
    __swig_getmethods__["TodayVolume"] = _sptraderapi.CTORATstpSPTransferPositionField_TodayVolume_get
    if _newclass:
        TodayVolume = _swig_property(_sptraderapi.CTORATstpSPTransferPositionField_TodayVolume_get, _sptraderapi.CTORATstpSPTransferPositionField_TodayVolume_set)

	# 转移状态：0：正常，1：已冲正
    __swig_setmethods__["TransferStatus"] = _sptraderapi.CTORATstpSPTransferPositionField_TransferStatus_set
    __swig_getmethods__["TransferStatus"] = _sptraderapi.CTORATstpSPTransferPositionField_TransferStatus_get
    if _newclass:
        TransferStatus = _swig_property(_sptraderapi.CTORATstpSPTransferPositionField_TransferStatus_get, _sptraderapi.CTORATstpSPTransferPositionField_TransferStatus_set)

	# 操作人员
    __swig_setmethods__["OperatorID"] = _sptraderapi.CTORATstpSPTransferPositionField_OperatorID_set
    __swig_getmethods__["OperatorID"] = _sptraderapi.CTORATstpSPTransferPositionField_OperatorID_get
    if _newclass:
        OperatorID = _swig_property(_sptraderapi.CTORATstpSPTransferPositionField_OperatorID_get, _sptraderapi.CTORATstpSPTransferPositionField_OperatorID_set)

	# 操作日期
    __swig_setmethods__["OperateDate"] = _sptraderapi.CTORATstpSPTransferPositionField_OperateDate_set
    __swig_getmethods__["OperateDate"] = _sptraderapi.CTORATstpSPTransferPositionField_OperateDate_get
    if _newclass:
        OperateDate = _swig_property(_sptraderapi.CTORATstpSPTransferPositionField_OperateDate_get, _sptraderapi.CTORATstpSPTransferPositionField_OperateDate_set)

	# 操作时间
    __swig_setmethods__["OperateTime"] = _sptraderapi.CTORATstpSPTransferPositionField_OperateTime_set
    __swig_getmethods__["OperateTime"] = _sptraderapi.CTORATstpSPTransferPositionField_OperateTime_get
    if _newclass:
        OperateTime = _swig_property(_sptraderapi.CTORATstpSPTransferPositionField_OperateTime_get, _sptraderapi.CTORATstpSPTransferPositionField_OperateTime_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPTransferPositionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPTransferPositionField
    __del__ = lambda self: None
CTORATstpSPTransferPositionField_swigregister = _sptraderapi.CTORATstpSPTransferPositionField_swigregister
CTORATstpSPTransferPositionField_swigregister(CTORATstpSPTransferPositionField)




#########################################证券仓位转移请求############################################
class CTORATstpSPInputTransferStockPositionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPInputTransferStockPositionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPInputTransferStockPositionField, name)
    __repr__ = _swig_repr

	# 申请流水号
    __swig_setmethods__["ApplySerial"] = _sptraderapi.CTORATstpSPInputTransferStockPositionField_ApplySerial_set
    __swig_getmethods__["ApplySerial"] = _sptraderapi.CTORATstpSPInputTransferStockPositionField_ApplySerial_get
    if _newclass:
        ApplySerial = _swig_property(_sptraderapi.CTORATstpSPInputTransferStockPositionField_ApplySerial_get, _sptraderapi.CTORATstpSPInputTransferStockPositionField_ApplySerial_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPInputTransferStockPositionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPInputTransferStockPositionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPInputTransferStockPositionField_InvestorID_get, _sptraderapi.CTORATstpSPInputTransferStockPositionField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPInputTransferStockPositionField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPInputTransferStockPositionField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPInputTransferStockPositionField_BusinessUnitID_get, _sptraderapi.CTORATstpSPInputTransferStockPositionField_BusinessUnitID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPInputTransferStockPositionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPInputTransferStockPositionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPInputTransferStockPositionField_ExchangeID_get, _sptraderapi.CTORATstpSPInputTransferStockPositionField_ExchangeID_set)

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPInputTransferStockPositionField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPInputTransferStockPositionField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPInputTransferStockPositionField_MarketID_get, _sptraderapi.CTORATstpSPInputTransferStockPositionField_MarketID_set)

	# 目前该字段存放的是上证所和深圳的股东代码。
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPInputTransferStockPositionField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPInputTransferStockPositionField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPInputTransferStockPositionField_ShareholderID_get, _sptraderapi.CTORATstpSPInputTransferStockPositionField_ShareholderID_set)

	# 合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPInputTransferStockPositionField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPInputTransferStockPositionField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPInputTransferStockPositionField_SecurityID_get, _sptraderapi.CTORATstpSPInputTransferStockPositionField_SecurityID_set)

	# 个股期权标的现货转移原因
    __swig_setmethods__["SPStockTransferReason"] = _sptraderapi.CTORATstpSPInputTransferStockPositionField_SPStockTransferReason_set
    __swig_getmethods__["SPStockTransferReason"] = _sptraderapi.CTORATstpSPInputTransferStockPositionField_SPStockTransferReason_get
    if _newclass:
        SPStockTransferReason = _swig_property(_sptraderapi.CTORATstpSPInputTransferStockPositionField_SPStockTransferReason_get, _sptraderapi.CTORATstpSPInputTransferStockPositionField_SPStockTransferReason_set)

	# 数量
    __swig_setmethods__["Volume"] = _sptraderapi.CTORATstpSPInputTransferStockPositionField_Volume_set
    __swig_getmethods__["Volume"] = _sptraderapi.CTORATstpSPInputTransferStockPositionField_Volume_get
    if _newclass:
        Volume = _swig_property(_sptraderapi.CTORATstpSPInputTransferStockPositionField_Volume_get, _sptraderapi.CTORATstpSPInputTransferStockPositionField_Volume_set)

	# 转移持仓类型
    __swig_setmethods__["TransferPositionType"] = _sptraderapi.CTORATstpSPInputTransferStockPositionField_TransferPositionType_set
    __swig_getmethods__["TransferPositionType"] = _sptraderapi.CTORATstpSPInputTransferStockPositionField_TransferPositionType_get
    if _newclass:
        TransferPositionType = _swig_property(_sptraderapi.CTORATstpSPInputTransferStockPositionField_TransferPositionType_get, _sptraderapi.CTORATstpSPInputTransferStockPositionField_TransferPositionType_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPInputTransferStockPositionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPInputTransferStockPositionField
    __del__ = lambda self: None
CTORATstpSPInputTransferStockPositionField_swigregister = _sptraderapi.CTORATstpSPInputTransferStockPositionField_swigregister
CTORATstpSPInputTransferStockPositionField_swigregister(CTORATstpSPInputTransferStockPositionField)




#########################################证券仓位转移回报############################################
class CTORATstpSPTransferStockPositionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPTransferStockPositionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPTransferStockPositionField, name)
    __repr__ = _swig_repr

	# 仓位转移流水号
    __swig_setmethods__["PositionSerial"] = _sptraderapi.CTORATstpSPTransferStockPositionField_PositionSerial_set
    __swig_getmethods__["PositionSerial"] = _sptraderapi.CTORATstpSPTransferStockPositionField_PositionSerial_get
    if _newclass:
        PositionSerial = _swig_property(_sptraderapi.CTORATstpSPTransferStockPositionField_PositionSerial_get, _sptraderapi.CTORATstpSPTransferStockPositionField_PositionSerial_set)

	# 申请流水号
    __swig_setmethods__["ApplySerial"] = _sptraderapi.CTORATstpSPTransferStockPositionField_ApplySerial_set
    __swig_getmethods__["ApplySerial"] = _sptraderapi.CTORATstpSPTransferStockPositionField_ApplySerial_get
    if _newclass:
        ApplySerial = _swig_property(_sptraderapi.CTORATstpSPTransferStockPositionField_ApplySerial_get, _sptraderapi.CTORATstpSPTransferStockPositionField_ApplySerial_set)

	# 前置编号
    __swig_setmethods__["FrontID"] = _sptraderapi.CTORATstpSPTransferStockPositionField_FrontID_set
    __swig_getmethods__["FrontID"] = _sptraderapi.CTORATstpSPTransferStockPositionField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_sptraderapi.CTORATstpSPTransferStockPositionField_FrontID_get, _sptraderapi.CTORATstpSPTransferStockPositionField_FrontID_set)

	# 会话编号
    __swig_setmethods__["SessionID"] = _sptraderapi.CTORATstpSPTransferStockPositionField_SessionID_set
    __swig_getmethods__["SessionID"] = _sptraderapi.CTORATstpSPTransferStockPositionField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_sptraderapi.CTORATstpSPTransferStockPositionField_SessionID_get, _sptraderapi.CTORATstpSPTransferStockPositionField_SessionID_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPTransferStockPositionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPTransferStockPositionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPTransferStockPositionField_InvestorID_get, _sptraderapi.CTORATstpSPTransferStockPositionField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPTransferStockPositionField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPTransferStockPositionField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPTransferStockPositionField_BusinessUnitID_get, _sptraderapi.CTORATstpSPTransferStockPositionField_BusinessUnitID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPTransferStockPositionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPTransferStockPositionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPTransferStockPositionField_ExchangeID_get, _sptraderapi.CTORATstpSPTransferStockPositionField_ExchangeID_set)

	# 目前该字段存放的是上证所和深圳的股东代码。
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPTransferStockPositionField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPTransferStockPositionField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPTransferStockPositionField_ShareholderID_get, _sptraderapi.CTORATstpSPTransferStockPositionField_ShareholderID_set)

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPTransferStockPositionField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPTransferStockPositionField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPTransferStockPositionField_MarketID_get, _sptraderapi.CTORATstpSPTransferStockPositionField_MarketID_set)

	# 证券代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPTransferStockPositionField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPTransferStockPositionField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPTransferStockPositionField_SecurityID_get, _sptraderapi.CTORATstpSPTransferStockPositionField_SecurityID_set)

	# 交易日
    __swig_setmethods__["TradingDay"] = _sptraderapi.CTORATstpSPTransferStockPositionField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _sptraderapi.CTORATstpSPTransferStockPositionField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_sptraderapi.CTORATstpSPTransferStockPositionField_TradingDay_get, _sptraderapi.CTORATstpSPTransferStockPositionField_TradingDay_set)

	# 个股期权标的现货转移原因
    __swig_setmethods__["SPStockTransferReason"] = _sptraderapi.CTORATstpSPTransferStockPositionField_SPStockTransferReason_set
    __swig_getmethods__["SPStockTransferReason"] = _sptraderapi.CTORATstpSPTransferStockPositionField_SPStockTransferReason_get
    if _newclass:
        SPStockTransferReason = _swig_property(_sptraderapi.CTORATstpSPTransferStockPositionField_SPStockTransferReason_get, _sptraderapi.CTORATstpSPTransferStockPositionField_SPStockTransferReason_set)

	# 转移持仓类型
    __swig_setmethods__["TransferPositionType"] = _sptraderapi.CTORATstpSPTransferStockPositionField_TransferPositionType_set
    __swig_getmethods__["TransferPositionType"] = _sptraderapi.CTORATstpSPTransferStockPositionField_TransferPositionType_get
    if _newclass:
        TransferPositionType = _swig_property(_sptraderapi.CTORATstpSPTransferStockPositionField_TransferPositionType_get, _sptraderapi.CTORATstpSPTransferStockPositionField_TransferPositionType_set)

	# 昨日仓位转入转出数量
    __swig_setmethods__["HistoryVolume"] = _sptraderapi.CTORATstpSPTransferStockPositionField_HistoryVolume_set
    __swig_getmethods__["HistoryVolume"] = _sptraderapi.CTORATstpSPTransferStockPositionField_HistoryVolume_get
    if _newclass:
        HistoryVolume = _swig_property(_sptraderapi.CTORATstpSPTransferStockPositionField_HistoryVolume_get, _sptraderapi.CTORATstpSPTransferStockPositionField_HistoryVolume_set)

	# 今日买卖仓位转入转出数量
    __swig_setmethods__["TodayBSVolume"] = _sptraderapi.CTORATstpSPTransferStockPositionField_TodayBSVolume_set
    __swig_getmethods__["TodayBSVolume"] = _sptraderapi.CTORATstpSPTransferStockPositionField_TodayBSVolume_get
    if _newclass:
        TodayBSVolume = _swig_property(_sptraderapi.CTORATstpSPTransferStockPositionField_TodayBSVolume_get, _sptraderapi.CTORATstpSPTransferStockPositionField_TodayBSVolume_set)

	# 今日申赎仓位转入转出数量
    __swig_setmethods__["TodayPRVolume"] = _sptraderapi.CTORATstpSPTransferStockPositionField_TodayPRVolume_set
    __swig_getmethods__["TodayPRVolume"] = _sptraderapi.CTORATstpSPTransferStockPositionField_TodayPRVolume_get
    if _newclass:
        TodayPRVolume = _swig_property(_sptraderapi.CTORATstpSPTransferStockPositionField_TodayPRVolume_get, _sptraderapi.CTORATstpSPTransferStockPositionField_TodayPRVolume_set)

	# 正在处理、失败等
    __swig_setmethods__["TransferStatus"] = _sptraderapi.CTORATstpSPTransferStockPositionField_TransferStatus_set
    __swig_getmethods__["TransferStatus"] = _sptraderapi.CTORATstpSPTransferStockPositionField_TransferStatus_get
    if _newclass:
        TransferStatus = _swig_property(_sptraderapi.CTORATstpSPTransferStockPositionField_TransferStatus_get, _sptraderapi.CTORATstpSPTransferStockPositionField_TransferStatus_set)

	# 操作人员
    __swig_setmethods__["OperatorID"] = _sptraderapi.CTORATstpSPTransferStockPositionField_OperatorID_set
    __swig_getmethods__["OperatorID"] = _sptraderapi.CTORATstpSPTransferStockPositionField_OperatorID_get
    if _newclass:
        OperatorID = _swig_property(_sptraderapi.CTORATstpSPTransferStockPositionField_OperatorID_get, _sptraderapi.CTORATstpSPTransferStockPositionField_OperatorID_set)

	# 操作日期
    __swig_setmethods__["OperateDate"] = _sptraderapi.CTORATstpSPTransferStockPositionField_OperateDate_set
    __swig_getmethods__["OperateDate"] = _sptraderapi.CTORATstpSPTransferStockPositionField_OperateDate_get
    if _newclass:
        OperateDate = _swig_property(_sptraderapi.CTORATstpSPTransferStockPositionField_OperateDate_get, _sptraderapi.CTORATstpSPTransferStockPositionField_OperateDate_set)

	# 操作时间
    __swig_setmethods__["OperateTime"] = _sptraderapi.CTORATstpSPTransferStockPositionField_OperateTime_set
    __swig_getmethods__["OperateTime"] = _sptraderapi.CTORATstpSPTransferStockPositionField_OperateTime_get
    if _newclass:
        OperateTime = _swig_property(_sptraderapi.CTORATstpSPTransferStockPositionField_OperateTime_get, _sptraderapi.CTORATstpSPTransferStockPositionField_OperateTime_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPTransferStockPositionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPTransferStockPositionField
    __del__ = lambda self: None
CTORATstpSPTransferStockPositionField_swigregister = _sptraderapi.CTORATstpSPTransferStockPositionField_swigregister
CTORATstpSPTransferStockPositionField_swigregister(CTORATstpSPTransferStockPositionField)




#########################################查询集中交易系统资金请求############################################
class CTORATstpSPReqInquiryJZFundField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInquiryJZFundField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInquiryJZFundField, name)
    __repr__ = _swig_repr

	# 资金账户
    __swig_setmethods__["AccountID"] = _sptraderapi.CTORATstpSPReqInquiryJZFundField_AccountID_set
    __swig_getmethods__["AccountID"] = _sptraderapi.CTORATstpSPReqInquiryJZFundField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_sptraderapi.CTORATstpSPReqInquiryJZFundField_AccountID_get, _sptraderapi.CTORATstpSPReqInquiryJZFundField_AccountID_set)

	# 币种
    __swig_setmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPReqInquiryJZFundField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPReqInquiryJZFundField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_sptraderapi.CTORATstpSPReqInquiryJZFundField_CurrencyID_get, _sptraderapi.CTORATstpSPReqInquiryJZFundField_CurrencyID_set)

	# 经纪公司部门代码
    __swig_setmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPReqInquiryJZFundField_DepartmentID_set
    __swig_getmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPReqInquiryJZFundField_DepartmentID_get
    if _newclass:
        DepartmentID = _swig_property(_sptraderapi.CTORATstpSPReqInquiryJZFundField_DepartmentID_get, _sptraderapi.CTORATstpSPReqInquiryJZFundField_DepartmentID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInquiryJZFundField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInquiryJZFundField
    __del__ = lambda self: None
CTORATstpSPReqInquiryJZFundField_swigregister = _sptraderapi.CTORATstpSPReqInquiryJZFundField_swigregister
CTORATstpSPReqInquiryJZFundField_swigregister(CTORATstpSPReqInquiryJZFundField)




#########################################查询集中交易系统资金响应############################################
class CTORATstpSPRspInquiryJZFundField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPRspInquiryJZFundField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPRspInquiryJZFundField, name)
    __repr__ = _swig_repr

	# 资金账户
    __swig_setmethods__["AccountID"] = _sptraderapi.CTORATstpSPRspInquiryJZFundField_AccountID_set
    __swig_getmethods__["AccountID"] = _sptraderapi.CTORATstpSPRspInquiryJZFundField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_sptraderapi.CTORATstpSPRspInquiryJZFundField_AccountID_get, _sptraderapi.CTORATstpSPRspInquiryJZFundField_AccountID_set)

	# 币种
    __swig_setmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPRspInquiryJZFundField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPRspInquiryJZFundField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_sptraderapi.CTORATstpSPRspInquiryJZFundField_CurrencyID_get, _sptraderapi.CTORATstpSPRspInquiryJZFundField_CurrencyID_set)

	# 可用金额
    __swig_setmethods__["UsefulMoney"] = _sptraderapi.CTORATstpSPRspInquiryJZFundField_UsefulMoney_set
    __swig_getmethods__["UsefulMoney"] = _sptraderapi.CTORATstpSPRspInquiryJZFundField_UsefulMoney_get
    if _newclass:
        UsefulMoney = _swig_property(_sptraderapi.CTORATstpSPRspInquiryJZFundField_UsefulMoney_get, _sptraderapi.CTORATstpSPRspInquiryJZFundField_UsefulMoney_set)

	# 可取额度
    __swig_setmethods__["FetchLimit"] = _sptraderapi.CTORATstpSPRspInquiryJZFundField_FetchLimit_set
    __swig_getmethods__["FetchLimit"] = _sptraderapi.CTORATstpSPRspInquiryJZFundField_FetchLimit_get
    if _newclass:
        FetchLimit = _swig_property(_sptraderapi.CTORATstpSPRspInquiryJZFundField_FetchLimit_get, _sptraderapi.CTORATstpSPRspInquiryJZFundField_FetchLimit_set)

	# 用户请求编号
    __swig_setmethods__["RequestID"] = _sptraderapi.CTORATstpSPRspInquiryJZFundField_RequestID_set
    __swig_getmethods__["RequestID"] = _sptraderapi.CTORATstpSPRspInquiryJZFundField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_sptraderapi.CTORATstpSPRspInquiryJZFundField_RequestID_get, _sptraderapi.CTORATstpSPRspInquiryJZFundField_RequestID_set)

	# 经纪公司部门代码
    __swig_setmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPRspInquiryJZFundField_DepartmentID_set
    __swig_getmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPRspInquiryJZFundField_DepartmentID_get
    if _newclass:
        DepartmentID = _swig_property(_sptraderapi.CTORATstpSPRspInquiryJZFundField_DepartmentID_get, _sptraderapi.CTORATstpSPRspInquiryJZFundField_DepartmentID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPRspInquiryJZFundField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPRspInquiryJZFundField
    __del__ = lambda self: None
CTORATstpSPRspInquiryJZFundField_swigregister = _sptraderapi.CTORATstpSPRspInquiryJZFundField_swigregister
CTORATstpSPRspInquiryJZFundField_swigregister(CTORATstpSPRspInquiryJZFundField)




#########################################回传交易数据############################################
class CTORATstpSPUploadTradeDataField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPUploadTradeDataField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPUploadTradeDataField, name)
    __repr__ = _swig_repr

	# 交易所代码，目前支持 SSE(上海证券交易所)和SZSE(深圳证券交易所)
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPUploadTradeDataField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPUploadTradeDataField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPUploadTradeDataField_ExchangeID_get, _sptraderapi.CTORATstpSPUploadTradeDataField_ExchangeID_set)

	# 交易日
    __swig_setmethods__["TradingDay"] = _sptraderapi.CTORATstpSPUploadTradeDataField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _sptraderapi.CTORATstpSPUploadTradeDataField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_sptraderapi.CTORATstpSPUploadTradeDataField_TradingDay_get, _sptraderapi.CTORATstpSPUploadTradeDataField_TradingDay_set)

	# 是否强制回传。0=否;1=是
    __swig_setmethods__["bForce"] = _sptraderapi.CTORATstpSPUploadTradeDataField_bForce_set
    __swig_getmethods__["bForce"] = _sptraderapi.CTORATstpSPUploadTradeDataField_bForce_get
    if _newclass:
        bForce = _swig_property(_sptraderapi.CTORATstpSPUploadTradeDataField_bForce_get, _sptraderapi.CTORATstpSPUploadTradeDataField_bForce_set)

	# 回传类型
    __swig_setmethods__["UploadType"] = _sptraderapi.CTORATstpSPUploadTradeDataField_UploadType_set
    __swig_getmethods__["UploadType"] = _sptraderapi.CTORATstpSPUploadTradeDataField_UploadType_get
    if _newclass:
        UploadType = _swig_property(_sptraderapi.CTORATstpSPUploadTradeDataField_UploadType_get, _sptraderapi.CTORATstpSPUploadTradeDataField_UploadType_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPUploadTradeDataField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPUploadTradeDataField
    __del__ = lambda self: None
CTORATstpSPUploadTradeDataField_swigregister = _sptraderapi.CTORATstpSPUploadTradeDataField_swigregister
CTORATstpSPUploadTradeDataField_swigregister(CTORATstpSPUploadTradeDataField)




#########################################查询银行账户余额请求############################################
class CTORATstpSPReqInquiryBankAccountFundField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInquiryBankAccountFundField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInquiryBankAccountFundField, name)
    __repr__ = _swig_repr

	# 资金账户
    __swig_setmethods__["AccountID"] = _sptraderapi.CTORATstpSPReqInquiryBankAccountFundField_AccountID_set
    __swig_getmethods__["AccountID"] = _sptraderapi.CTORATstpSPReqInquiryBankAccountFundField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_sptraderapi.CTORATstpSPReqInquiryBankAccountFundField_AccountID_get, _sptraderapi.CTORATstpSPReqInquiryBankAccountFundField_AccountID_set)

	# 币种
    __swig_setmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPReqInquiryBankAccountFundField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPReqInquiryBankAccountFundField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_sptraderapi.CTORATstpSPReqInquiryBankAccountFundField_CurrencyID_get, _sptraderapi.CTORATstpSPReqInquiryBankAccountFundField_CurrencyID_set)

	# 经纪公司部门代码
    __swig_setmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPReqInquiryBankAccountFundField_DepartmentID_set
    __swig_getmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPReqInquiryBankAccountFundField_DepartmentID_get
    if _newclass:
        DepartmentID = _swig_property(_sptraderapi.CTORATstpSPReqInquiryBankAccountFundField_DepartmentID_get, _sptraderapi.CTORATstpSPReqInquiryBankAccountFundField_DepartmentID_set)

	# 银行账户密码
    __swig_setmethods__["BankAccountPassword"] = _sptraderapi.CTORATstpSPReqInquiryBankAccountFundField_BankAccountPassword_set
    __swig_getmethods__["BankAccountPassword"] = _sptraderapi.CTORATstpSPReqInquiryBankAccountFundField_BankAccountPassword_get
    if _newclass:
        BankAccountPassword = _swig_property(_sptraderapi.CTORATstpSPReqInquiryBankAccountFundField_BankAccountPassword_get, _sptraderapi.CTORATstpSPReqInquiryBankAccountFundField_BankAccountPassword_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInquiryBankAccountFundField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInquiryBankAccountFundField
    __del__ = lambda self: None
CTORATstpSPReqInquiryBankAccountFundField_swigregister = _sptraderapi.CTORATstpSPReqInquiryBankAccountFundField_swigregister
CTORATstpSPReqInquiryBankAccountFundField_swigregister(CTORATstpSPReqInquiryBankAccountFundField)




#########################################查询银行账户余额响应############################################
class CTORATstpSPRspInquiryBankAccountFundField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPRspInquiryBankAccountFundField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPRspInquiryBankAccountFundField, name)
    __repr__ = _swig_repr

	# 资金账户
    __swig_setmethods__["AccountID"] = _sptraderapi.CTORATstpSPRspInquiryBankAccountFundField_AccountID_set
    __swig_getmethods__["AccountID"] = _sptraderapi.CTORATstpSPRspInquiryBankAccountFundField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_sptraderapi.CTORATstpSPRspInquiryBankAccountFundField_AccountID_get, _sptraderapi.CTORATstpSPRspInquiryBankAccountFundField_AccountID_set)

	# 币种
    __swig_setmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPRspInquiryBankAccountFundField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPRspInquiryBankAccountFundField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_sptraderapi.CTORATstpSPRspInquiryBankAccountFundField_CurrencyID_get, _sptraderapi.CTORATstpSPRspInquiryBankAccountFundField_CurrencyID_set)

	# 账户余额
    __swig_setmethods__["Balance"] = _sptraderapi.CTORATstpSPRspInquiryBankAccountFundField_Balance_set
    __swig_getmethods__["Balance"] = _sptraderapi.CTORATstpSPRspInquiryBankAccountFundField_Balance_get
    if _newclass:
        Balance = _swig_property(_sptraderapi.CTORATstpSPRspInquiryBankAccountFundField_Balance_get, _sptraderapi.CTORATstpSPRspInquiryBankAccountFundField_Balance_set)

	# 用户请求编号
    __swig_setmethods__["RequestID"] = _sptraderapi.CTORATstpSPRspInquiryBankAccountFundField_RequestID_set
    __swig_getmethods__["RequestID"] = _sptraderapi.CTORATstpSPRspInquiryBankAccountFundField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_sptraderapi.CTORATstpSPRspInquiryBankAccountFundField_RequestID_get, _sptraderapi.CTORATstpSPRspInquiryBankAccountFundField_RequestID_set)

	# 经纪公司部门代码
    __swig_setmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPRspInquiryBankAccountFundField_DepartmentID_set
    __swig_getmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPRspInquiryBankAccountFundField_DepartmentID_get
    if _newclass:
        DepartmentID = _swig_property(_sptraderapi.CTORATstpSPRspInquiryBankAccountFundField_DepartmentID_get, _sptraderapi.CTORATstpSPRspInquiryBankAccountFundField_DepartmentID_set)

	# 银行代码
    __swig_setmethods__["BankID"] = _sptraderapi.CTORATstpSPRspInquiryBankAccountFundField_BankID_set
    __swig_getmethods__["BankID"] = _sptraderapi.CTORATstpSPRspInquiryBankAccountFundField_BankID_get
    if _newclass:
        BankID = _swig_property(_sptraderapi.CTORATstpSPRspInquiryBankAccountFundField_BankID_get, _sptraderapi.CTORATstpSPRspInquiryBankAccountFundField_BankID_set)

	# 签约银行账户
    __swig_setmethods__["BankAccountID"] = _sptraderapi.CTORATstpSPRspInquiryBankAccountFundField_BankAccountID_set
    __swig_getmethods__["BankAccountID"] = _sptraderapi.CTORATstpSPRspInquiryBankAccountFundField_BankAccountID_get
    if _newclass:
        BankAccountID = _swig_property(_sptraderapi.CTORATstpSPRspInquiryBankAccountFundField_BankAccountID_get, _sptraderapi.CTORATstpSPRspInquiryBankAccountFundField_BankAccountID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPRspInquiryBankAccountFundField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPRspInquiryBankAccountFundField
    __del__ = lambda self: None
CTORATstpSPRspInquiryBankAccountFundField_swigregister = _sptraderapi.CTORATstpSPRspInquiryBankAccountFundField_swigregister
CTORATstpSPRspInquiryBankAccountFundField_swigregister(CTORATstpSPRspInquiryBankAccountFundField)




#########################################API请求同步备兑股份不足仓位信息############################################
class CTORATstpSPSyncInsufficientCoveredStockPosField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPSyncInsufficientCoveredStockPosField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPSyncInsufficientCoveredStockPosField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPSyncInsufficientCoveredStockPosField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPSyncInsufficientCoveredStockPosField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPSyncInsufficientCoveredStockPosField_InvestorID_get, _sptraderapi.CTORATstpSPSyncInsufficientCoveredStockPosField_InvestorID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPSyncInsufficientCoveredStockPosField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPSyncInsufficientCoveredStockPosField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPSyncInsufficientCoveredStockPosField_ExchangeID_get, _sptraderapi.CTORATstpSPSyncInsufficientCoveredStockPosField_ExchangeID_set)

	# 市场代码
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPSyncInsufficientCoveredStockPosField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPSyncInsufficientCoveredStockPosField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPSyncInsufficientCoveredStockPosField_MarketID_get, _sptraderapi.CTORATstpSPSyncInsufficientCoveredStockPosField_MarketID_set)

	# 交易账户代码
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPSyncInsufficientCoveredStockPosField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPSyncInsufficientCoveredStockPosField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPSyncInsufficientCoveredStockPosField_ShareholderID_get, _sptraderapi.CTORATstpSPSyncInsufficientCoveredStockPosField_ShareholderID_set)

	# 资金账户
    __swig_setmethods__["AccountID"] = _sptraderapi.CTORATstpSPSyncInsufficientCoveredStockPosField_AccountID_set
    __swig_getmethods__["AccountID"] = _sptraderapi.CTORATstpSPSyncInsufficientCoveredStockPosField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_sptraderapi.CTORATstpSPSyncInsufficientCoveredStockPosField_AccountID_get, _sptraderapi.CTORATstpSPSyncInsufficientCoveredStockPosField_AccountID_set)

	# 币种
    __swig_setmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPSyncInsufficientCoveredStockPosField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPSyncInsufficientCoveredStockPosField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_sptraderapi.CTORATstpSPSyncInsufficientCoveredStockPosField_CurrencyID_get, _sptraderapi.CTORATstpSPSyncInsufficientCoveredStockPosField_CurrencyID_set)

	# 经纪公司部门代码
    __swig_setmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPSyncInsufficientCoveredStockPosField_DepartmentID_set
    __swig_getmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPSyncInsufficientCoveredStockPosField_DepartmentID_get
    if _newclass:
        DepartmentID = _swig_property(_sptraderapi.CTORATstpSPSyncInsufficientCoveredStockPosField_DepartmentID_get, _sptraderapi.CTORATstpSPSyncInsufficientCoveredStockPosField_DepartmentID_set)

	# 证券代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPSyncInsufficientCoveredStockPosField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPSyncInsufficientCoveredStockPosField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPSyncInsufficientCoveredStockPosField_SecurityID_get, _sptraderapi.CTORATstpSPSyncInsufficientCoveredStockPosField_SecurityID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPSyncInsufficientCoveredStockPosField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPSyncInsufficientCoveredStockPosField
    __del__ = lambda self: None
CTORATstpSPSyncInsufficientCoveredStockPosField_swigregister = _sptraderapi.CTORATstpSPSyncInsufficientCoveredStockPosField_swigregister
CTORATstpSPSyncInsufficientCoveredStockPosField_swigregister(CTORATstpSPSyncInsufficientCoveredStockPosField)




#########################################查询现货系统仓位请求############################################
class CTORATstpSPReqInquiryStockPositionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInquiryStockPositionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInquiryStockPositionField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqInquiryStockPositionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqInquiryStockPositionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqInquiryStockPositionField_InvestorID_get, _sptraderapi.CTORATstpSPReqInquiryStockPositionField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPReqInquiryStockPositionField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPReqInquiryStockPositionField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPReqInquiryStockPositionField_BusinessUnitID_get, _sptraderapi.CTORATstpSPReqInquiryStockPositionField_BusinessUnitID_set)

	# 交易所下的交易市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqInquiryStockPositionField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqInquiryStockPositionField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPReqInquiryStockPositionField_MarketID_get, _sptraderapi.CTORATstpSPReqInquiryStockPositionField_MarketID_set)

	# 交易账户代码
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqInquiryStockPositionField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqInquiryStockPositionField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPReqInquiryStockPositionField_ShareholderID_get, _sptraderapi.CTORATstpSPReqInquiryStockPositionField_ShareholderID_set)

	# 交易日期
    __swig_setmethods__["TradingDay"] = _sptraderapi.CTORATstpSPReqInquiryStockPositionField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _sptraderapi.CTORATstpSPReqInquiryStockPositionField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_sptraderapi.CTORATstpSPReqInquiryStockPositionField_TradingDay_get, _sptraderapi.CTORATstpSPReqInquiryStockPositionField_TradingDay_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInquiryStockPositionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInquiryStockPositionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqInquiryStockPositionField_ExchangeID_get, _sptraderapi.CTORATstpSPReqInquiryStockPositionField_ExchangeID_set)

	# 现货证券代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqInquiryStockPositionField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqInquiryStockPositionField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqInquiryStockPositionField_SecurityID_get, _sptraderapi.CTORATstpSPReqInquiryStockPositionField_SecurityID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInquiryStockPositionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInquiryStockPositionField
    __del__ = lambda self: None
CTORATstpSPReqInquiryStockPositionField_swigregister = _sptraderapi.CTORATstpSPReqInquiryStockPositionField_swigregister
CTORATstpSPReqInquiryStockPositionField_swigregister(CTORATstpSPReqInquiryStockPositionField)




#########################################查询现货系统仓位响应############################################
class CTORATstpSPRspInquiryStockPositionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPRspInquiryStockPositionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPRspInquiryStockPositionField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPRspInquiryStockPositionField_InvestorID_get, _sptraderapi.CTORATstpSPRspInquiryStockPositionField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPRspInquiryStockPositionField_BusinessUnitID_get, _sptraderapi.CTORATstpSPRspInquiryStockPositionField_BusinessUnitID_set)

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPRspInquiryStockPositionField_MarketID_get, _sptraderapi.CTORATstpSPRspInquiryStockPositionField_MarketID_set)

	# 交易账户代码
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPRspInquiryStockPositionField_ShareholderID_get, _sptraderapi.CTORATstpSPRspInquiryStockPositionField_ShareholderID_set)

	# 交易日期
    __swig_setmethods__["TradingDay"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_sptraderapi.CTORATstpSPRspInquiryStockPositionField_TradingDay_get, _sptraderapi.CTORATstpSPRspInquiryStockPositionField_TradingDay_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPRspInquiryStockPositionField_ExchangeID_get, _sptraderapi.CTORATstpSPRspInquiryStockPositionField_ExchangeID_set)

	# 证券代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPRspInquiryStockPositionField_SecurityID_get, _sptraderapi.CTORATstpSPRspInquiryStockPositionField_SecurityID_set)

	# 昨日持仓（包含昨日持仓冻结数量）
    __swig_setmethods__["HistoryPos"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_HistoryPos_set
    __swig_getmethods__["HistoryPos"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_HistoryPos_get
    if _newclass:
        HistoryPos = _swig_property(_sptraderapi.CTORATstpSPRspInquiryStockPositionField_HistoryPos_get, _sptraderapi.CTORATstpSPRspInquiryStockPositionField_HistoryPos_set)

	# 昨日持仓冻结
    __swig_setmethods__["HistoryPosFrozen"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_HistoryPosFrozen_set
    __swig_getmethods__["HistoryPosFrozen"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_HistoryPosFrozen_get
    if _newclass:
        HistoryPosFrozen = _swig_property(_sptraderapi.CTORATstpSPRspInquiryStockPositionField_HistoryPosFrozen_get, _sptraderapi.CTORATstpSPRspInquiryStockPositionField_HistoryPosFrozen_set)

	# 今日买卖持仓（包含今日买卖持仓冻结数量）
    __swig_setmethods__["TodayBSPos"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_TodayBSPos_set
    __swig_getmethods__["TodayBSPos"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_TodayBSPos_get
    if _newclass:
        TodayBSPos = _swig_property(_sptraderapi.CTORATstpSPRspInquiryStockPositionField_TodayBSPos_get, _sptraderapi.CTORATstpSPRspInquiryStockPositionField_TodayBSPos_set)

	# 今日买卖持仓冻结
    __swig_setmethods__["TodayBSPosFrozen"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_TodayBSPosFrozen_set
    __swig_getmethods__["TodayBSPosFrozen"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_TodayBSPosFrozen_get
    if _newclass:
        TodayBSPosFrozen = _swig_property(_sptraderapi.CTORATstpSPRspInquiryStockPositionField_TodayBSPosFrozen_get, _sptraderapi.CTORATstpSPRspInquiryStockPositionField_TodayBSPosFrozen_set)

	# 今日申赎持仓（包含今日申赎持仓冻结数量）
    __swig_setmethods__["TodayPRPos"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_TodayPRPos_set
    __swig_getmethods__["TodayPRPos"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_TodayPRPos_get
    if _newclass:
        TodayPRPos = _swig_property(_sptraderapi.CTORATstpSPRspInquiryStockPositionField_TodayPRPos_get, _sptraderapi.CTORATstpSPRspInquiryStockPositionField_TodayPRPos_set)

	# 今日申赎持仓冻结
    __swig_setmethods__["TodayPRPosFrozen"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_TodayPRPosFrozen_set
    __swig_getmethods__["TodayPRPosFrozen"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_TodayPRPosFrozen_get
    if _newclass:
        TodayPRPosFrozen = _swig_property(_sptraderapi.CTORATstpSPRspInquiryStockPositionField_TodayPRPosFrozen_get, _sptraderapi.CTORATstpSPRspInquiryStockPositionField_TodayPRPosFrozen_set)

	# 今日拆分合并持仓（包含今日拆分合并持仓冻结数量）
    __swig_setmethods__["TodaySMPos"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_TodaySMPos_set
    __swig_getmethods__["TodaySMPos"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_TodaySMPos_get
    if _newclass:
        TodaySMPos = _swig_property(_sptraderapi.CTORATstpSPRspInquiryStockPositionField_TodaySMPos_get, _sptraderapi.CTORATstpSPRspInquiryStockPositionField_TodaySMPos_set)

	# 今日拆分合并持仓冻结
    __swig_setmethods__["TodaySMPosFrozen"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_TodaySMPosFrozen_set
    __swig_getmethods__["TodaySMPosFrozen"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_TodaySMPosFrozen_get
    if _newclass:
        TodaySMPosFrozen = _swig_property(_sptraderapi.CTORATstpSPRspInquiryStockPositionField_TodaySMPosFrozen_get, _sptraderapi.CTORATstpSPRspInquiryStockPositionField_TodaySMPosFrozen_set)

	# 昨日持仓成本价
    __swig_setmethods__["HistoryPosCost"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_HistoryPosCost_set
    __swig_getmethods__["HistoryPosCost"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_HistoryPosCost_get
    if _newclass:
        HistoryPosCost = _swig_property(_sptraderapi.CTORATstpSPRspInquiryStockPositionField_HistoryPosCost_get, _sptraderapi.CTORATstpSPRspInquiryStockPositionField_HistoryPosCost_set)

	# 总持仓成本
    __swig_setmethods__["TotalPosCost"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_TotalPosCost_set
    __swig_getmethods__["TotalPosCost"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_TotalPosCost_get
    if _newclass:
        TotalPosCost = _swig_property(_sptraderapi.CTORATstpSPRspInquiryStockPositionField_TotalPosCost_get, _sptraderapi.CTORATstpSPRspInquiryStockPositionField_TotalPosCost_set)

	# 融资仓位
    __swig_setmethods__["MarginBuyPos"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_MarginBuyPos_set
    __swig_getmethods__["MarginBuyPos"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_MarginBuyPos_get
    if _newclass:
        MarginBuyPos = _swig_property(_sptraderapi.CTORATstpSPRspInquiryStockPositionField_MarginBuyPos_get, _sptraderapi.CTORATstpSPRspInquiryStockPositionField_MarginBuyPos_set)

	# 融券仓位（包含今日融券仓位）
    __swig_setmethods__["ShortSellPos"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_ShortSellPos_set
    __swig_getmethods__["ShortSellPos"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_ShortSellPos_get
    if _newclass:
        ShortSellPos = _swig_property(_sptraderapi.CTORATstpSPRspInquiryStockPositionField_ShortSellPos_get, _sptraderapi.CTORATstpSPRspInquiryStockPositionField_ShortSellPos_set)

	# 今日融券仓位
    __swig_setmethods__["TodayShortSellPos"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_TodayShortSellPos_set
    __swig_getmethods__["TodayShortSellPos"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_TodayShortSellPos_get
    if _newclass:
        TodayShortSellPos = _swig_property(_sptraderapi.CTORATstpSPRspInquiryStockPositionField_TodayShortSellPos_get, _sptraderapi.CTORATstpSPRspInquiryStockPositionField_TodayShortSellPos_set)

	# 上次余额(盘中不变)
    __swig_setmethods__["PrePosition"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_PrePosition_set
    __swig_getmethods__["PrePosition"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_PrePosition_get
    if _newclass:
        PrePosition = _swig_property(_sptraderapi.CTORATstpSPRspInquiryStockPositionField_PrePosition_get, _sptraderapi.CTORATstpSPRspInquiryStockPositionField_PrePosition_set)

	# 股份可用
    __swig_setmethods__["AvailablePosition"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_AvailablePosition_set
    __swig_getmethods__["AvailablePosition"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_AvailablePosition_get
    if _newclass:
        AvailablePosition = _swig_property(_sptraderapi.CTORATstpSPRspInquiryStockPositionField_AvailablePosition_get, _sptraderapi.CTORATstpSPRspInquiryStockPositionField_AvailablePosition_set)

	# 股份余额
    __swig_setmethods__["CurrentPosition"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_CurrentPosition_set
    __swig_getmethods__["CurrentPosition"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_CurrentPosition_get
    if _newclass:
        CurrentPosition = _swig_property(_sptraderapi.CTORATstpSPRspInquiryStockPositionField_CurrentPosition_get, _sptraderapi.CTORATstpSPRspInquiryStockPositionField_CurrentPosition_set)

	# 用户请求编号
    __swig_setmethods__["RequestID"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_RequestID_set
    __swig_getmethods__["RequestID"] = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_sptraderapi.CTORATstpSPRspInquiryStockPositionField_RequestID_get, _sptraderapi.CTORATstpSPRspInquiryStockPositionField_RequestID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPRspInquiryStockPositionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPRspInquiryStockPositionField
    __del__ = lambda self: None
CTORATstpSPRspInquiryStockPositionField_swigregister = _sptraderapi.CTORATstpSPRspInquiryStockPositionField_swigregister
CTORATstpSPRspInquiryStockPositionField_swigregister(CTORATstpSPRspInquiryStockPositionField)




#########################################订阅行情############################################
class CTORATstpSPSpecificSecurityField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPSpecificSecurityField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPSpecificSecurityField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPSpecificSecurityField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPSpecificSecurityField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPSpecificSecurityField_ExchangeID_get, _sptraderapi.CTORATstpSPSpecificSecurityField_ExchangeID_set)

	# 合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPSpecificSecurityField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPSpecificSecurityField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPSpecificSecurityField_SecurityID_get, _sptraderapi.CTORATstpSPSpecificSecurityField_SecurityID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPSpecificSecurityField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPSpecificSecurityField
    __del__ = lambda self: None
CTORATstpSPSpecificSecurityField_swigregister = _sptraderapi.CTORATstpSPSpecificSecurityField_swigregister
CTORATstpSPSpecificSecurityField_swigregister(CTORATstpSPSpecificSecurityField)




#########################################深度行情通知############################################
class CTORATstpSPMarketDataField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPMarketDataField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPMarketDataField, name)
    __repr__ = _swig_repr

	# 证券代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPMarketDataField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPMarketDataField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPMarketDataField_SecurityID_get, _sptraderapi.CTORATstpSPMarketDataField_SecurityID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPMarketDataField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPMarketDataField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPMarketDataField_ExchangeID_get, _sptraderapi.CTORATstpSPMarketDataField_ExchangeID_set)

	# 交易日
    __swig_setmethods__["TradingDay"] = _sptraderapi.CTORATstpSPMarketDataField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _sptraderapi.CTORATstpSPMarketDataField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_sptraderapi.CTORATstpSPMarketDataField_TradingDay_get, _sptraderapi.CTORATstpSPMarketDataField_TradingDay_set)

	# 证券名称
    __swig_setmethods__["SecurityName"] = _sptraderapi.CTORATstpSPMarketDataField_SecurityName_set
    __swig_getmethods__["SecurityName"] = _sptraderapi.CTORATstpSPMarketDataField_SecurityName_get
    if _newclass:
        SecurityName = _swig_property(_sptraderapi.CTORATstpSPMarketDataField_SecurityName_get, _sptraderapi.CTORATstpSPMarketDataField_SecurityName_set)

	# 上一日收盘价
    __swig_setmethods__["PreClosePrice"] = _sptraderapi.CTORATstpSPMarketDataField_PreClosePrice_set
    __swig_getmethods__["PreClosePrice"] = _sptraderapi.CTORATstpSPMarketDataField_PreClosePrice_get
    if _newclass:
        PreClosePrice = _swig_property(_sptraderapi.CTORATstpSPMarketDataField_PreClosePrice_get, _sptraderapi.CTORATstpSPMarketDataField_PreClosePrice_set)

	# 今日开盘价
    __swig_setmethods__["OpenPrice"] = _sptraderapi.CTORATstpSPMarketDataField_OpenPrice_set
    __swig_getmethods__["OpenPrice"] = _sptraderapi.CTORATstpSPMarketDataField_OpenPrice_get
    if _newclass:
        OpenPrice = _swig_property(_sptraderapi.CTORATstpSPMarketDataField_OpenPrice_get, _sptraderapi.CTORATstpSPMarketDataField_OpenPrice_set)

	# 涨停价格
    __swig_setmethods__["UpperLimitPrice"] = _sptraderapi.CTORATstpSPMarketDataField_UpperLimitPrice_set
    __swig_getmethods__["UpperLimitPrice"] = _sptraderapi.CTORATstpSPMarketDataField_UpperLimitPrice_get
    if _newclass:
        UpperLimitPrice = _swig_property(_sptraderapi.CTORATstpSPMarketDataField_UpperLimitPrice_get, _sptraderapi.CTORATstpSPMarketDataField_UpperLimitPrice_set)

	# 跌停价格
    __swig_setmethods__["LowerLimitPrice"] = _sptraderapi.CTORATstpSPMarketDataField_LowerLimitPrice_set
    __swig_getmethods__["LowerLimitPrice"] = _sptraderapi.CTORATstpSPMarketDataField_LowerLimitPrice_get
    if _newclass:
        LowerLimitPrice = _swig_property(_sptraderapi.CTORATstpSPMarketDataField_LowerLimitPrice_get, _sptraderapi.CTORATstpSPMarketDataField_LowerLimitPrice_set)

	# 该证券在当日的成交数量
    __swig_setmethods__["Volume"] = _sptraderapi.CTORATstpSPMarketDataField_Volume_set
    __swig_getmethods__["Volume"] = _sptraderapi.CTORATstpSPMarketDataField_Volume_get
    if _newclass:
        Volume = _swig_property(_sptraderapi.CTORATstpSPMarketDataField_Volume_get, _sptraderapi.CTORATstpSPMarketDataField_Volume_set)

	# 该证券在当日的成交金额
    __swig_setmethods__["Turnover"] = _sptraderapi.CTORATstpSPMarketDataField_Turnover_set
    __swig_getmethods__["Turnover"] = _sptraderapi.CTORATstpSPMarketDataField_Turnover_get
    if _newclass:
        Turnover = _swig_property(_sptraderapi.CTORATstpSPMarketDataField_Turnover_get, _sptraderapi.CTORATstpSPMarketDataField_Turnover_set)

	# 该证券在当日的成交笔数
    __swig_setmethods__["TradingCount"] = _sptraderapi.CTORATstpSPMarketDataField_TradingCount_set
    __swig_getmethods__["TradingCount"] = _sptraderapi.CTORATstpSPMarketDataField_TradingCount_get
    if _newclass:
        TradingCount = _swig_property(_sptraderapi.CTORATstpSPMarketDataField_TradingCount_get, _sptraderapi.CTORATstpSPMarketDataField_TradingCount_set)

	# 当日该证券交易期间的最新成交价格
    __swig_setmethods__["LastPrice"] = _sptraderapi.CTORATstpSPMarketDataField_LastPrice_set
    __swig_getmethods__["LastPrice"] = _sptraderapi.CTORATstpSPMarketDataField_LastPrice_get
    if _newclass:
        LastPrice = _swig_property(_sptraderapi.CTORATstpSPMarketDataField_LastPrice_get, _sptraderapi.CTORATstpSPMarketDataField_LastPrice_set)

	# 收盘价格
    __swig_setmethods__["ClosePrice"] = _sptraderapi.CTORATstpSPMarketDataField_ClosePrice_set
    __swig_getmethods__["ClosePrice"] = _sptraderapi.CTORATstpSPMarketDataField_ClosePrice_get
    if _newclass:
        ClosePrice = _swig_property(_sptraderapi.CTORATstpSPMarketDataField_ClosePrice_get, _sptraderapi.CTORATstpSPMarketDataField_ClosePrice_set)

	# 一定时间内该证券成交价中的最高成交价格
    __swig_setmethods__["HighestPrice"] = _sptraderapi.CTORATstpSPMarketDataField_HighestPrice_set
    __swig_getmethods__["HighestPrice"] = _sptraderapi.CTORATstpSPMarketDataField_HighestPrice_get
    if _newclass:
        HighestPrice = _swig_property(_sptraderapi.CTORATstpSPMarketDataField_HighestPrice_get, _sptraderapi.CTORATstpSPMarketDataField_HighestPrice_set)

	# 一定时间内该证券成交价中的最低成交价格
    __swig_setmethods__["LowestPrice"] = _sptraderapi.CTORATstpSPMarketDataField_LowestPrice_set
    __swig_getmethods__["LowestPrice"] = _sptraderapi.CTORATstpSPMarketDataField_LowestPrice_get
    if _newclass:
        LowestPrice = _swig_property(_sptraderapi.CTORATstpSPMarketDataField_LowestPrice_get, _sptraderapi.CTORATstpSPMarketDataField_LowestPrice_set)

	# 指该证券当前的市盈率
    __swig_setmethods__["PERatio1"] = _sptraderapi.CTORATstpSPMarketDataField_PERatio1_set
    __swig_getmethods__["PERatio1"] = _sptraderapi.CTORATstpSPMarketDataField_PERatio1_get
    if _newclass:
        PERatio1 = _swig_property(_sptraderapi.CTORATstpSPMarketDataField_PERatio1_get, _sptraderapi.CTORATstpSPMarketDataField_PERatio1_set)

	# 指该证券当前的市盈率
    __swig_setmethods__["PERatio2"] = _sptraderapi.CTORATstpSPMarketDataField_PERatio2_set
    __swig_getmethods__["PERatio2"] = _sptraderapi.CTORATstpSPMarketDataField_PERatio2_get
    if _newclass:
        PERatio2 = _swig_property(_sptraderapi.CTORATstpSPMarketDataField_PERatio2_get, _sptraderapi.CTORATstpSPMarketDataField_PERatio2_set)

	# 最新价-前收盘价格
    __swig_setmethods__["PriceUpDown1"] = _sptraderapi.CTORATstpSPMarketDataField_PriceUpDown1_set
    __swig_getmethods__["PriceUpDown1"] = _sptraderapi.CTORATstpSPMarketDataField_PriceUpDown1_get
    if _newclass:
        PriceUpDown1 = _swig_property(_sptraderapi.CTORATstpSPMarketDataField_PriceUpDown1_get, _sptraderapi.CTORATstpSPMarketDataField_PriceUpDown1_set)

	# 最新价-上笔成交价格
    __swig_setmethods__["PriceUpDown2"] = _sptraderapi.CTORATstpSPMarketDataField_PriceUpDown2_set
    __swig_getmethods__["PriceUpDown2"] = _sptraderapi.CTORATstpSPMarketDataField_PriceUpDown2_get
    if _newclass:
        PriceUpDown2 = _swig_property(_sptraderapi.CTORATstpSPMarketDataField_PriceUpDown2_get, _sptraderapi.CTORATstpSPMarketDataField_PriceUpDown2_set)

	# 持仓量
    __swig_setmethods__["OpenInterest"] = _sptraderapi.CTORATstpSPMarketDataField_OpenInterest_set
    __swig_getmethods__["OpenInterest"] = _sptraderapi.CTORATstpSPMarketDataField_OpenInterest_get
    if _newclass:
        OpenInterest = _swig_property(_sptraderapi.CTORATstpSPMarketDataField_OpenInterest_get, _sptraderapi.CTORATstpSPMarketDataField_OpenInterest_set)

	# 该证券当前最优申买价格
    __swig_setmethods__["BidPrice1"] = _sptraderapi.CTORATstpSPMarketDataField_BidPrice1_set
    __swig_getmethods__["BidPrice1"] = _sptraderapi.CTORATstpSPMarketDataField_BidPrice1_get
    if _newclass:
        BidPrice1 = _swig_property(_sptraderapi.CTORATstpSPMarketDataField_BidPrice1_get, _sptraderapi.CTORATstpSPMarketDataField_BidPrice1_set)

	# 该证券当前最优申卖价格
    __swig_setmethods__["AskPrice1"] = _sptraderapi.CTORATstpSPMarketDataField_AskPrice1_set
    __swig_getmethods__["AskPrice1"] = _sptraderapi.CTORATstpSPMarketDataField_AskPrice1_get
    if _newclass:
        AskPrice1 = _swig_property(_sptraderapi.CTORATstpSPMarketDataField_AskPrice1_get, _sptraderapi.CTORATstpSPMarketDataField_AskPrice1_set)

	# 该证券当前最优价位申请买入的数量
    __swig_setmethods__["BidVolume1"] = _sptraderapi.CTORATstpSPMarketDataField_BidVolume1_set
    __swig_getmethods__["BidVolume1"] = _sptraderapi.CTORATstpSPMarketDataField_BidVolume1_get
    if _newclass:
        BidVolume1 = _swig_property(_sptraderapi.CTORATstpSPMarketDataField_BidVolume1_get, _sptraderapi.CTORATstpSPMarketDataField_BidVolume1_set)

	# 该证券当前最优价位申请卖出的数量
    __swig_setmethods__["AskVolume1"] = _sptraderapi.CTORATstpSPMarketDataField_AskVolume1_set
    __swig_getmethods__["AskVolume1"] = _sptraderapi.CTORATstpSPMarketDataField_AskVolume1_get
    if _newclass:
        AskVolume1 = _swig_property(_sptraderapi.CTORATstpSPMarketDataField_AskVolume1_get, _sptraderapi.CTORATstpSPMarketDataField_AskVolume1_set)

	# 该证券当前第二优申买价格
    __swig_setmethods__["BidPrice2"] = _sptraderapi.CTORATstpSPMarketDataField_BidPrice2_set
    __swig_getmethods__["BidPrice2"] = _sptraderapi.CTORATstpSPMarketDataField_BidPrice2_get
    if _newclass:
        BidPrice2 = _swig_property(_sptraderapi.CTORATstpSPMarketDataField_BidPrice2_get, _sptraderapi.CTORATstpSPMarketDataField_BidPrice2_set)

	# 该证券当前第二优价位申请买入的数量
    __swig_setmethods__["BidVolume2"] = _sptraderapi.CTORATstpSPMarketDataField_BidVolume2_set
    __swig_getmethods__["BidVolume2"] = _sptraderapi.CTORATstpSPMarketDataField_BidVolume2_get
    if _newclass:
        BidVolume2 = _swig_property(_sptraderapi.CTORATstpSPMarketDataField_BidVolume2_get, _sptraderapi.CTORATstpSPMarketDataField_BidVolume2_set)

	# 该证券当前第二优申卖价格
    __swig_setmethods__["AskPrice2"] = _sptraderapi.CTORATstpSPMarketDataField_AskPrice2_set
    __swig_getmethods__["AskPrice2"] = _sptraderapi.CTORATstpSPMarketDataField_AskPrice2_get
    if _newclass:
        AskPrice2 = _swig_property(_sptraderapi.CTORATstpSPMarketDataField_AskPrice2_get, _sptraderapi.CTORATstpSPMarketDataField_AskPrice2_set)

	# 该证券当前第二优价位申请卖出的数量
    __swig_setmethods__["AskVolume2"] = _sptraderapi.CTORATstpSPMarketDataField_AskVolume2_set
    __swig_getmethods__["AskVolume2"] = _sptraderapi.CTORATstpSPMarketDataField_AskVolume2_get
    if _newclass:
        AskVolume2 = _swig_property(_sptraderapi.CTORATstpSPMarketDataField_AskVolume2_get, _sptraderapi.CTORATstpSPMarketDataField_AskVolume2_set)

	# 该证券当前第三优申买价格
    __swig_setmethods__["BidPrice3"] = _sptraderapi.CTORATstpSPMarketDataField_BidPrice3_set
    __swig_getmethods__["BidPrice3"] = _sptraderapi.CTORATstpSPMarketDataField_BidPrice3_get
    if _newclass:
        BidPrice3 = _swig_property(_sptraderapi.CTORATstpSPMarketDataField_BidPrice3_get, _sptraderapi.CTORATstpSPMarketDataField_BidPrice3_set)

	# 该证券当前第三优价位申请买入的数量
    __swig_setmethods__["BidVolume3"] = _sptraderapi.CTORATstpSPMarketDataField_BidVolume3_set
    __swig_getmethods__["BidVolume3"] = _sptraderapi.CTORATstpSPMarketDataField_BidVolume3_get
    if _newclass:
        BidVolume3 = _swig_property(_sptraderapi.CTORATstpSPMarketDataField_BidVolume3_get, _sptraderapi.CTORATstpSPMarketDataField_BidVolume3_set)

	# 该证券当前第三优申卖价格
    __swig_setmethods__["AskPrice3"] = _sptraderapi.CTORATstpSPMarketDataField_AskPrice3_set
    __swig_getmethods__["AskPrice3"] = _sptraderapi.CTORATstpSPMarketDataField_AskPrice3_get
    if _newclass:
        AskPrice3 = _swig_property(_sptraderapi.CTORATstpSPMarketDataField_AskPrice3_get, _sptraderapi.CTORATstpSPMarketDataField_AskPrice3_set)

	# 该证券当前第三优价位申请卖出的数量
    __swig_setmethods__["AskVolume3"] = _sptraderapi.CTORATstpSPMarketDataField_AskVolume3_set
    __swig_getmethods__["AskVolume3"] = _sptraderapi.CTORATstpSPMarketDataField_AskVolume3_get
    if _newclass:
        AskVolume3 = _swig_property(_sptraderapi.CTORATstpSPMarketDataField_AskVolume3_get, _sptraderapi.CTORATstpSPMarketDataField_AskVolume3_set)

	# 该证券当前第四优申买价格
    __swig_setmethods__["BidPrice4"] = _sptraderapi.CTORATstpSPMarketDataField_BidPrice4_set
    __swig_getmethods__["BidPrice4"] = _sptraderapi.CTORATstpSPMarketDataField_BidPrice4_get
    if _newclass:
        BidPrice4 = _swig_property(_sptraderapi.CTORATstpSPMarketDataField_BidPrice4_get, _sptraderapi.CTORATstpSPMarketDataField_BidPrice4_set)

	# 该证券当前第四优价位申请买入的数量
    __swig_setmethods__["BidVolume4"] = _sptraderapi.CTORATstpSPMarketDataField_BidVolume4_set
    __swig_getmethods__["BidVolume4"] = _sptraderapi.CTORATstpSPMarketDataField_BidVolume4_get
    if _newclass:
        BidVolume4 = _swig_property(_sptraderapi.CTORATstpSPMarketDataField_BidVolume4_get, _sptraderapi.CTORATstpSPMarketDataField_BidVolume4_set)

	# 该证券当前第四优申卖价格
    __swig_setmethods__["AskPrice4"] = _sptraderapi.CTORATstpSPMarketDataField_AskPrice4_set
    __swig_getmethods__["AskPrice4"] = _sptraderapi.CTORATstpSPMarketDataField_AskPrice4_get
    if _newclass:
        AskPrice4 = _swig_property(_sptraderapi.CTORATstpSPMarketDataField_AskPrice4_get, _sptraderapi.CTORATstpSPMarketDataField_AskPrice4_set)

	# 该证券当前第四优价位申请卖出的数量
    __swig_setmethods__["AskVolume4"] = _sptraderapi.CTORATstpSPMarketDataField_AskVolume4_set
    __swig_getmethods__["AskVolume4"] = _sptraderapi.CTORATstpSPMarketDataField_AskVolume4_get
    if _newclass:
        AskVolume4 = _swig_property(_sptraderapi.CTORATstpSPMarketDataField_AskVolume4_get, _sptraderapi.CTORATstpSPMarketDataField_AskVolume4_set)

	# 该证券当前第五优申买价格
    __swig_setmethods__["BidPrice5"] = _sptraderapi.CTORATstpSPMarketDataField_BidPrice5_set
    __swig_getmethods__["BidPrice5"] = _sptraderapi.CTORATstpSPMarketDataField_BidPrice5_get
    if _newclass:
        BidPrice5 = _swig_property(_sptraderapi.CTORATstpSPMarketDataField_BidPrice5_get, _sptraderapi.CTORATstpSPMarketDataField_BidPrice5_set)

	# 该证券当前第五优价位申请买入的数量
    __swig_setmethods__["BidVolume5"] = _sptraderapi.CTORATstpSPMarketDataField_BidVolume5_set
    __swig_getmethods__["BidVolume5"] = _sptraderapi.CTORATstpSPMarketDataField_BidVolume5_get
    if _newclass:
        BidVolume5 = _swig_property(_sptraderapi.CTORATstpSPMarketDataField_BidVolume5_get, _sptraderapi.CTORATstpSPMarketDataField_BidVolume5_set)

	# 该证券当前第五优申卖价格
    __swig_setmethods__["AskPrice5"] = _sptraderapi.CTORATstpSPMarketDataField_AskPrice5_set
    __swig_getmethods__["AskPrice5"] = _sptraderapi.CTORATstpSPMarketDataField_AskPrice5_get
    if _newclass:
        AskPrice5 = _swig_property(_sptraderapi.CTORATstpSPMarketDataField_AskPrice5_get, _sptraderapi.CTORATstpSPMarketDataField_AskPrice5_set)

	# 该证券当前第五优价位申请卖出的数量
    __swig_setmethods__["AskVolume5"] = _sptraderapi.CTORATstpSPMarketDataField_AskVolume5_set
    __swig_getmethods__["AskVolume5"] = _sptraderapi.CTORATstpSPMarketDataField_AskVolume5_get
    if _newclass:
        AskVolume5 = _swig_property(_sptraderapi.CTORATstpSPMarketDataField_AskVolume5_get, _sptraderapi.CTORATstpSPMarketDataField_AskVolume5_set)

	# 最后修改时间
    __swig_setmethods__["UpdateTime"] = _sptraderapi.CTORATstpSPMarketDataField_UpdateTime_set
    __swig_getmethods__["UpdateTime"] = _sptraderapi.CTORATstpSPMarketDataField_UpdateTime_get
    if _newclass:
        UpdateTime = _swig_property(_sptraderapi.CTORATstpSPMarketDataField_UpdateTime_get, _sptraderapi.CTORATstpSPMarketDataField_UpdateTime_set)

	# 最后修改毫秒
    __swig_setmethods__["UpdateMillisec"] = _sptraderapi.CTORATstpSPMarketDataField_UpdateMillisec_set
    __swig_getmethods__["UpdateMillisec"] = _sptraderapi.CTORATstpSPMarketDataField_UpdateMillisec_get
    if _newclass:
        UpdateMillisec = _swig_property(_sptraderapi.CTORATstpSPMarketDataField_UpdateMillisec_get, _sptraderapi.CTORATstpSPMarketDataField_UpdateMillisec_set)

	# 行情产品实时状态
    __swig_setmethods__["MDSecurityStat"] = _sptraderapi.CTORATstpSPMarketDataField_MDSecurityStat_set
    __swig_getmethods__["MDSecurityStat"] = _sptraderapi.CTORATstpSPMarketDataField_MDSecurityStat_get
    if _newclass:
        MDSecurityStat = _swig_property(_sptraderapi.CTORATstpSPMarketDataField_MDSecurityStat_get, _sptraderapi.CTORATstpSPMarketDataField_MDSecurityStat_set)

	# 合约结算价
    __swig_setmethods__["SettlementPrice"] = _sptraderapi.CTORATstpSPMarketDataField_SettlementPrice_set
    __swig_getmethods__["SettlementPrice"] = _sptraderapi.CTORATstpSPMarketDataField_SettlementPrice_get
    if _newclass:
        SettlementPrice = _swig_property(_sptraderapi.CTORATstpSPMarketDataField_SettlementPrice_get, _sptraderapi.CTORATstpSPMarketDataField_SettlementPrice_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPMarketDataField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPMarketDataField
    __del__ = lambda self: None
CTORATstpSPMarketDataField_swigregister = _sptraderapi.CTORATstpSPMarketDataField_swigregister
CTORATstpSPMarketDataField_swigregister(CTORATstpSPMarketDataField)




#########################################市场状态############################################
class CTORATstpSPMarketStatusField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPMarketStatusField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPMarketStatusField, name)
    __repr__ = _swig_repr

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPMarketStatusField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPMarketStatusField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPMarketStatusField_MarketID_get, _sptraderapi.CTORATstpSPMarketStatusField_MarketID_set)

	# 市场状态
    __swig_setmethods__["MarketStatus"] = _sptraderapi.CTORATstpSPMarketStatusField_MarketStatus_set
    __swig_getmethods__["MarketStatus"] = _sptraderapi.CTORATstpSPMarketStatusField_MarketStatus_get
    if _newclass:
        MarketStatus = _swig_property(_sptraderapi.CTORATstpSPMarketStatusField_MarketStatus_get, _sptraderapi.CTORATstpSPMarketStatusField_MarketStatus_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPMarketStatusField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPMarketStatusField
    __del__ = lambda self: None
CTORATstpSPMarketStatusField_swigregister = _sptraderapi.CTORATstpSPMarketStatusField_swigregister
CTORATstpSPMarketStatusField_swigregister(CTORATstpSPMarketStatusField)




#########################################交易通知############################################
class CTORATstpSPTradingNoticeField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPTradingNoticeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPTradingNoticeField, name)
    __repr__ = _swig_repr

	# 通知流水号
    __swig_setmethods__["NoticeSerial"] = _sptraderapi.CTORATstpSPTradingNoticeField_NoticeSerial_set
    __swig_getmethods__["NoticeSerial"] = _sptraderapi.CTORATstpSPTradingNoticeField_NoticeSerial_get
    if _newclass:
        NoticeSerial = _swig_property(_sptraderapi.CTORATstpSPTradingNoticeField_NoticeSerial_get, _sptraderapi.CTORATstpSPTradingNoticeField_NoticeSerial_set)

	# 通知日期
    __swig_setmethods__["InsertDate"] = _sptraderapi.CTORATstpSPTradingNoticeField_InsertDate_set
    __swig_getmethods__["InsertDate"] = _sptraderapi.CTORATstpSPTradingNoticeField_InsertDate_get
    if _newclass:
        InsertDate = _swig_property(_sptraderapi.CTORATstpSPTradingNoticeField_InsertDate_get, _sptraderapi.CTORATstpSPTradingNoticeField_InsertDate_set)

	# 通知时间
    __swig_setmethods__["InsertTime"] = _sptraderapi.CTORATstpSPTradingNoticeField_InsertTime_set
    __swig_getmethods__["InsertTime"] = _sptraderapi.CTORATstpSPTradingNoticeField_InsertTime_get
    if _newclass:
        InsertTime = _swig_property(_sptraderapi.CTORATstpSPTradingNoticeField_InsertTime_get, _sptraderapi.CTORATstpSPTradingNoticeField_InsertTime_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPTradingNoticeField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPTradingNoticeField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPTradingNoticeField_InvestorID_get, _sptraderapi.CTORATstpSPTradingNoticeField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPTradingNoticeField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPTradingNoticeField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPTradingNoticeField_BusinessUnitID_get, _sptraderapi.CTORATstpSPTradingNoticeField_BusinessUnitID_set)

	# 通知消息内容
    __swig_setmethods__["Content"] = _sptraderapi.CTORATstpSPTradingNoticeField_Content_set
    __swig_getmethods__["Content"] = _sptraderapi.CTORATstpSPTradingNoticeField_Content_get
    if _newclass:
        Content = _swig_property(_sptraderapi.CTORATstpSPTradingNoticeField_Content_get, _sptraderapi.CTORATstpSPTradingNoticeField_Content_set)

	# 操作员
    __swig_setmethods__["OperatorID"] = _sptraderapi.CTORATstpSPTradingNoticeField_OperatorID_set
    __swig_getmethods__["OperatorID"] = _sptraderapi.CTORATstpSPTradingNoticeField_OperatorID_get
    if _newclass:
        OperatorID = _swig_property(_sptraderapi.CTORATstpSPTradingNoticeField_OperatorID_get, _sptraderapi.CTORATstpSPTradingNoticeField_OperatorID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPTradingNoticeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPTradingNoticeField
    __del__ = lambda self: None
CTORATstpSPTradingNoticeField_swigregister = _sptraderapi.CTORATstpSPTradingNoticeField_swigregister
CTORATstpSPTradingNoticeField_swigregister(CTORATstpSPTradingNoticeField)




#########################################查询交易所############################################
class CTORATstpSPQryExchangeField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPQryExchangeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPQryExchangeField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryExchangeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryExchangeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPQryExchangeField_ExchangeID_get, _sptraderapi.CTORATstpSPQryExchangeField_ExchangeID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPQryExchangeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPQryExchangeField
    __del__ = lambda self: None
CTORATstpSPQryExchangeField_swigregister = _sptraderapi.CTORATstpSPQryExchangeField_swigregister
CTORATstpSPQryExchangeField_swigregister(CTORATstpSPQryExchangeField)




#########################################交易所############################################
class CTORATstpSPExchangeField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPExchangeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPExchangeField, name)
    __repr__ = _swig_repr

	# 
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPExchangeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPExchangeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPExchangeField_ExchangeID_get, _sptraderapi.CTORATstpSPExchangeField_ExchangeID_set)

	# 
    __swig_setmethods__["ExchangeName"] = _sptraderapi.CTORATstpSPExchangeField_ExchangeName_set
    __swig_getmethods__["ExchangeName"] = _sptraderapi.CTORATstpSPExchangeField_ExchangeName_get
    if _newclass:
        ExchangeName = _swig_property(_sptraderapi.CTORATstpSPExchangeField_ExchangeName_get, _sptraderapi.CTORATstpSPExchangeField_ExchangeName_set)

	# 
    __swig_setmethods__["TradingDay"] = _sptraderapi.CTORATstpSPExchangeField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _sptraderapi.CTORATstpSPExchangeField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_sptraderapi.CTORATstpSPExchangeField_TradingDay_get, _sptraderapi.CTORATstpSPExchangeField_TradingDay_set)

	# 
    __swig_setmethods__["DataSyncStatus"] = _sptraderapi.CTORATstpSPExchangeField_DataSyncStatus_set
    __swig_getmethods__["DataSyncStatus"] = _sptraderapi.CTORATstpSPExchangeField_DataSyncStatus_get
    if _newclass:
        DataSyncStatus = _swig_property(_sptraderapi.CTORATstpSPExchangeField_DataSyncStatus_get, _sptraderapi.CTORATstpSPExchangeField_DataSyncStatus_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPExchangeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPExchangeField
    __del__ = lambda self: None
CTORATstpSPExchangeField_swigregister = _sptraderapi.CTORATstpSPExchangeField_swigregister
CTORATstpSPExchangeField_swigregister(CTORATstpSPExchangeField)




#########################################查询实时行情############################################
class CTORATstpSPQryMarketDataField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPQryMarketDataField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPQryMarketDataField, name)
    __repr__ = _swig_repr

	# 证券代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPQryMarketDataField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPQryMarketDataField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPQryMarketDataField_SecurityID_get, _sptraderapi.CTORATstpSPQryMarketDataField_SecurityID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryMarketDataField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryMarketDataField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPQryMarketDataField_ExchangeID_get, _sptraderapi.CTORATstpSPQryMarketDataField_ExchangeID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPQryMarketDataField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPQryMarketDataField
    __del__ = lambda self: None
CTORATstpSPQryMarketDataField_swigregister = _sptraderapi.CTORATstpSPQryMarketDataField_swigregister
CTORATstpSPQryMarketDataField_swigregister(CTORATstpSPQryMarketDataField)




#########################################查询合约信息############################################
class CTORATstpSPQrySecurityField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPQrySecurityField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPQrySecurityField, name)
    __repr__ = _swig_repr

	# 合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPQrySecurityField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPQrySecurityField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPQrySecurityField_SecurityID_get, _sptraderapi.CTORATstpSPQrySecurityField_SecurityID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQrySecurityField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQrySecurityField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPQrySecurityField_ExchangeID_get, _sptraderapi.CTORATstpSPQrySecurityField_ExchangeID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPQrySecurityField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPQrySecurityField
    __del__ = lambda self: None
CTORATstpSPQrySecurityField_swigregister = _sptraderapi.CTORATstpSPQrySecurityField_swigregister
CTORATstpSPQrySecurityField_swigregister(CTORATstpSPQrySecurityField)




#########################################合约信息############################################
class CTORATstpSPSecurityField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPSecurityField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPSecurityField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPSecurityField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPSecurityField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPSecurityField_ExchangeID_get, _sptraderapi.CTORATstpSPSecurityField_ExchangeID_set)

	# 合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPSecurityField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPSecurityField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPSecurityField_SecurityID_get, _sptraderapi.CTORATstpSPSecurityField_SecurityID_set)

	# 交易所合约代码
    __swig_setmethods__["ExchSecurityID"] = _sptraderapi.CTORATstpSPSecurityField_ExchSecurityID_set
    __swig_getmethods__["ExchSecurityID"] = _sptraderapi.CTORATstpSPSecurityField_ExchSecurityID_get
    if _newclass:
        ExchSecurityID = _swig_property(_sptraderapi.CTORATstpSPSecurityField_ExchSecurityID_get, _sptraderapi.CTORATstpSPSecurityField_ExchSecurityID_set)

	# 合约名称
    __swig_setmethods__["SecurityName"] = _sptraderapi.CTORATstpSPSecurityField_SecurityName_set
    __swig_getmethods__["SecurityName"] = _sptraderapi.CTORATstpSPSecurityField_SecurityName_get
    if _newclass:
        SecurityName = _swig_property(_sptraderapi.CTORATstpSPSecurityField_SecurityName_get, _sptraderapi.CTORATstpSPSecurityField_SecurityName_set)

	# 基础证券代码
    __swig_setmethods__["UnderlyingSecurityID"] = _sptraderapi.CTORATstpSPSecurityField_UnderlyingSecurityID_set
    __swig_getmethods__["UnderlyingSecurityID"] = _sptraderapi.CTORATstpSPSecurityField_UnderlyingSecurityID_get
    if _newclass:
        UnderlyingSecurityID = _swig_property(_sptraderapi.CTORATstpSPSecurityField_UnderlyingSecurityID_get, _sptraderapi.CTORATstpSPSecurityField_UnderlyingSecurityID_set)

	# 基础证券名称
    __swig_setmethods__["UnderlyingSecurityName"] = _sptraderapi.CTORATstpSPSecurityField_UnderlyingSecurityName_set
    __swig_getmethods__["UnderlyingSecurityName"] = _sptraderapi.CTORATstpSPSecurityField_UnderlyingSecurityName_get
    if _newclass:
        UnderlyingSecurityName = _swig_property(_sptraderapi.CTORATstpSPSecurityField_UnderlyingSecurityName_get, _sptraderapi.CTORATstpSPSecurityField_UnderlyingSecurityName_set)

	# 合约基础商品乘数
    __swig_setmethods__["UnderlyingMultiple"] = _sptraderapi.CTORATstpSPSecurityField_UnderlyingMultiple_set
    __swig_getmethods__["UnderlyingMultiple"] = _sptraderapi.CTORATstpSPSecurityField_UnderlyingMultiple_get
    if _newclass:
        UnderlyingMultiple = _swig_property(_sptraderapi.CTORATstpSPSecurityField_UnderlyingMultiple_get, _sptraderapi.CTORATstpSPSecurityField_UnderlyingMultiple_set)

	# 执行方式
    __swig_setmethods__["StrikeMode"] = _sptraderapi.CTORATstpSPSecurityField_StrikeMode_set
    __swig_getmethods__["StrikeMode"] = _sptraderapi.CTORATstpSPSecurityField_StrikeMode_get
    if _newclass:
        StrikeMode = _swig_property(_sptraderapi.CTORATstpSPSecurityField_StrikeMode_get, _sptraderapi.CTORATstpSPSecurityField_StrikeMode_set)

	# 期权类型
    __swig_setmethods__["OptionsType"] = _sptraderapi.CTORATstpSPSecurityField_OptionsType_set
    __swig_getmethods__["OptionsType"] = _sptraderapi.CTORATstpSPSecurityField_OptionsType_get
    if _newclass:
        OptionsType = _swig_property(_sptraderapi.CTORATstpSPSecurityField_OptionsType_get, _sptraderapi.CTORATstpSPSecurityField_OptionsType_set)

	# 市场代码
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPSecurityField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPSecurityField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPSecurityField_MarketID_get, _sptraderapi.CTORATstpSPSecurityField_MarketID_set)

	# 产品代码
    __swig_setmethods__["ProductID"] = _sptraderapi.CTORATstpSPSecurityField_ProductID_set
    __swig_getmethods__["ProductID"] = _sptraderapi.CTORATstpSPSecurityField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_sptraderapi.CTORATstpSPSecurityField_ProductID_get, _sptraderapi.CTORATstpSPSecurityField_ProductID_set)

	# 证券类别代码
    __swig_setmethods__["SecurityType"] = _sptraderapi.CTORATstpSPSecurityField_SecurityType_set
    __swig_getmethods__["SecurityType"] = _sptraderapi.CTORATstpSPSecurityField_SecurityType_get
    if _newclass:
        SecurityType = _swig_property(_sptraderapi.CTORATstpSPSecurityField_SecurityType_get, _sptraderapi.CTORATstpSPSecurityField_SecurityType_set)

	# 申报单位
    __swig_setmethods__["OrderUnit"] = _sptraderapi.CTORATstpSPSecurityField_OrderUnit_set
    __swig_getmethods__["OrderUnit"] = _sptraderapi.CTORATstpSPSecurityField_OrderUnit_get
    if _newclass:
        OrderUnit = _swig_property(_sptraderapi.CTORATstpSPSecurityField_OrderUnit_get, _sptraderapi.CTORATstpSPSecurityField_OrderUnit_set)

	# 买入交易单位
    __swig_setmethods__["BuyTradingUnit"] = _sptraderapi.CTORATstpSPSecurityField_BuyTradingUnit_set
    __swig_getmethods__["BuyTradingUnit"] = _sptraderapi.CTORATstpSPSecurityField_BuyTradingUnit_get
    if _newclass:
        BuyTradingUnit = _swig_property(_sptraderapi.CTORATstpSPSecurityField_BuyTradingUnit_get, _sptraderapi.CTORATstpSPSecurityField_BuyTradingUnit_set)

	# 卖出交易单位
    __swig_setmethods__["SellTradingUnit"] = _sptraderapi.CTORATstpSPSecurityField_SellTradingUnit_set
    __swig_getmethods__["SellTradingUnit"] = _sptraderapi.CTORATstpSPSecurityField_SellTradingUnit_get
    if _newclass:
        SellTradingUnit = _swig_property(_sptraderapi.CTORATstpSPSecurityField_SellTradingUnit_get, _sptraderapi.CTORATstpSPSecurityField_SellTradingUnit_set)

	# 市价单买最大下单量
    __swig_setmethods__["MaxMarketOrderBuyVolume"] = _sptraderapi.CTORATstpSPSecurityField_MaxMarketOrderBuyVolume_set
    __swig_getmethods__["MaxMarketOrderBuyVolume"] = _sptraderapi.CTORATstpSPSecurityField_MaxMarketOrderBuyVolume_get
    if _newclass:
        MaxMarketOrderBuyVolume = _swig_property(_sptraderapi.CTORATstpSPSecurityField_MaxMarketOrderBuyVolume_get, _sptraderapi.CTORATstpSPSecurityField_MaxMarketOrderBuyVolume_set)

	# 市价单买最小下单量
    __swig_setmethods__["MinMarketOrderBuyVolume"] = _sptraderapi.CTORATstpSPSecurityField_MinMarketOrderBuyVolume_set
    __swig_getmethods__["MinMarketOrderBuyVolume"] = _sptraderapi.CTORATstpSPSecurityField_MinMarketOrderBuyVolume_get
    if _newclass:
        MinMarketOrderBuyVolume = _swig_property(_sptraderapi.CTORATstpSPSecurityField_MinMarketOrderBuyVolume_get, _sptraderapi.CTORATstpSPSecurityField_MinMarketOrderBuyVolume_set)

	# 限价单买最大下单量
    __swig_setmethods__["MaxLimitOrderBuyVolume"] = _sptraderapi.CTORATstpSPSecurityField_MaxLimitOrderBuyVolume_set
    __swig_getmethods__["MaxLimitOrderBuyVolume"] = _sptraderapi.CTORATstpSPSecurityField_MaxLimitOrderBuyVolume_get
    if _newclass:
        MaxLimitOrderBuyVolume = _swig_property(_sptraderapi.CTORATstpSPSecurityField_MaxLimitOrderBuyVolume_get, _sptraderapi.CTORATstpSPSecurityField_MaxLimitOrderBuyVolume_set)

	# 限价单买最小下单量
    __swig_setmethods__["MinLimitOrderBuyVolume"] = _sptraderapi.CTORATstpSPSecurityField_MinLimitOrderBuyVolume_set
    __swig_getmethods__["MinLimitOrderBuyVolume"] = _sptraderapi.CTORATstpSPSecurityField_MinLimitOrderBuyVolume_get
    if _newclass:
        MinLimitOrderBuyVolume = _swig_property(_sptraderapi.CTORATstpSPSecurityField_MinLimitOrderBuyVolume_get, _sptraderapi.CTORATstpSPSecurityField_MinLimitOrderBuyVolume_set)

	# 市价单卖最大下单量
    __swig_setmethods__["MaxMarketOrderSellVolume"] = _sptraderapi.CTORATstpSPSecurityField_MaxMarketOrderSellVolume_set
    __swig_getmethods__["MaxMarketOrderSellVolume"] = _sptraderapi.CTORATstpSPSecurityField_MaxMarketOrderSellVolume_get
    if _newclass:
        MaxMarketOrderSellVolume = _swig_property(_sptraderapi.CTORATstpSPSecurityField_MaxMarketOrderSellVolume_get, _sptraderapi.CTORATstpSPSecurityField_MaxMarketOrderSellVolume_set)

	# 市价单卖最小下单量
    __swig_setmethods__["MinMarketOrderSellVolume"] = _sptraderapi.CTORATstpSPSecurityField_MinMarketOrderSellVolume_set
    __swig_getmethods__["MinMarketOrderSellVolume"] = _sptraderapi.CTORATstpSPSecurityField_MinMarketOrderSellVolume_get
    if _newclass:
        MinMarketOrderSellVolume = _swig_property(_sptraderapi.CTORATstpSPSecurityField_MinMarketOrderSellVolume_get, _sptraderapi.CTORATstpSPSecurityField_MinMarketOrderSellVolume_set)

	# 限价单卖最大下单量
    __swig_setmethods__["MaxLimitOrderSellVolume"] = _sptraderapi.CTORATstpSPSecurityField_MaxLimitOrderSellVolume_set
    __swig_getmethods__["MaxLimitOrderSellVolume"] = _sptraderapi.CTORATstpSPSecurityField_MaxLimitOrderSellVolume_get
    if _newclass:
        MaxLimitOrderSellVolume = _swig_property(_sptraderapi.CTORATstpSPSecurityField_MaxLimitOrderSellVolume_get, _sptraderapi.CTORATstpSPSecurityField_MaxLimitOrderSellVolume_set)

	# 限价单卖最小下单量
    __swig_setmethods__["MinLimitOrderSellVolume"] = _sptraderapi.CTORATstpSPSecurityField_MinLimitOrderSellVolume_set
    __swig_getmethods__["MinLimitOrderSellVolume"] = _sptraderapi.CTORATstpSPSecurityField_MinLimitOrderSellVolume_get
    if _newclass:
        MinLimitOrderSellVolume = _swig_property(_sptraderapi.CTORATstpSPSecurityField_MinLimitOrderSellVolume_get, _sptraderapi.CTORATstpSPSecurityField_MinLimitOrderSellVolume_set)

	# 数量乘数
    __swig_setmethods__["VolumeMultiple"] = _sptraderapi.CTORATstpSPSecurityField_VolumeMultiple_set
    __swig_getmethods__["VolumeMultiple"] = _sptraderapi.CTORATstpSPSecurityField_VolumeMultiple_get
    if _newclass:
        VolumeMultiple = _swig_property(_sptraderapi.CTORATstpSPSecurityField_VolumeMultiple_get, _sptraderapi.CTORATstpSPSecurityField_VolumeMultiple_set)

	# 最小变动价位
    __swig_setmethods__["PriceTick"] = _sptraderapi.CTORATstpSPSecurityField_PriceTick_set
    __swig_getmethods__["PriceTick"] = _sptraderapi.CTORATstpSPSecurityField_PriceTick_get
    if _newclass:
        PriceTick = _swig_property(_sptraderapi.CTORATstpSPSecurityField_PriceTick_get, _sptraderapi.CTORATstpSPSecurityField_PriceTick_set)

	# 持仓类型
    __swig_setmethods__["PositionType"] = _sptraderapi.CTORATstpSPSecurityField_PositionType_set
    __swig_getmethods__["PositionType"] = _sptraderapi.CTORATstpSPSecurityField_PositionType_get
    if _newclass:
        PositionType = _swig_property(_sptraderapi.CTORATstpSPSecurityField_PositionType_get, _sptraderapi.CTORATstpSPSecurityField_PositionType_set)

	# 证券状态
    __swig_setmethods__["SecurityStatus"] = _sptraderapi.CTORATstpSPSecurityField_SecurityStatus_set
    __swig_getmethods__["SecurityStatus"] = _sptraderapi.CTORATstpSPSecurityField_SecurityStatus_get
    if _newclass:
        SecurityStatus = _swig_property(_sptraderapi.CTORATstpSPSecurityField_SecurityStatus_get, _sptraderapi.CTORATstpSPSecurityField_SecurityStatus_set)

	# 执行价
    __swig_setmethods__["StrikePrice"] = _sptraderapi.CTORATstpSPSecurityField_StrikePrice_set
    __swig_getmethods__["StrikePrice"] = _sptraderapi.CTORATstpSPSecurityField_StrikePrice_get
    if _newclass:
        StrikePrice = _swig_property(_sptraderapi.CTORATstpSPSecurityField_StrikePrice_get, _sptraderapi.CTORATstpSPSecurityField_StrikePrice_set)

	# 首交易日
    __swig_setmethods__["FirstDate"] = _sptraderapi.CTORATstpSPSecurityField_FirstDate_set
    __swig_getmethods__["FirstDate"] = _sptraderapi.CTORATstpSPSecurityField_FirstDate_get
    if _newclass:
        FirstDate = _swig_property(_sptraderapi.CTORATstpSPSecurityField_FirstDate_get, _sptraderapi.CTORATstpSPSecurityField_FirstDate_set)

	# 最后交易日
    __swig_setmethods__["LastDate"] = _sptraderapi.CTORATstpSPSecurityField_LastDate_set
    __swig_getmethods__["LastDate"] = _sptraderapi.CTORATstpSPSecurityField_LastDate_get
    if _newclass:
        LastDate = _swig_property(_sptraderapi.CTORATstpSPSecurityField_LastDate_get, _sptraderapi.CTORATstpSPSecurityField_LastDate_set)

	# 行权日
    __swig_setmethods__["StrikeDate"] = _sptraderapi.CTORATstpSPSecurityField_StrikeDate_set
    __swig_getmethods__["StrikeDate"] = _sptraderapi.CTORATstpSPSecurityField_StrikeDate_get
    if _newclass:
        StrikeDate = _swig_property(_sptraderapi.CTORATstpSPSecurityField_StrikeDate_get, _sptraderapi.CTORATstpSPSecurityField_StrikeDate_set)

	# 到期日
    __swig_setmethods__["ExpireDate"] = _sptraderapi.CTORATstpSPSecurityField_ExpireDate_set
    __swig_getmethods__["ExpireDate"] = _sptraderapi.CTORATstpSPSecurityField_ExpireDate_get
    if _newclass:
        ExpireDate = _swig_property(_sptraderapi.CTORATstpSPSecurityField_ExpireDate_get, _sptraderapi.CTORATstpSPSecurityField_ExpireDate_set)

	# 交割日
    __swig_setmethods__["DelivDate"] = _sptraderapi.CTORATstpSPSecurityField_DelivDate_set
    __swig_getmethods__["DelivDate"] = _sptraderapi.CTORATstpSPSecurityField_DelivDate_get
    if _newclass:
        DelivDate = _swig_property(_sptraderapi.CTORATstpSPSecurityField_DelivDate_get, _sptraderapi.CTORATstpSPSecurityField_DelivDate_set)

	# 是否有涨跌幅限制
    __swig_setmethods__["IsUpDownLimit"] = _sptraderapi.CTORATstpSPSecurityField_IsUpDownLimit_set
    __swig_getmethods__["IsUpDownLimit"] = _sptraderapi.CTORATstpSPSecurityField_IsUpDownLimit_get
    if _newclass:
        IsUpDownLimit = _swig_property(_sptraderapi.CTORATstpSPSecurityField_IsUpDownLimit_get, _sptraderapi.CTORATstpSPSecurityField_IsUpDownLimit_set)

	# 期权单位保证金
    __swig_setmethods__["MarginUnit"] = _sptraderapi.CTORATstpSPSecurityField_MarginUnit_set
    __swig_getmethods__["MarginUnit"] = _sptraderapi.CTORATstpSPSecurityField_MarginUnit_get
    if _newclass:
        MarginUnit = _swig_property(_sptraderapi.CTORATstpSPSecurityField_MarginUnit_get, _sptraderapi.CTORATstpSPSecurityField_MarginUnit_set)

	# 合约前结算价
    __swig_setmethods__["PreSettlementPrice"] = _sptraderapi.CTORATstpSPSecurityField_PreSettlementPrice_set
    __swig_getmethods__["PreSettlementPrice"] = _sptraderapi.CTORATstpSPSecurityField_PreSettlementPrice_get
    if _newclass:
        PreSettlementPrice = _swig_property(_sptraderapi.CTORATstpSPSecurityField_PreSettlementPrice_get, _sptraderapi.CTORATstpSPSecurityField_PreSettlementPrice_set)

	# 合约前收盘价
    __swig_setmethods__["PreClosePrice"] = _sptraderapi.CTORATstpSPSecurityField_PreClosePrice_set
    __swig_getmethods__["PreClosePrice"] = _sptraderapi.CTORATstpSPSecurityField_PreClosePrice_get
    if _newclass:
        PreClosePrice = _swig_property(_sptraderapi.CTORATstpSPSecurityField_PreClosePrice_get, _sptraderapi.CTORATstpSPSecurityField_PreClosePrice_set)

	# 标的合约前收盘价
    __swig_setmethods__["UnderlyingPreClosePrice"] = _sptraderapi.CTORATstpSPSecurityField_UnderlyingPreClosePrice_set
    __swig_getmethods__["UnderlyingPreClosePrice"] = _sptraderapi.CTORATstpSPSecurityField_UnderlyingPreClosePrice_get
    if _newclass:
        UnderlyingPreClosePrice = _swig_property(_sptraderapi.CTORATstpSPSecurityField_UnderlyingPreClosePrice_get, _sptraderapi.CTORATstpSPSecurityField_UnderlyingPreClosePrice_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPSecurityField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPSecurityField
    __del__ = lambda self: None
CTORATstpSPSecurityField_swigregister = _sptraderapi.CTORATstpSPSecurityField_swigregister
CTORATstpSPSecurityField_swigregister(CTORATstpSPSecurityField)




#########################################查询经纪公司用户与投资者关系############################################
class CTORATstpSPQryBUProxyField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPQryBUProxyField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPQryBUProxyField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryBUProxyField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryBUProxyField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPQryBUProxyField_InvestorID_get, _sptraderapi.CTORATstpSPQryBUProxyField_InvestorID_set)

	# 交易用户代码
    __swig_setmethods__["UserID"] = _sptraderapi.CTORATstpSPQryBUProxyField_UserID_set
    __swig_getmethods__["UserID"] = _sptraderapi.CTORATstpSPQryBUProxyField_UserID_get
    if _newclass:
        UserID = _swig_property(_sptraderapi.CTORATstpSPQryBUProxyField_UserID_get, _sptraderapi.CTORATstpSPQryBUProxyField_UserID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPQryBUProxyField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPQryBUProxyField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPQryBUProxyField_BusinessUnitID_get, _sptraderapi.CTORATstpSPQryBUProxyField_BusinessUnitID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPQryBUProxyField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPQryBUProxyField
    __del__ = lambda self: None
CTORATstpSPQryBUProxyField_swigregister = _sptraderapi.CTORATstpSPQryBUProxyField_swigregister
CTORATstpSPQryBUProxyField_swigregister(CTORATstpSPQryBUProxyField)




#########################################经纪公司用户与投资者关系############################################
class CTORATstpSPBUProxyField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPBUProxyField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPBUProxyField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPBUProxyField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPBUProxyField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPBUProxyField_InvestorID_get, _sptraderapi.CTORATstpSPBUProxyField_InvestorID_set)

	# 用户代码
    __swig_setmethods__["UserID"] = _sptraderapi.CTORATstpSPBUProxyField_UserID_set
    __swig_getmethods__["UserID"] = _sptraderapi.CTORATstpSPBUProxyField_UserID_get
    if _newclass:
        UserID = _swig_property(_sptraderapi.CTORATstpSPBUProxyField_UserID_get, _sptraderapi.CTORATstpSPBUProxyField_UserID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPBUProxyField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPBUProxyField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPBUProxyField_BusinessUnitID_get, _sptraderapi.CTORATstpSPBUProxyField_BusinessUnitID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPBUProxyField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPBUProxyField
    __del__ = lambda self: None
CTORATstpSPBUProxyField_swigregister = _sptraderapi.CTORATstpSPBUProxyField_swigregister
CTORATstpSPBUProxyField_swigregister(CTORATstpSPBUProxyField)




#########################################查询User############################################
class CTORATstpSPQryUserField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPQryUserField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPQryUserField, name)
    __repr__ = _swig_repr

	# 用户代码
    __swig_setmethods__["UserID"] = _sptraderapi.CTORATstpSPQryUserField_UserID_set
    __swig_getmethods__["UserID"] = _sptraderapi.CTORATstpSPQryUserField_UserID_get
    if _newclass:
        UserID = _swig_property(_sptraderapi.CTORATstpSPQryUserField_UserID_get, _sptraderapi.CTORATstpSPQryUserField_UserID_set)

	# 用户类型
    __swig_setmethods__["UserType"] = _sptraderapi.CTORATstpSPQryUserField_UserType_set
    __swig_getmethods__["UserType"] = _sptraderapi.CTORATstpSPQryUserField_UserType_get
    if _newclass:
        UserType = _swig_property(_sptraderapi.CTORATstpSPQryUserField_UserType_get, _sptraderapi.CTORATstpSPQryUserField_UserType_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPQryUserField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPQryUserField
    __del__ = lambda self: None
CTORATstpSPQryUserField_swigregister = _sptraderapi.CTORATstpSPQryUserField_swigregister
CTORATstpSPQryUserField_swigregister(CTORATstpSPQryUserField)




#########################################User############################################
class CTORATstpSPUserField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPUserField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPUserField, name)
    __repr__ = _swig_repr

	# 用户代码
    __swig_setmethods__["UserID"] = _sptraderapi.CTORATstpSPUserField_UserID_set
    __swig_getmethods__["UserID"] = _sptraderapi.CTORATstpSPUserField_UserID_get
    if _newclass:
        UserID = _swig_property(_sptraderapi.CTORATstpSPUserField_UserID_get, _sptraderapi.CTORATstpSPUserField_UserID_set)

	# 用户名称
    __swig_setmethods__["UserName"] = _sptraderapi.CTORATstpSPUserField_UserName_set
    __swig_getmethods__["UserName"] = _sptraderapi.CTORATstpSPUserField_UserName_get
    if _newclass:
        UserName = _swig_property(_sptraderapi.CTORATstpSPUserField_UserName_get, _sptraderapi.CTORATstpSPUserField_UserName_set)

	# 用户类型
    __swig_setmethods__["UserType"] = _sptraderapi.CTORATstpSPUserField_UserType_set
    __swig_getmethods__["UserType"] = _sptraderapi.CTORATstpSPUserField_UserType_get
    if _newclass:
        UserType = _swig_property(_sptraderapi.CTORATstpSPUserField_UserType_get, _sptraderapi.CTORATstpSPUserField_UserType_set)

	# 经纪公司部门代码
    __swig_setmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPUserField_DepartmentID_set
    __swig_getmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPUserField_DepartmentID_get
    if _newclass:
        DepartmentID = _swig_property(_sptraderapi.CTORATstpSPUserField_DepartmentID_get, _sptraderapi.CTORATstpSPUserField_DepartmentID_set)

	# 登录限制
    __swig_setmethods__["LoginLimit"] = _sptraderapi.CTORATstpSPUserField_LoginLimit_set
    __swig_getmethods__["LoginLimit"] = _sptraderapi.CTORATstpSPUserField_LoginLimit_get
    if _newclass:
        LoginLimit = _swig_property(_sptraderapi.CTORATstpSPUserField_LoginLimit_get, _sptraderapi.CTORATstpSPUserField_LoginLimit_set)

	# 密码连续输入错误限制
    __swig_setmethods__["PasswordFailLimit"] = _sptraderapi.CTORATstpSPUserField_PasswordFailLimit_set
    __swig_getmethods__["PasswordFailLimit"] = _sptraderapi.CTORATstpSPUserField_PasswordFailLimit_get
    if _newclass:
        PasswordFailLimit = _swig_property(_sptraderapi.CTORATstpSPUserField_PasswordFailLimit_get, _sptraderapi.CTORATstpSPUserField_PasswordFailLimit_set)

	# 状态
    __swig_setmethods__["Status"] = _sptraderapi.CTORATstpSPUserField_Status_set
    __swig_getmethods__["Status"] = _sptraderapi.CTORATstpSPUserField_Status_get
    if _newclass:
        Status = _swig_property(_sptraderapi.CTORATstpSPUserField_Status_get, _sptraderapi.CTORATstpSPUserField_Status_set)

	# 联系人
    __swig_setmethods__["Contacter"] = _sptraderapi.CTORATstpSPUserField_Contacter_set
    __swig_getmethods__["Contacter"] = _sptraderapi.CTORATstpSPUserField_Contacter_get
    if _newclass:
        Contacter = _swig_property(_sptraderapi.CTORATstpSPUserField_Contacter_get, _sptraderapi.CTORATstpSPUserField_Contacter_set)

	# 传真
    __swig_setmethods__["Fax"] = _sptraderapi.CTORATstpSPUserField_Fax_set
    __swig_getmethods__["Fax"] = _sptraderapi.CTORATstpSPUserField_Fax_get
    if _newclass:
        Fax = _swig_property(_sptraderapi.CTORATstpSPUserField_Fax_get, _sptraderapi.CTORATstpSPUserField_Fax_set)

	# 联系电话
    __swig_setmethods__["Telephone"] = _sptraderapi.CTORATstpSPUserField_Telephone_set
    __swig_getmethods__["Telephone"] = _sptraderapi.CTORATstpSPUserField_Telephone_get
    if _newclass:
        Telephone = _swig_property(_sptraderapi.CTORATstpSPUserField_Telephone_get, _sptraderapi.CTORATstpSPUserField_Telephone_set)

	# 电子邮件
    __swig_setmethods__["Email"] = _sptraderapi.CTORATstpSPUserField_Email_set
    __swig_getmethods__["Email"] = _sptraderapi.CTORATstpSPUserField_Email_get
    if _newclass:
        Email = _swig_property(_sptraderapi.CTORATstpSPUserField_Email_get, _sptraderapi.CTORATstpSPUserField_Email_set)

	# 通讯地址
    __swig_setmethods__["Address"] = _sptraderapi.CTORATstpSPUserField_Address_set
    __swig_getmethods__["Address"] = _sptraderapi.CTORATstpSPUserField_Address_get
    if _newclass:
        Address = _swig_property(_sptraderapi.CTORATstpSPUserField_Address_get, _sptraderapi.CTORATstpSPUserField_Address_set)

	# 邮政编码
    __swig_setmethods__["ZipCode"] = _sptraderapi.CTORATstpSPUserField_ZipCode_set
    __swig_getmethods__["ZipCode"] = _sptraderapi.CTORATstpSPUserField_ZipCode_get
    if _newclass:
        ZipCode = _swig_property(_sptraderapi.CTORATstpSPUserField_ZipCode_get, _sptraderapi.CTORATstpSPUserField_ZipCode_set)

	# 开户日期
    __swig_setmethods__["OpenDate"] = _sptraderapi.CTORATstpSPUserField_OpenDate_set
    __swig_getmethods__["OpenDate"] = _sptraderapi.CTORATstpSPUserField_OpenDate_get
    if _newclass:
        OpenDate = _swig_property(_sptraderapi.CTORATstpSPUserField_OpenDate_get, _sptraderapi.CTORATstpSPUserField_OpenDate_set)

	# 销户日期
    __swig_setmethods__["CloseDate"] = _sptraderapi.CTORATstpSPUserField_CloseDate_set
    __swig_getmethods__["CloseDate"] = _sptraderapi.CTORATstpSPUserField_CloseDate_get
    if _newclass:
        CloseDate = _swig_property(_sptraderapi.CTORATstpSPUserField_CloseDate_get, _sptraderapi.CTORATstpSPUserField_CloseDate_set)

	# 通讯流量
    __swig_setmethods__["OrderInsertCommFlux"] = _sptraderapi.CTORATstpSPUserField_OrderInsertCommFlux_set
    __swig_getmethods__["OrderInsertCommFlux"] = _sptraderapi.CTORATstpSPUserField_OrderInsertCommFlux_get
    if _newclass:
        OrderInsertCommFlux = _swig_property(_sptraderapi.CTORATstpSPUserField_OrderInsertCommFlux_get, _sptraderapi.CTORATstpSPUserField_OrderInsertCommFlux_set)

	# 撤单流控
    __swig_setmethods__["OrderActionCommFlux"] = _sptraderapi.CTORATstpSPUserField_OrderActionCommFlux_set
    __swig_getmethods__["OrderActionCommFlux"] = _sptraderapi.CTORATstpSPUserField_OrderActionCommFlux_get
    if _newclass:
        OrderActionCommFlux = _swig_property(_sptraderapi.CTORATstpSPUserField_OrderActionCommFlux_get, _sptraderapi.CTORATstpSPUserField_OrderActionCommFlux_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPUserField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPUserField
    __del__ = lambda self: None
CTORATstpSPUserField_swigregister = _sptraderapi.CTORATstpSPUserField_swigregister
CTORATstpSPUserField_swigregister(CTORATstpSPUserField)




#########################################查询投资者############################################
class CTORATstpSPQryInvestorField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPQryInvestorField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPQryInvestorField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryInvestorField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryInvestorField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPQryInvestorField_InvestorID_get, _sptraderapi.CTORATstpSPQryInvestorField_InvestorID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPQryInvestorField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPQryInvestorField
    __del__ = lambda self: None
CTORATstpSPQryInvestorField_swigregister = _sptraderapi.CTORATstpSPQryInvestorField_swigregister
CTORATstpSPQryInvestorField_swigregister(CTORATstpSPQryInvestorField)




#########################################投资者############################################
class CTORATstpSPInvestorField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPInvestorField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPInvestorField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPInvestorField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPInvestorField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPInvestorField_InvestorID_get, _sptraderapi.CTORATstpSPInvestorField_InvestorID_set)

	# 经纪公司部门代码
    __swig_setmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPInvestorField_DepartmentID_set
    __swig_getmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPInvestorField_DepartmentID_get
    if _newclass:
        DepartmentID = _swig_property(_sptraderapi.CTORATstpSPInvestorField_DepartmentID_get, _sptraderapi.CTORATstpSPInvestorField_DepartmentID_set)

	# 投资者类型
    __swig_setmethods__["InvestorType"] = _sptraderapi.CTORATstpSPInvestorField_InvestorType_set
    __swig_getmethods__["InvestorType"] = _sptraderapi.CTORATstpSPInvestorField_InvestorType_get
    if _newclass:
        InvestorType = _swig_property(_sptraderapi.CTORATstpSPInvestorField_InvestorType_get, _sptraderapi.CTORATstpSPInvestorField_InvestorType_set)

	# 投资者名称
    __swig_setmethods__["InvestorName"] = _sptraderapi.CTORATstpSPInvestorField_InvestorName_set
    __swig_getmethods__["InvestorName"] = _sptraderapi.CTORATstpSPInvestorField_InvestorName_get
    if _newclass:
        InvestorName = _swig_property(_sptraderapi.CTORATstpSPInvestorField_InvestorName_get, _sptraderapi.CTORATstpSPInvestorField_InvestorName_set)

	# 证件类型
    __swig_setmethods__["IdCardType"] = _sptraderapi.CTORATstpSPInvestorField_IdCardType_set
    __swig_getmethods__["IdCardType"] = _sptraderapi.CTORATstpSPInvestorField_IdCardType_get
    if _newclass:
        IdCardType = _swig_property(_sptraderapi.CTORATstpSPInvestorField_IdCardType_get, _sptraderapi.CTORATstpSPInvestorField_IdCardType_set)

	# 证件号码
    __swig_setmethods__["IdCardNo"] = _sptraderapi.CTORATstpSPInvestorField_IdCardNo_set
    __swig_getmethods__["IdCardNo"] = _sptraderapi.CTORATstpSPInvestorField_IdCardNo_get
    if _newclass:
        IdCardNo = _swig_property(_sptraderapi.CTORATstpSPInvestorField_IdCardNo_get, _sptraderapi.CTORATstpSPInvestorField_IdCardNo_set)

	# 合同编号
    __swig_setmethods__["ContractNo"] = _sptraderapi.CTORATstpSPInvestorField_ContractNo_set
    __swig_getmethods__["ContractNo"] = _sptraderapi.CTORATstpSPInvestorField_ContractNo_get
    if _newclass:
        ContractNo = _swig_property(_sptraderapi.CTORATstpSPInvestorField_ContractNo_get, _sptraderapi.CTORATstpSPInvestorField_ContractNo_set)

	# 开户日期
    __swig_setmethods__["OpenDate"] = _sptraderapi.CTORATstpSPInvestorField_OpenDate_set
    __swig_getmethods__["OpenDate"] = _sptraderapi.CTORATstpSPInvestorField_OpenDate_get
    if _newclass:
        OpenDate = _swig_property(_sptraderapi.CTORATstpSPInvestorField_OpenDate_get, _sptraderapi.CTORATstpSPInvestorField_OpenDate_set)

	# 销户日期
    __swig_setmethods__["CloseDate"] = _sptraderapi.CTORATstpSPInvestorField_CloseDate_set
    __swig_getmethods__["CloseDate"] = _sptraderapi.CTORATstpSPInvestorField_CloseDate_get
    if _newclass:
        CloseDate = _swig_property(_sptraderapi.CTORATstpSPInvestorField_CloseDate_get, _sptraderapi.CTORATstpSPInvestorField_CloseDate_set)

	# 状态
    __swig_setmethods__["Status"] = _sptraderapi.CTORATstpSPInvestorField_Status_set
    __swig_getmethods__["Status"] = _sptraderapi.CTORATstpSPInvestorField_Status_get
    if _newclass:
        Status = _swig_property(_sptraderapi.CTORATstpSPInvestorField_Status_get, _sptraderapi.CTORATstpSPInvestorField_Status_set)

	# 内部机构编码
    __swig_setmethods__["InnerBranchID"] = _sptraderapi.CTORATstpSPInvestorField_InnerBranchID_set
    __swig_getmethods__["InnerBranchID"] = _sptraderapi.CTORATstpSPInvestorField_InnerBranchID_get
    if _newclass:
        InnerBranchID = _swig_property(_sptraderapi.CTORATstpSPInvestorField_InnerBranchID_get, _sptraderapi.CTORATstpSPInvestorField_InnerBranchID_set)

	# 投资者分级类别
    __swig_setmethods__["InvestorLevel"] = _sptraderapi.CTORATstpSPInvestorField_InvestorLevel_set
    __swig_getmethods__["InvestorLevel"] = _sptraderapi.CTORATstpSPInvestorField_InvestorLevel_get
    if _newclass:
        InvestorLevel = _swig_property(_sptraderapi.CTORATstpSPInvestorField_InvestorLevel_get, _sptraderapi.CTORATstpSPInvestorField_InvestorLevel_set)

	# 手机
    __swig_setmethods__["Mobile"] = _sptraderapi.CTORATstpSPInvestorField_Mobile_set
    __swig_getmethods__["Mobile"] = _sptraderapi.CTORATstpSPInvestorField_Mobile_get
    if _newclass:
        Mobile = _swig_property(_sptraderapi.CTORATstpSPInvestorField_Mobile_get, _sptraderapi.CTORATstpSPInvestorField_Mobile_set)

	# 联系电话
    __swig_setmethods__["Telephone"] = _sptraderapi.CTORATstpSPInvestorField_Telephone_set
    __swig_getmethods__["Telephone"] = _sptraderapi.CTORATstpSPInvestorField_Telephone_get
    if _newclass:
        Telephone = _swig_property(_sptraderapi.CTORATstpSPInvestorField_Telephone_get, _sptraderapi.CTORATstpSPInvestorField_Telephone_set)

	# 电子邮件
    __swig_setmethods__["Email"] = _sptraderapi.CTORATstpSPInvestorField_Email_set
    __swig_getmethods__["Email"] = _sptraderapi.CTORATstpSPInvestorField_Email_get
    if _newclass:
        Email = _swig_property(_sptraderapi.CTORATstpSPInvestorField_Email_get, _sptraderapi.CTORATstpSPInvestorField_Email_set)

	# 传真
    __swig_setmethods__["Fax"] = _sptraderapi.CTORATstpSPInvestorField_Fax_set
    __swig_getmethods__["Fax"] = _sptraderapi.CTORATstpSPInvestorField_Fax_get
    if _newclass:
        Fax = _swig_property(_sptraderapi.CTORATstpSPInvestorField_Fax_get, _sptraderapi.CTORATstpSPInvestorField_Fax_set)

	# 通讯地址
    __swig_setmethods__["Address"] = _sptraderapi.CTORATstpSPInvestorField_Address_set
    __swig_getmethods__["Address"] = _sptraderapi.CTORATstpSPInvestorField_Address_get
    if _newclass:
        Address = _swig_property(_sptraderapi.CTORATstpSPInvestorField_Address_get, _sptraderapi.CTORATstpSPInvestorField_Address_set)

	# 邮政编码
    __swig_setmethods__["ZipCode"] = _sptraderapi.CTORATstpSPInvestorField_ZipCode_set
    __swig_getmethods__["ZipCode"] = _sptraderapi.CTORATstpSPInvestorField_ZipCode_get
    if _newclass:
        ZipCode = _swig_property(_sptraderapi.CTORATstpSPInvestorField_ZipCode_get, _sptraderapi.CTORATstpSPInvestorField_ZipCode_set)

	# 备注
    __swig_setmethods__["Remark"] = _sptraderapi.CTORATstpSPInvestorField_Remark_set
    __swig_getmethods__["Remark"] = _sptraderapi.CTORATstpSPInvestorField_Remark_get
    if _newclass:
        Remark = _swig_property(_sptraderapi.CTORATstpSPInvestorField_Remark_get, _sptraderapi.CTORATstpSPInvestorField_Remark_set)

	# 委托方式
    __swig_setmethods__["Operways"] = _sptraderapi.CTORATstpSPInvestorField_Operways_set
    __swig_getmethods__["Operways"] = _sptraderapi.CTORATstpSPInvestorField_Operways_get
    if _newclass:
        Operways = _swig_property(_sptraderapi.CTORATstpSPInvestorField_Operways_get, _sptraderapi.CTORATstpSPInvestorField_Operways_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPInvestorField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPInvestorField
    __del__ = lambda self: None
CTORATstpSPInvestorField_swigregister = _sptraderapi.CTORATstpSPInvestorField_swigregister
CTORATstpSPInvestorField_swigregister(CTORATstpSPInvestorField)




#########################################查询BrokerUserFunction############################################
class CTORATstpSPQryBrokerUserFunctionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPQryBrokerUserFunctionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPQryBrokerUserFunctionField, name)
    __repr__ = _swig_repr

	# 交易用户代码
    __swig_setmethods__["UserID"] = _sptraderapi.CTORATstpSPQryBrokerUserFunctionField_UserID_set
    __swig_getmethods__["UserID"] = _sptraderapi.CTORATstpSPQryBrokerUserFunctionField_UserID_get
    if _newclass:
        UserID = _swig_property(_sptraderapi.CTORATstpSPQryBrokerUserFunctionField_UserID_get, _sptraderapi.CTORATstpSPQryBrokerUserFunctionField_UserID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPQryBrokerUserFunctionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPQryBrokerUserFunctionField
    __del__ = lambda self: None
CTORATstpSPQryBrokerUserFunctionField_swigregister = _sptraderapi.CTORATstpSPQryBrokerUserFunctionField_swigregister
CTORATstpSPQryBrokerUserFunctionField_swigregister(CTORATstpSPQryBrokerUserFunctionField)




#########################################BrokerUserFunction############################################
class CTORATstpSPBrokerUserFunctionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPBrokerUserFunctionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPBrokerUserFunctionField, name)
    __repr__ = _swig_repr

	# 用户代码
    __swig_setmethods__["UserID"] = _sptraderapi.CTORATstpSPBrokerUserFunctionField_UserID_set
    __swig_getmethods__["UserID"] = _sptraderapi.CTORATstpSPBrokerUserFunctionField_UserID_get
    if _newclass:
        UserID = _swig_property(_sptraderapi.CTORATstpSPBrokerUserFunctionField_UserID_get, _sptraderapi.CTORATstpSPBrokerUserFunctionField_UserID_set)

	# 功能代码
    __swig_setmethods__["FunctionID"] = _sptraderapi.CTORATstpSPBrokerUserFunctionField_FunctionID_set
    __swig_getmethods__["FunctionID"] = _sptraderapi.CTORATstpSPBrokerUserFunctionField_FunctionID_get
    if _newclass:
        FunctionID = _swig_property(_sptraderapi.CTORATstpSPBrokerUserFunctionField_FunctionID_get, _sptraderapi.CTORATstpSPBrokerUserFunctionField_FunctionID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPBrokerUserFunctionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPBrokerUserFunctionField
    __del__ = lambda self: None
CTORATstpSPBrokerUserFunctionField_swigregister = _sptraderapi.CTORATstpSPBrokerUserFunctionField_swigregister
CTORATstpSPBrokerUserFunctionField_swigregister(CTORATstpSPBrokerUserFunctionField)




#########################################查询股东账户############################################
class CTORATstpSPQryShareholderAccountField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPQryShareholderAccountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPQryShareholderAccountField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryShareholderAccountField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryShareholderAccountField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPQryShareholderAccountField_InvestorID_get, _sptraderapi.CTORATstpSPQryShareholderAccountField_InvestorID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryShareholderAccountField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryShareholderAccountField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPQryShareholderAccountField_ExchangeID_get, _sptraderapi.CTORATstpSPQryShareholderAccountField_ExchangeID_set)

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPQryShareholderAccountField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPQryShareholderAccountField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPQryShareholderAccountField_MarketID_get, _sptraderapi.CTORATstpSPQryShareholderAccountField_MarketID_set)

	# 目前该字段存放的是上证所和深圳的股东代码。
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPQryShareholderAccountField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPQryShareholderAccountField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPQryShareholderAccountField_ShareholderID_get, _sptraderapi.CTORATstpSPQryShareholderAccountField_ShareholderID_set)

	# 普通，信用，衍生品等
    __swig_setmethods__["ShareholderIDType"] = _sptraderapi.CTORATstpSPQryShareholderAccountField_ShareholderIDType_set
    __swig_getmethods__["ShareholderIDType"] = _sptraderapi.CTORATstpSPQryShareholderAccountField_ShareholderIDType_get
    if _newclass:
        ShareholderIDType = _swig_property(_sptraderapi.CTORATstpSPQryShareholderAccountField_ShareholderIDType_get, _sptraderapi.CTORATstpSPQryShareholderAccountField_ShareholderIDType_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPQryShareholderAccountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPQryShareholderAccountField
    __del__ = lambda self: None
CTORATstpSPQryShareholderAccountField_swigregister = _sptraderapi.CTORATstpSPQryShareholderAccountField_swigregister
CTORATstpSPQryShareholderAccountField_swigregister(CTORATstpSPQryShareholderAccountField)




#########################################股东账户############################################
class CTORATstpSPShareholderAccountField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPShareholderAccountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPShareholderAccountField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPShareholderAccountField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPShareholderAccountField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPShareholderAccountField_InvestorID_get, _sptraderapi.CTORATstpSPShareholderAccountField_InvestorID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPShareholderAccountField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPShareholderAccountField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPShareholderAccountField_ExchangeID_get, _sptraderapi.CTORATstpSPShareholderAccountField_ExchangeID_set)

	# 客户代码
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPShareholderAccountField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPShareholderAccountField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPShareholderAccountField_ShareholderID_get, _sptraderapi.CTORATstpSPShareholderAccountField_ShareholderID_set)

	# 交易编码类型
    __swig_setmethods__["ShareholderIDType"] = _sptraderapi.CTORATstpSPShareholderAccountField_ShareholderIDType_set
    __swig_getmethods__["ShareholderIDType"] = _sptraderapi.CTORATstpSPShareholderAccountField_ShareholderIDType_get
    if _newclass:
        ShareholderIDType = _swig_property(_sptraderapi.CTORATstpSPShareholderAccountField_ShareholderIDType_get, _sptraderapi.CTORATstpSPShareholderAccountField_ShareholderIDType_set)

	# 市场代码
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPShareholderAccountField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPShareholderAccountField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPShareholderAccountField_MarketID_get, _sptraderapi.CTORATstpSPShareholderAccountField_MarketID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPShareholderAccountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPShareholderAccountField
    __del__ = lambda self: None
CTORATstpSPShareholderAccountField_swigregister = _sptraderapi.CTORATstpSPShareholderAccountField_swigregister
CTORATstpSPShareholderAccountField_swigregister(CTORATstpSPShareholderAccountField)




#########################################查询资金账户############################################
class CTORATstpSPQryTradingAccountField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPQryTradingAccountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPQryTradingAccountField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryTradingAccountField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryTradingAccountField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPQryTradingAccountField_InvestorID_get, _sptraderapi.CTORATstpSPQryTradingAccountField_InvestorID_set)

	# 币种
    __swig_setmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPQryTradingAccountField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPQryTradingAccountField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_sptraderapi.CTORATstpSPQryTradingAccountField_CurrencyID_get, _sptraderapi.CTORATstpSPQryTradingAccountField_CurrencyID_set)

	# 资金账户
    __swig_setmethods__["AccountID"] = _sptraderapi.CTORATstpSPQryTradingAccountField_AccountID_set
    __swig_getmethods__["AccountID"] = _sptraderapi.CTORATstpSPQryTradingAccountField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_sptraderapi.CTORATstpSPQryTradingAccountField_AccountID_get, _sptraderapi.CTORATstpSPQryTradingAccountField_AccountID_set)

	# 普通、信用、衍生品等
    __swig_setmethods__["AccountType"] = _sptraderapi.CTORATstpSPQryTradingAccountField_AccountType_set
    __swig_getmethods__["AccountType"] = _sptraderapi.CTORATstpSPQryTradingAccountField_AccountType_get
    if _newclass:
        AccountType = _swig_property(_sptraderapi.CTORATstpSPQryTradingAccountField_AccountType_get, _sptraderapi.CTORATstpSPQryTradingAccountField_AccountType_set)

	# 经纪公司部门代码
    __swig_setmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPQryTradingAccountField_DepartmentID_set
    __swig_getmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPQryTradingAccountField_DepartmentID_get
    if _newclass:
        DepartmentID = _swig_property(_sptraderapi.CTORATstpSPQryTradingAccountField_DepartmentID_get, _sptraderapi.CTORATstpSPQryTradingAccountField_DepartmentID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPQryTradingAccountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPQryTradingAccountField
    __del__ = lambda self: None
CTORATstpSPQryTradingAccountField_swigregister = _sptraderapi.CTORATstpSPQryTradingAccountField_swigregister
CTORATstpSPQryTradingAccountField_swigregister(CTORATstpSPQryTradingAccountField)




#########################################资金账户############################################
class CTORATstpSPTradingAccountField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPTradingAccountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPTradingAccountField, name)
    __repr__ = _swig_repr

	# 部门代码
    __swig_setmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPTradingAccountField_DepartmentID_set
    __swig_getmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPTradingAccountField_DepartmentID_get
    if _newclass:
        DepartmentID = _swig_property(_sptraderapi.CTORATstpSPTradingAccountField_DepartmentID_get, _sptraderapi.CTORATstpSPTradingAccountField_DepartmentID_set)

	# 资金账户代码
    __swig_setmethods__["AccountID"] = _sptraderapi.CTORATstpSPTradingAccountField_AccountID_set
    __swig_getmethods__["AccountID"] = _sptraderapi.CTORATstpSPTradingAccountField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_sptraderapi.CTORATstpSPTradingAccountField_AccountID_get, _sptraderapi.CTORATstpSPTradingAccountField_AccountID_set)

	# 币种代码
    __swig_setmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPTradingAccountField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPTradingAccountField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_sptraderapi.CTORATstpSPTradingAccountField_CurrencyID_get, _sptraderapi.CTORATstpSPTradingAccountField_CurrencyID_set)

	# 资金账户类型
    __swig_setmethods__["AccountType"] = _sptraderapi.CTORATstpSPTradingAccountField_AccountType_set
    __swig_getmethods__["AccountType"] = _sptraderapi.CTORATstpSPTradingAccountField_AccountType_get
    if _newclass:
        AccountType = _swig_property(_sptraderapi.CTORATstpSPTradingAccountField_AccountType_get, _sptraderapi.CTORATstpSPTradingAccountField_AccountType_set)

	# 上日结存
    __swig_setmethods__["PreDeposit"] = _sptraderapi.CTORATstpSPTradingAccountField_PreDeposit_set
    __swig_getmethods__["PreDeposit"] = _sptraderapi.CTORATstpSPTradingAccountField_PreDeposit_get
    if _newclass:
        PreDeposit = _swig_property(_sptraderapi.CTORATstpSPTradingAccountField_PreDeposit_get, _sptraderapi.CTORATstpSPTradingAccountField_PreDeposit_set)

	# 昨行权待交收冻结资金
    __swig_setmethods__["PreFrozenCash"] = _sptraderapi.CTORATstpSPTradingAccountField_PreFrozenCash_set
    __swig_getmethods__["PreFrozenCash"] = _sptraderapi.CTORATstpSPTradingAccountField_PreFrozenCash_get
    if _newclass:
        PreFrozenCash = _swig_property(_sptraderapi.CTORATstpSPTradingAccountField_PreFrozenCash_get, _sptraderapi.CTORATstpSPTradingAccountField_PreFrozenCash_set)

	# 可用资金
    __swig_setmethods__["UsefulMoney"] = _sptraderapi.CTORATstpSPTradingAccountField_UsefulMoney_set
    __swig_getmethods__["UsefulMoney"] = _sptraderapi.CTORATstpSPTradingAccountField_UsefulMoney_get
    if _newclass:
        UsefulMoney = _swig_property(_sptraderapi.CTORATstpSPTradingAccountField_UsefulMoney_get, _sptraderapi.CTORATstpSPTradingAccountField_UsefulMoney_set)

	# 可取资金
    __swig_setmethods__["FetchLimit"] = _sptraderapi.CTORATstpSPTradingAccountField_FetchLimit_set
    __swig_getmethods__["FetchLimit"] = _sptraderapi.CTORATstpSPTradingAccountField_FetchLimit_get
    if _newclass:
        FetchLimit = _swig_property(_sptraderapi.CTORATstpSPTradingAccountField_FetchLimit_get, _sptraderapi.CTORATstpSPTradingAccountField_FetchLimit_set)

	# 入金金额
    __swig_setmethods__["Deposit"] = _sptraderapi.CTORATstpSPTradingAccountField_Deposit_set
    __swig_getmethods__["Deposit"] = _sptraderapi.CTORATstpSPTradingAccountField_Deposit_get
    if _newclass:
        Deposit = _swig_property(_sptraderapi.CTORATstpSPTradingAccountField_Deposit_get, _sptraderapi.CTORATstpSPTradingAccountField_Deposit_set)

	# 出金金额
    __swig_setmethods__["Withdraw"] = _sptraderapi.CTORATstpSPTradingAccountField_Withdraw_set
    __swig_getmethods__["Withdraw"] = _sptraderapi.CTORATstpSPTradingAccountField_Withdraw_get
    if _newclass:
        Withdraw = _swig_property(_sptraderapi.CTORATstpSPTradingAccountField_Withdraw_get, _sptraderapi.CTORATstpSPTradingAccountField_Withdraw_set)

	# 冻结的保证金
    __swig_setmethods__["FrozenMargin"] = _sptraderapi.CTORATstpSPTradingAccountField_FrozenMargin_set
    __swig_getmethods__["FrozenMargin"] = _sptraderapi.CTORATstpSPTradingAccountField_FrozenMargin_get
    if _newclass:
        FrozenMargin = _swig_property(_sptraderapi.CTORATstpSPTradingAccountField_FrozenMargin_get, _sptraderapi.CTORATstpSPTradingAccountField_FrozenMargin_set)

	# 冻结的资金
    __swig_setmethods__["FrozenCash"] = _sptraderapi.CTORATstpSPTradingAccountField_FrozenCash_set
    __swig_getmethods__["FrozenCash"] = _sptraderapi.CTORATstpSPTradingAccountField_FrozenCash_get
    if _newclass:
        FrozenCash = _swig_property(_sptraderapi.CTORATstpSPTradingAccountField_FrozenCash_get, _sptraderapi.CTORATstpSPTradingAccountField_FrozenCash_set)

	# 冻结的手续费
    __swig_setmethods__["FrozenCommission"] = _sptraderapi.CTORATstpSPTradingAccountField_FrozenCommission_set
    __swig_getmethods__["FrozenCommission"] = _sptraderapi.CTORATstpSPTradingAccountField_FrozenCommission_get
    if _newclass:
        FrozenCommission = _swig_property(_sptraderapi.CTORATstpSPTradingAccountField_FrozenCommission_get, _sptraderapi.CTORATstpSPTradingAccountField_FrozenCommission_set)

	# 当前保证金总额
    __swig_setmethods__["CurrMargin"] = _sptraderapi.CTORATstpSPTradingAccountField_CurrMargin_set
    __swig_getmethods__["CurrMargin"] = _sptraderapi.CTORATstpSPTradingAccountField_CurrMargin_get
    if _newclass:
        CurrMargin = _swig_property(_sptraderapi.CTORATstpSPTradingAccountField_CurrMargin_get, _sptraderapi.CTORATstpSPTradingAccountField_CurrMargin_set)

	# 手续费
    __swig_setmethods__["Commission"] = _sptraderapi.CTORATstpSPTradingAccountField_Commission_set
    __swig_getmethods__["Commission"] = _sptraderapi.CTORATstpSPTradingAccountField_Commission_get
    if _newclass:
        Commission = _swig_property(_sptraderapi.CTORATstpSPTradingAccountField_Commission_get, _sptraderapi.CTORATstpSPTradingAccountField_Commission_set)

	# 权利金收入
    __swig_setmethods__["RoyaltyIn"] = _sptraderapi.CTORATstpSPTradingAccountField_RoyaltyIn_set
    __swig_getmethods__["RoyaltyIn"] = _sptraderapi.CTORATstpSPTradingAccountField_RoyaltyIn_get
    if _newclass:
        RoyaltyIn = _swig_property(_sptraderapi.CTORATstpSPTradingAccountField_RoyaltyIn_get, _sptraderapi.CTORATstpSPTradingAccountField_RoyaltyIn_set)

	# 权利金支出
    __swig_setmethods__["RoyaltyOut"] = _sptraderapi.CTORATstpSPTradingAccountField_RoyaltyOut_set
    __swig_getmethods__["RoyaltyOut"] = _sptraderapi.CTORATstpSPTradingAccountField_RoyaltyOut_get
    if _newclass:
        RoyaltyOut = _swig_property(_sptraderapi.CTORATstpSPTradingAccountField_RoyaltyOut_get, _sptraderapi.CTORATstpSPTradingAccountField_RoyaltyOut_set)

	# 资金账户所属投资者代码
    __swig_setmethods__["AccountOwner"] = _sptraderapi.CTORATstpSPTradingAccountField_AccountOwner_set
    __swig_getmethods__["AccountOwner"] = _sptraderapi.CTORATstpSPTradingAccountField_AccountOwner_get
    if _newclass:
        AccountOwner = _swig_property(_sptraderapi.CTORATstpSPTradingAccountField_AccountOwner_get, _sptraderapi.CTORATstpSPTradingAccountField_AccountOwner_set)

	# 签约银行账户
    __swig_setmethods__["BankAccountID"] = _sptraderapi.CTORATstpSPTradingAccountField_BankAccountID_set
    __swig_getmethods__["BankAccountID"] = _sptraderapi.CTORATstpSPTradingAccountField_BankAccountID_get
    if _newclass:
        BankAccountID = _swig_property(_sptraderapi.CTORATstpSPTradingAccountField_BankAccountID_get, _sptraderapi.CTORATstpSPTradingAccountField_BankAccountID_set)

	# 银行代码
    __swig_setmethods__["BankID"] = _sptraderapi.CTORATstpSPTradingAccountField_BankID_set
    __swig_getmethods__["BankID"] = _sptraderapi.CTORATstpSPTradingAccountField_BankID_get
    if _newclass:
        BankID = _swig_property(_sptraderapi.CTORATstpSPTradingAccountField_BankID_get, _sptraderapi.CTORATstpSPTradingAccountField_BankID_set)

	# 当日行权待交收冻结资金
    __swig_setmethods__["ExcerciseFrozen"] = _sptraderapi.CTORATstpSPTradingAccountField_ExcerciseFrozen_set
    __swig_getmethods__["ExcerciseFrozen"] = _sptraderapi.CTORATstpSPTradingAccountField_ExcerciseFrozen_get
    if _newclass:
        ExcerciseFrozen = _swig_property(_sptraderapi.CTORATstpSPTradingAccountField_ExcerciseFrozen_get, _sptraderapi.CTORATstpSPTradingAccountField_ExcerciseFrozen_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPTradingAccountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPTradingAccountField
    __del__ = lambda self: None
CTORATstpSPTradingAccountField_swigregister = _sptraderapi.CTORATstpSPTradingAccountField_swigregister
CTORATstpSPTradingAccountField_swigregister(CTORATstpSPTradingAccountField)




#########################################查询报单############################################
class CTORATstpSPQryOrderField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPQryOrderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPQryOrderField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryOrderField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryOrderField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPQryOrderField_InvestorID_get, _sptraderapi.CTORATstpSPQryOrderField_InvestorID_set)

	# 合约在系统中的编号
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPQryOrderField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPQryOrderField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPQryOrderField_SecurityID_get, _sptraderapi.CTORATstpSPQryOrderField_SecurityID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryOrderField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryOrderField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPQryOrderField_ExchangeID_get, _sptraderapi.CTORATstpSPQryOrderField_ExchangeID_set)

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPQryOrderField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPQryOrderField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPQryOrderField_MarketID_get, _sptraderapi.CTORATstpSPQryOrderField_MarketID_set)

	# 客户在系统中的编号，编号唯一且遵循交易所制定的编码规则
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPQryOrderField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPQryOrderField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPQryOrderField_ShareholderID_get, _sptraderapi.CTORATstpSPQryOrderField_ShareholderID_set)

	# 报单编号
    __swig_setmethods__["OrderSysID"] = _sptraderapi.CTORATstpSPQryOrderField_OrderSysID_set
    __swig_getmethods__["OrderSysID"] = _sptraderapi.CTORATstpSPQryOrderField_OrderSysID_get
    if _newclass:
        OrderSysID = _swig_property(_sptraderapi.CTORATstpSPQryOrderField_OrderSysID_get, _sptraderapi.CTORATstpSPQryOrderField_OrderSysID_set)

	# Time
    __swig_setmethods__["InsertTimeStart"] = _sptraderapi.CTORATstpSPQryOrderField_InsertTimeStart_set
    __swig_getmethods__["InsertTimeStart"] = _sptraderapi.CTORATstpSPQryOrderField_InsertTimeStart_get
    if _newclass:
        InsertTimeStart = _swig_property(_sptraderapi.CTORATstpSPQryOrderField_InsertTimeStart_get, _sptraderapi.CTORATstpSPQryOrderField_InsertTimeStart_set)

	# Time
    __swig_setmethods__["InsertTimeEnd"] = _sptraderapi.CTORATstpSPQryOrderField_InsertTimeEnd_set
    __swig_getmethods__["InsertTimeEnd"] = _sptraderapi.CTORATstpSPQryOrderField_InsertTimeEnd_get
    if _newclass:
        InsertTimeEnd = _swig_property(_sptraderapi.CTORATstpSPQryOrderField_InsertTimeEnd_get, _sptraderapi.CTORATstpSPQryOrderField_InsertTimeEnd_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPQryOrderField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPQryOrderField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPQryOrderField_BusinessUnitID_get, _sptraderapi.CTORATstpSPQryOrderField_BusinessUnitID_set)

	# 长字符串附加信息
    __swig_setmethods__["BInfo"] = _sptraderapi.CTORATstpSPQryOrderField_BInfo_set
    __swig_getmethods__["BInfo"] = _sptraderapi.CTORATstpSPQryOrderField_BInfo_get
    if _newclass:
        BInfo = _swig_property(_sptraderapi.CTORATstpSPQryOrderField_BInfo_get, _sptraderapi.CTORATstpSPQryOrderField_BInfo_set)

	# 短字符串附加信息
    __swig_setmethods__["SInfo"] = _sptraderapi.CTORATstpSPQryOrderField_SInfo_set
    __swig_getmethods__["SInfo"] = _sptraderapi.CTORATstpSPQryOrderField_SInfo_get
    if _newclass:
        SInfo = _swig_property(_sptraderapi.CTORATstpSPQryOrderField_SInfo_get, _sptraderapi.CTORATstpSPQryOrderField_SInfo_set)

	# 整形附加信息
    __swig_setmethods__["IInfo"] = _sptraderapi.CTORATstpSPQryOrderField_IInfo_set
    __swig_getmethods__["IInfo"] = _sptraderapi.CTORATstpSPQryOrderField_IInfo_get
    if _newclass:
        IInfo = _swig_property(_sptraderapi.CTORATstpSPQryOrderField_IInfo_get, _sptraderapi.CTORATstpSPQryOrderField_IInfo_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPQryOrderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPQryOrderField
    __del__ = lambda self: None
CTORATstpSPQryOrderField_swigregister = _sptraderapi.CTORATstpSPQryOrderField_swigregister
CTORATstpSPQryOrderField_swigregister(CTORATstpSPQryOrderField)




#########################################查询成交############################################
class CTORATstpSPQryTradeField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPQryTradeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPQryTradeField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryTradeField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryTradeField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPQryTradeField_InvestorID_get, _sptraderapi.CTORATstpSPQryTradeField_InvestorID_set)

	# 合约在系统中的编号
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPQryTradeField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPQryTradeField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPQryTradeField_SecurityID_get, _sptraderapi.CTORATstpSPQryTradeField_SecurityID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryTradeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryTradeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPQryTradeField_ExchangeID_get, _sptraderapi.CTORATstpSPQryTradeField_ExchangeID_set)

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPQryTradeField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPQryTradeField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPQryTradeField_MarketID_get, _sptraderapi.CTORATstpSPQryTradeField_MarketID_set)

	# 客户在系统中的编号，编号唯一且遵循交易所制定的编码规则
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPQryTradeField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPQryTradeField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPQryTradeField_ShareholderID_get, _sptraderapi.CTORATstpSPQryTradeField_ShareholderID_set)

	# 成交编号
    __swig_setmethods__["TradeID"] = _sptraderapi.CTORATstpSPQryTradeField_TradeID_set
    __swig_getmethods__["TradeID"] = _sptraderapi.CTORATstpSPQryTradeField_TradeID_get
    if _newclass:
        TradeID = _swig_property(_sptraderapi.CTORATstpSPQryTradeField_TradeID_get, _sptraderapi.CTORATstpSPQryTradeField_TradeID_set)

	# Time
    __swig_setmethods__["TradeTimeStart"] = _sptraderapi.CTORATstpSPQryTradeField_TradeTimeStart_set
    __swig_getmethods__["TradeTimeStart"] = _sptraderapi.CTORATstpSPQryTradeField_TradeTimeStart_get
    if _newclass:
        TradeTimeStart = _swig_property(_sptraderapi.CTORATstpSPQryTradeField_TradeTimeStart_get, _sptraderapi.CTORATstpSPQryTradeField_TradeTimeStart_set)

	# Time
    __swig_setmethods__["TradeTimeEnd"] = _sptraderapi.CTORATstpSPQryTradeField_TradeTimeEnd_set
    __swig_getmethods__["TradeTimeEnd"] = _sptraderapi.CTORATstpSPQryTradeField_TradeTimeEnd_get
    if _newclass:
        TradeTimeEnd = _swig_property(_sptraderapi.CTORATstpSPQryTradeField_TradeTimeEnd_get, _sptraderapi.CTORATstpSPQryTradeField_TradeTimeEnd_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPQryTradeField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPQryTradeField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPQryTradeField_BusinessUnitID_get, _sptraderapi.CTORATstpSPQryTradeField_BusinessUnitID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPQryTradeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPQryTradeField
    __del__ = lambda self: None
CTORATstpSPQryTradeField_swigregister = _sptraderapi.CTORATstpSPQryTradeField_swigregister
CTORATstpSPQryTradeField_swigregister(CTORATstpSPQryTradeField)




#########################################查询投资者持仓############################################
class CTORATstpSPQryPositionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPQryPositionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPQryPositionField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryPositionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryPositionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPQryPositionField_InvestorID_get, _sptraderapi.CTORATstpSPQryPositionField_InvestorID_set)

	# 证券代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPQryPositionField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPQryPositionField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPQryPositionField_SecurityID_get, _sptraderapi.CTORATstpSPQryPositionField_SecurityID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryPositionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryPositionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPQryPositionField_ExchangeID_get, _sptraderapi.CTORATstpSPQryPositionField_ExchangeID_set)

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPQryPositionField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPQryPositionField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPQryPositionField_MarketID_get, _sptraderapi.CTORATstpSPQryPositionField_MarketID_set)

	# 交易账户代码
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPQryPositionField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPQryPositionField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPQryPositionField_ShareholderID_get, _sptraderapi.CTORATstpSPQryPositionField_ShareholderID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPQryPositionField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPQryPositionField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPQryPositionField_BusinessUnitID_get, _sptraderapi.CTORATstpSPQryPositionField_BusinessUnitID_set)

	# 多、空
    __swig_setmethods__["PosiDirection"] = _sptraderapi.CTORATstpSPQryPositionField_PosiDirection_set
    __swig_getmethods__["PosiDirection"] = _sptraderapi.CTORATstpSPQryPositionField_PosiDirection_get
    if _newclass:
        PosiDirection = _swig_property(_sptraderapi.CTORATstpSPQryPositionField_PosiDirection_get, _sptraderapi.CTORATstpSPQryPositionField_PosiDirection_set)

	# 投机套保标志
    __swig_setmethods__["HedgeFlag"] = _sptraderapi.CTORATstpSPQryPositionField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _sptraderapi.CTORATstpSPQryPositionField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_sptraderapi.CTORATstpSPQryPositionField_HedgeFlag_get, _sptraderapi.CTORATstpSPQryPositionField_HedgeFlag_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPQryPositionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPQryPositionField
    __del__ = lambda self: None
CTORATstpSPQryPositionField_swigregister = _sptraderapi.CTORATstpSPQryPositionField_swigregister
CTORATstpSPQryPositionField_swigregister(CTORATstpSPQryPositionField)




#########################################投资者持仓############################################
class CTORATstpSPPositionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPPositionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPPositionField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPPositionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPPositionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPPositionField_InvestorID_get, _sptraderapi.CTORATstpSPPositionField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPPositionField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPPositionField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPPositionField_BusinessUnitID_get, _sptraderapi.CTORATstpSPPositionField_BusinessUnitID_set)

	# 市场代码
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPPositionField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPPositionField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPPositionField_MarketID_get, _sptraderapi.CTORATstpSPPositionField_MarketID_set)

	# 客户代码
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPPositionField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPPositionField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPPositionField_ShareholderID_get, _sptraderapi.CTORATstpSPPositionField_ShareholderID_set)

	# 交易日
    __swig_setmethods__["TradingDay"] = _sptraderapi.CTORATstpSPPositionField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _sptraderapi.CTORATstpSPPositionField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_sptraderapi.CTORATstpSPPositionField_TradingDay_get, _sptraderapi.CTORATstpSPPositionField_TradingDay_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPPositionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPPositionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPPositionField_ExchangeID_get, _sptraderapi.CTORATstpSPPositionField_ExchangeID_set)

	# 合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPPositionField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPPositionField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPPositionField_SecurityID_get, _sptraderapi.CTORATstpSPPositionField_SecurityID_set)

	# 持仓方向
    __swig_setmethods__["PosiDirection"] = _sptraderapi.CTORATstpSPPositionField_PosiDirection_set
    __swig_getmethods__["PosiDirection"] = _sptraderapi.CTORATstpSPPositionField_PosiDirection_get
    if _newclass:
        PosiDirection = _swig_property(_sptraderapi.CTORATstpSPPositionField_PosiDirection_get, _sptraderapi.CTORATstpSPPositionField_PosiDirection_set)

	# 持仓方向
    __swig_setmethods__["HedgeFlag"] = _sptraderapi.CTORATstpSPPositionField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _sptraderapi.CTORATstpSPPositionField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_sptraderapi.CTORATstpSPPositionField_HedgeFlag_get, _sptraderapi.CTORATstpSPPositionField_HedgeFlag_set)

	# 昨日持仓
    __swig_setmethods__["HistoryPos"] = _sptraderapi.CTORATstpSPPositionField_HistoryPos_set
    __swig_getmethods__["HistoryPos"] = _sptraderapi.CTORATstpSPPositionField_HistoryPos_get
    if _newclass:
        HistoryPos = _swig_property(_sptraderapi.CTORATstpSPPositionField_HistoryPos_get, _sptraderapi.CTORATstpSPPositionField_HistoryPos_set)

	# 昨日持仓冻结
    __swig_setmethods__["HistoryPosFrozen"] = _sptraderapi.CTORATstpSPPositionField_HistoryPosFrozen_set
    __swig_getmethods__["HistoryPosFrozen"] = _sptraderapi.CTORATstpSPPositionField_HistoryPosFrozen_get
    if _newclass:
        HistoryPosFrozen = _swig_property(_sptraderapi.CTORATstpSPPositionField_HistoryPosFrozen_get, _sptraderapi.CTORATstpSPPositionField_HistoryPosFrozen_set)

	# 今日买卖持仓
    __swig_setmethods__["TodayPos"] = _sptraderapi.CTORATstpSPPositionField_TodayPos_set
    __swig_getmethods__["TodayPos"] = _sptraderapi.CTORATstpSPPositionField_TodayPos_get
    if _newclass:
        TodayPos = _swig_property(_sptraderapi.CTORATstpSPPositionField_TodayPos_get, _sptraderapi.CTORATstpSPPositionField_TodayPos_set)

	# 今日买卖持仓冻结
    __swig_setmethods__["TodayPosFrozen"] = _sptraderapi.CTORATstpSPPositionField_TodayPosFrozen_set
    __swig_getmethods__["TodayPosFrozen"] = _sptraderapi.CTORATstpSPPositionField_TodayPosFrozen_get
    if _newclass:
        TodayPosFrozen = _swig_property(_sptraderapi.CTORATstpSPPositionField_TodayPosFrozen_get, _sptraderapi.CTORATstpSPPositionField_TodayPosFrozen_set)

	# 持仓成本
    __swig_setmethods__["TotalPosCost"] = _sptraderapi.CTORATstpSPPositionField_TotalPosCost_set
    __swig_getmethods__["TotalPosCost"] = _sptraderapi.CTORATstpSPPositionField_TotalPosCost_get
    if _newclass:
        TotalPosCost = _swig_property(_sptraderapi.CTORATstpSPPositionField_TotalPosCost_get, _sptraderapi.CTORATstpSPPositionField_TotalPosCost_set)

	# 多头冻结（买入开仓+买入平仓）的持仓数量
    __swig_setmethods__["LongFrozen"] = _sptraderapi.CTORATstpSPPositionField_LongFrozen_set
    __swig_getmethods__["LongFrozen"] = _sptraderapi.CTORATstpSPPositionField_LongFrozen_get
    if _newclass:
        LongFrozen = _swig_property(_sptraderapi.CTORATstpSPPositionField_LongFrozen_get, _sptraderapi.CTORATstpSPPositionField_LongFrozen_set)

	# 空头冻结（卖出开仓+卖出平仓）的持仓数量
    __swig_setmethods__["ShortFrozen"] = _sptraderapi.CTORATstpSPPositionField_ShortFrozen_set
    __swig_getmethods__["ShortFrozen"] = _sptraderapi.CTORATstpSPPositionField_ShortFrozen_get
    if _newclass:
        ShortFrozen = _swig_property(_sptraderapi.CTORATstpSPPositionField_ShortFrozen_get, _sptraderapi.CTORATstpSPPositionField_ShortFrozen_set)

	# 多头报单冻结的金额（不包含手续费、保证金）
    __swig_setmethods__["LongFrozenAmount"] = _sptraderapi.CTORATstpSPPositionField_LongFrozenAmount_set
    __swig_getmethods__["LongFrozenAmount"] = _sptraderapi.CTORATstpSPPositionField_LongFrozenAmount_get
    if _newclass:
        LongFrozenAmount = _swig_property(_sptraderapi.CTORATstpSPPositionField_LongFrozenAmount_get, _sptraderapi.CTORATstpSPPositionField_LongFrozenAmount_set)

	# 空头报单冻结的金额（不包含手续费、保证金
    __swig_setmethods__["ShortFrozenAmount"] = _sptraderapi.CTORATstpSPPositionField_ShortFrozenAmount_set
    __swig_getmethods__["ShortFrozenAmount"] = _sptraderapi.CTORATstpSPPositionField_ShortFrozenAmount_get
    if _newclass:
        ShortFrozenAmount = _swig_property(_sptraderapi.CTORATstpSPPositionField_ShortFrozenAmount_get, _sptraderapi.CTORATstpSPPositionField_ShortFrozenAmount_set)

	# 开仓量
    __swig_setmethods__["OpenVolume"] = _sptraderapi.CTORATstpSPPositionField_OpenVolume_set
    __swig_getmethods__["OpenVolume"] = _sptraderapi.CTORATstpSPPositionField_OpenVolume_get
    if _newclass:
        OpenVolume = _swig_property(_sptraderapi.CTORATstpSPPositionField_OpenVolume_get, _sptraderapi.CTORATstpSPPositionField_OpenVolume_set)

	# 平仓量
    __swig_setmethods__["CloseVolume"] = _sptraderapi.CTORATstpSPPositionField_CloseVolume_set
    __swig_getmethods__["CloseVolume"] = _sptraderapi.CTORATstpSPPositionField_CloseVolume_get
    if _newclass:
        CloseVolume = _swig_property(_sptraderapi.CTORATstpSPPositionField_CloseVolume_get, _sptraderapi.CTORATstpSPPositionField_CloseVolume_set)

	# 开仓金额
    __swig_setmethods__["OpenAmount"] = _sptraderapi.CTORATstpSPPositionField_OpenAmount_set
    __swig_getmethods__["OpenAmount"] = _sptraderapi.CTORATstpSPPositionField_OpenAmount_get
    if _newclass:
        OpenAmount = _swig_property(_sptraderapi.CTORATstpSPPositionField_OpenAmount_get, _sptraderapi.CTORATstpSPPositionField_OpenAmount_set)

	# 平仓金额
    __swig_setmethods__["CloseAmount"] = _sptraderapi.CTORATstpSPPositionField_CloseAmount_set
    __swig_getmethods__["CloseAmount"] = _sptraderapi.CTORATstpSPPositionField_CloseAmount_get
    if _newclass:
        CloseAmount = _swig_property(_sptraderapi.CTORATstpSPPositionField_CloseAmount_get, _sptraderapi.CTORATstpSPPositionField_CloseAmount_set)

	# 占用的保证金
    __swig_setmethods__["Margin"] = _sptraderapi.CTORATstpSPPositionField_Margin_set
    __swig_getmethods__["Margin"] = _sptraderapi.CTORATstpSPPositionField_Margin_get
    if _newclass:
        Margin = _swig_property(_sptraderapi.CTORATstpSPPositionField_Margin_get, _sptraderapi.CTORATstpSPPositionField_Margin_set)

	# 冻结的保证金
    __swig_setmethods__["FrozenMargin"] = _sptraderapi.CTORATstpSPPositionField_FrozenMargin_set
    __swig_getmethods__["FrozenMargin"] = _sptraderapi.CTORATstpSPPositionField_FrozenMargin_get
    if _newclass:
        FrozenMargin = _swig_property(_sptraderapi.CTORATstpSPPositionField_FrozenMargin_get, _sptraderapi.CTORATstpSPPositionField_FrozenMargin_set)

	# 冻结的资金
    __swig_setmethods__["FrozenCash"] = _sptraderapi.CTORATstpSPPositionField_FrozenCash_set
    __swig_getmethods__["FrozenCash"] = _sptraderapi.CTORATstpSPPositionField_FrozenCash_get
    if _newclass:
        FrozenCash = _swig_property(_sptraderapi.CTORATstpSPPositionField_FrozenCash_get, _sptraderapi.CTORATstpSPPositionField_FrozenCash_set)

	# 冻结的手续费
    __swig_setmethods__["FrozenCommission"] = _sptraderapi.CTORATstpSPPositionField_FrozenCommission_set
    __swig_getmethods__["FrozenCommission"] = _sptraderapi.CTORATstpSPPositionField_FrozenCommission_get
    if _newclass:
        FrozenCommission = _swig_property(_sptraderapi.CTORATstpSPPositionField_FrozenCommission_get, _sptraderapi.CTORATstpSPPositionField_FrozenCommission_set)

	# 资金差额
    __swig_setmethods__["CashIn"] = _sptraderapi.CTORATstpSPPositionField_CashIn_set
    __swig_getmethods__["CashIn"] = _sptraderapi.CTORATstpSPPositionField_CashIn_get
    if _newclass:
        CashIn = _swig_property(_sptraderapi.CTORATstpSPPositionField_CashIn_get, _sptraderapi.CTORATstpSPPositionField_CashIn_set)

	# 手续费
    __swig_setmethods__["Commission"] = _sptraderapi.CTORATstpSPPositionField_Commission_set
    __swig_getmethods__["Commission"] = _sptraderapi.CTORATstpSPPositionField_Commission_get
    if _newclass:
        Commission = _swig_property(_sptraderapi.CTORATstpSPPositionField_Commission_get, _sptraderapi.CTORATstpSPPositionField_Commission_set)

	# 执行冻结
    __swig_setmethods__["StrikeFrozen"] = _sptraderapi.CTORATstpSPPositionField_StrikeFrozen_set
    __swig_getmethods__["StrikeFrozen"] = _sptraderapi.CTORATstpSPPositionField_StrikeFrozen_get
    if _newclass:
        StrikeFrozen = _swig_property(_sptraderapi.CTORATstpSPPositionField_StrikeFrozen_get, _sptraderapi.CTORATstpSPPositionField_StrikeFrozen_set)

	# 执行冻结金额
    __swig_setmethods__["StrikeFrozenAmount"] = _sptraderapi.CTORATstpSPPositionField_StrikeFrozenAmount_set
    __swig_getmethods__["StrikeFrozenAmount"] = _sptraderapi.CTORATstpSPPositionField_StrikeFrozenAmount_get
    if _newclass:
        StrikeFrozenAmount = _swig_property(_sptraderapi.CTORATstpSPPositionField_StrikeFrozenAmount_get, _sptraderapi.CTORATstpSPPositionField_StrikeFrozenAmount_set)

	# 上次余额(盘中不变)
    __swig_setmethods__["PrePosition"] = _sptraderapi.CTORATstpSPPositionField_PrePosition_set
    __swig_getmethods__["PrePosition"] = _sptraderapi.CTORATstpSPPositionField_PrePosition_get
    if _newclass:
        PrePosition = _swig_property(_sptraderapi.CTORATstpSPPositionField_PrePosition_get, _sptraderapi.CTORATstpSPPositionField_PrePosition_set)

	# 最新价
    __swig_setmethods__["LastPrice"] = _sptraderapi.CTORATstpSPPositionField_LastPrice_set
    __swig_getmethods__["LastPrice"] = _sptraderapi.CTORATstpSPPositionField_LastPrice_get
    if _newclass:
        LastPrice = _swig_property(_sptraderapi.CTORATstpSPPositionField_LastPrice_get, _sptraderapi.CTORATstpSPPositionField_LastPrice_set)

	# 昨日持仓组合仓位
    __swig_setmethods__["HistoryCombPos"] = _sptraderapi.CTORATstpSPPositionField_HistoryCombPos_set
    __swig_getmethods__["HistoryCombPos"] = _sptraderapi.CTORATstpSPPositionField_HistoryCombPos_get
    if _newclass:
        HistoryCombPos = _swig_property(_sptraderapi.CTORATstpSPPositionField_HistoryCombPos_get, _sptraderapi.CTORATstpSPPositionField_HistoryCombPos_set)

	# 今日持仓组合仓位
    __swig_setmethods__["TodayCombPos"] = _sptraderapi.CTORATstpSPPositionField_TodayCombPos_set
    __swig_getmethods__["TodayCombPos"] = _sptraderapi.CTORATstpSPPositionField_TodayCombPos_get
    if _newclass:
        TodayCombPos = _swig_property(_sptraderapi.CTORATstpSPPositionField_TodayCombPos_get, _sptraderapi.CTORATstpSPPositionField_TodayCombPos_set)

	# 昨日组合持仓拆分冻结
    __swig_setmethods__["HistoryCombPosSplitFrozen"] = _sptraderapi.CTORATstpSPPositionField_HistoryCombPosSplitFrozen_set
    __swig_getmethods__["HistoryCombPosSplitFrozen"] = _sptraderapi.CTORATstpSPPositionField_HistoryCombPosSplitFrozen_get
    if _newclass:
        HistoryCombPosSplitFrozen = _swig_property(_sptraderapi.CTORATstpSPPositionField_HistoryCombPosSplitFrozen_get, _sptraderapi.CTORATstpSPPositionField_HistoryCombPosSplitFrozen_set)

	# 今日组合持仓拆分冻结
    __swig_setmethods__["TodayCombPosSplitFrozen"] = _sptraderapi.CTORATstpSPPositionField_TodayCombPosSplitFrozen_set
    __swig_getmethods__["TodayCombPosSplitFrozen"] = _sptraderapi.CTORATstpSPPositionField_TodayCombPosSplitFrozen_get
    if _newclass:
        TodayCombPosSplitFrozen = _swig_property(_sptraderapi.CTORATstpSPPositionField_TodayCombPosSplitFrozen_get, _sptraderapi.CTORATstpSPPositionField_TodayCombPosSplitFrozen_set)

	# 昨日持仓组合冻结
    __swig_setmethods__["HistoryPosCombFrozen"] = _sptraderapi.CTORATstpSPPositionField_HistoryPosCombFrozen_set
    __swig_getmethods__["HistoryPosCombFrozen"] = _sptraderapi.CTORATstpSPPositionField_HistoryPosCombFrozen_get
    if _newclass:
        HistoryPosCombFrozen = _swig_property(_sptraderapi.CTORATstpSPPositionField_HistoryPosCombFrozen_get, _sptraderapi.CTORATstpSPPositionField_HistoryPosCombFrozen_set)

	# 今日持仓组合冻结
    __swig_setmethods__["TodayPosCombFrozen"] = _sptraderapi.CTORATstpSPPositionField_TodayPosCombFrozen_set
    __swig_getmethods__["TodayPosCombFrozen"] = _sptraderapi.CTORATstpSPPositionField_TodayPosCombFrozen_get
    if _newclass:
        TodayPosCombFrozen = _swig_property(_sptraderapi.CTORATstpSPPositionField_TodayPosCombFrozen_get, _sptraderapi.CTORATstpSPPositionField_TodayPosCombFrozen_set)

	# 保留字段
    __swig_setmethods__["OpenPosCost"] = _sptraderapi.CTORATstpSPPositionField_OpenPosCost_set
    __swig_getmethods__["OpenPosCost"] = _sptraderapi.CTORATstpSPPositionField_OpenPosCost_get
    if _newclass:
        OpenPosCost = _swig_property(_sptraderapi.CTORATstpSPPositionField_OpenPosCost_get, _sptraderapi.CTORATstpSPPositionField_OpenPosCost_set)

	# 保留字段
    __swig_setmethods__["TodayProfit"] = _sptraderapi.CTORATstpSPPositionField_TodayProfit_set
    __swig_getmethods__["TodayProfit"] = _sptraderapi.CTORATstpSPPositionField_TodayProfit_get
    if _newclass:
        TodayProfit = _swig_property(_sptraderapi.CTORATstpSPPositionField_TodayProfit_get, _sptraderapi.CTORATstpSPPositionField_TodayProfit_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPPositionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPPositionField
    __del__ = lambda self: None
CTORATstpSPPositionField_swigregister = _sptraderapi.CTORATstpSPPositionField_swigregister
CTORATstpSPPositionField_swigregister(CTORATstpSPPositionField)




#########################################查询基础交易费率############################################
class CTORATstpSPQryTradingFeeField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPQryTradingFeeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPQryTradingFeeField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryTradingFeeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryTradingFeeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPQryTradingFeeField_ExchangeID_get, _sptraderapi.CTORATstpSPQryTradingFeeField_ExchangeID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPQryTradingFeeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPQryTradingFeeField
    __del__ = lambda self: None
CTORATstpSPQryTradingFeeField_swigregister = _sptraderapi.CTORATstpSPQryTradingFeeField_swigregister
CTORATstpSPQryTradingFeeField_swigregister(CTORATstpSPQryTradingFeeField)




#########################################基础交易费率############################################
class CTORATstpSPTradingFeeField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPTradingFeeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPTradingFeeField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPTradingFeeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPTradingFeeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPTradingFeeField_ExchangeID_get, _sptraderapi.CTORATstpSPTradingFeeField_ExchangeID_set)

	# 产品代码
    __swig_setmethods__["ProductID"] = _sptraderapi.CTORATstpSPTradingFeeField_ProductID_set
    __swig_getmethods__["ProductID"] = _sptraderapi.CTORATstpSPTradingFeeField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_sptraderapi.CTORATstpSPTradingFeeField_ProductID_get, _sptraderapi.CTORATstpSPTradingFeeField_ProductID_set)

	# 证券类别代码
    __swig_setmethods__["SecurityType"] = _sptraderapi.CTORATstpSPTradingFeeField_SecurityType_set
    __swig_getmethods__["SecurityType"] = _sptraderapi.CTORATstpSPTradingFeeField_SecurityType_get
    if _newclass:
        SecurityType = _swig_property(_sptraderapi.CTORATstpSPTradingFeeField_SecurityType_get, _sptraderapi.CTORATstpSPTradingFeeField_SecurityType_set)

	# 合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPTradingFeeField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPTradingFeeField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPTradingFeeField_SecurityID_get, _sptraderapi.CTORATstpSPTradingFeeField_SecurityID_set)

	# 业务类别
    __swig_setmethods__["BusinessClass"] = _sptraderapi.CTORATstpSPTradingFeeField_BusinessClass_set
    __swig_getmethods__["BusinessClass"] = _sptraderapi.CTORATstpSPTradingFeeField_BusinessClass_get
    if _newclass:
        BusinessClass = _swig_property(_sptraderapi.CTORATstpSPTradingFeeField_BusinessClass_get, _sptraderapi.CTORATstpSPTradingFeeField_BusinessClass_set)

	# 系统标识
    __swig_setmethods__["SystemFlag"] = _sptraderapi.CTORATstpSPTradingFeeField_SystemFlag_set
    __swig_getmethods__["SystemFlag"] = _sptraderapi.CTORATstpSPTradingFeeField_SystemFlag_get
    if _newclass:
        SystemFlag = _swig_property(_sptraderapi.CTORATstpSPTradingFeeField_SystemFlag_get, _sptraderapi.CTORATstpSPTradingFeeField_SystemFlag_set)

	# 印花税按金额收取比例
    __swig_setmethods__["StampTaxRatioByAmt"] = _sptraderapi.CTORATstpSPTradingFeeField_StampTaxRatioByAmt_set
    __swig_getmethods__["StampTaxRatioByAmt"] = _sptraderapi.CTORATstpSPTradingFeeField_StampTaxRatioByAmt_get
    if _newclass:
        StampTaxRatioByAmt = _swig_property(_sptraderapi.CTORATstpSPTradingFeeField_StampTaxRatioByAmt_get, _sptraderapi.CTORATstpSPTradingFeeField_StampTaxRatioByAmt_set)

	# 印花税按面值收取比例
    __swig_setmethods__["StampTaxRatioByPar"] = _sptraderapi.CTORATstpSPTradingFeeField_StampTaxRatioByPar_set
    __swig_getmethods__["StampTaxRatioByPar"] = _sptraderapi.CTORATstpSPTradingFeeField_StampTaxRatioByPar_get
    if _newclass:
        StampTaxRatioByPar = _swig_property(_sptraderapi.CTORATstpSPTradingFeeField_StampTaxRatioByPar_get, _sptraderapi.CTORATstpSPTradingFeeField_StampTaxRatioByPar_set)

	# 印花税按数量收取金额
    __swig_setmethods__["StampTaxFeeByVolume"] = _sptraderapi.CTORATstpSPTradingFeeField_StampTaxFeeByVolume_set
    __swig_getmethods__["StampTaxFeeByVolume"] = _sptraderapi.CTORATstpSPTradingFeeField_StampTaxFeeByVolume_get
    if _newclass:
        StampTaxFeeByVolume = _swig_property(_sptraderapi.CTORATstpSPTradingFeeField_StampTaxFeeByVolume_get, _sptraderapi.CTORATstpSPTradingFeeField_StampTaxFeeByVolume_set)

	# 印花税按笔收取金额
    __swig_setmethods__["StampTaxFeePerOrder"] = _sptraderapi.CTORATstpSPTradingFeeField_StampTaxFeePerOrder_set
    __swig_getmethods__["StampTaxFeePerOrder"] = _sptraderapi.CTORATstpSPTradingFeeField_StampTaxFeePerOrder_get
    if _newclass:
        StampTaxFeePerOrder = _swig_property(_sptraderapi.CTORATstpSPTradingFeeField_StampTaxFeePerOrder_get, _sptraderapi.CTORATstpSPTradingFeeField_StampTaxFeePerOrder_set)

	# 印花税最低收取金额
    __swig_setmethods__["StampTaxFeeMin"] = _sptraderapi.CTORATstpSPTradingFeeField_StampTaxFeeMin_set
    __swig_getmethods__["StampTaxFeeMin"] = _sptraderapi.CTORATstpSPTradingFeeField_StampTaxFeeMin_get
    if _newclass:
        StampTaxFeeMin = _swig_property(_sptraderapi.CTORATstpSPTradingFeeField_StampTaxFeeMin_get, _sptraderapi.CTORATstpSPTradingFeeField_StampTaxFeeMin_set)

	# 印花税最高收取金额
    __swig_setmethods__["StampTaxFeeMax"] = _sptraderapi.CTORATstpSPTradingFeeField_StampTaxFeeMax_set
    __swig_getmethods__["StampTaxFeeMax"] = _sptraderapi.CTORATstpSPTradingFeeField_StampTaxFeeMax_get
    if _newclass:
        StampTaxFeeMax = _swig_property(_sptraderapi.CTORATstpSPTradingFeeField_StampTaxFeeMax_get, _sptraderapi.CTORATstpSPTradingFeeField_StampTaxFeeMax_set)

	# 过户费按金额收取比例
    __swig_setmethods__["TransferRatioByAmt"] = _sptraderapi.CTORATstpSPTradingFeeField_TransferRatioByAmt_set
    __swig_getmethods__["TransferRatioByAmt"] = _sptraderapi.CTORATstpSPTradingFeeField_TransferRatioByAmt_get
    if _newclass:
        TransferRatioByAmt = _swig_property(_sptraderapi.CTORATstpSPTradingFeeField_TransferRatioByAmt_get, _sptraderapi.CTORATstpSPTradingFeeField_TransferRatioByAmt_set)

	# 过户费按面值收取比例
    __swig_setmethods__["TransferRatioByPar"] = _sptraderapi.CTORATstpSPTradingFeeField_TransferRatioByPar_set
    __swig_getmethods__["TransferRatioByPar"] = _sptraderapi.CTORATstpSPTradingFeeField_TransferRatioByPar_get
    if _newclass:
        TransferRatioByPar = _swig_property(_sptraderapi.CTORATstpSPTradingFeeField_TransferRatioByPar_get, _sptraderapi.CTORATstpSPTradingFeeField_TransferRatioByPar_set)

	# 过户费按笔收取金额
    __swig_setmethods__["TransferFeePerOrder"] = _sptraderapi.CTORATstpSPTradingFeeField_TransferFeePerOrder_set
    __swig_getmethods__["TransferFeePerOrder"] = _sptraderapi.CTORATstpSPTradingFeeField_TransferFeePerOrder_get
    if _newclass:
        TransferFeePerOrder = _swig_property(_sptraderapi.CTORATstpSPTradingFeeField_TransferFeePerOrder_get, _sptraderapi.CTORATstpSPTradingFeeField_TransferFeePerOrder_set)

	# 过户费按数量收取金额
    __swig_setmethods__["TransferFeeByVolume"] = _sptraderapi.CTORATstpSPTradingFeeField_TransferFeeByVolume_set
    __swig_getmethods__["TransferFeeByVolume"] = _sptraderapi.CTORATstpSPTradingFeeField_TransferFeeByVolume_get
    if _newclass:
        TransferFeeByVolume = _swig_property(_sptraderapi.CTORATstpSPTradingFeeField_TransferFeeByVolume_get, _sptraderapi.CTORATstpSPTradingFeeField_TransferFeeByVolume_set)

	# 过户费最低收取金额
    __swig_setmethods__["TransferFeeMin"] = _sptraderapi.CTORATstpSPTradingFeeField_TransferFeeMin_set
    __swig_getmethods__["TransferFeeMin"] = _sptraderapi.CTORATstpSPTradingFeeField_TransferFeeMin_get
    if _newclass:
        TransferFeeMin = _swig_property(_sptraderapi.CTORATstpSPTradingFeeField_TransferFeeMin_get, _sptraderapi.CTORATstpSPTradingFeeField_TransferFeeMin_set)

	# 过户费最高收取金额
    __swig_setmethods__["TransferFeeMax"] = _sptraderapi.CTORATstpSPTradingFeeField_TransferFeeMax_set
    __swig_getmethods__["TransferFeeMax"] = _sptraderapi.CTORATstpSPTradingFeeField_TransferFeeMax_get
    if _newclass:
        TransferFeeMax = _swig_property(_sptraderapi.CTORATstpSPTradingFeeField_TransferFeeMax_get, _sptraderapi.CTORATstpSPTradingFeeField_TransferFeeMax_set)

	# 经手费按金额收取比例
    __swig_setmethods__["HandlingRatioByAmt"] = _sptraderapi.CTORATstpSPTradingFeeField_HandlingRatioByAmt_set
    __swig_getmethods__["HandlingRatioByAmt"] = _sptraderapi.CTORATstpSPTradingFeeField_HandlingRatioByAmt_get
    if _newclass:
        HandlingRatioByAmt = _swig_property(_sptraderapi.CTORATstpSPTradingFeeField_HandlingRatioByAmt_get, _sptraderapi.CTORATstpSPTradingFeeField_HandlingRatioByAmt_set)

	# 经手费按面值收取比例
    __swig_setmethods__["HandlingRatioByPar"] = _sptraderapi.CTORATstpSPTradingFeeField_HandlingRatioByPar_set
    __swig_getmethods__["HandlingRatioByPar"] = _sptraderapi.CTORATstpSPTradingFeeField_HandlingRatioByPar_get
    if _newclass:
        HandlingRatioByPar = _swig_property(_sptraderapi.CTORATstpSPTradingFeeField_HandlingRatioByPar_get, _sptraderapi.CTORATstpSPTradingFeeField_HandlingRatioByPar_set)

	# 经手费按笔收取金额
    __swig_setmethods__["HandlingFeePerOrder"] = _sptraderapi.CTORATstpSPTradingFeeField_HandlingFeePerOrder_set
    __swig_getmethods__["HandlingFeePerOrder"] = _sptraderapi.CTORATstpSPTradingFeeField_HandlingFeePerOrder_get
    if _newclass:
        HandlingFeePerOrder = _swig_property(_sptraderapi.CTORATstpSPTradingFeeField_HandlingFeePerOrder_get, _sptraderapi.CTORATstpSPTradingFeeField_HandlingFeePerOrder_set)

	# 经手费按数量收取金额
    __swig_setmethods__["HandlingFeeByVolume"] = _sptraderapi.CTORATstpSPTradingFeeField_HandlingFeeByVolume_set
    __swig_getmethods__["HandlingFeeByVolume"] = _sptraderapi.CTORATstpSPTradingFeeField_HandlingFeeByVolume_get
    if _newclass:
        HandlingFeeByVolume = _swig_property(_sptraderapi.CTORATstpSPTradingFeeField_HandlingFeeByVolume_get, _sptraderapi.CTORATstpSPTradingFeeField_HandlingFeeByVolume_set)

	# 经手费最低收取金额
    __swig_setmethods__["HandlingFeeMin"] = _sptraderapi.CTORATstpSPTradingFeeField_HandlingFeeMin_set
    __swig_getmethods__["HandlingFeeMin"] = _sptraderapi.CTORATstpSPTradingFeeField_HandlingFeeMin_get
    if _newclass:
        HandlingFeeMin = _swig_property(_sptraderapi.CTORATstpSPTradingFeeField_HandlingFeeMin_get, _sptraderapi.CTORATstpSPTradingFeeField_HandlingFeeMin_set)

	# 经手费最高收取金额
    __swig_setmethods__["HandlingFeeMax"] = _sptraderapi.CTORATstpSPTradingFeeField_HandlingFeeMax_set
    __swig_getmethods__["HandlingFeeMax"] = _sptraderapi.CTORATstpSPTradingFeeField_HandlingFeeMax_get
    if _newclass:
        HandlingFeeMax = _swig_property(_sptraderapi.CTORATstpSPTradingFeeField_HandlingFeeMax_get, _sptraderapi.CTORATstpSPTradingFeeField_HandlingFeeMax_set)

	# 证管费按金额收取比例
    __swig_setmethods__["RegulateRatioByAmt"] = _sptraderapi.CTORATstpSPTradingFeeField_RegulateRatioByAmt_set
    __swig_getmethods__["RegulateRatioByAmt"] = _sptraderapi.CTORATstpSPTradingFeeField_RegulateRatioByAmt_get
    if _newclass:
        RegulateRatioByAmt = _swig_property(_sptraderapi.CTORATstpSPTradingFeeField_RegulateRatioByAmt_get, _sptraderapi.CTORATstpSPTradingFeeField_RegulateRatioByAmt_set)

	# 证管费按面值收取比例
    __swig_setmethods__["RegulateRatioByPar"] = _sptraderapi.CTORATstpSPTradingFeeField_RegulateRatioByPar_set
    __swig_getmethods__["RegulateRatioByPar"] = _sptraderapi.CTORATstpSPTradingFeeField_RegulateRatioByPar_get
    if _newclass:
        RegulateRatioByPar = _swig_property(_sptraderapi.CTORATstpSPTradingFeeField_RegulateRatioByPar_get, _sptraderapi.CTORATstpSPTradingFeeField_RegulateRatioByPar_set)

	# 证管费按数量收取金额
    __swig_setmethods__["RegulateFeeByVolume"] = _sptraderapi.CTORATstpSPTradingFeeField_RegulateFeeByVolume_set
    __swig_getmethods__["RegulateFeeByVolume"] = _sptraderapi.CTORATstpSPTradingFeeField_RegulateFeeByVolume_get
    if _newclass:
        RegulateFeeByVolume = _swig_property(_sptraderapi.CTORATstpSPTradingFeeField_RegulateFeeByVolume_get, _sptraderapi.CTORATstpSPTradingFeeField_RegulateFeeByVolume_set)

	# 证管费按笔收取金额
    __swig_setmethods__["RegulateFeePerOrder"] = _sptraderapi.CTORATstpSPTradingFeeField_RegulateFeePerOrder_set
    __swig_getmethods__["RegulateFeePerOrder"] = _sptraderapi.CTORATstpSPTradingFeeField_RegulateFeePerOrder_get
    if _newclass:
        RegulateFeePerOrder = _swig_property(_sptraderapi.CTORATstpSPTradingFeeField_RegulateFeePerOrder_get, _sptraderapi.CTORATstpSPTradingFeeField_RegulateFeePerOrder_set)

	# 证管费最低收取金额
    __swig_setmethods__["RegulateFeeMin"] = _sptraderapi.CTORATstpSPTradingFeeField_RegulateFeeMin_set
    __swig_getmethods__["RegulateFeeMin"] = _sptraderapi.CTORATstpSPTradingFeeField_RegulateFeeMin_get
    if _newclass:
        RegulateFeeMin = _swig_property(_sptraderapi.CTORATstpSPTradingFeeField_RegulateFeeMin_get, _sptraderapi.CTORATstpSPTradingFeeField_RegulateFeeMin_set)

	# 证管费最高收取金额
    __swig_setmethods__["RegulateFeeMax"] = _sptraderapi.CTORATstpSPTradingFeeField_RegulateFeeMax_set
    __swig_getmethods__["RegulateFeeMax"] = _sptraderapi.CTORATstpSPTradingFeeField_RegulateFeeMax_get
    if _newclass:
        RegulateFeeMax = _swig_property(_sptraderapi.CTORATstpSPTradingFeeField_RegulateFeeMax_get, _sptraderapi.CTORATstpSPTradingFeeField_RegulateFeeMax_set)

	# 结算费按金额收取比例
    __swig_setmethods__["SettlementRatioByAmt"] = _sptraderapi.CTORATstpSPTradingFeeField_SettlementRatioByAmt_set
    __swig_getmethods__["SettlementRatioByAmt"] = _sptraderapi.CTORATstpSPTradingFeeField_SettlementRatioByAmt_get
    if _newclass:
        SettlementRatioByAmt = _swig_property(_sptraderapi.CTORATstpSPTradingFeeField_SettlementRatioByAmt_get, _sptraderapi.CTORATstpSPTradingFeeField_SettlementRatioByAmt_set)

	# 结算费按面值收取比例
    __swig_setmethods__["SettlementRatioByPar"] = _sptraderapi.CTORATstpSPTradingFeeField_SettlementRatioByPar_set
    __swig_getmethods__["SettlementRatioByPar"] = _sptraderapi.CTORATstpSPTradingFeeField_SettlementRatioByPar_get
    if _newclass:
        SettlementRatioByPar = _swig_property(_sptraderapi.CTORATstpSPTradingFeeField_SettlementRatioByPar_get, _sptraderapi.CTORATstpSPTradingFeeField_SettlementRatioByPar_set)

	# 结算费按笔收取金额
    __swig_setmethods__["SettlementFeePerOrder"] = _sptraderapi.CTORATstpSPTradingFeeField_SettlementFeePerOrder_set
    __swig_getmethods__["SettlementFeePerOrder"] = _sptraderapi.CTORATstpSPTradingFeeField_SettlementFeePerOrder_get
    if _newclass:
        SettlementFeePerOrder = _swig_property(_sptraderapi.CTORATstpSPTradingFeeField_SettlementFeePerOrder_get, _sptraderapi.CTORATstpSPTradingFeeField_SettlementFeePerOrder_set)

	# 结算费按数量收取金额
    __swig_setmethods__["SettlementFeeByVolume"] = _sptraderapi.CTORATstpSPTradingFeeField_SettlementFeeByVolume_set
    __swig_getmethods__["SettlementFeeByVolume"] = _sptraderapi.CTORATstpSPTradingFeeField_SettlementFeeByVolume_get
    if _newclass:
        SettlementFeeByVolume = _swig_property(_sptraderapi.CTORATstpSPTradingFeeField_SettlementFeeByVolume_get, _sptraderapi.CTORATstpSPTradingFeeField_SettlementFeeByVolume_set)

	# 结算费最低收取金额
    __swig_setmethods__["SettlementFeeMin"] = _sptraderapi.CTORATstpSPTradingFeeField_SettlementFeeMin_set
    __swig_getmethods__["SettlementFeeMin"] = _sptraderapi.CTORATstpSPTradingFeeField_SettlementFeeMin_get
    if _newclass:
        SettlementFeeMin = _swig_property(_sptraderapi.CTORATstpSPTradingFeeField_SettlementFeeMin_get, _sptraderapi.CTORATstpSPTradingFeeField_SettlementFeeMin_set)

	# 结算费最高收取金额
    __swig_setmethods__["SettlementFeeMax"] = _sptraderapi.CTORATstpSPTradingFeeField_SettlementFeeMax_set
    __swig_getmethods__["SettlementFeeMax"] = _sptraderapi.CTORATstpSPTradingFeeField_SettlementFeeMax_get
    if _newclass:
        SettlementFeeMax = _swig_property(_sptraderapi.CTORATstpSPTradingFeeField_SettlementFeeMax_get, _sptraderapi.CTORATstpSPTradingFeeField_SettlementFeeMax_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPTradingFeeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPTradingFeeField
    __del__ = lambda self: None
CTORATstpSPTradingFeeField_swigregister = _sptraderapi.CTORATstpSPTradingFeeField_swigregister
CTORATstpSPTradingFeeField_swigregister(CTORATstpSPTradingFeeField)




#########################################查询佣金费率############################################
class CTORATstpSPQryInvestorTradingFeeField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPQryInvestorTradingFeeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPQryInvestorTradingFeeField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryInvestorTradingFeeField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryInvestorTradingFeeField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPQryInvestorTradingFeeField_InvestorID_get, _sptraderapi.CTORATstpSPQryInvestorTradingFeeField_InvestorID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryInvestorTradingFeeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryInvestorTradingFeeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPQryInvestorTradingFeeField_ExchangeID_get, _sptraderapi.CTORATstpSPQryInvestorTradingFeeField_ExchangeID_set)

	# 经纪公司部门代码
    __swig_setmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPQryInvestorTradingFeeField_DepartmentID_set
    __swig_getmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPQryInvestorTradingFeeField_DepartmentID_get
    if _newclass:
        DepartmentID = _swig_property(_sptraderapi.CTORATstpSPQryInvestorTradingFeeField_DepartmentID_get, _sptraderapi.CTORATstpSPQryInvestorTradingFeeField_DepartmentID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPQryInvestorTradingFeeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPQryInvestorTradingFeeField
    __del__ = lambda self: None
CTORATstpSPQryInvestorTradingFeeField_swigregister = _sptraderapi.CTORATstpSPQryInvestorTradingFeeField_swigregister
CTORATstpSPQryInvestorTradingFeeField_swigregister(CTORATstpSPQryInvestorTradingFeeField)




#########################################佣金费率############################################
class CTORATstpSPInvestorTradingFeeField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPInvestorTradingFeeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPInvestorTradingFeeField, name)
    __repr__ = _swig_repr

	# 经纪公司部门代码
    __swig_setmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPInvestorTradingFeeField_DepartmentID_set
    __swig_getmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPInvestorTradingFeeField_DepartmentID_get
    if _newclass:
        DepartmentID = _swig_property(_sptraderapi.CTORATstpSPInvestorTradingFeeField_DepartmentID_get, _sptraderapi.CTORATstpSPInvestorTradingFeeField_DepartmentID_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPInvestorTradingFeeField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPInvestorTradingFeeField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPInvestorTradingFeeField_InvestorID_get, _sptraderapi.CTORATstpSPInvestorTradingFeeField_InvestorID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPInvestorTradingFeeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPInvestorTradingFeeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPInvestorTradingFeeField_ExchangeID_get, _sptraderapi.CTORATstpSPInvestorTradingFeeField_ExchangeID_set)

	# 产品代码
    __swig_setmethods__["ProductID"] = _sptraderapi.CTORATstpSPInvestorTradingFeeField_ProductID_set
    __swig_getmethods__["ProductID"] = _sptraderapi.CTORATstpSPInvestorTradingFeeField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_sptraderapi.CTORATstpSPInvestorTradingFeeField_ProductID_get, _sptraderapi.CTORATstpSPInvestorTradingFeeField_ProductID_set)

	# 证券类别代码
    __swig_setmethods__["SecurityType"] = _sptraderapi.CTORATstpSPInvestorTradingFeeField_SecurityType_set
    __swig_getmethods__["SecurityType"] = _sptraderapi.CTORATstpSPInvestorTradingFeeField_SecurityType_get
    if _newclass:
        SecurityType = _swig_property(_sptraderapi.CTORATstpSPInvestorTradingFeeField_SecurityType_get, _sptraderapi.CTORATstpSPInvestorTradingFeeField_SecurityType_set)

	# 合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPInvestorTradingFeeField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPInvestorTradingFeeField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPInvestorTradingFeeField_SecurityID_get, _sptraderapi.CTORATstpSPInvestorTradingFeeField_SecurityID_set)

	# 业务类别
    __swig_setmethods__["BusinessClass"] = _sptraderapi.CTORATstpSPInvestorTradingFeeField_BusinessClass_set
    __swig_getmethods__["BusinessClass"] = _sptraderapi.CTORATstpSPInvestorTradingFeeField_BusinessClass_get
    if _newclass:
        BusinessClass = _swig_property(_sptraderapi.CTORATstpSPInvestorTradingFeeField_BusinessClass_get, _sptraderapi.CTORATstpSPInvestorTradingFeeField_BusinessClass_set)

	# 佣金类型
    __swig_setmethods__["BrokerageType"] = _sptraderapi.CTORATstpSPInvestorTradingFeeField_BrokerageType_set
    __swig_getmethods__["BrokerageType"] = _sptraderapi.CTORATstpSPInvestorTradingFeeField_BrokerageType_get
    if _newclass:
        BrokerageType = _swig_property(_sptraderapi.CTORATstpSPInvestorTradingFeeField_BrokerageType_get, _sptraderapi.CTORATstpSPInvestorTradingFeeField_BrokerageType_set)

	# 佣金按金额收取比例
    __swig_setmethods__["RatioByAmt"] = _sptraderapi.CTORATstpSPInvestorTradingFeeField_RatioByAmt_set
    __swig_getmethods__["RatioByAmt"] = _sptraderapi.CTORATstpSPInvestorTradingFeeField_RatioByAmt_get
    if _newclass:
        RatioByAmt = _swig_property(_sptraderapi.CTORATstpSPInvestorTradingFeeField_RatioByAmt_get, _sptraderapi.CTORATstpSPInvestorTradingFeeField_RatioByAmt_set)

	# 佣金按面值收取比例
    __swig_setmethods__["RatioByPar"] = _sptraderapi.CTORATstpSPInvestorTradingFeeField_RatioByPar_set
    __swig_getmethods__["RatioByPar"] = _sptraderapi.CTORATstpSPInvestorTradingFeeField_RatioByPar_get
    if _newclass:
        RatioByPar = _swig_property(_sptraderapi.CTORATstpSPInvestorTradingFeeField_RatioByPar_get, _sptraderapi.CTORATstpSPInvestorTradingFeeField_RatioByPar_set)

	# 佣金按笔收取金额
    __swig_setmethods__["FeePerOrder"] = _sptraderapi.CTORATstpSPInvestorTradingFeeField_FeePerOrder_set
    __swig_getmethods__["FeePerOrder"] = _sptraderapi.CTORATstpSPInvestorTradingFeeField_FeePerOrder_get
    if _newclass:
        FeePerOrder = _swig_property(_sptraderapi.CTORATstpSPInvestorTradingFeeField_FeePerOrder_get, _sptraderapi.CTORATstpSPInvestorTradingFeeField_FeePerOrder_set)

	# 佣金最低收取金额
    __swig_setmethods__["FeeMin"] = _sptraderapi.CTORATstpSPInvestorTradingFeeField_FeeMin_set
    __swig_getmethods__["FeeMin"] = _sptraderapi.CTORATstpSPInvestorTradingFeeField_FeeMin_get
    if _newclass:
        FeeMin = _swig_property(_sptraderapi.CTORATstpSPInvestorTradingFeeField_FeeMin_get, _sptraderapi.CTORATstpSPInvestorTradingFeeField_FeeMin_set)

	# 佣金最高收取金额
    __swig_setmethods__["FeeMax"] = _sptraderapi.CTORATstpSPInvestorTradingFeeField_FeeMax_set
    __swig_getmethods__["FeeMax"] = _sptraderapi.CTORATstpSPInvestorTradingFeeField_FeeMax_get
    if _newclass:
        FeeMax = _swig_property(_sptraderapi.CTORATstpSPInvestorTradingFeeField_FeeMax_get, _sptraderapi.CTORATstpSPInvestorTradingFeeField_FeeMax_set)

	# 佣金按数量收取金额
    __swig_setmethods__["FeeByVolume"] = _sptraderapi.CTORATstpSPInvestorTradingFeeField_FeeByVolume_set
    __swig_getmethods__["FeeByVolume"] = _sptraderapi.CTORATstpSPInvestorTradingFeeField_FeeByVolume_get
    if _newclass:
        FeeByVolume = _swig_property(_sptraderapi.CTORATstpSPInvestorTradingFeeField_FeeByVolume_get, _sptraderapi.CTORATstpSPInvestorTradingFeeField_FeeByVolume_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPInvestorTradingFeeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPInvestorTradingFeeField
    __del__ = lambda self: None
CTORATstpSPInvestorTradingFeeField_swigregister = _sptraderapi.CTORATstpSPInvestorTradingFeeField_swigregister
CTORATstpSPInvestorTradingFeeField_swigregister(CTORATstpSPInvestorTradingFeeField)




#########################################查询保证金费率############################################
class CTORATstpSPQryInvestorMarginFeeField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPQryInvestorMarginFeeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPQryInvestorMarginFeeField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryInvestorMarginFeeField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryInvestorMarginFeeField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPQryInvestorMarginFeeField_InvestorID_get, _sptraderapi.CTORATstpSPQryInvestorMarginFeeField_InvestorID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryInvestorMarginFeeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryInvestorMarginFeeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPQryInvestorMarginFeeField_ExchangeID_get, _sptraderapi.CTORATstpSPQryInvestorMarginFeeField_ExchangeID_set)

	# 经纪公司部门代码
    __swig_setmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPQryInvestorMarginFeeField_DepartmentID_set
    __swig_getmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPQryInvestorMarginFeeField_DepartmentID_get
    if _newclass:
        DepartmentID = _swig_property(_sptraderapi.CTORATstpSPQryInvestorMarginFeeField_DepartmentID_get, _sptraderapi.CTORATstpSPQryInvestorMarginFeeField_DepartmentID_set)

	# 产品代码
    __swig_setmethods__["ProductID"] = _sptraderapi.CTORATstpSPQryInvestorMarginFeeField_ProductID_set
    __swig_getmethods__["ProductID"] = _sptraderapi.CTORATstpSPQryInvestorMarginFeeField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_sptraderapi.CTORATstpSPQryInvestorMarginFeeField_ProductID_get, _sptraderapi.CTORATstpSPQryInvestorMarginFeeField_ProductID_set)

	# 证券类别代码
    __swig_setmethods__["SecurityType"] = _sptraderapi.CTORATstpSPQryInvestorMarginFeeField_SecurityType_set
    __swig_getmethods__["SecurityType"] = _sptraderapi.CTORATstpSPQryInvestorMarginFeeField_SecurityType_get
    if _newclass:
        SecurityType = _swig_property(_sptraderapi.CTORATstpSPQryInvestorMarginFeeField_SecurityType_get, _sptraderapi.CTORATstpSPQryInvestorMarginFeeField_SecurityType_set)

	# 业务类别
    __swig_setmethods__["BusinessClass"] = _sptraderapi.CTORATstpSPQryInvestorMarginFeeField_BusinessClass_set
    __swig_getmethods__["BusinessClass"] = _sptraderapi.CTORATstpSPQryInvestorMarginFeeField_BusinessClass_get
    if _newclass:
        BusinessClass = _swig_property(_sptraderapi.CTORATstpSPQryInvestorMarginFeeField_BusinessClass_get, _sptraderapi.CTORATstpSPQryInvestorMarginFeeField_BusinessClass_set)

	# 合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPQryInvestorMarginFeeField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPQryInvestorMarginFeeField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPQryInvestorMarginFeeField_SecurityID_get, _sptraderapi.CTORATstpSPQryInvestorMarginFeeField_SecurityID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPQryInvestorMarginFeeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPQryInvestorMarginFeeField
    __del__ = lambda self: None
CTORATstpSPQryInvestorMarginFeeField_swigregister = _sptraderapi.CTORATstpSPQryInvestorMarginFeeField_swigregister
CTORATstpSPQryInvestorMarginFeeField_swigregister(CTORATstpSPQryInvestorMarginFeeField)




#########################################保证金费率############################################
class CTORATstpSPInvestorMarginFeeField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPInvestorMarginFeeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPInvestorMarginFeeField, name)
    __repr__ = _swig_repr

	# 经纪公司部门代码
    __swig_setmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPInvestorMarginFeeField_DepartmentID_set
    __swig_getmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPInvestorMarginFeeField_DepartmentID_get
    if _newclass:
        DepartmentID = _swig_property(_sptraderapi.CTORATstpSPInvestorMarginFeeField_DepartmentID_get, _sptraderapi.CTORATstpSPInvestorMarginFeeField_DepartmentID_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPInvestorMarginFeeField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPInvestorMarginFeeField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPInvestorMarginFeeField_InvestorID_get, _sptraderapi.CTORATstpSPInvestorMarginFeeField_InvestorID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPInvestorMarginFeeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPInvestorMarginFeeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPInvestorMarginFeeField_ExchangeID_get, _sptraderapi.CTORATstpSPInvestorMarginFeeField_ExchangeID_set)

	# 产品代码
    __swig_setmethods__["ProductID"] = _sptraderapi.CTORATstpSPInvestorMarginFeeField_ProductID_set
    __swig_getmethods__["ProductID"] = _sptraderapi.CTORATstpSPInvestorMarginFeeField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_sptraderapi.CTORATstpSPInvestorMarginFeeField_ProductID_get, _sptraderapi.CTORATstpSPInvestorMarginFeeField_ProductID_set)

	# 证券类别代码
    __swig_setmethods__["SecurityType"] = _sptraderapi.CTORATstpSPInvestorMarginFeeField_SecurityType_set
    __swig_getmethods__["SecurityType"] = _sptraderapi.CTORATstpSPInvestorMarginFeeField_SecurityType_get
    if _newclass:
        SecurityType = _swig_property(_sptraderapi.CTORATstpSPInvestorMarginFeeField_SecurityType_get, _sptraderapi.CTORATstpSPInvestorMarginFeeField_SecurityType_set)

	# 合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPInvestorMarginFeeField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPInvestorMarginFeeField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPInvestorMarginFeeField_SecurityID_get, _sptraderapi.CTORATstpSPInvestorMarginFeeField_SecurityID_set)

	# 业务类别
    __swig_setmethods__["BusinessClass"] = _sptraderapi.CTORATstpSPInvestorMarginFeeField_BusinessClass_set
    __swig_getmethods__["BusinessClass"] = _sptraderapi.CTORATstpSPInvestorMarginFeeField_BusinessClass_get
    if _newclass:
        BusinessClass = _swig_property(_sptraderapi.CTORATstpSPInvestorMarginFeeField_BusinessClass_get, _sptraderapi.CTORATstpSPInvestorMarginFeeField_BusinessClass_set)

	# 佣金按数量收取金额
    __swig_setmethods__["FeeByVolume"] = _sptraderapi.CTORATstpSPInvestorMarginFeeField_FeeByVolume_set
    __swig_getmethods__["FeeByVolume"] = _sptraderapi.CTORATstpSPInvestorMarginFeeField_FeeByVolume_get
    if _newclass:
        FeeByVolume = _swig_property(_sptraderapi.CTORATstpSPInvestorMarginFeeField_FeeByVolume_get, _sptraderapi.CTORATstpSPInvestorMarginFeeField_FeeByVolume_set)

	# 上浮比率
    __swig_setmethods__["UpperRatio"] = _sptraderapi.CTORATstpSPInvestorMarginFeeField_UpperRatio_set
    __swig_getmethods__["UpperRatio"] = _sptraderapi.CTORATstpSPInvestorMarginFeeField_UpperRatio_get
    if _newclass:
        UpperRatio = _swig_property(_sptraderapi.CTORATstpSPInvestorMarginFeeField_UpperRatio_get, _sptraderapi.CTORATstpSPInvestorMarginFeeField_UpperRatio_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPInvestorMarginFeeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPInvestorMarginFeeField
    __del__ = lambda self: None
CTORATstpSPInvestorMarginFeeField_swigregister = _sptraderapi.CTORATstpSPInvestorMarginFeeField_swigregister
CTORATstpSPInvestorMarginFeeField_swigregister(CTORATstpSPInvestorMarginFeeField)




#########################################查询报单明细资金############################################
class CTORATstpSPQryOrderFundDetailField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPQryOrderFundDetailField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPQryOrderFundDetailField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryOrderFundDetailField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryOrderFundDetailField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPQryOrderFundDetailField_InvestorID_get, _sptraderapi.CTORATstpSPQryOrderFundDetailField_InvestorID_set)

	# 证券代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPQryOrderFundDetailField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPQryOrderFundDetailField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPQryOrderFundDetailField_SecurityID_get, _sptraderapi.CTORATstpSPQryOrderFundDetailField_SecurityID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryOrderFundDetailField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryOrderFundDetailField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPQryOrderFundDetailField_ExchangeID_get, _sptraderapi.CTORATstpSPQryOrderFundDetailField_ExchangeID_set)

	# 系统报单编号
    __swig_setmethods__["OrderSysID"] = _sptraderapi.CTORATstpSPQryOrderFundDetailField_OrderSysID_set
    __swig_getmethods__["OrderSysID"] = _sptraderapi.CTORATstpSPQryOrderFundDetailField_OrderSysID_get
    if _newclass:
        OrderSysID = _swig_property(_sptraderapi.CTORATstpSPQryOrderFundDetailField_OrderSysID_get, _sptraderapi.CTORATstpSPQryOrderFundDetailField_OrderSysID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPQryOrderFundDetailField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPQryOrderFundDetailField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPQryOrderFundDetailField_BusinessUnitID_get, _sptraderapi.CTORATstpSPQryOrderFundDetailField_BusinessUnitID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPQryOrderFundDetailField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPQryOrderFundDetailField
    __del__ = lambda self: None
CTORATstpSPQryOrderFundDetailField_swigregister = _sptraderapi.CTORATstpSPQryOrderFundDetailField_swigregister
CTORATstpSPQryOrderFundDetailField_swigregister(CTORATstpSPQryOrderFundDetailField)




#########################################报单明细资金############################################
class CTORATstpSPOrderFundDetailField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPOrderFundDetailField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPOrderFundDetailField, name)
    __repr__ = _swig_repr

	# 交易日期
    __swig_setmethods__["TradingDay"] = _sptraderapi.CTORATstpSPOrderFundDetailField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _sptraderapi.CTORATstpSPOrderFundDetailField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_sptraderapi.CTORATstpSPOrderFundDetailField_TradingDay_get, _sptraderapi.CTORATstpSPOrderFundDetailField_TradingDay_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPOrderFundDetailField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPOrderFundDetailField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPOrderFundDetailField_ExchangeID_get, _sptraderapi.CTORATstpSPOrderFundDetailField_ExchangeID_set)

	# 系统报单编号
    __swig_setmethods__["OrderSysID"] = _sptraderapi.CTORATstpSPOrderFundDetailField_OrderSysID_set
    __swig_getmethods__["OrderSysID"] = _sptraderapi.CTORATstpSPOrderFundDetailField_OrderSysID_get
    if _newclass:
        OrderSysID = _swig_property(_sptraderapi.CTORATstpSPOrderFundDetailField_OrderSysID_get, _sptraderapi.CTORATstpSPOrderFundDetailField_OrderSysID_set)

	# 交易所交易单元代码
    __swig_setmethods__["PbuID"] = _sptraderapi.CTORATstpSPOrderFundDetailField_PbuID_set
    __swig_getmethods__["PbuID"] = _sptraderapi.CTORATstpSPOrderFundDetailField_PbuID_get
    if _newclass:
        PbuID = _swig_property(_sptraderapi.CTORATstpSPOrderFundDetailField_PbuID_get, _sptraderapi.CTORATstpSPOrderFundDetailField_PbuID_set)

	# 交易所交易单元代码
    __swig_setmethods__["OrderLocalID"] = _sptraderapi.CTORATstpSPOrderFundDetailField_OrderLocalID_set
    __swig_getmethods__["OrderLocalID"] = _sptraderapi.CTORATstpSPOrderFundDetailField_OrderLocalID_get
    if _newclass:
        OrderLocalID = _swig_property(_sptraderapi.CTORATstpSPOrderFundDetailField_OrderLocalID_get, _sptraderapi.CTORATstpSPOrderFundDetailField_OrderLocalID_set)

	# 合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPOrderFundDetailField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPOrderFundDetailField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPOrderFundDetailField_SecurityID_get, _sptraderapi.CTORATstpSPOrderFundDetailField_SecurityID_set)

	# 资金账户代码
    __swig_setmethods__["AccountID"] = _sptraderapi.CTORATstpSPOrderFundDetailField_AccountID_set
    __swig_getmethods__["AccountID"] = _sptraderapi.CTORATstpSPOrderFundDetailField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_sptraderapi.CTORATstpSPOrderFundDetailField_AccountID_get, _sptraderapi.CTORATstpSPOrderFundDetailField_AccountID_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPOrderFundDetailField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPOrderFundDetailField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPOrderFundDetailField_InvestorID_get, _sptraderapi.CTORATstpSPOrderFundDetailField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPOrderFundDetailField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPOrderFundDetailField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPOrderFundDetailField_BusinessUnitID_get, _sptraderapi.CTORATstpSPOrderFundDetailField_BusinessUnitID_set)

	# 成交金额
    __swig_setmethods__["TradeAmount"] = _sptraderapi.CTORATstpSPOrderFundDetailField_TradeAmount_set
    __swig_getmethods__["TradeAmount"] = _sptraderapi.CTORATstpSPOrderFundDetailField_TradeAmount_get
    if _newclass:
        TradeAmount = _swig_property(_sptraderapi.CTORATstpSPOrderFundDetailField_TradeAmount_get, _sptraderapi.CTORATstpSPOrderFundDetailField_TradeAmount_set)

	# 印花税
    __swig_setmethods__["StampTaxFee"] = _sptraderapi.CTORATstpSPOrderFundDetailField_StampTaxFee_set
    __swig_getmethods__["StampTaxFee"] = _sptraderapi.CTORATstpSPOrderFundDetailField_StampTaxFee_get
    if _newclass:
        StampTaxFee = _swig_property(_sptraderapi.CTORATstpSPOrderFundDetailField_StampTaxFee_get, _sptraderapi.CTORATstpSPOrderFundDetailField_StampTaxFee_set)

	# 过户费
    __swig_setmethods__["TransferFee"] = _sptraderapi.CTORATstpSPOrderFundDetailField_TransferFee_set
    __swig_getmethods__["TransferFee"] = _sptraderapi.CTORATstpSPOrderFundDetailField_TransferFee_get
    if _newclass:
        TransferFee = _swig_property(_sptraderapi.CTORATstpSPOrderFundDetailField_TransferFee_get, _sptraderapi.CTORATstpSPOrderFundDetailField_TransferFee_set)

	# 经手费
    __swig_setmethods__["HandlingFee"] = _sptraderapi.CTORATstpSPOrderFundDetailField_HandlingFee_set
    __swig_getmethods__["HandlingFee"] = _sptraderapi.CTORATstpSPOrderFundDetailField_HandlingFee_get
    if _newclass:
        HandlingFee = _swig_property(_sptraderapi.CTORATstpSPOrderFundDetailField_HandlingFee_get, _sptraderapi.CTORATstpSPOrderFundDetailField_HandlingFee_set)

	# 证管费
    __swig_setmethods__["RegulateFee"] = _sptraderapi.CTORATstpSPOrderFundDetailField_RegulateFee_set
    __swig_getmethods__["RegulateFee"] = _sptraderapi.CTORATstpSPOrderFundDetailField_RegulateFee_get
    if _newclass:
        RegulateFee = _swig_property(_sptraderapi.CTORATstpSPOrderFundDetailField_RegulateFee_get, _sptraderapi.CTORATstpSPOrderFundDetailField_RegulateFee_set)

	# 佣金
    __swig_setmethods__["BrokerageFee"] = _sptraderapi.CTORATstpSPOrderFundDetailField_BrokerageFee_set
    __swig_getmethods__["BrokerageFee"] = _sptraderapi.CTORATstpSPOrderFundDetailField_BrokerageFee_get
    if _newclass:
        BrokerageFee = _swig_property(_sptraderapi.CTORATstpSPOrderFundDetailField_BrokerageFee_get, _sptraderapi.CTORATstpSPOrderFundDetailField_BrokerageFee_set)

	# 结算费
    __swig_setmethods__["SettlementFee"] = _sptraderapi.CTORATstpSPOrderFundDetailField_SettlementFee_set
    __swig_getmethods__["SettlementFee"] = _sptraderapi.CTORATstpSPOrderFundDetailField_SettlementFee_get
    if _newclass:
        SettlementFee = _swig_property(_sptraderapi.CTORATstpSPOrderFundDetailField_SettlementFee_get, _sptraderapi.CTORATstpSPOrderFundDetailField_SettlementFee_set)

	# 保证金
    __swig_setmethods__["Margin"] = _sptraderapi.CTORATstpSPOrderFundDetailField_Margin_set
    __swig_getmethods__["Margin"] = _sptraderapi.CTORATstpSPOrderFundDetailField_Margin_get
    if _newclass:
        Margin = _swig_property(_sptraderapi.CTORATstpSPOrderFundDetailField_Margin_get, _sptraderapi.CTORATstpSPOrderFundDetailField_Margin_set)

	# 报单初始冻结金额
    __swig_setmethods__["OrderCashFrozen"] = _sptraderapi.CTORATstpSPOrderFundDetailField_OrderCashFrozen_set
    __swig_getmethods__["OrderCashFrozen"] = _sptraderapi.CTORATstpSPOrderFundDetailField_OrderCashFrozen_get
    if _newclass:
        OrderCashFrozen = _swig_property(_sptraderapi.CTORATstpSPOrderFundDetailField_OrderCashFrozen_get, _sptraderapi.CTORATstpSPOrderFundDetailField_OrderCashFrozen_set)

	# 初始冻结费用合计
    __swig_setmethods__["TotalFeeFrozen"] = _sptraderapi.CTORATstpSPOrderFundDetailField_TotalFeeFrozen_set
    __swig_getmethods__["TotalFeeFrozen"] = _sptraderapi.CTORATstpSPOrderFundDetailField_TotalFeeFrozen_get
    if _newclass:
        TotalFeeFrozen = _swig_property(_sptraderapi.CTORATstpSPOrderFundDetailField_TotalFeeFrozen_get, _sptraderapi.CTORATstpSPOrderFundDetailField_TotalFeeFrozen_set)

	# 申报金额
    __swig_setmethods__["OrderAmount"] = _sptraderapi.CTORATstpSPOrderFundDetailField_OrderAmount_set
    __swig_getmethods__["OrderAmount"] = _sptraderapi.CTORATstpSPOrderFundDetailField_OrderAmount_get
    if _newclass:
        OrderAmount = _swig_property(_sptraderapi.CTORATstpSPOrderFundDetailField_OrderAmount_get, _sptraderapi.CTORATstpSPOrderFundDetailField_OrderAmount_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPOrderFundDetailField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPOrderFundDetailField
    __del__ = lambda self: None
CTORATstpSPOrderFundDetailField_swigregister = _sptraderapi.CTORATstpSPOrderFundDetailField_swigregister
CTORATstpSPOrderFundDetailField_swigregister(CTORATstpSPOrderFundDetailField)




#########################################查询资金转移流水############################################
class CTORATstpSPQryFundTransferDetailField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPQryFundTransferDetailField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPQryFundTransferDetailField, name)
    __repr__ = _swig_repr

	# 资金账户代码
    __swig_setmethods__["AccountID"] = _sptraderapi.CTORATstpSPQryFundTransferDetailField_AccountID_set
    __swig_getmethods__["AccountID"] = _sptraderapi.CTORATstpSPQryFundTransferDetailField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_sptraderapi.CTORATstpSPQryFundTransferDetailField_AccountID_get, _sptraderapi.CTORATstpSPQryFundTransferDetailField_AccountID_set)

	# 币种
    __swig_setmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPQryFundTransferDetailField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPQryFundTransferDetailField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_sptraderapi.CTORATstpSPQryFundTransferDetailField_CurrencyID_get, _sptraderapi.CTORATstpSPQryFundTransferDetailField_CurrencyID_set)

	# 转移方向
    __swig_setmethods__["TransferDirection"] = _sptraderapi.CTORATstpSPQryFundTransferDetailField_TransferDirection_set
    __swig_getmethods__["TransferDirection"] = _sptraderapi.CTORATstpSPQryFundTransferDetailField_TransferDirection_get
    if _newclass:
        TransferDirection = _swig_property(_sptraderapi.CTORATstpSPQryFundTransferDetailField_TransferDirection_get, _sptraderapi.CTORATstpSPQryFundTransferDetailField_TransferDirection_set)

	# 经纪公司部门代码
    __swig_setmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPQryFundTransferDetailField_DepartmentID_set
    __swig_getmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPQryFundTransferDetailField_DepartmentID_get
    if _newclass:
        DepartmentID = _swig_property(_sptraderapi.CTORATstpSPQryFundTransferDetailField_DepartmentID_get, _sptraderapi.CTORATstpSPQryFundTransferDetailField_DepartmentID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPQryFundTransferDetailField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPQryFundTransferDetailField
    __del__ = lambda self: None
CTORATstpSPQryFundTransferDetailField_swigregister = _sptraderapi.CTORATstpSPQryFundTransferDetailField_swigregister
CTORATstpSPQryFundTransferDetailField_swigregister(CTORATstpSPQryFundTransferDetailField)




#########################################资金转移流水############################################
class CTORATstpSPFundTransferDetailField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPFundTransferDetailField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPFundTransferDetailField, name)
    __repr__ = _swig_repr

	# 转账流水号
    __swig_setmethods__["FundSerial"] = _sptraderapi.CTORATstpSPFundTransferDetailField_FundSerial_set
    __swig_getmethods__["FundSerial"] = _sptraderapi.CTORATstpSPFundTransferDetailField_FundSerial_get
    if _newclass:
        FundSerial = _swig_property(_sptraderapi.CTORATstpSPFundTransferDetailField_FundSerial_get, _sptraderapi.CTORATstpSPFundTransferDetailField_FundSerial_set)

	# 申请流水号
    __swig_setmethods__["ApplySerial"] = _sptraderapi.CTORATstpSPFundTransferDetailField_ApplySerial_set
    __swig_getmethods__["ApplySerial"] = _sptraderapi.CTORATstpSPFundTransferDetailField_ApplySerial_get
    if _newclass:
        ApplySerial = _swig_property(_sptraderapi.CTORATstpSPFundTransferDetailField_ApplySerial_get, _sptraderapi.CTORATstpSPFundTransferDetailField_ApplySerial_set)

	# 前置编号
    __swig_setmethods__["FrontID"] = _sptraderapi.CTORATstpSPFundTransferDetailField_FrontID_set
    __swig_getmethods__["FrontID"] = _sptraderapi.CTORATstpSPFundTransferDetailField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_sptraderapi.CTORATstpSPFundTransferDetailField_FrontID_get, _sptraderapi.CTORATstpSPFundTransferDetailField_FrontID_set)

	# 会话编号
    __swig_setmethods__["SessionID"] = _sptraderapi.CTORATstpSPFundTransferDetailField_SessionID_set
    __swig_getmethods__["SessionID"] = _sptraderapi.CTORATstpSPFundTransferDetailField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_sptraderapi.CTORATstpSPFundTransferDetailField_SessionID_get, _sptraderapi.CTORATstpSPFundTransferDetailField_SessionID_set)

	# 经纪公司部门代码
    __swig_setmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPFundTransferDetailField_DepartmentID_set
    __swig_getmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPFundTransferDetailField_DepartmentID_get
    if _newclass:
        DepartmentID = _swig_property(_sptraderapi.CTORATstpSPFundTransferDetailField_DepartmentID_get, _sptraderapi.CTORATstpSPFundTransferDetailField_DepartmentID_set)

	# 资金账户代码
    __swig_setmethods__["AccountID"] = _sptraderapi.CTORATstpSPFundTransferDetailField_AccountID_set
    __swig_getmethods__["AccountID"] = _sptraderapi.CTORATstpSPFundTransferDetailField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_sptraderapi.CTORATstpSPFundTransferDetailField_AccountID_get, _sptraderapi.CTORATstpSPFundTransferDetailField_AccountID_set)

	# 币种
    __swig_setmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPFundTransferDetailField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPFundTransferDetailField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_sptraderapi.CTORATstpSPFundTransferDetailField_CurrencyID_get, _sptraderapi.CTORATstpSPFundTransferDetailField_CurrencyID_set)

	# 转移方向
    __swig_setmethods__["TransferDirection"] = _sptraderapi.CTORATstpSPFundTransferDetailField_TransferDirection_set
    __swig_getmethods__["TransferDirection"] = _sptraderapi.CTORATstpSPFundTransferDetailField_TransferDirection_get
    if _newclass:
        TransferDirection = _swig_property(_sptraderapi.CTORATstpSPFundTransferDetailField_TransferDirection_get, _sptraderapi.CTORATstpSPFundTransferDetailField_TransferDirection_set)

	# 出入金金额
    __swig_setmethods__["Amount"] = _sptraderapi.CTORATstpSPFundTransferDetailField_Amount_set
    __swig_getmethods__["Amount"] = _sptraderapi.CTORATstpSPFundTransferDetailField_Amount_get
    if _newclass:
        Amount = _swig_property(_sptraderapi.CTORATstpSPFundTransferDetailField_Amount_get, _sptraderapi.CTORATstpSPFundTransferDetailField_Amount_set)

	# 转移状态
    __swig_setmethods__["TransferStatus"] = _sptraderapi.CTORATstpSPFundTransferDetailField_TransferStatus_set
    __swig_getmethods__["TransferStatus"] = _sptraderapi.CTORATstpSPFundTransferDetailField_TransferStatus_get
    if _newclass:
        TransferStatus = _swig_property(_sptraderapi.CTORATstpSPFundTransferDetailField_TransferStatus_get, _sptraderapi.CTORATstpSPFundTransferDetailField_TransferStatus_set)

	# 操作来源
    __swig_setmethods__["OperateSource"] = _sptraderapi.CTORATstpSPFundTransferDetailField_OperateSource_set
    __swig_getmethods__["OperateSource"] = _sptraderapi.CTORATstpSPFundTransferDetailField_OperateSource_get
    if _newclass:
        OperateSource = _swig_property(_sptraderapi.CTORATstpSPFundTransferDetailField_OperateSource_get, _sptraderapi.CTORATstpSPFundTransferDetailField_OperateSource_set)

	# 操作人员
    __swig_setmethods__["OperatorID"] = _sptraderapi.CTORATstpSPFundTransferDetailField_OperatorID_set
    __swig_getmethods__["OperatorID"] = _sptraderapi.CTORATstpSPFundTransferDetailField_OperatorID_get
    if _newclass:
        OperatorID = _swig_property(_sptraderapi.CTORATstpSPFundTransferDetailField_OperatorID_get, _sptraderapi.CTORATstpSPFundTransferDetailField_OperatorID_set)

	# 操作日期
    __swig_setmethods__["OperateDate"] = _sptraderapi.CTORATstpSPFundTransferDetailField_OperateDate_set
    __swig_getmethods__["OperateDate"] = _sptraderapi.CTORATstpSPFundTransferDetailField_OperateDate_get
    if _newclass:
        OperateDate = _swig_property(_sptraderapi.CTORATstpSPFundTransferDetailField_OperateDate_get, _sptraderapi.CTORATstpSPFundTransferDetailField_OperateDate_set)

	# 操作时间
    __swig_setmethods__["OperateTime"] = _sptraderapi.CTORATstpSPFundTransferDetailField_OperateTime_set
    __swig_getmethods__["OperateTime"] = _sptraderapi.CTORATstpSPFundTransferDetailField_OperateTime_get
    if _newclass:
        OperateTime = _swig_property(_sptraderapi.CTORATstpSPFundTransferDetailField_OperateTime_get, _sptraderapi.CTORATstpSPFundTransferDetailField_OperateTime_set)

	# 状态信息
    __swig_setmethods__["StatusMsg"] = _sptraderapi.CTORATstpSPFundTransferDetailField_StatusMsg_set
    __swig_getmethods__["StatusMsg"] = _sptraderapi.CTORATstpSPFundTransferDetailField_StatusMsg_get
    if _newclass:
        StatusMsg = _swig_property(_sptraderapi.CTORATstpSPFundTransferDetailField_StatusMsg_get, _sptraderapi.CTORATstpSPFundTransferDetailField_StatusMsg_set)

	# 签约银行账户
    __swig_setmethods__["BankAccountID"] = _sptraderapi.CTORATstpSPFundTransferDetailField_BankAccountID_set
    __swig_getmethods__["BankAccountID"] = _sptraderapi.CTORATstpSPFundTransferDetailField_BankAccountID_get
    if _newclass:
        BankAccountID = _swig_property(_sptraderapi.CTORATstpSPFundTransferDetailField_BankAccountID_get, _sptraderapi.CTORATstpSPFundTransferDetailField_BankAccountID_set)

	# 银行代码
    __swig_setmethods__["BankID"] = _sptraderapi.CTORATstpSPFundTransferDetailField_BankID_set
    __swig_getmethods__["BankID"] = _sptraderapi.CTORATstpSPFundTransferDetailField_BankID_get
    if _newclass:
        BankID = _swig_property(_sptraderapi.CTORATstpSPFundTransferDetailField_BankID_get, _sptraderapi.CTORATstpSPFundTransferDetailField_BankID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPFundTransferDetailField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPFundTransferDetailField
    __del__ = lambda self: None
CTORATstpSPFundTransferDetailField_swigregister = _sptraderapi.CTORATstpSPFundTransferDetailField_swigregister
CTORATstpSPFundTransferDetailField_swigregister(CTORATstpSPFundTransferDetailField)




#########################################查询持仓转移流水############################################
class CTORATstpSPQryPositionTransferDetailField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPQryPositionTransferDetailField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPQryPositionTransferDetailField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryPositionTransferDetailField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryPositionTransferDetailField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPQryPositionTransferDetailField_InvestorID_get, _sptraderapi.CTORATstpSPQryPositionTransferDetailField_InvestorID_set)

	# 目前该字段存放的是上证所和深圳的股东代码。
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPQryPositionTransferDetailField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPQryPositionTransferDetailField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPQryPositionTransferDetailField_ShareholderID_get, _sptraderapi.CTORATstpSPQryPositionTransferDetailField_ShareholderID_set)

	# 证券代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPQryPositionTransferDetailField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPQryPositionTransferDetailField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPQryPositionTransferDetailField_SecurityID_get, _sptraderapi.CTORATstpSPQryPositionTransferDetailField_SecurityID_set)

	# 转移方向
    __swig_setmethods__["TransferDirection"] = _sptraderapi.CTORATstpSPQryPositionTransferDetailField_TransferDirection_set
    __swig_getmethods__["TransferDirection"] = _sptraderapi.CTORATstpSPQryPositionTransferDetailField_TransferDirection_get
    if _newclass:
        TransferDirection = _swig_property(_sptraderapi.CTORATstpSPQryPositionTransferDetailField_TransferDirection_get, _sptraderapi.CTORATstpSPQryPositionTransferDetailField_TransferDirection_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPQryPositionTransferDetailField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPQryPositionTransferDetailField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPQryPositionTransferDetailField_BusinessUnitID_get, _sptraderapi.CTORATstpSPQryPositionTransferDetailField_BusinessUnitID_set)

	# 多、空
    __swig_setmethods__["PosiDirection"] = _sptraderapi.CTORATstpSPQryPositionTransferDetailField_PosiDirection_set
    __swig_getmethods__["PosiDirection"] = _sptraderapi.CTORATstpSPQryPositionTransferDetailField_PosiDirection_get
    if _newclass:
        PosiDirection = _swig_property(_sptraderapi.CTORATstpSPQryPositionTransferDetailField_PosiDirection_get, _sptraderapi.CTORATstpSPQryPositionTransferDetailField_PosiDirection_set)

	# 投机套保标志
    __swig_setmethods__["HedgeFlag"] = _sptraderapi.CTORATstpSPQryPositionTransferDetailField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _sptraderapi.CTORATstpSPQryPositionTransferDetailField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_sptraderapi.CTORATstpSPQryPositionTransferDetailField_HedgeFlag_get, _sptraderapi.CTORATstpSPQryPositionTransferDetailField_HedgeFlag_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPQryPositionTransferDetailField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPQryPositionTransferDetailField
    __del__ = lambda self: None
CTORATstpSPQryPositionTransferDetailField_swigregister = _sptraderapi.CTORATstpSPQryPositionTransferDetailField_swigregister
CTORATstpSPQryPositionTransferDetailField_swigregister(CTORATstpSPQryPositionTransferDetailField)




#########################################持仓转移流水############################################
class CTORATstpSPPositionTransferDetailField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPPositionTransferDetailField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPPositionTransferDetailField, name)
    __repr__ = _swig_repr

	# 流水号
    __swig_setmethods__["PositionSerial"] = _sptraderapi.CTORATstpSPPositionTransferDetailField_PositionSerial_set
    __swig_getmethods__["PositionSerial"] = _sptraderapi.CTORATstpSPPositionTransferDetailField_PositionSerial_get
    if _newclass:
        PositionSerial = _swig_property(_sptraderapi.CTORATstpSPPositionTransferDetailField_PositionSerial_get, _sptraderapi.CTORATstpSPPositionTransferDetailField_PositionSerial_set)

	# 申请流水号
    __swig_setmethods__["ApplySerial"] = _sptraderapi.CTORATstpSPPositionTransferDetailField_ApplySerial_set
    __swig_getmethods__["ApplySerial"] = _sptraderapi.CTORATstpSPPositionTransferDetailField_ApplySerial_get
    if _newclass:
        ApplySerial = _swig_property(_sptraderapi.CTORATstpSPPositionTransferDetailField_ApplySerial_get, _sptraderapi.CTORATstpSPPositionTransferDetailField_ApplySerial_set)

	# 前置编号
    __swig_setmethods__["FrontID"] = _sptraderapi.CTORATstpSPPositionTransferDetailField_FrontID_set
    __swig_getmethods__["FrontID"] = _sptraderapi.CTORATstpSPPositionTransferDetailField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_sptraderapi.CTORATstpSPPositionTransferDetailField_FrontID_get, _sptraderapi.CTORATstpSPPositionTransferDetailField_FrontID_set)

	# 会话编号
    __swig_setmethods__["SessionID"] = _sptraderapi.CTORATstpSPPositionTransferDetailField_SessionID_set
    __swig_getmethods__["SessionID"] = _sptraderapi.CTORATstpSPPositionTransferDetailField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_sptraderapi.CTORATstpSPPositionTransferDetailField_SessionID_get, _sptraderapi.CTORATstpSPPositionTransferDetailField_SessionID_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPPositionTransferDetailField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPPositionTransferDetailField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPPositionTransferDetailField_InvestorID_get, _sptraderapi.CTORATstpSPPositionTransferDetailField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPPositionTransferDetailField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPPositionTransferDetailField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPPositionTransferDetailField_BusinessUnitID_get, _sptraderapi.CTORATstpSPPositionTransferDetailField_BusinessUnitID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPPositionTransferDetailField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPPositionTransferDetailField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPPositionTransferDetailField_ExchangeID_get, _sptraderapi.CTORATstpSPPositionTransferDetailField_ExchangeID_set)

	# 交易账户代码
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPPositionTransferDetailField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPPositionTransferDetailField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPPositionTransferDetailField_ShareholderID_get, _sptraderapi.CTORATstpSPPositionTransferDetailField_ShareholderID_set)

	# 市场代码
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPPositionTransferDetailField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPPositionTransferDetailField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPPositionTransferDetailField_MarketID_get, _sptraderapi.CTORATstpSPPositionTransferDetailField_MarketID_set)

	# 持仓方向
    __swig_setmethods__["PosiDirection"] = _sptraderapi.CTORATstpSPPositionTransferDetailField_PosiDirection_set
    __swig_getmethods__["PosiDirection"] = _sptraderapi.CTORATstpSPPositionTransferDetailField_PosiDirection_get
    if _newclass:
        PosiDirection = _swig_property(_sptraderapi.CTORATstpSPPositionTransferDetailField_PosiDirection_get, _sptraderapi.CTORATstpSPPositionTransferDetailField_PosiDirection_set)

	# 投机套保标志
    __swig_setmethods__["HedgeFlag"] = _sptraderapi.CTORATstpSPPositionTransferDetailField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _sptraderapi.CTORATstpSPPositionTransferDetailField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_sptraderapi.CTORATstpSPPositionTransferDetailField_HedgeFlag_get, _sptraderapi.CTORATstpSPPositionTransferDetailField_HedgeFlag_set)

	# 证券代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPPositionTransferDetailField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPPositionTransferDetailField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPPositionTransferDetailField_SecurityID_get, _sptraderapi.CTORATstpSPPositionTransferDetailField_SecurityID_set)

	# 交易日期
    __swig_setmethods__["TradingDay"] = _sptraderapi.CTORATstpSPPositionTransferDetailField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _sptraderapi.CTORATstpSPPositionTransferDetailField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_sptraderapi.CTORATstpSPPositionTransferDetailField_TradingDay_get, _sptraderapi.CTORATstpSPPositionTransferDetailField_TradingDay_set)

	# 转移方向
    __swig_setmethods__["TransferDirection"] = _sptraderapi.CTORATstpSPPositionTransferDetailField_TransferDirection_set
    __swig_getmethods__["TransferDirection"] = _sptraderapi.CTORATstpSPPositionTransferDetailField_TransferDirection_get
    if _newclass:
        TransferDirection = _swig_property(_sptraderapi.CTORATstpSPPositionTransferDetailField_TransferDirection_get, _sptraderapi.CTORATstpSPPositionTransferDetailField_TransferDirection_set)

	# 转移持仓类型
    __swig_setmethods__["TransferPositionType"] = _sptraderapi.CTORATstpSPPositionTransferDetailField_TransferPositionType_set
    __swig_getmethods__["TransferPositionType"] = _sptraderapi.CTORATstpSPPositionTransferDetailField_TransferPositionType_get
    if _newclass:
        TransferPositionType = _swig_property(_sptraderapi.CTORATstpSPPositionTransferDetailField_TransferPositionType_get, _sptraderapi.CTORATstpSPPositionTransferDetailField_TransferPositionType_set)

	# 昨日仓位数量
    __swig_setmethods__["HistoryVolume"] = _sptraderapi.CTORATstpSPPositionTransferDetailField_HistoryVolume_set
    __swig_getmethods__["HistoryVolume"] = _sptraderapi.CTORATstpSPPositionTransferDetailField_HistoryVolume_get
    if _newclass:
        HistoryVolume = _swig_property(_sptraderapi.CTORATstpSPPositionTransferDetailField_HistoryVolume_get, _sptraderapi.CTORATstpSPPositionTransferDetailField_HistoryVolume_set)

	# 今日买卖仓位数量
    __swig_setmethods__["TodayVolume"] = _sptraderapi.CTORATstpSPPositionTransferDetailField_TodayVolume_set
    __swig_getmethods__["TodayVolume"] = _sptraderapi.CTORATstpSPPositionTransferDetailField_TodayVolume_get
    if _newclass:
        TodayVolume = _swig_property(_sptraderapi.CTORATstpSPPositionTransferDetailField_TodayVolume_get, _sptraderapi.CTORATstpSPPositionTransferDetailField_TodayVolume_set)

	# 转移状态
    __swig_setmethods__["TransferStatus"] = _sptraderapi.CTORATstpSPPositionTransferDetailField_TransferStatus_set
    __swig_getmethods__["TransferStatus"] = _sptraderapi.CTORATstpSPPositionTransferDetailField_TransferStatus_get
    if _newclass:
        TransferStatus = _swig_property(_sptraderapi.CTORATstpSPPositionTransferDetailField_TransferStatus_get, _sptraderapi.CTORATstpSPPositionTransferDetailField_TransferStatus_set)

	# 操作人员
    __swig_setmethods__["OperatorID"] = _sptraderapi.CTORATstpSPPositionTransferDetailField_OperatorID_set
    __swig_getmethods__["OperatorID"] = _sptraderapi.CTORATstpSPPositionTransferDetailField_OperatorID_get
    if _newclass:
        OperatorID = _swig_property(_sptraderapi.CTORATstpSPPositionTransferDetailField_OperatorID_get, _sptraderapi.CTORATstpSPPositionTransferDetailField_OperatorID_set)

	# 操作日期
    __swig_setmethods__["OperateDate"] = _sptraderapi.CTORATstpSPPositionTransferDetailField_OperateDate_set
    __swig_getmethods__["OperateDate"] = _sptraderapi.CTORATstpSPPositionTransferDetailField_OperateDate_get
    if _newclass:
        OperateDate = _swig_property(_sptraderapi.CTORATstpSPPositionTransferDetailField_OperateDate_get, _sptraderapi.CTORATstpSPPositionTransferDetailField_OperateDate_set)

	# 操作时间
    __swig_setmethods__["OperateTime"] = _sptraderapi.CTORATstpSPPositionTransferDetailField_OperateTime_set
    __swig_getmethods__["OperateTime"] = _sptraderapi.CTORATstpSPPositionTransferDetailField_OperateTime_get
    if _newclass:
        OperateTime = _swig_property(_sptraderapi.CTORATstpSPPositionTransferDetailField_OperateTime_get, _sptraderapi.CTORATstpSPPositionTransferDetailField_OperateTime_set)

	# 状态信息
    __swig_setmethods__["StatusMsg"] = _sptraderapi.CTORATstpSPPositionTransferDetailField_StatusMsg_set
    __swig_getmethods__["StatusMsg"] = _sptraderapi.CTORATstpSPPositionTransferDetailField_StatusMsg_get
    if _newclass:
        StatusMsg = _swig_property(_sptraderapi.CTORATstpSPPositionTransferDetailField_StatusMsg_get, _sptraderapi.CTORATstpSPPositionTransferDetailField_StatusMsg_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPPositionTransferDetailField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPPositionTransferDetailField
    __del__ = lambda self: None
CTORATstpSPPositionTransferDetailField_swigregister = _sptraderapi.CTORATstpSPPositionTransferDetailField_swigregister
CTORATstpSPPositionTransferDetailField_swigregister(CTORATstpSPPositionTransferDetailField)




#########################################查询撤单############################################
class CTORATstpSPQryOrderActionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPQryOrderActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPQryOrderActionField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryOrderActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryOrderActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPQryOrderActionField_InvestorID_get, _sptraderapi.CTORATstpSPQryOrderActionField_InvestorID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryOrderActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryOrderActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPQryOrderActionField_ExchangeID_get, _sptraderapi.CTORATstpSPQryOrderActionField_ExchangeID_set)

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPQryOrderActionField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPQryOrderActionField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPQryOrderActionField_MarketID_get, _sptraderapi.CTORATstpSPQryOrderActionField_MarketID_set)

	# 目前该字段存放的是上证所和深圳的股东代码。
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPQryOrderActionField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPQryOrderActionField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPQryOrderActionField_ShareholderID_get, _sptraderapi.CTORATstpSPQryOrderActionField_ShareholderID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPQryOrderActionField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPQryOrderActionField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPQryOrderActionField_BusinessUnitID_get, _sptraderapi.CTORATstpSPQryOrderActionField_BusinessUnitID_set)

	# 交易单元代码
    __swig_setmethods__["PbuID"] = _sptraderapi.CTORATstpSPQryOrderActionField_PbuID_set
    __swig_getmethods__["PbuID"] = _sptraderapi.CTORATstpSPQryOrderActionField_PbuID_get
    if _newclass:
        PbuID = _swig_property(_sptraderapi.CTORATstpSPQryOrderActionField_PbuID_get, _sptraderapi.CTORATstpSPQryOrderActionField_PbuID_set)

	# 全系统的唯一报单编号。
    __swig_setmethods__["CancelOrderLocalID"] = _sptraderapi.CTORATstpSPQryOrderActionField_CancelOrderLocalID_set
    __swig_getmethods__["CancelOrderLocalID"] = _sptraderapi.CTORATstpSPQryOrderActionField_CancelOrderLocalID_get
    if _newclass:
        CancelOrderLocalID = _swig_property(_sptraderapi.CTORATstpSPQryOrderActionField_CancelOrderLocalID_get, _sptraderapi.CTORATstpSPQryOrderActionField_CancelOrderLocalID_set)

	# 本地报单编号
    __swig_setmethods__["OrderLocalID"] = _sptraderapi.CTORATstpSPQryOrderActionField_OrderLocalID_set
    __swig_getmethods__["OrderLocalID"] = _sptraderapi.CTORATstpSPQryOrderActionField_OrderLocalID_get
    if _newclass:
        OrderLocalID = _swig_property(_sptraderapi.CTORATstpSPQryOrderActionField_OrderLocalID_get, _sptraderapi.CTORATstpSPQryOrderActionField_OrderLocalID_set)

	# 长字符串附加信息
    __swig_setmethods__["BInfo"] = _sptraderapi.CTORATstpSPQryOrderActionField_BInfo_set
    __swig_getmethods__["BInfo"] = _sptraderapi.CTORATstpSPQryOrderActionField_BInfo_get
    if _newclass:
        BInfo = _swig_property(_sptraderapi.CTORATstpSPQryOrderActionField_BInfo_get, _sptraderapi.CTORATstpSPQryOrderActionField_BInfo_set)

	# 短字符串附加信息
    __swig_setmethods__["SInfo"] = _sptraderapi.CTORATstpSPQryOrderActionField_SInfo_set
    __swig_getmethods__["SInfo"] = _sptraderapi.CTORATstpSPQryOrderActionField_SInfo_get
    if _newclass:
        SInfo = _swig_property(_sptraderapi.CTORATstpSPQryOrderActionField_SInfo_get, _sptraderapi.CTORATstpSPQryOrderActionField_SInfo_set)

	# 整形附加信息
    __swig_setmethods__["IInfo"] = _sptraderapi.CTORATstpSPQryOrderActionField_IInfo_set
    __swig_getmethods__["IInfo"] = _sptraderapi.CTORATstpSPQryOrderActionField_IInfo_get
    if _newclass:
        IInfo = _swig_property(_sptraderapi.CTORATstpSPQryOrderActionField_IInfo_get, _sptraderapi.CTORATstpSPQryOrderActionField_IInfo_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPQryOrderActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPQryOrderActionField
    __del__ = lambda self: None
CTORATstpSPQryOrderActionField_swigregister = _sptraderapi.CTORATstpSPQryOrderActionField_swigregister
CTORATstpSPQryOrderActionField_swigregister(CTORATstpSPQryOrderActionField)




#########################################撤单############################################
class CTORATstpSPOrderActionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPOrderActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPOrderActionField, name)
    __repr__ = _swig_repr

	# 交易日
    __swig_setmethods__["TradingDay"] = _sptraderapi.CTORATstpSPOrderActionField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _sptraderapi.CTORATstpSPOrderActionField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_sptraderapi.CTORATstpSPOrderActionField_TradingDay_get, _sptraderapi.CTORATstpSPOrderActionField_TradingDay_set)

	# 操作本地编号
    __swig_setmethods__["CancelOrderLocalID"] = _sptraderapi.CTORATstpSPOrderActionField_CancelOrderLocalID_set
    __swig_getmethods__["CancelOrderLocalID"] = _sptraderapi.CTORATstpSPOrderActionField_CancelOrderLocalID_get
    if _newclass:
        CancelOrderLocalID = _swig_property(_sptraderapi.CTORATstpSPOrderActionField_CancelOrderLocalID_get, _sptraderapi.CTORATstpSPOrderActionField_CancelOrderLocalID_set)

	# 撤单前置编号
    __swig_setmethods__["ActionFrontID"] = _sptraderapi.CTORATstpSPOrderActionField_ActionFrontID_set
    __swig_getmethods__["ActionFrontID"] = _sptraderapi.CTORATstpSPOrderActionField_ActionFrontID_get
    if _newclass:
        ActionFrontID = _swig_property(_sptraderapi.CTORATstpSPOrderActionField_ActionFrontID_get, _sptraderapi.CTORATstpSPOrderActionField_ActionFrontID_set)

	# 撤单会话编号
    __swig_setmethods__["ActionSessionID"] = _sptraderapi.CTORATstpSPOrderActionField_ActionSessionID_set
    __swig_getmethods__["ActionSessionID"] = _sptraderapi.CTORATstpSPOrderActionField_ActionSessionID_get
    if _newclass:
        ActionSessionID = _swig_property(_sptraderapi.CTORATstpSPOrderActionField_ActionSessionID_get, _sptraderapi.CTORATstpSPOrderActionField_ActionSessionID_set)

	# 撤单引用
    __swig_setmethods__["OrderActionRef"] = _sptraderapi.CTORATstpSPOrderActionField_OrderActionRef_set
    __swig_getmethods__["OrderActionRef"] = _sptraderapi.CTORATstpSPOrderActionField_OrderActionRef_get
    if _newclass:
        OrderActionRef = _swig_property(_sptraderapi.CTORATstpSPOrderActionField_OrderActionRef_get, _sptraderapi.CTORATstpSPOrderActionField_OrderActionRef_set)

	# 本地被撤报单编号
    __swig_setmethods__["OrderLocalID"] = _sptraderapi.CTORATstpSPOrderActionField_OrderLocalID_set
    __swig_getmethods__["OrderLocalID"] = _sptraderapi.CTORATstpSPOrderActionField_OrderLocalID_get
    if _newclass:
        OrderLocalID = _swig_property(_sptraderapi.CTORATstpSPOrderActionField_OrderLocalID_get, _sptraderapi.CTORATstpSPOrderActionField_OrderLocalID_set)

	# 报单编号
    __swig_setmethods__["OrderSysID"] = _sptraderapi.CTORATstpSPOrderActionField_OrderSysID_set
    __swig_getmethods__["OrderSysID"] = _sptraderapi.CTORATstpSPOrderActionField_OrderSysID_get
    if _newclass:
        OrderSysID = _swig_property(_sptraderapi.CTORATstpSPOrderActionField_OrderSysID_get, _sptraderapi.CTORATstpSPOrderActionField_OrderSysID_set)

	# 前置编号
    __swig_setmethods__["FrontID"] = _sptraderapi.CTORATstpSPOrderActionField_FrontID_set
    __swig_getmethods__["FrontID"] = _sptraderapi.CTORATstpSPOrderActionField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_sptraderapi.CTORATstpSPOrderActionField_FrontID_get, _sptraderapi.CTORATstpSPOrderActionField_FrontID_set)

	# 会话编号
    __swig_setmethods__["SessionID"] = _sptraderapi.CTORATstpSPOrderActionField_SessionID_set
    __swig_getmethods__["SessionID"] = _sptraderapi.CTORATstpSPOrderActionField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_sptraderapi.CTORATstpSPOrderActionField_SessionID_get, _sptraderapi.CTORATstpSPOrderActionField_SessionID_set)

	# 报单引用
    __swig_setmethods__["OrderRef"] = _sptraderapi.CTORATstpSPOrderActionField_OrderRef_set
    __swig_getmethods__["OrderRef"] = _sptraderapi.CTORATstpSPOrderActionField_OrderRef_get
    if _newclass:
        OrderRef = _swig_property(_sptraderapi.CTORATstpSPOrderActionField_OrderRef_get, _sptraderapi.CTORATstpSPOrderActionField_OrderRef_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPOrderActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPOrderActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPOrderActionField_InvestorID_get, _sptraderapi.CTORATstpSPOrderActionField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPOrderActionField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPOrderActionField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPOrderActionField_BusinessUnitID_get, _sptraderapi.CTORATstpSPOrderActionField_BusinessUnitID_set)

	# 市场代码
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPOrderActionField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPOrderActionField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPOrderActionField_MarketID_get, _sptraderapi.CTORATstpSPOrderActionField_MarketID_set)

	# 股东账户代码
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPOrderActionField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPOrderActionField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPOrderActionField_ShareholderID_get, _sptraderapi.CTORATstpSPOrderActionField_ShareholderID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPOrderActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPOrderActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPOrderActionField_ExchangeID_get, _sptraderapi.CTORATstpSPOrderActionField_ExchangeID_set)

	# 合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPOrderActionField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPOrderActionField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPOrderActionField_SecurityID_get, _sptraderapi.CTORATstpSPOrderActionField_SecurityID_set)

	# 操作标志
    __swig_setmethods__["OrderActionFlag"] = _sptraderapi.CTORATstpSPOrderActionField_OrderActionFlag_set
    __swig_getmethods__["OrderActionFlag"] = _sptraderapi.CTORATstpSPOrderActionField_OrderActionFlag_get
    if _newclass:
        OrderActionFlag = _swig_property(_sptraderapi.CTORATstpSPOrderActionField_OrderActionFlag_get, _sptraderapi.CTORATstpSPOrderActionField_OrderActionFlag_set)

	# 撤单状态
    __swig_setmethods__["CancelOrderStatus"] = _sptraderapi.CTORATstpSPOrderActionField_CancelOrderStatus_set
    __swig_getmethods__["CancelOrderStatus"] = _sptraderapi.CTORATstpSPOrderActionField_CancelOrderStatus_get
    if _newclass:
        CancelOrderStatus = _swig_property(_sptraderapi.CTORATstpSPOrderActionField_CancelOrderStatus_get, _sptraderapi.CTORATstpSPOrderActionField_CancelOrderStatus_set)

	# 撤单数量
    __swig_setmethods__["VolumeCanceled"] = _sptraderapi.CTORATstpSPOrderActionField_VolumeCanceled_set
    __swig_getmethods__["VolumeCanceled"] = _sptraderapi.CTORATstpSPOrderActionField_VolumeCanceled_get
    if _newclass:
        VolumeCanceled = _swig_property(_sptraderapi.CTORATstpSPOrderActionField_VolumeCanceled_get, _sptraderapi.CTORATstpSPOrderActionField_VolumeCanceled_set)

	# 状态信息
    __swig_setmethods__["StatusMsg"] = _sptraderapi.CTORATstpSPOrderActionField_StatusMsg_set
    __swig_getmethods__["StatusMsg"] = _sptraderapi.CTORATstpSPOrderActionField_StatusMsg_get
    if _newclass:
        StatusMsg = _swig_property(_sptraderapi.CTORATstpSPOrderActionField_StatusMsg_get, _sptraderapi.CTORATstpSPOrderActionField_StatusMsg_set)

	# 系统错误代码
    __swig_setmethods__["ErrorID"] = _sptraderapi.CTORATstpSPOrderActionField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _sptraderapi.CTORATstpSPOrderActionField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_sptraderapi.CTORATstpSPOrderActionField_ErrorID_get, _sptraderapi.CTORATstpSPOrderActionField_ErrorID_set)

	# 交易所营业部编码
    __swig_setmethods__["BranchID"] = _sptraderapi.CTORATstpSPOrderActionField_BranchID_set
    __swig_getmethods__["BranchID"] = _sptraderapi.CTORATstpSPOrderActionField_BranchID_get
    if _newclass:
        BranchID = _swig_property(_sptraderapi.CTORATstpSPOrderActionField_BranchID_get, _sptraderapi.CTORATstpSPOrderActionField_BranchID_set)

	# 交易所交易单元代码
    __swig_setmethods__["PbuID"] = _sptraderapi.CTORATstpSPOrderActionField_PbuID_set
    __swig_getmethods__["PbuID"] = _sptraderapi.CTORATstpSPOrderActionField_PbuID_get
    if _newclass:
        PbuID = _swig_property(_sptraderapi.CTORATstpSPOrderActionField_PbuID_get, _sptraderapi.CTORATstpSPOrderActionField_PbuID_set)

	# 报单申报用户
    __swig_setmethods__["InsertUserID"] = _sptraderapi.CTORATstpSPOrderActionField_InsertUserID_set
    __swig_getmethods__["InsertUserID"] = _sptraderapi.CTORATstpSPOrderActionField_InsertUserID_get
    if _newclass:
        InsertUserID = _swig_property(_sptraderapi.CTORATstpSPOrderActionField_InsertUserID_get, _sptraderapi.CTORATstpSPOrderActionField_InsertUserID_set)

	# 操作日期
    __swig_setmethods__["InsertDate"] = _sptraderapi.CTORATstpSPOrderActionField_InsertDate_set
    __swig_getmethods__["InsertDate"] = _sptraderapi.CTORATstpSPOrderActionField_InsertDate_get
    if _newclass:
        InsertDate = _swig_property(_sptraderapi.CTORATstpSPOrderActionField_InsertDate_get, _sptraderapi.CTORATstpSPOrderActionField_InsertDate_set)

	# 操作时间
    __swig_setmethods__["InsertTime"] = _sptraderapi.CTORATstpSPOrderActionField_InsertTime_set
    __swig_getmethods__["InsertTime"] = _sptraderapi.CTORATstpSPOrderActionField_InsertTime_get
    if _newclass:
        InsertTime = _swig_property(_sptraderapi.CTORATstpSPOrderActionField_InsertTime_get, _sptraderapi.CTORATstpSPOrderActionField_InsertTime_set)

	# 申报时间(毫秒)
    __swig_setmethods__["InsertMillisec"] = _sptraderapi.CTORATstpSPOrderActionField_InsertMillisec_set
    __swig_getmethods__["InsertMillisec"] = _sptraderapi.CTORATstpSPOrderActionField_InsertMillisec_get
    if _newclass:
        InsertMillisec = _swig_property(_sptraderapi.CTORATstpSPOrderActionField_InsertMillisec_get, _sptraderapi.CTORATstpSPOrderActionField_InsertMillisec_set)

	# IP地址
    __swig_setmethods__["IPAddress"] = _sptraderapi.CTORATstpSPOrderActionField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _sptraderapi.CTORATstpSPOrderActionField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_sptraderapi.CTORATstpSPOrderActionField_IPAddress_get, _sptraderapi.CTORATstpSPOrderActionField_IPAddress_set)

	# Mac地址
    __swig_setmethods__["MacAddress"] = _sptraderapi.CTORATstpSPOrderActionField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _sptraderapi.CTORATstpSPOrderActionField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_sptraderapi.CTORATstpSPOrderActionField_MacAddress_get, _sptraderapi.CTORATstpSPOrderActionField_MacAddress_set)

	# 请求编号
    __swig_setmethods__["RequestID"] = _sptraderapi.CTORATstpSPOrderActionField_RequestID_set
    __swig_getmethods__["RequestID"] = _sptraderapi.CTORATstpSPOrderActionField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_sptraderapi.CTORATstpSPOrderActionField_RequestID_get, _sptraderapi.CTORATstpSPOrderActionField_RequestID_set)

	# 长字符串附加信息
    __swig_setmethods__["BInfo"] = _sptraderapi.CTORATstpSPOrderActionField_BInfo_set
    __swig_getmethods__["BInfo"] = _sptraderapi.CTORATstpSPOrderActionField_BInfo_get
    if _newclass:
        BInfo = _swig_property(_sptraderapi.CTORATstpSPOrderActionField_BInfo_get, _sptraderapi.CTORATstpSPOrderActionField_BInfo_set)

	# 短字符串附加信息
    __swig_setmethods__["SInfo"] = _sptraderapi.CTORATstpSPOrderActionField_SInfo_set
    __swig_getmethods__["SInfo"] = _sptraderapi.CTORATstpSPOrderActionField_SInfo_get
    if _newclass:
        SInfo = _swig_property(_sptraderapi.CTORATstpSPOrderActionField_SInfo_get, _sptraderapi.CTORATstpSPOrderActionField_SInfo_set)

	# 整形附加信息
    __swig_setmethods__["IInfo"] = _sptraderapi.CTORATstpSPOrderActionField_IInfo_set
    __swig_getmethods__["IInfo"] = _sptraderapi.CTORATstpSPOrderActionField_IInfo_get
    if _newclass:
        IInfo = _swig_property(_sptraderapi.CTORATstpSPOrderActionField_IInfo_get, _sptraderapi.CTORATstpSPOrderActionField_IInfo_set)

	# 委托方式
    __swig_setmethods__["Operway"] = _sptraderapi.CTORATstpSPOrderActionField_Operway_set
    __swig_getmethods__["Operway"] = _sptraderapi.CTORATstpSPOrderActionField_Operway_get
    if _newclass:
        Operway = _swig_property(_sptraderapi.CTORATstpSPOrderActionField_Operway_get, _sptraderapi.CTORATstpSPOrderActionField_Operway_set)

	# 硬盘序列号
    __swig_setmethods__["HDSerial"] = _sptraderapi.CTORATstpSPOrderActionField_HDSerial_set
    __swig_getmethods__["HDSerial"] = _sptraderapi.CTORATstpSPOrderActionField_HDSerial_get
    if _newclass:
        HDSerial = _swig_property(_sptraderapi.CTORATstpSPOrderActionField_HDSerial_get, _sptraderapi.CTORATstpSPOrderActionField_HDSerial_set)

	# 移动设备手机号
    __swig_setmethods__["Mobile"] = _sptraderapi.CTORATstpSPOrderActionField_Mobile_set
    __swig_getmethods__["Mobile"] = _sptraderapi.CTORATstpSPOrderActionField_Mobile_get
    if _newclass:
        Mobile = _swig_property(_sptraderapi.CTORATstpSPOrderActionField_Mobile_get, _sptraderapi.CTORATstpSPOrderActionField_Mobile_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPOrderActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPOrderActionField
    __del__ = lambda self: None
CTORATstpSPOrderActionField_swigregister = _sptraderapi.CTORATstpSPOrderActionField_swigregister
CTORATstpSPOrderActionField_swigregister(CTORATstpSPOrderActionField)




#########################################查询投资者现货持仓############################################
class CTORATstpSPQryStockPositionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPQryStockPositionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPQryStockPositionField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryStockPositionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryStockPositionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPQryStockPositionField_InvestorID_get, _sptraderapi.CTORATstpSPQryStockPositionField_InvestorID_set)

	# 证券代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPQryStockPositionField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPQryStockPositionField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPQryStockPositionField_SecurityID_get, _sptraderapi.CTORATstpSPQryStockPositionField_SecurityID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryStockPositionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryStockPositionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPQryStockPositionField_ExchangeID_get, _sptraderapi.CTORATstpSPQryStockPositionField_ExchangeID_set)

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPQryStockPositionField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPQryStockPositionField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPQryStockPositionField_MarketID_get, _sptraderapi.CTORATstpSPQryStockPositionField_MarketID_set)

	# 交易账户代码
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPQryStockPositionField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPQryStockPositionField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPQryStockPositionField_ShareholderID_get, _sptraderapi.CTORATstpSPQryStockPositionField_ShareholderID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPQryStockPositionField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPQryStockPositionField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPQryStockPositionField_BusinessUnitID_get, _sptraderapi.CTORATstpSPQryStockPositionField_BusinessUnitID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPQryStockPositionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPQryStockPositionField
    __del__ = lambda self: None
CTORATstpSPQryStockPositionField_swigregister = _sptraderapi.CTORATstpSPQryStockPositionField_swigregister
CTORATstpSPQryStockPositionField_swigregister(CTORATstpSPQryStockPositionField)




#########################################投资者现货持仓############################################
class CTORATstpSPStockPositionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPStockPositionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPStockPositionField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPStockPositionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPStockPositionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPStockPositionField_InvestorID_get, _sptraderapi.CTORATstpSPStockPositionField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPStockPositionField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPStockPositionField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPStockPositionField_BusinessUnitID_get, _sptraderapi.CTORATstpSPStockPositionField_BusinessUnitID_set)

	# 市场代码
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPStockPositionField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPStockPositionField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPStockPositionField_MarketID_get, _sptraderapi.CTORATstpSPStockPositionField_MarketID_set)

	# 客户代码
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPStockPositionField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPStockPositionField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPStockPositionField_ShareholderID_get, _sptraderapi.CTORATstpSPStockPositionField_ShareholderID_set)

	# 交易日
    __swig_setmethods__["TradingDay"] = _sptraderapi.CTORATstpSPStockPositionField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _sptraderapi.CTORATstpSPStockPositionField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_sptraderapi.CTORATstpSPStockPositionField_TradingDay_get, _sptraderapi.CTORATstpSPStockPositionField_TradingDay_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPStockPositionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPStockPositionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPStockPositionField_ExchangeID_get, _sptraderapi.CTORATstpSPStockPositionField_ExchangeID_set)

	# 合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPStockPositionField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPStockPositionField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPStockPositionField_SecurityID_get, _sptraderapi.CTORATstpSPStockPositionField_SecurityID_set)

	# 昨日持仓
    __swig_setmethods__["HistoryPos"] = _sptraderapi.CTORATstpSPStockPositionField_HistoryPos_set
    __swig_getmethods__["HistoryPos"] = _sptraderapi.CTORATstpSPStockPositionField_HistoryPos_get
    if _newclass:
        HistoryPos = _swig_property(_sptraderapi.CTORATstpSPStockPositionField_HistoryPos_get, _sptraderapi.CTORATstpSPStockPositionField_HistoryPos_set)

	# 昨日持仓冻结
    __swig_setmethods__["HistoryPosFrozen"] = _sptraderapi.CTORATstpSPStockPositionField_HistoryPosFrozen_set
    __swig_getmethods__["HistoryPosFrozen"] = _sptraderapi.CTORATstpSPStockPositionField_HistoryPosFrozen_get
    if _newclass:
        HistoryPosFrozen = _swig_property(_sptraderapi.CTORATstpSPStockPositionField_HistoryPosFrozen_get, _sptraderapi.CTORATstpSPStockPositionField_HistoryPosFrozen_set)

	# 今日买卖持仓
    __swig_setmethods__["TodayBSPos"] = _sptraderapi.CTORATstpSPStockPositionField_TodayBSPos_set
    __swig_getmethods__["TodayBSPos"] = _sptraderapi.CTORATstpSPStockPositionField_TodayBSPos_get
    if _newclass:
        TodayBSPos = _swig_property(_sptraderapi.CTORATstpSPStockPositionField_TodayBSPos_get, _sptraderapi.CTORATstpSPStockPositionField_TodayBSPos_set)

	# 今日买卖持仓冻结
    __swig_setmethods__["TodayBSPosFrozen"] = _sptraderapi.CTORATstpSPStockPositionField_TodayBSPosFrozen_set
    __swig_getmethods__["TodayBSPosFrozen"] = _sptraderapi.CTORATstpSPStockPositionField_TodayBSPosFrozen_get
    if _newclass:
        TodayBSPosFrozen = _swig_property(_sptraderapi.CTORATstpSPStockPositionField_TodayBSPosFrozen_get, _sptraderapi.CTORATstpSPStockPositionField_TodayBSPosFrozen_set)

	# 今日申赎持仓
    __swig_setmethods__["TodayPRPos"] = _sptraderapi.CTORATstpSPStockPositionField_TodayPRPos_set
    __swig_getmethods__["TodayPRPos"] = _sptraderapi.CTORATstpSPStockPositionField_TodayPRPos_get
    if _newclass:
        TodayPRPos = _swig_property(_sptraderapi.CTORATstpSPStockPositionField_TodayPRPos_get, _sptraderapi.CTORATstpSPStockPositionField_TodayPRPos_set)

	# 今日申赎持仓冻结
    __swig_setmethods__["TodayPRPosFrozen"] = _sptraderapi.CTORATstpSPStockPositionField_TodayPRPosFrozen_set
    __swig_getmethods__["TodayPRPosFrozen"] = _sptraderapi.CTORATstpSPStockPositionField_TodayPRPosFrozen_get
    if _newclass:
        TodayPRPosFrozen = _swig_property(_sptraderapi.CTORATstpSPStockPositionField_TodayPRPosFrozen_get, _sptraderapi.CTORATstpSPStockPositionField_TodayPRPosFrozen_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPStockPositionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPStockPositionField
    __del__ = lambda self: None
CTORATstpSPStockPositionField_swigregister = _sptraderapi.CTORATstpSPStockPositionField_swigregister
CTORATstpSPStockPositionField_swigregister(CTORATstpSPStockPositionField)




#########################################查询锁定委托############################################
class CTORATstpSPQryLockField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPQryLockField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPQryLockField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryLockField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryLockField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPQryLockField_InvestorID_get, _sptraderapi.CTORATstpSPQryLockField_InvestorID_set)

	# 合约在系统中的编号
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPQryLockField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPQryLockField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPQryLockField_SecurityID_get, _sptraderapi.CTORATstpSPQryLockField_SecurityID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryLockField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryLockField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPQryLockField_ExchangeID_get, _sptraderapi.CTORATstpSPQryLockField_ExchangeID_set)

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPQryLockField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPQryLockField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPQryLockField_MarketID_get, _sptraderapi.CTORATstpSPQryLockField_MarketID_set)

	# 客户在系统中的编号，编号唯一且遵循交易所制定的编码规则
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPQryLockField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPQryLockField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPQryLockField_ShareholderID_get, _sptraderapi.CTORATstpSPQryLockField_ShareholderID_set)

	# 报单编号
    __swig_setmethods__["LockSysID"] = _sptraderapi.CTORATstpSPQryLockField_LockSysID_set
    __swig_getmethods__["LockSysID"] = _sptraderapi.CTORATstpSPQryLockField_LockSysID_get
    if _newclass:
        LockSysID = _swig_property(_sptraderapi.CTORATstpSPQryLockField_LockSysID_get, _sptraderapi.CTORATstpSPQryLockField_LockSysID_set)

	# Time
    __swig_setmethods__["InsertTimeStart"] = _sptraderapi.CTORATstpSPQryLockField_InsertTimeStart_set
    __swig_getmethods__["InsertTimeStart"] = _sptraderapi.CTORATstpSPQryLockField_InsertTimeStart_get
    if _newclass:
        InsertTimeStart = _swig_property(_sptraderapi.CTORATstpSPQryLockField_InsertTimeStart_get, _sptraderapi.CTORATstpSPQryLockField_InsertTimeStart_set)

	# Time
    __swig_setmethods__["InsertTimeEnd"] = _sptraderapi.CTORATstpSPQryLockField_InsertTimeEnd_set
    __swig_getmethods__["InsertTimeEnd"] = _sptraderapi.CTORATstpSPQryLockField_InsertTimeEnd_get
    if _newclass:
        InsertTimeEnd = _swig_property(_sptraderapi.CTORATstpSPQryLockField_InsertTimeEnd_get, _sptraderapi.CTORATstpSPQryLockField_InsertTimeEnd_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPQryLockField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPQryLockField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPQryLockField_BusinessUnitID_get, _sptraderapi.CTORATstpSPQryLockField_BusinessUnitID_set)

	# 锁定类别
    __swig_setmethods__["LockType"] = _sptraderapi.CTORATstpSPQryLockField_LockType_set
    __swig_getmethods__["LockType"] = _sptraderapi.CTORATstpSPQryLockField_LockType_get
    if _newclass:
        LockType = _swig_property(_sptraderapi.CTORATstpSPQryLockField_LockType_get, _sptraderapi.CTORATstpSPQryLockField_LockType_set)

	# 长字符串附加信息
    __swig_setmethods__["BInfo"] = _sptraderapi.CTORATstpSPQryLockField_BInfo_set
    __swig_getmethods__["BInfo"] = _sptraderapi.CTORATstpSPQryLockField_BInfo_get
    if _newclass:
        BInfo = _swig_property(_sptraderapi.CTORATstpSPQryLockField_BInfo_get, _sptraderapi.CTORATstpSPQryLockField_BInfo_set)

	# 短字符串附加信息
    __swig_setmethods__["SInfo"] = _sptraderapi.CTORATstpSPQryLockField_SInfo_set
    __swig_getmethods__["SInfo"] = _sptraderapi.CTORATstpSPQryLockField_SInfo_get
    if _newclass:
        SInfo = _swig_property(_sptraderapi.CTORATstpSPQryLockField_SInfo_get, _sptraderapi.CTORATstpSPQryLockField_SInfo_set)

	# 整形附加信息
    __swig_setmethods__["IInfo"] = _sptraderapi.CTORATstpSPQryLockField_IInfo_set
    __swig_getmethods__["IInfo"] = _sptraderapi.CTORATstpSPQryLockField_IInfo_get
    if _newclass:
        IInfo = _swig_property(_sptraderapi.CTORATstpSPQryLockField_IInfo_get, _sptraderapi.CTORATstpSPQryLockField_IInfo_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPQryLockField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPQryLockField
    __del__ = lambda self: None
CTORATstpSPQryLockField_swigregister = _sptraderapi.CTORATstpSPQryLockField_swigregister
CTORATstpSPQryLockField_swigregister(CTORATstpSPQryLockField)




#########################################查询行权委托############################################
class CTORATstpSPQryExerciseField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPQryExerciseField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPQryExerciseField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryExerciseField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryExerciseField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPQryExerciseField_InvestorID_get, _sptraderapi.CTORATstpSPQryExerciseField_InvestorID_set)

	# 合约在系统中的编号
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPQryExerciseField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPQryExerciseField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPQryExerciseField_SecurityID_get, _sptraderapi.CTORATstpSPQryExerciseField_SecurityID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryExerciseField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryExerciseField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPQryExerciseField_ExchangeID_get, _sptraderapi.CTORATstpSPQryExerciseField_ExchangeID_set)

	# 市场代码
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPQryExerciseField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPQryExerciseField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPQryExerciseField_MarketID_get, _sptraderapi.CTORATstpSPQryExerciseField_MarketID_set)

	# 目前该字段存放的是上证所和深圳的股东代码。
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPQryExerciseField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPQryExerciseField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPQryExerciseField_ShareholderID_get, _sptraderapi.CTORATstpSPQryExerciseField_ShareholderID_set)

	# 全系统的唯一报单编号
    __swig_setmethods__["ExerciseSysID"] = _sptraderapi.CTORATstpSPQryExerciseField_ExerciseSysID_set
    __swig_getmethods__["ExerciseSysID"] = _sptraderapi.CTORATstpSPQryExerciseField_ExerciseSysID_get
    if _newclass:
        ExerciseSysID = _swig_property(_sptraderapi.CTORATstpSPQryExerciseField_ExerciseSysID_get, _sptraderapi.CTORATstpSPQryExerciseField_ExerciseSysID_set)

	# Time
    __swig_setmethods__["InsertTimeStart"] = _sptraderapi.CTORATstpSPQryExerciseField_InsertTimeStart_set
    __swig_getmethods__["InsertTimeStart"] = _sptraderapi.CTORATstpSPQryExerciseField_InsertTimeStart_get
    if _newclass:
        InsertTimeStart = _swig_property(_sptraderapi.CTORATstpSPQryExerciseField_InsertTimeStart_get, _sptraderapi.CTORATstpSPQryExerciseField_InsertTimeStart_set)

	# Time
    __swig_setmethods__["InsertTimeEnd"] = _sptraderapi.CTORATstpSPQryExerciseField_InsertTimeEnd_set
    __swig_getmethods__["InsertTimeEnd"] = _sptraderapi.CTORATstpSPQryExerciseField_InsertTimeEnd_get
    if _newclass:
        InsertTimeEnd = _swig_property(_sptraderapi.CTORATstpSPQryExerciseField_InsertTimeEnd_get, _sptraderapi.CTORATstpSPQryExerciseField_InsertTimeEnd_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPQryExerciseField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPQryExerciseField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPQryExerciseField_BusinessUnitID_get, _sptraderapi.CTORATstpSPQryExerciseField_BusinessUnitID_set)

	# 长字符串附加信息
    __swig_setmethods__["BInfo"] = _sptraderapi.CTORATstpSPQryExerciseField_BInfo_set
    __swig_getmethods__["BInfo"] = _sptraderapi.CTORATstpSPQryExerciseField_BInfo_get
    if _newclass:
        BInfo = _swig_property(_sptraderapi.CTORATstpSPQryExerciseField_BInfo_get, _sptraderapi.CTORATstpSPQryExerciseField_BInfo_set)

	# 短字符串附加信息
    __swig_setmethods__["SInfo"] = _sptraderapi.CTORATstpSPQryExerciseField_SInfo_set
    __swig_getmethods__["SInfo"] = _sptraderapi.CTORATstpSPQryExerciseField_SInfo_get
    if _newclass:
        SInfo = _swig_property(_sptraderapi.CTORATstpSPQryExerciseField_SInfo_get, _sptraderapi.CTORATstpSPQryExerciseField_SInfo_set)

	# 整形附加信息
    __swig_setmethods__["IInfo"] = _sptraderapi.CTORATstpSPQryExerciseField_IInfo_set
    __swig_getmethods__["IInfo"] = _sptraderapi.CTORATstpSPQryExerciseField_IInfo_get
    if _newclass:
        IInfo = _swig_property(_sptraderapi.CTORATstpSPQryExerciseField_IInfo_get, _sptraderapi.CTORATstpSPQryExerciseField_IInfo_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPQryExerciseField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPQryExerciseField
    __del__ = lambda self: None
CTORATstpSPQryExerciseField_swigregister = _sptraderapi.CTORATstpSPQryExerciseField_swigregister
CTORATstpSPQryExerciseField_swigregister(CTORATstpSPQryExerciseField)




#########################################查询投资者锁定持仓############################################
class CTORATstpSPQryLockPositionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPQryLockPositionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPQryLockPositionField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryLockPositionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryLockPositionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPQryLockPositionField_InvestorID_get, _sptraderapi.CTORATstpSPQryLockPositionField_InvestorID_set)

	# 证券代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPQryLockPositionField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPQryLockPositionField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPQryLockPositionField_SecurityID_get, _sptraderapi.CTORATstpSPQryLockPositionField_SecurityID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryLockPositionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryLockPositionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPQryLockPositionField_ExchangeID_get, _sptraderapi.CTORATstpSPQryLockPositionField_ExchangeID_set)

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPQryLockPositionField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPQryLockPositionField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPQryLockPositionField_MarketID_get, _sptraderapi.CTORATstpSPQryLockPositionField_MarketID_set)

	# 交易账户代码
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPQryLockPositionField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPQryLockPositionField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPQryLockPositionField_ShareholderID_get, _sptraderapi.CTORATstpSPQryLockPositionField_ShareholderID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPQryLockPositionField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPQryLockPositionField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPQryLockPositionField_BusinessUnitID_get, _sptraderapi.CTORATstpSPQryLockPositionField_BusinessUnitID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPQryLockPositionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPQryLockPositionField
    __del__ = lambda self: None
CTORATstpSPQryLockPositionField_swigregister = _sptraderapi.CTORATstpSPQryLockPositionField_swigregister
CTORATstpSPQryLockPositionField_swigregister(CTORATstpSPQryLockPositionField)




#########################################投资者锁定持仓############################################
class CTORATstpSPLockPositionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPLockPositionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPLockPositionField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPLockPositionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPLockPositionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPLockPositionField_InvestorID_get, _sptraderapi.CTORATstpSPLockPositionField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPLockPositionField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPLockPositionField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPLockPositionField_BusinessUnitID_get, _sptraderapi.CTORATstpSPLockPositionField_BusinessUnitID_set)

	# 市场代码
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPLockPositionField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPLockPositionField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPLockPositionField_MarketID_get, _sptraderapi.CTORATstpSPLockPositionField_MarketID_set)

	# 客户代码
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPLockPositionField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPLockPositionField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPLockPositionField_ShareholderID_get, _sptraderapi.CTORATstpSPLockPositionField_ShareholderID_set)

	# 交易日
    __swig_setmethods__["TradingDay"] = _sptraderapi.CTORATstpSPLockPositionField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _sptraderapi.CTORATstpSPLockPositionField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_sptraderapi.CTORATstpSPLockPositionField_TradingDay_get, _sptraderapi.CTORATstpSPLockPositionField_TradingDay_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPLockPositionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPLockPositionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPLockPositionField_ExchangeID_get, _sptraderapi.CTORATstpSPLockPositionField_ExchangeID_set)

	# 合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPLockPositionField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPLockPositionField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPLockPositionField_SecurityID_get, _sptraderapi.CTORATstpSPLockPositionField_SecurityID_set)

	# 锁定持仓总数量
    __swig_setmethods__["Volume"] = _sptraderapi.CTORATstpSPLockPositionField_Volume_set
    __swig_getmethods__["Volume"] = _sptraderapi.CTORATstpSPLockPositionField_Volume_get
    if _newclass:
        Volume = _swig_property(_sptraderapi.CTORATstpSPLockPositionField_Volume_get, _sptraderapi.CTORATstpSPLockPositionField_Volume_set)

	# 锁定持仓冻结数量
    __swig_setmethods__["FrozenVolume"] = _sptraderapi.CTORATstpSPLockPositionField_FrozenVolume_set
    __swig_getmethods__["FrozenVolume"] = _sptraderapi.CTORATstpSPLockPositionField_FrozenVolume_get
    if _newclass:
        FrozenVolume = _swig_property(_sptraderapi.CTORATstpSPLockPositionField_FrozenVolume_get, _sptraderapi.CTORATstpSPLockPositionField_FrozenVolume_set)

	# 昨日持仓
    __swig_setmethods__["HistoryPos"] = _sptraderapi.CTORATstpSPLockPositionField_HistoryPos_set
    __swig_getmethods__["HistoryPos"] = _sptraderapi.CTORATstpSPLockPositionField_HistoryPos_get
    if _newclass:
        HistoryPos = _swig_property(_sptraderapi.CTORATstpSPLockPositionField_HistoryPos_get, _sptraderapi.CTORATstpSPLockPositionField_HistoryPos_set)

	# 今日买卖持仓
    __swig_setmethods__["TodayBSPos"] = _sptraderapi.CTORATstpSPLockPositionField_TodayBSPos_set
    __swig_getmethods__["TodayBSPos"] = _sptraderapi.CTORATstpSPLockPositionField_TodayBSPos_get
    if _newclass:
        TodayBSPos = _swig_property(_sptraderapi.CTORATstpSPLockPositionField_TodayBSPos_get, _sptraderapi.CTORATstpSPLockPositionField_TodayBSPos_set)

	# 今日申赎持仓
    __swig_setmethods__["TodayPRPos"] = _sptraderapi.CTORATstpSPLockPositionField_TodayPRPos_set
    __swig_getmethods__["TodayPRPos"] = _sptraderapi.CTORATstpSPLockPositionField_TodayPRPos_get
    if _newclass:
        TodayPRPos = _swig_property(_sptraderapi.CTORATstpSPLockPositionField_TodayPRPos_get, _sptraderapi.CTORATstpSPLockPositionField_TodayPRPos_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPLockPositionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPLockPositionField
    __del__ = lambda self: None
CTORATstpSPLockPositionField_swigregister = _sptraderapi.CTORATstpSPLockPositionField_swigregister
CTORATstpSPLockPositionField_swigregister(CTORATstpSPLockPositionField)




#########################################查询行权撤单############################################
class CTORATstpSPQryExerciseActionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPQryExerciseActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPQryExerciseActionField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryExerciseActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryExerciseActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPQryExerciseActionField_InvestorID_get, _sptraderapi.CTORATstpSPQryExerciseActionField_InvestorID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryExerciseActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryExerciseActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPQryExerciseActionField_ExchangeID_get, _sptraderapi.CTORATstpSPQryExerciseActionField_ExchangeID_set)

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPQryExerciseActionField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPQryExerciseActionField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPQryExerciseActionField_MarketID_get, _sptraderapi.CTORATstpSPQryExerciseActionField_MarketID_set)

	# 目前该字段存放的是上证所和深圳的股东代码。
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPQryExerciseActionField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPQryExerciseActionField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPQryExerciseActionField_ShareholderID_get, _sptraderapi.CTORATstpSPQryExerciseActionField_ShareholderID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPQryExerciseActionField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPQryExerciseActionField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPQryExerciseActionField_BusinessUnitID_get, _sptraderapi.CTORATstpSPQryExerciseActionField_BusinessUnitID_set)

	# 交易单元代码
    __swig_setmethods__["PbuID"] = _sptraderapi.CTORATstpSPQryExerciseActionField_PbuID_set
    __swig_getmethods__["PbuID"] = _sptraderapi.CTORATstpSPQryExerciseActionField_PbuID_get
    if _newclass:
        PbuID = _swig_property(_sptraderapi.CTORATstpSPQryExerciseActionField_PbuID_get, _sptraderapi.CTORATstpSPQryExerciseActionField_PbuID_set)

	# 全系统的唯一报单编号。
    __swig_setmethods__["CancelExerciseLocalID"] = _sptraderapi.CTORATstpSPQryExerciseActionField_CancelExerciseLocalID_set
    __swig_getmethods__["CancelExerciseLocalID"] = _sptraderapi.CTORATstpSPQryExerciseActionField_CancelExerciseLocalID_get
    if _newclass:
        CancelExerciseLocalID = _swig_property(_sptraderapi.CTORATstpSPQryExerciseActionField_CancelExerciseLocalID_get, _sptraderapi.CTORATstpSPQryExerciseActionField_CancelExerciseLocalID_set)

	# 本地报单编号
    __swig_setmethods__["ExerciseLocalID"] = _sptraderapi.CTORATstpSPQryExerciseActionField_ExerciseLocalID_set
    __swig_getmethods__["ExerciseLocalID"] = _sptraderapi.CTORATstpSPQryExerciseActionField_ExerciseLocalID_get
    if _newclass:
        ExerciseLocalID = _swig_property(_sptraderapi.CTORATstpSPQryExerciseActionField_ExerciseLocalID_get, _sptraderapi.CTORATstpSPQryExerciseActionField_ExerciseLocalID_set)

	# 长字符串附加信息
    __swig_setmethods__["BInfo"] = _sptraderapi.CTORATstpSPQryExerciseActionField_BInfo_set
    __swig_getmethods__["BInfo"] = _sptraderapi.CTORATstpSPQryExerciseActionField_BInfo_get
    if _newclass:
        BInfo = _swig_property(_sptraderapi.CTORATstpSPQryExerciseActionField_BInfo_get, _sptraderapi.CTORATstpSPQryExerciseActionField_BInfo_set)

	# 短字符串附加信息
    __swig_setmethods__["SInfo"] = _sptraderapi.CTORATstpSPQryExerciseActionField_SInfo_set
    __swig_getmethods__["SInfo"] = _sptraderapi.CTORATstpSPQryExerciseActionField_SInfo_get
    if _newclass:
        SInfo = _swig_property(_sptraderapi.CTORATstpSPQryExerciseActionField_SInfo_get, _sptraderapi.CTORATstpSPQryExerciseActionField_SInfo_set)

	# 整形附加信息
    __swig_setmethods__["IInfo"] = _sptraderapi.CTORATstpSPQryExerciseActionField_IInfo_set
    __swig_getmethods__["IInfo"] = _sptraderapi.CTORATstpSPQryExerciseActionField_IInfo_get
    if _newclass:
        IInfo = _swig_property(_sptraderapi.CTORATstpSPQryExerciseActionField_IInfo_get, _sptraderapi.CTORATstpSPQryExerciseActionField_IInfo_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPQryExerciseActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPQryExerciseActionField
    __del__ = lambda self: None
CTORATstpSPQryExerciseActionField_swigregister = _sptraderapi.CTORATstpSPQryExerciseActionField_swigregister
CTORATstpSPQryExerciseActionField_swigregister(CTORATstpSPQryExerciseActionField)




#########################################行权撤单############################################
class CTORATstpSPExerciseActionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPExerciseActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPExerciseActionField, name)
    __repr__ = _swig_repr

	# 交易日
    __swig_setmethods__["TradingDay"] = _sptraderapi.CTORATstpSPExerciseActionField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _sptraderapi.CTORATstpSPExerciseActionField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_sptraderapi.CTORATstpSPExerciseActionField_TradingDay_get, _sptraderapi.CTORATstpSPExerciseActionField_TradingDay_set)

	# 交易所营业部编码
    __swig_setmethods__["BranchID"] = _sptraderapi.CTORATstpSPExerciseActionField_BranchID_set
    __swig_getmethods__["BranchID"] = _sptraderapi.CTORATstpSPExerciseActionField_BranchID_get
    if _newclass:
        BranchID = _swig_property(_sptraderapi.CTORATstpSPExerciseActionField_BranchID_get, _sptraderapi.CTORATstpSPExerciseActionField_BranchID_set)

	# 交易所交易单元代码
    __swig_setmethods__["PbuID"] = _sptraderapi.CTORATstpSPExerciseActionField_PbuID_set
    __swig_getmethods__["PbuID"] = _sptraderapi.CTORATstpSPExerciseActionField_PbuID_get
    if _newclass:
        PbuID = _swig_property(_sptraderapi.CTORATstpSPExerciseActionField_PbuID_get, _sptraderapi.CTORATstpSPExerciseActionField_PbuID_set)

	# 本地行权撤单编号
    __swig_setmethods__["CancelExerciseLocalID"] = _sptraderapi.CTORATstpSPExerciseActionField_CancelExerciseLocalID_set
    __swig_getmethods__["CancelExerciseLocalID"] = _sptraderapi.CTORATstpSPExerciseActionField_CancelExerciseLocalID_get
    if _newclass:
        CancelExerciseLocalID = _swig_property(_sptraderapi.CTORATstpSPExerciseActionField_CancelExerciseLocalID_get, _sptraderapi.CTORATstpSPExerciseActionField_CancelExerciseLocalID_set)

	# 撤单前置编号
    __swig_setmethods__["ActionFrontID"] = _sptraderapi.CTORATstpSPExerciseActionField_ActionFrontID_set
    __swig_getmethods__["ActionFrontID"] = _sptraderapi.CTORATstpSPExerciseActionField_ActionFrontID_get
    if _newclass:
        ActionFrontID = _swig_property(_sptraderapi.CTORATstpSPExerciseActionField_ActionFrontID_get, _sptraderapi.CTORATstpSPExerciseActionField_ActionFrontID_set)

	# 撤单会话编号
    __swig_setmethods__["ActionSessionID"] = _sptraderapi.CTORATstpSPExerciseActionField_ActionSessionID_set
    __swig_getmethods__["ActionSessionID"] = _sptraderapi.CTORATstpSPExerciseActionField_ActionSessionID_get
    if _newclass:
        ActionSessionID = _swig_property(_sptraderapi.CTORATstpSPExerciseActionField_ActionSessionID_get, _sptraderapi.CTORATstpSPExerciseActionField_ActionSessionID_set)

	# 行权撤单引用
    __swig_setmethods__["ExerciseActionRef"] = _sptraderapi.CTORATstpSPExerciseActionField_ExerciseActionRef_set
    __swig_getmethods__["ExerciseActionRef"] = _sptraderapi.CTORATstpSPExerciseActionField_ExerciseActionRef_get
    if _newclass:
        ExerciseActionRef = _swig_property(_sptraderapi.CTORATstpSPExerciseActionField_ExerciseActionRef_get, _sptraderapi.CTORATstpSPExerciseActionField_ExerciseActionRef_set)

	# 被撤本地行权报单编号
    __swig_setmethods__["ExerciseLocalID"] = _sptraderapi.CTORATstpSPExerciseActionField_ExerciseLocalID_set
    __swig_getmethods__["ExerciseLocalID"] = _sptraderapi.CTORATstpSPExerciseActionField_ExerciseLocalID_get
    if _newclass:
        ExerciseLocalID = _swig_property(_sptraderapi.CTORATstpSPExerciseActionField_ExerciseLocalID_get, _sptraderapi.CTORATstpSPExerciseActionField_ExerciseLocalID_set)

	# 被撤系统行权报单编号
    __swig_setmethods__["ExerciseSysID"] = _sptraderapi.CTORATstpSPExerciseActionField_ExerciseSysID_set
    __swig_getmethods__["ExerciseSysID"] = _sptraderapi.CTORATstpSPExerciseActionField_ExerciseSysID_get
    if _newclass:
        ExerciseSysID = _swig_property(_sptraderapi.CTORATstpSPExerciseActionField_ExerciseSysID_get, _sptraderapi.CTORATstpSPExerciseActionField_ExerciseSysID_set)

	# 前置编号
    __swig_setmethods__["FrontID"] = _sptraderapi.CTORATstpSPExerciseActionField_FrontID_set
    __swig_getmethods__["FrontID"] = _sptraderapi.CTORATstpSPExerciseActionField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_sptraderapi.CTORATstpSPExerciseActionField_FrontID_get, _sptraderapi.CTORATstpSPExerciseActionField_FrontID_set)

	# 会话编号
    __swig_setmethods__["SessionID"] = _sptraderapi.CTORATstpSPExerciseActionField_SessionID_set
    __swig_getmethods__["SessionID"] = _sptraderapi.CTORATstpSPExerciseActionField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_sptraderapi.CTORATstpSPExerciseActionField_SessionID_get, _sptraderapi.CTORATstpSPExerciseActionField_SessionID_set)

	# 行权引用
    __swig_setmethods__["ExerciseRef"] = _sptraderapi.CTORATstpSPExerciseActionField_ExerciseRef_set
    __swig_getmethods__["ExerciseRef"] = _sptraderapi.CTORATstpSPExerciseActionField_ExerciseRef_get
    if _newclass:
        ExerciseRef = _swig_property(_sptraderapi.CTORATstpSPExerciseActionField_ExerciseRef_get, _sptraderapi.CTORATstpSPExerciseActionField_ExerciseRef_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPExerciseActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPExerciseActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPExerciseActionField_InvestorID_get, _sptraderapi.CTORATstpSPExerciseActionField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPExerciseActionField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPExerciseActionField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPExerciseActionField_BusinessUnitID_get, _sptraderapi.CTORATstpSPExerciseActionField_BusinessUnitID_set)

	# 市场代码
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPExerciseActionField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPExerciseActionField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPExerciseActionField_MarketID_get, _sptraderapi.CTORATstpSPExerciseActionField_MarketID_set)

	# 股东账户代码
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPExerciseActionField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPExerciseActionField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPExerciseActionField_ShareholderID_get, _sptraderapi.CTORATstpSPExerciseActionField_ShareholderID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPExerciseActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPExerciseActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPExerciseActionField_ExchangeID_get, _sptraderapi.CTORATstpSPExerciseActionField_ExchangeID_set)

	# 合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPExerciseActionField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPExerciseActionField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPExerciseActionField_SecurityID_get, _sptraderapi.CTORATstpSPExerciseActionField_SecurityID_set)

	# 委托操作标志
    __swig_setmethods__["ExerciseActionFlag"] = _sptraderapi.CTORATstpSPExerciseActionField_ExerciseActionFlag_set
    __swig_getmethods__["ExerciseActionFlag"] = _sptraderapi.CTORATstpSPExerciseActionField_ExerciseActionFlag_get
    if _newclass:
        ExerciseActionFlag = _swig_property(_sptraderapi.CTORATstpSPExerciseActionField_ExerciseActionFlag_get, _sptraderapi.CTORATstpSPExerciseActionField_ExerciseActionFlag_set)

	# 撤单状态
    __swig_setmethods__["CancelOrderStatus"] = _sptraderapi.CTORATstpSPExerciseActionField_CancelOrderStatus_set
    __swig_getmethods__["CancelOrderStatus"] = _sptraderapi.CTORATstpSPExerciseActionField_CancelOrderStatus_get
    if _newclass:
        CancelOrderStatus = _swig_property(_sptraderapi.CTORATstpSPExerciseActionField_CancelOrderStatus_get, _sptraderapi.CTORATstpSPExerciseActionField_CancelOrderStatus_set)

	# 撤单数量
    __swig_setmethods__["VolumeCanceled"] = _sptraderapi.CTORATstpSPExerciseActionField_VolumeCanceled_set
    __swig_getmethods__["VolumeCanceled"] = _sptraderapi.CTORATstpSPExerciseActionField_VolumeCanceled_get
    if _newclass:
        VolumeCanceled = _swig_property(_sptraderapi.CTORATstpSPExerciseActionField_VolumeCanceled_get, _sptraderapi.CTORATstpSPExerciseActionField_VolumeCanceled_set)

	# 状态信息
    __swig_setmethods__["StatusMsg"] = _sptraderapi.CTORATstpSPExerciseActionField_StatusMsg_set
    __swig_getmethods__["StatusMsg"] = _sptraderapi.CTORATstpSPExerciseActionField_StatusMsg_get
    if _newclass:
        StatusMsg = _swig_property(_sptraderapi.CTORATstpSPExerciseActionField_StatusMsg_get, _sptraderapi.CTORATstpSPExerciseActionField_StatusMsg_set)

	# 系统错误代码
    __swig_setmethods__["ErrorID"] = _sptraderapi.CTORATstpSPExerciseActionField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _sptraderapi.CTORATstpSPExerciseActionField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_sptraderapi.CTORATstpSPExerciseActionField_ErrorID_get, _sptraderapi.CTORATstpSPExerciseActionField_ErrorID_set)

	# 报单申报用户
    __swig_setmethods__["InsertUserID"] = _sptraderapi.CTORATstpSPExerciseActionField_InsertUserID_set
    __swig_getmethods__["InsertUserID"] = _sptraderapi.CTORATstpSPExerciseActionField_InsertUserID_get
    if _newclass:
        InsertUserID = _swig_property(_sptraderapi.CTORATstpSPExerciseActionField_InsertUserID_get, _sptraderapi.CTORATstpSPExerciseActionField_InsertUserID_set)

	# 操作日期
    __swig_setmethods__["InsertDate"] = _sptraderapi.CTORATstpSPExerciseActionField_InsertDate_set
    __swig_getmethods__["InsertDate"] = _sptraderapi.CTORATstpSPExerciseActionField_InsertDate_get
    if _newclass:
        InsertDate = _swig_property(_sptraderapi.CTORATstpSPExerciseActionField_InsertDate_get, _sptraderapi.CTORATstpSPExerciseActionField_InsertDate_set)

	# 操作时间
    __swig_setmethods__["InsertTime"] = _sptraderapi.CTORATstpSPExerciseActionField_InsertTime_set
    __swig_getmethods__["InsertTime"] = _sptraderapi.CTORATstpSPExerciseActionField_InsertTime_get
    if _newclass:
        InsertTime = _swig_property(_sptraderapi.CTORATstpSPExerciseActionField_InsertTime_get, _sptraderapi.CTORATstpSPExerciseActionField_InsertTime_set)

	# 申报时间(毫秒)
    __swig_setmethods__["InsertMillisec"] = _sptraderapi.CTORATstpSPExerciseActionField_InsertMillisec_set
    __swig_getmethods__["InsertMillisec"] = _sptraderapi.CTORATstpSPExerciseActionField_InsertMillisec_get
    if _newclass:
        InsertMillisec = _swig_property(_sptraderapi.CTORATstpSPExerciseActionField_InsertMillisec_get, _sptraderapi.CTORATstpSPExerciseActionField_InsertMillisec_set)

	# IP地址
    __swig_setmethods__["IPAddress"] = _sptraderapi.CTORATstpSPExerciseActionField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _sptraderapi.CTORATstpSPExerciseActionField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_sptraderapi.CTORATstpSPExerciseActionField_IPAddress_get, _sptraderapi.CTORATstpSPExerciseActionField_IPAddress_set)

	# Mac地址
    __swig_setmethods__["MacAddress"] = _sptraderapi.CTORATstpSPExerciseActionField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _sptraderapi.CTORATstpSPExerciseActionField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_sptraderapi.CTORATstpSPExerciseActionField_MacAddress_get, _sptraderapi.CTORATstpSPExerciseActionField_MacAddress_set)

	# 请求编号
    __swig_setmethods__["RequestID"] = _sptraderapi.CTORATstpSPExerciseActionField_RequestID_set
    __swig_getmethods__["RequestID"] = _sptraderapi.CTORATstpSPExerciseActionField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_sptraderapi.CTORATstpSPExerciseActionField_RequestID_get, _sptraderapi.CTORATstpSPExerciseActionField_RequestID_set)

	# 长字符串附加信息
    __swig_setmethods__["BInfo"] = _sptraderapi.CTORATstpSPExerciseActionField_BInfo_set
    __swig_getmethods__["BInfo"] = _sptraderapi.CTORATstpSPExerciseActionField_BInfo_get
    if _newclass:
        BInfo = _swig_property(_sptraderapi.CTORATstpSPExerciseActionField_BInfo_get, _sptraderapi.CTORATstpSPExerciseActionField_BInfo_set)

	# 短字符串附加信息
    __swig_setmethods__["SInfo"] = _sptraderapi.CTORATstpSPExerciseActionField_SInfo_set
    __swig_getmethods__["SInfo"] = _sptraderapi.CTORATstpSPExerciseActionField_SInfo_get
    if _newclass:
        SInfo = _swig_property(_sptraderapi.CTORATstpSPExerciseActionField_SInfo_get, _sptraderapi.CTORATstpSPExerciseActionField_SInfo_set)

	# 整形附加信息
    __swig_setmethods__["IInfo"] = _sptraderapi.CTORATstpSPExerciseActionField_IInfo_set
    __swig_getmethods__["IInfo"] = _sptraderapi.CTORATstpSPExerciseActionField_IInfo_get
    if _newclass:
        IInfo = _swig_property(_sptraderapi.CTORATstpSPExerciseActionField_IInfo_get, _sptraderapi.CTORATstpSPExerciseActionField_IInfo_set)

	# 委托方式
    __swig_setmethods__["Operway"] = _sptraderapi.CTORATstpSPExerciseActionField_Operway_set
    __swig_getmethods__["Operway"] = _sptraderapi.CTORATstpSPExerciseActionField_Operway_get
    if _newclass:
        Operway = _swig_property(_sptraderapi.CTORATstpSPExerciseActionField_Operway_get, _sptraderapi.CTORATstpSPExerciseActionField_Operway_set)

	# 硬盘序列号
    __swig_setmethods__["HDSerial"] = _sptraderapi.CTORATstpSPExerciseActionField_HDSerial_set
    __swig_getmethods__["HDSerial"] = _sptraderapi.CTORATstpSPExerciseActionField_HDSerial_get
    if _newclass:
        HDSerial = _swig_property(_sptraderapi.CTORATstpSPExerciseActionField_HDSerial_get, _sptraderapi.CTORATstpSPExerciseActionField_HDSerial_set)

	# 移动设备手机号
    __swig_setmethods__["Mobile"] = _sptraderapi.CTORATstpSPExerciseActionField_Mobile_set
    __swig_getmethods__["Mobile"] = _sptraderapi.CTORATstpSPExerciseActionField_Mobile_get
    if _newclass:
        Mobile = _swig_property(_sptraderapi.CTORATstpSPExerciseActionField_Mobile_get, _sptraderapi.CTORATstpSPExerciseActionField_Mobile_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPExerciseActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPExerciseActionField
    __del__ = lambda self: None
CTORATstpSPExerciseActionField_swigregister = _sptraderapi.CTORATstpSPExerciseActionField_swigregister
CTORATstpSPExerciseActionField_swigregister(CTORATstpSPExerciseActionField)




#########################################查询锁定撤单############################################
class CTORATstpSPQryLockActionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPQryLockActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPQryLockActionField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryLockActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryLockActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPQryLockActionField_InvestorID_get, _sptraderapi.CTORATstpSPQryLockActionField_InvestorID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryLockActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryLockActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPQryLockActionField_ExchangeID_get, _sptraderapi.CTORATstpSPQryLockActionField_ExchangeID_set)

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPQryLockActionField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPQryLockActionField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPQryLockActionField_MarketID_get, _sptraderapi.CTORATstpSPQryLockActionField_MarketID_set)

	# 目前该字段存放的是上证所和深圳的股东代码。
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPQryLockActionField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPQryLockActionField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPQryLockActionField_ShareholderID_get, _sptraderapi.CTORATstpSPQryLockActionField_ShareholderID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPQryLockActionField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPQryLockActionField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPQryLockActionField_BusinessUnitID_get, _sptraderapi.CTORATstpSPQryLockActionField_BusinessUnitID_set)

	# 交易单元代码
    __swig_setmethods__["PbuID"] = _sptraderapi.CTORATstpSPQryLockActionField_PbuID_set
    __swig_getmethods__["PbuID"] = _sptraderapi.CTORATstpSPQryLockActionField_PbuID_get
    if _newclass:
        PbuID = _swig_property(_sptraderapi.CTORATstpSPQryLockActionField_PbuID_get, _sptraderapi.CTORATstpSPQryLockActionField_PbuID_set)

	# 全系统的唯一报单编号。
    __swig_setmethods__["CancelLockLocalID"] = _sptraderapi.CTORATstpSPQryLockActionField_CancelLockLocalID_set
    __swig_getmethods__["CancelLockLocalID"] = _sptraderapi.CTORATstpSPQryLockActionField_CancelLockLocalID_get
    if _newclass:
        CancelLockLocalID = _swig_property(_sptraderapi.CTORATstpSPQryLockActionField_CancelLockLocalID_get, _sptraderapi.CTORATstpSPQryLockActionField_CancelLockLocalID_set)

	# 本地报单顺序号
    __swig_setmethods__["LockLocalID"] = _sptraderapi.CTORATstpSPQryLockActionField_LockLocalID_set
    __swig_getmethods__["LockLocalID"] = _sptraderapi.CTORATstpSPQryLockActionField_LockLocalID_get
    if _newclass:
        LockLocalID = _swig_property(_sptraderapi.CTORATstpSPQryLockActionField_LockLocalID_get, _sptraderapi.CTORATstpSPQryLockActionField_LockLocalID_set)

	# 长字符串附加信息
    __swig_setmethods__["BInfo"] = _sptraderapi.CTORATstpSPQryLockActionField_BInfo_set
    __swig_getmethods__["BInfo"] = _sptraderapi.CTORATstpSPQryLockActionField_BInfo_get
    if _newclass:
        BInfo = _swig_property(_sptraderapi.CTORATstpSPQryLockActionField_BInfo_get, _sptraderapi.CTORATstpSPQryLockActionField_BInfo_set)

	# 短字符串附加信息
    __swig_setmethods__["SInfo"] = _sptraderapi.CTORATstpSPQryLockActionField_SInfo_set
    __swig_getmethods__["SInfo"] = _sptraderapi.CTORATstpSPQryLockActionField_SInfo_get
    if _newclass:
        SInfo = _swig_property(_sptraderapi.CTORATstpSPQryLockActionField_SInfo_get, _sptraderapi.CTORATstpSPQryLockActionField_SInfo_set)

	# 整形附加信息
    __swig_setmethods__["IInfo"] = _sptraderapi.CTORATstpSPQryLockActionField_IInfo_set
    __swig_getmethods__["IInfo"] = _sptraderapi.CTORATstpSPQryLockActionField_IInfo_get
    if _newclass:
        IInfo = _swig_property(_sptraderapi.CTORATstpSPQryLockActionField_IInfo_get, _sptraderapi.CTORATstpSPQryLockActionField_IInfo_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPQryLockActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPQryLockActionField
    __del__ = lambda self: None
CTORATstpSPQryLockActionField_swigregister = _sptraderapi.CTORATstpSPQryLockActionField_swigregister
CTORATstpSPQryLockActionField_swigregister(CTORATstpSPQryLockActionField)




#########################################锁定撤单############################################
class CTORATstpSPLockActionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPLockActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPLockActionField, name)
    __repr__ = _swig_repr

	# 交易日
    __swig_setmethods__["TradingDay"] = _sptraderapi.CTORATstpSPLockActionField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _sptraderapi.CTORATstpSPLockActionField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_sptraderapi.CTORATstpSPLockActionField_TradingDay_get, _sptraderapi.CTORATstpSPLockActionField_TradingDay_set)

	# 交易所营业部编码
    __swig_setmethods__["BranchID"] = _sptraderapi.CTORATstpSPLockActionField_BranchID_set
    __swig_getmethods__["BranchID"] = _sptraderapi.CTORATstpSPLockActionField_BranchID_get
    if _newclass:
        BranchID = _swig_property(_sptraderapi.CTORATstpSPLockActionField_BranchID_get, _sptraderapi.CTORATstpSPLockActionField_BranchID_set)

	# 交易所交易单元代码
    __swig_setmethods__["PbuID"] = _sptraderapi.CTORATstpSPLockActionField_PbuID_set
    __swig_getmethods__["PbuID"] = _sptraderapi.CTORATstpSPLockActionField_PbuID_get
    if _newclass:
        PbuID = _swig_property(_sptraderapi.CTORATstpSPLockActionField_PbuID_get, _sptraderapi.CTORATstpSPLockActionField_PbuID_set)

	# 本地锁定撤单编号
    __swig_setmethods__["CancelLockLocalID"] = _sptraderapi.CTORATstpSPLockActionField_CancelLockLocalID_set
    __swig_getmethods__["CancelLockLocalID"] = _sptraderapi.CTORATstpSPLockActionField_CancelLockLocalID_get
    if _newclass:
        CancelLockLocalID = _swig_property(_sptraderapi.CTORATstpSPLockActionField_CancelLockLocalID_get, _sptraderapi.CTORATstpSPLockActionField_CancelLockLocalID_set)

	# 撤单前置编号
    __swig_setmethods__["ActionFrontID"] = _sptraderapi.CTORATstpSPLockActionField_ActionFrontID_set
    __swig_getmethods__["ActionFrontID"] = _sptraderapi.CTORATstpSPLockActionField_ActionFrontID_get
    if _newclass:
        ActionFrontID = _swig_property(_sptraderapi.CTORATstpSPLockActionField_ActionFrontID_get, _sptraderapi.CTORATstpSPLockActionField_ActionFrontID_set)

	# 撤单会话编号
    __swig_setmethods__["ActionSessionID"] = _sptraderapi.CTORATstpSPLockActionField_ActionSessionID_set
    __swig_getmethods__["ActionSessionID"] = _sptraderapi.CTORATstpSPLockActionField_ActionSessionID_get
    if _newclass:
        ActionSessionID = _swig_property(_sptraderapi.CTORATstpSPLockActionField_ActionSessionID_get, _sptraderapi.CTORATstpSPLockActionField_ActionSessionID_set)

	# 锁定撤单引用
    __swig_setmethods__["LockActionRef"] = _sptraderapi.CTORATstpSPLockActionField_LockActionRef_set
    __swig_getmethods__["LockActionRef"] = _sptraderapi.CTORATstpSPLockActionField_LockActionRef_get
    if _newclass:
        LockActionRef = _swig_property(_sptraderapi.CTORATstpSPLockActionField_LockActionRef_get, _sptraderapi.CTORATstpSPLockActionField_LockActionRef_set)

	# 被撤本地锁定报单编号
    __swig_setmethods__["LockLocalID"] = _sptraderapi.CTORATstpSPLockActionField_LockLocalID_set
    __swig_getmethods__["LockLocalID"] = _sptraderapi.CTORATstpSPLockActionField_LockLocalID_get
    if _newclass:
        LockLocalID = _swig_property(_sptraderapi.CTORATstpSPLockActionField_LockLocalID_get, _sptraderapi.CTORATstpSPLockActionField_LockLocalID_set)

	# 被撤系统锁定报单编号
    __swig_setmethods__["LockSysID"] = _sptraderapi.CTORATstpSPLockActionField_LockSysID_set
    __swig_getmethods__["LockSysID"] = _sptraderapi.CTORATstpSPLockActionField_LockSysID_get
    if _newclass:
        LockSysID = _swig_property(_sptraderapi.CTORATstpSPLockActionField_LockSysID_get, _sptraderapi.CTORATstpSPLockActionField_LockSysID_set)

	# 前置编号
    __swig_setmethods__["FrontID"] = _sptraderapi.CTORATstpSPLockActionField_FrontID_set
    __swig_getmethods__["FrontID"] = _sptraderapi.CTORATstpSPLockActionField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_sptraderapi.CTORATstpSPLockActionField_FrontID_get, _sptraderapi.CTORATstpSPLockActionField_FrontID_set)

	# 会话编号
    __swig_setmethods__["SessionID"] = _sptraderapi.CTORATstpSPLockActionField_SessionID_set
    __swig_getmethods__["SessionID"] = _sptraderapi.CTORATstpSPLockActionField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_sptraderapi.CTORATstpSPLockActionField_SessionID_get, _sptraderapi.CTORATstpSPLockActionField_SessionID_set)

	# 锁定引用
    __swig_setmethods__["LockRef"] = _sptraderapi.CTORATstpSPLockActionField_LockRef_set
    __swig_getmethods__["LockRef"] = _sptraderapi.CTORATstpSPLockActionField_LockRef_get
    if _newclass:
        LockRef = _swig_property(_sptraderapi.CTORATstpSPLockActionField_LockRef_get, _sptraderapi.CTORATstpSPLockActionField_LockRef_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPLockActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPLockActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPLockActionField_InvestorID_get, _sptraderapi.CTORATstpSPLockActionField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPLockActionField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPLockActionField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPLockActionField_BusinessUnitID_get, _sptraderapi.CTORATstpSPLockActionField_BusinessUnitID_set)

	# 市场代码
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPLockActionField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPLockActionField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPLockActionField_MarketID_get, _sptraderapi.CTORATstpSPLockActionField_MarketID_set)

	# 股东账户代码
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPLockActionField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPLockActionField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPLockActionField_ShareholderID_get, _sptraderapi.CTORATstpSPLockActionField_ShareholderID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPLockActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPLockActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPLockActionField_ExchangeID_get, _sptraderapi.CTORATstpSPLockActionField_ExchangeID_set)

	# 合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPLockActionField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPLockActionField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPLockActionField_SecurityID_get, _sptraderapi.CTORATstpSPLockActionField_SecurityID_set)

	# 锁定操作标志
    __swig_setmethods__["LockActionFlag"] = _sptraderapi.CTORATstpSPLockActionField_LockActionFlag_set
    __swig_getmethods__["LockActionFlag"] = _sptraderapi.CTORATstpSPLockActionField_LockActionFlag_get
    if _newclass:
        LockActionFlag = _swig_property(_sptraderapi.CTORATstpSPLockActionField_LockActionFlag_get, _sptraderapi.CTORATstpSPLockActionField_LockActionFlag_set)

	# 撤单状态
    __swig_setmethods__["CancelOrderStatus"] = _sptraderapi.CTORATstpSPLockActionField_CancelOrderStatus_set
    __swig_getmethods__["CancelOrderStatus"] = _sptraderapi.CTORATstpSPLockActionField_CancelOrderStatus_get
    if _newclass:
        CancelOrderStatus = _swig_property(_sptraderapi.CTORATstpSPLockActionField_CancelOrderStatus_get, _sptraderapi.CTORATstpSPLockActionField_CancelOrderStatus_set)

	# 撤单数量
    __swig_setmethods__["VolumeCanceled"] = _sptraderapi.CTORATstpSPLockActionField_VolumeCanceled_set
    __swig_getmethods__["VolumeCanceled"] = _sptraderapi.CTORATstpSPLockActionField_VolumeCanceled_get
    if _newclass:
        VolumeCanceled = _swig_property(_sptraderapi.CTORATstpSPLockActionField_VolumeCanceled_get, _sptraderapi.CTORATstpSPLockActionField_VolumeCanceled_set)

	# 状态信息
    __swig_setmethods__["StatusMsg"] = _sptraderapi.CTORATstpSPLockActionField_StatusMsg_set
    __swig_getmethods__["StatusMsg"] = _sptraderapi.CTORATstpSPLockActionField_StatusMsg_get
    if _newclass:
        StatusMsg = _swig_property(_sptraderapi.CTORATstpSPLockActionField_StatusMsg_get, _sptraderapi.CTORATstpSPLockActionField_StatusMsg_set)

	# 系统错误代码
    __swig_setmethods__["ErrorID"] = _sptraderapi.CTORATstpSPLockActionField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _sptraderapi.CTORATstpSPLockActionField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_sptraderapi.CTORATstpSPLockActionField_ErrorID_get, _sptraderapi.CTORATstpSPLockActionField_ErrorID_set)

	# 报单申报用户
    __swig_setmethods__["InsertUserID"] = _sptraderapi.CTORATstpSPLockActionField_InsertUserID_set
    __swig_getmethods__["InsertUserID"] = _sptraderapi.CTORATstpSPLockActionField_InsertUserID_get
    if _newclass:
        InsertUserID = _swig_property(_sptraderapi.CTORATstpSPLockActionField_InsertUserID_get, _sptraderapi.CTORATstpSPLockActionField_InsertUserID_set)

	# 操作日期
    __swig_setmethods__["InsertDate"] = _sptraderapi.CTORATstpSPLockActionField_InsertDate_set
    __swig_getmethods__["InsertDate"] = _sptraderapi.CTORATstpSPLockActionField_InsertDate_get
    if _newclass:
        InsertDate = _swig_property(_sptraderapi.CTORATstpSPLockActionField_InsertDate_get, _sptraderapi.CTORATstpSPLockActionField_InsertDate_set)

	# 操作时间
    __swig_setmethods__["InsertTime"] = _sptraderapi.CTORATstpSPLockActionField_InsertTime_set
    __swig_getmethods__["InsertTime"] = _sptraderapi.CTORATstpSPLockActionField_InsertTime_get
    if _newclass:
        InsertTime = _swig_property(_sptraderapi.CTORATstpSPLockActionField_InsertTime_get, _sptraderapi.CTORATstpSPLockActionField_InsertTime_set)

	# 申报时间(毫秒)
    __swig_setmethods__["InsertMillisec"] = _sptraderapi.CTORATstpSPLockActionField_InsertMillisec_set
    __swig_getmethods__["InsertMillisec"] = _sptraderapi.CTORATstpSPLockActionField_InsertMillisec_get
    if _newclass:
        InsertMillisec = _swig_property(_sptraderapi.CTORATstpSPLockActionField_InsertMillisec_get, _sptraderapi.CTORATstpSPLockActionField_InsertMillisec_set)

	# IP地址
    __swig_setmethods__["IPAddress"] = _sptraderapi.CTORATstpSPLockActionField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _sptraderapi.CTORATstpSPLockActionField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_sptraderapi.CTORATstpSPLockActionField_IPAddress_get, _sptraderapi.CTORATstpSPLockActionField_IPAddress_set)

	# Mac地址
    __swig_setmethods__["MacAddress"] = _sptraderapi.CTORATstpSPLockActionField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _sptraderapi.CTORATstpSPLockActionField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_sptraderapi.CTORATstpSPLockActionField_MacAddress_get, _sptraderapi.CTORATstpSPLockActionField_MacAddress_set)

	# 请求编号
    __swig_setmethods__["RequestID"] = _sptraderapi.CTORATstpSPLockActionField_RequestID_set
    __swig_getmethods__["RequestID"] = _sptraderapi.CTORATstpSPLockActionField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_sptraderapi.CTORATstpSPLockActionField_RequestID_get, _sptraderapi.CTORATstpSPLockActionField_RequestID_set)

	# 长字符串附加信息
    __swig_setmethods__["BInfo"] = _sptraderapi.CTORATstpSPLockActionField_BInfo_set
    __swig_getmethods__["BInfo"] = _sptraderapi.CTORATstpSPLockActionField_BInfo_get
    if _newclass:
        BInfo = _swig_property(_sptraderapi.CTORATstpSPLockActionField_BInfo_get, _sptraderapi.CTORATstpSPLockActionField_BInfo_set)

	# 短字符串附加信息
    __swig_setmethods__["SInfo"] = _sptraderapi.CTORATstpSPLockActionField_SInfo_set
    __swig_getmethods__["SInfo"] = _sptraderapi.CTORATstpSPLockActionField_SInfo_get
    if _newclass:
        SInfo = _swig_property(_sptraderapi.CTORATstpSPLockActionField_SInfo_get, _sptraderapi.CTORATstpSPLockActionField_SInfo_set)

	# 整形附加信息
    __swig_setmethods__["IInfo"] = _sptraderapi.CTORATstpSPLockActionField_IInfo_set
    __swig_getmethods__["IInfo"] = _sptraderapi.CTORATstpSPLockActionField_IInfo_get
    if _newclass:
        IInfo = _swig_property(_sptraderapi.CTORATstpSPLockActionField_IInfo_get, _sptraderapi.CTORATstpSPLockActionField_IInfo_set)

	# 委托方式
    __swig_setmethods__["Operway"] = _sptraderapi.CTORATstpSPLockActionField_Operway_set
    __swig_getmethods__["Operway"] = _sptraderapi.CTORATstpSPLockActionField_Operway_get
    if _newclass:
        Operway = _swig_property(_sptraderapi.CTORATstpSPLockActionField_Operway_get, _sptraderapi.CTORATstpSPLockActionField_Operway_set)

	# 硬盘序列号
    __swig_setmethods__["HDSerial"] = _sptraderapi.CTORATstpSPLockActionField_HDSerial_set
    __swig_getmethods__["HDSerial"] = _sptraderapi.CTORATstpSPLockActionField_HDSerial_get
    if _newclass:
        HDSerial = _swig_property(_sptraderapi.CTORATstpSPLockActionField_HDSerial_get, _sptraderapi.CTORATstpSPLockActionField_HDSerial_set)

	# 移动设备手机号
    __swig_setmethods__["Mobile"] = _sptraderapi.CTORATstpSPLockActionField_Mobile_set
    __swig_getmethods__["Mobile"] = _sptraderapi.CTORATstpSPLockActionField_Mobile_get
    if _newclass:
        Mobile = _swig_property(_sptraderapi.CTORATstpSPLockActionField_Mobile_get, _sptraderapi.CTORATstpSPLockActionField_Mobile_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPLockActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPLockActionField
    __del__ = lambda self: None
CTORATstpSPLockActionField_swigregister = _sptraderapi.CTORATstpSPLockActionField_swigregister
CTORATstpSPLockActionField_swigregister(CTORATstpSPLockActionField)




#########################################查询持仓转移流水############################################
class CTORATstpSPQryStockPositionTransferDetailField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPQryStockPositionTransferDetailField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPQryStockPositionTransferDetailField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryStockPositionTransferDetailField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryStockPositionTransferDetailField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPQryStockPositionTransferDetailField_InvestorID_get, _sptraderapi.CTORATstpSPQryStockPositionTransferDetailField_InvestorID_set)

	# 目前该字段存放的是上证所和深圳的股东代码。
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPQryStockPositionTransferDetailField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPQryStockPositionTransferDetailField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPQryStockPositionTransferDetailField_ShareholderID_get, _sptraderapi.CTORATstpSPQryStockPositionTransferDetailField_ShareholderID_set)

	# 证券代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPQryStockPositionTransferDetailField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPQryStockPositionTransferDetailField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPQryStockPositionTransferDetailField_SecurityID_get, _sptraderapi.CTORATstpSPQryStockPositionTransferDetailField_SecurityID_set)

	# 个股期权标的现货转移原因
    __swig_setmethods__["SPStockTransferReason"] = _sptraderapi.CTORATstpSPQryStockPositionTransferDetailField_SPStockTransferReason_set
    __swig_getmethods__["SPStockTransferReason"] = _sptraderapi.CTORATstpSPQryStockPositionTransferDetailField_SPStockTransferReason_get
    if _newclass:
        SPStockTransferReason = _swig_property(_sptraderapi.CTORATstpSPQryStockPositionTransferDetailField_SPStockTransferReason_get, _sptraderapi.CTORATstpSPQryStockPositionTransferDetailField_SPStockTransferReason_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPQryStockPositionTransferDetailField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPQryStockPositionTransferDetailField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPQryStockPositionTransferDetailField_BusinessUnitID_get, _sptraderapi.CTORATstpSPQryStockPositionTransferDetailField_BusinessUnitID_set)

	# 转移持仓类型
    __swig_setmethods__["TransferPositionType"] = _sptraderapi.CTORATstpSPQryStockPositionTransferDetailField_TransferPositionType_set
    __swig_getmethods__["TransferPositionType"] = _sptraderapi.CTORATstpSPQryStockPositionTransferDetailField_TransferPositionType_get
    if _newclass:
        TransferPositionType = _swig_property(_sptraderapi.CTORATstpSPQryStockPositionTransferDetailField_TransferPositionType_get, _sptraderapi.CTORATstpSPQryStockPositionTransferDetailField_TransferPositionType_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPQryStockPositionTransferDetailField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPQryStockPositionTransferDetailField
    __del__ = lambda self: None
CTORATstpSPQryStockPositionTransferDetailField_swigregister = _sptraderapi.CTORATstpSPQryStockPositionTransferDetailField_swigregister
CTORATstpSPQryStockPositionTransferDetailField_swigregister(CTORATstpSPQryStockPositionTransferDetailField)




#########################################持仓转移流水############################################
class CTORATstpSPStockPositionTransferDetailField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPStockPositionTransferDetailField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPStockPositionTransferDetailField, name)
    __repr__ = _swig_repr

	# 流水号
    __swig_setmethods__["PositionSerial"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_PositionSerial_set
    __swig_getmethods__["PositionSerial"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_PositionSerial_get
    if _newclass:
        PositionSerial = _swig_property(_sptraderapi.CTORATstpSPStockPositionTransferDetailField_PositionSerial_get, _sptraderapi.CTORATstpSPStockPositionTransferDetailField_PositionSerial_set)

	# 申请流水号
    __swig_setmethods__["ApplySerial"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_ApplySerial_set
    __swig_getmethods__["ApplySerial"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_ApplySerial_get
    if _newclass:
        ApplySerial = _swig_property(_sptraderapi.CTORATstpSPStockPositionTransferDetailField_ApplySerial_get, _sptraderapi.CTORATstpSPStockPositionTransferDetailField_ApplySerial_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPStockPositionTransferDetailField_InvestorID_get, _sptraderapi.CTORATstpSPStockPositionTransferDetailField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPStockPositionTransferDetailField_BusinessUnitID_get, _sptraderapi.CTORATstpSPStockPositionTransferDetailField_BusinessUnitID_set)

	# 交易账户代码
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPStockPositionTransferDetailField_ShareholderID_get, _sptraderapi.CTORATstpSPStockPositionTransferDetailField_ShareholderID_set)

	# 现货系统投资者代码
    __swig_setmethods__["OuterInvestorID"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_OuterInvestorID_set
    __swig_getmethods__["OuterInvestorID"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_OuterInvestorID_get
    if _newclass:
        OuterInvestorID = _swig_property(_sptraderapi.CTORATstpSPStockPositionTransferDetailField_OuterInvestorID_get, _sptraderapi.CTORATstpSPStockPositionTransferDetailField_OuterInvestorID_set)

	# 现货系统投资单元代码
    __swig_setmethods__["OuterBusinessUnitID"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_OuterBusinessUnitID_set
    __swig_getmethods__["OuterBusinessUnitID"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_OuterBusinessUnitID_get
    if _newclass:
        OuterBusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPStockPositionTransferDetailField_OuterBusinessUnitID_get, _sptraderapi.CTORATstpSPStockPositionTransferDetailField_OuterBusinessUnitID_set)

	# 现货系统交易账户代码
    __swig_setmethods__["OuterShareholderID"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_OuterShareholderID_set
    __swig_getmethods__["OuterShareholderID"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_OuterShareholderID_get
    if _newclass:
        OuterShareholderID = _swig_property(_sptraderapi.CTORATstpSPStockPositionTransferDetailField_OuterShareholderID_get, _sptraderapi.CTORATstpSPStockPositionTransferDetailField_OuterShareholderID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPStockPositionTransferDetailField_ExchangeID_get, _sptraderapi.CTORATstpSPStockPositionTransferDetailField_ExchangeID_set)

	# 市场代码
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPStockPositionTransferDetailField_MarketID_get, _sptraderapi.CTORATstpSPStockPositionTransferDetailField_MarketID_set)

	# 证券代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPStockPositionTransferDetailField_SecurityID_get, _sptraderapi.CTORATstpSPStockPositionTransferDetailField_SecurityID_set)

	# 交易日期
    __swig_setmethods__["TradingDay"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_sptraderapi.CTORATstpSPStockPositionTransferDetailField_TradingDay_get, _sptraderapi.CTORATstpSPStockPositionTransferDetailField_TradingDay_set)

	# 个股期权标的现货转移原因
    __swig_setmethods__["SPStockTransferReason"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_SPStockTransferReason_set
    __swig_getmethods__["SPStockTransferReason"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_SPStockTransferReason_get
    if _newclass:
        SPStockTransferReason = _swig_property(_sptraderapi.CTORATstpSPStockPositionTransferDetailField_SPStockTransferReason_get, _sptraderapi.CTORATstpSPStockPositionTransferDetailField_SPStockTransferReason_set)

	# 转移持仓类型
    __swig_setmethods__["TransferPositionType"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_TransferPositionType_set
    __swig_getmethods__["TransferPositionType"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_TransferPositionType_get
    if _newclass:
        TransferPositionType = _swig_property(_sptraderapi.CTORATstpSPStockPositionTransferDetailField_TransferPositionType_get, _sptraderapi.CTORATstpSPStockPositionTransferDetailField_TransferPositionType_set)

	# 昨日仓位数量
    __swig_setmethods__["HistoryVolume"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_HistoryVolume_set
    __swig_getmethods__["HistoryVolume"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_HistoryVolume_get
    if _newclass:
        HistoryVolume = _swig_property(_sptraderapi.CTORATstpSPStockPositionTransferDetailField_HistoryVolume_get, _sptraderapi.CTORATstpSPStockPositionTransferDetailField_HistoryVolume_set)

	# 今日买卖仓位数量
    __swig_setmethods__["TodayBSVolume"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_TodayBSVolume_set
    __swig_getmethods__["TodayBSVolume"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_TodayBSVolume_get
    if _newclass:
        TodayBSVolume = _swig_property(_sptraderapi.CTORATstpSPStockPositionTransferDetailField_TodayBSVolume_get, _sptraderapi.CTORATstpSPStockPositionTransferDetailField_TodayBSVolume_set)

	# 今日申赎持仓数量
    __swig_setmethods__["TodayPRVolume"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_TodayPRVolume_set
    __swig_getmethods__["TodayPRVolume"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_TodayPRVolume_get
    if _newclass:
        TodayPRVolume = _swig_property(_sptraderapi.CTORATstpSPStockPositionTransferDetailField_TodayPRVolume_get, _sptraderapi.CTORATstpSPStockPositionTransferDetailField_TodayPRVolume_set)

	# 转移状态
    __swig_setmethods__["TransferStatus"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_TransferStatus_set
    __swig_getmethods__["TransferStatus"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_TransferStatus_get
    if _newclass:
        TransferStatus = _swig_property(_sptraderapi.CTORATstpSPStockPositionTransferDetailField_TransferStatus_get, _sptraderapi.CTORATstpSPStockPositionTransferDetailField_TransferStatus_set)

	# 操作人员
    __swig_setmethods__["OperatorID"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_OperatorID_set
    __swig_getmethods__["OperatorID"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_OperatorID_get
    if _newclass:
        OperatorID = _swig_property(_sptraderapi.CTORATstpSPStockPositionTransferDetailField_OperatorID_get, _sptraderapi.CTORATstpSPStockPositionTransferDetailField_OperatorID_set)

	# 操作日期
    __swig_setmethods__["OperateDate"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_OperateDate_set
    __swig_getmethods__["OperateDate"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_OperateDate_get
    if _newclass:
        OperateDate = _swig_property(_sptraderapi.CTORATstpSPStockPositionTransferDetailField_OperateDate_get, _sptraderapi.CTORATstpSPStockPositionTransferDetailField_OperateDate_set)

	# 操作时间
    __swig_setmethods__["OperateTime"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_OperateTime_set
    __swig_getmethods__["OperateTime"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_OperateTime_get
    if _newclass:
        OperateTime = _swig_property(_sptraderapi.CTORATstpSPStockPositionTransferDetailField_OperateTime_get, _sptraderapi.CTORATstpSPStockPositionTransferDetailField_OperateTime_set)

	# 状态信息
    __swig_setmethods__["StatusMsg"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_StatusMsg_set
    __swig_getmethods__["StatusMsg"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_StatusMsg_get
    if _newclass:
        StatusMsg = _swig_property(_sptraderapi.CTORATstpSPStockPositionTransferDetailField_StatusMsg_get, _sptraderapi.CTORATstpSPStockPositionTransferDetailField_StatusMsg_set)

	# 仓位转移现货系统流水号
    __swig_setmethods__["StockPositionSerial"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_StockPositionSerial_set
    __swig_getmethods__["StockPositionSerial"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_StockPositionSerial_get
    if _newclass:
        StockPositionSerial = _swig_property(_sptraderapi.CTORATstpSPStockPositionTransferDetailField_StockPositionSerial_get, _sptraderapi.CTORATstpSPStockPositionTransferDetailField_StockPositionSerial_set)

	# 是否冲正
    __swig_setmethods__["bRepeal"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_bRepeal_set
    __swig_getmethods__["bRepeal"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_bRepeal_get
    if _newclass:
        bRepeal = _swig_property(_sptraderapi.CTORATstpSPStockPositionTransferDetailField_bRepeal_get, _sptraderapi.CTORATstpSPStockPositionTransferDetailField_bRepeal_set)

	# 原始仓位转移流水号
    __swig_setmethods__["OriginPositionSerial"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_OriginPositionSerial_set
    __swig_getmethods__["OriginPositionSerial"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_OriginPositionSerial_get
    if _newclass:
        OriginPositionSerial = _swig_property(_sptraderapi.CTORATstpSPStockPositionTransferDetailField_OriginPositionSerial_get, _sptraderapi.CTORATstpSPStockPositionTransferDetailField_OriginPositionSerial_set)

	# 操作来源
    __swig_setmethods__["OperateSource"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_OperateSource_set
    __swig_getmethods__["OperateSource"] = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_OperateSource_get
    if _newclass:
        OperateSource = _swig_property(_sptraderapi.CTORATstpSPStockPositionTransferDetailField_OperateSource_get, _sptraderapi.CTORATstpSPStockPositionTransferDetailField_OperateSource_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPStockPositionTransferDetailField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPStockPositionTransferDetailField
    __del__ = lambda self: None
CTORATstpSPStockPositionTransferDetailField_swigregister = _sptraderapi.CTORATstpSPStockPositionTransferDetailField_swigregister
CTORATstpSPStockPositionTransferDetailField_swigregister(CTORATstpSPStockPositionTransferDetailField)




#########################################查询交易通知############################################
class CTORATstpSPQryTradingNoticeField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPQryTradingNoticeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPQryTradingNoticeField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryTradingNoticeField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryTradingNoticeField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPQryTradingNoticeField_InvestorID_get, _sptraderapi.CTORATstpSPQryTradingNoticeField_InvestorID_set)

	# Date
    __swig_setmethods__["DateStart"] = _sptraderapi.CTORATstpSPQryTradingNoticeField_DateStart_set
    __swig_getmethods__["DateStart"] = _sptraderapi.CTORATstpSPQryTradingNoticeField_DateStart_get
    if _newclass:
        DateStart = _swig_property(_sptraderapi.CTORATstpSPQryTradingNoticeField_DateStart_get, _sptraderapi.CTORATstpSPQryTradingNoticeField_DateStart_set)

	# Date
    __swig_setmethods__["DateEnd"] = _sptraderapi.CTORATstpSPQryTradingNoticeField_DateEnd_set
    __swig_getmethods__["DateEnd"] = _sptraderapi.CTORATstpSPQryTradingNoticeField_DateEnd_get
    if _newclass:
        DateEnd = _swig_property(_sptraderapi.CTORATstpSPQryTradingNoticeField_DateEnd_get, _sptraderapi.CTORATstpSPQryTradingNoticeField_DateEnd_set)

	# Time
    __swig_setmethods__["TimeStart"] = _sptraderapi.CTORATstpSPQryTradingNoticeField_TimeStart_set
    __swig_getmethods__["TimeStart"] = _sptraderapi.CTORATstpSPQryTradingNoticeField_TimeStart_get
    if _newclass:
        TimeStart = _swig_property(_sptraderapi.CTORATstpSPQryTradingNoticeField_TimeStart_get, _sptraderapi.CTORATstpSPQryTradingNoticeField_TimeStart_set)

	# Time
    __swig_setmethods__["TimeEnd"] = _sptraderapi.CTORATstpSPQryTradingNoticeField_TimeEnd_set
    __swig_getmethods__["TimeEnd"] = _sptraderapi.CTORATstpSPQryTradingNoticeField_TimeEnd_get
    if _newclass:
        TimeEnd = _swig_property(_sptraderapi.CTORATstpSPQryTradingNoticeField_TimeEnd_get, _sptraderapi.CTORATstpSPQryTradingNoticeField_TimeEnd_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPQryTradingNoticeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPQryTradingNoticeField
    __del__ = lambda self: None
CTORATstpSPQryTradingNoticeField_swigregister = _sptraderapi.CTORATstpSPQryTradingNoticeField_swigregister
CTORATstpSPQryTradingNoticeField_swigregister(CTORATstpSPQryTradingNoticeField)




#########################################查询证券处置############################################
class CTORATstpSPQryStockDisposalField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPQryStockDisposalField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPQryStockDisposalField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryStockDisposalField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryStockDisposalField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPQryStockDisposalField_InvestorID_get, _sptraderapi.CTORATstpSPQryStockDisposalField_InvestorID_set)

	# 个股期权标的合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPQryStockDisposalField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPQryStockDisposalField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPQryStockDisposalField_SecurityID_get, _sptraderapi.CTORATstpSPQryStockDisposalField_SecurityID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryStockDisposalField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryStockDisposalField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPQryStockDisposalField_ExchangeID_get, _sptraderapi.CTORATstpSPQryStockDisposalField_ExchangeID_set)

	# 市场代码
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPQryStockDisposalField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPQryStockDisposalField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPQryStockDisposalField_MarketID_get, _sptraderapi.CTORATstpSPQryStockDisposalField_MarketID_set)

	# 目前该字段存放的是上证所和深圳的股东代码。
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPQryStockDisposalField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPQryStockDisposalField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPQryStockDisposalField_ShareholderID_get, _sptraderapi.CTORATstpSPQryStockDisposalField_ShareholderID_set)

	# 系统证券处置编号
    __swig_setmethods__["StockDisposalSysID"] = _sptraderapi.CTORATstpSPQryStockDisposalField_StockDisposalSysID_set
    __swig_getmethods__["StockDisposalSysID"] = _sptraderapi.CTORATstpSPQryStockDisposalField_StockDisposalSysID_get
    if _newclass:
        StockDisposalSysID = _swig_property(_sptraderapi.CTORATstpSPQryStockDisposalField_StockDisposalSysID_get, _sptraderapi.CTORATstpSPQryStockDisposalField_StockDisposalSysID_set)

	# Time
    __swig_setmethods__["InsertTimeStart"] = _sptraderapi.CTORATstpSPQryStockDisposalField_InsertTimeStart_set
    __swig_getmethods__["InsertTimeStart"] = _sptraderapi.CTORATstpSPQryStockDisposalField_InsertTimeStart_get
    if _newclass:
        InsertTimeStart = _swig_property(_sptraderapi.CTORATstpSPQryStockDisposalField_InsertTimeStart_get, _sptraderapi.CTORATstpSPQryStockDisposalField_InsertTimeStart_set)

	# Time
    __swig_setmethods__["InsertTimeEnd"] = _sptraderapi.CTORATstpSPQryStockDisposalField_InsertTimeEnd_set
    __swig_getmethods__["InsertTimeEnd"] = _sptraderapi.CTORATstpSPQryStockDisposalField_InsertTimeEnd_get
    if _newclass:
        InsertTimeEnd = _swig_property(_sptraderapi.CTORATstpSPQryStockDisposalField_InsertTimeEnd_get, _sptraderapi.CTORATstpSPQryStockDisposalField_InsertTimeEnd_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPQryStockDisposalField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPQryStockDisposalField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPQryStockDisposalField_BusinessUnitID_get, _sptraderapi.CTORATstpSPQryStockDisposalField_BusinessUnitID_set)

	# 长字符串附加信息
    __swig_setmethods__["BInfo"] = _sptraderapi.CTORATstpSPQryStockDisposalField_BInfo_set
    __swig_getmethods__["BInfo"] = _sptraderapi.CTORATstpSPQryStockDisposalField_BInfo_get
    if _newclass:
        BInfo = _swig_property(_sptraderapi.CTORATstpSPQryStockDisposalField_BInfo_get, _sptraderapi.CTORATstpSPQryStockDisposalField_BInfo_set)

	# 短字符串附加信息
    __swig_setmethods__["SInfo"] = _sptraderapi.CTORATstpSPQryStockDisposalField_SInfo_set
    __swig_getmethods__["SInfo"] = _sptraderapi.CTORATstpSPQryStockDisposalField_SInfo_get
    if _newclass:
        SInfo = _swig_property(_sptraderapi.CTORATstpSPQryStockDisposalField_SInfo_get, _sptraderapi.CTORATstpSPQryStockDisposalField_SInfo_set)

	# 整形附加信息
    __swig_setmethods__["IInfo"] = _sptraderapi.CTORATstpSPQryStockDisposalField_IInfo_set
    __swig_getmethods__["IInfo"] = _sptraderapi.CTORATstpSPQryStockDisposalField_IInfo_get
    if _newclass:
        IInfo = _swig_property(_sptraderapi.CTORATstpSPQryStockDisposalField_IInfo_get, _sptraderapi.CTORATstpSPQryStockDisposalField_IInfo_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPQryStockDisposalField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPQryStockDisposalField
    __del__ = lambda self: None
CTORATstpSPQryStockDisposalField_swigregister = _sptraderapi.CTORATstpSPQryStockDisposalField_swigregister
CTORATstpSPQryStockDisposalField_swigregister(CTORATstpSPQryStockDisposalField)




#########################################查询证券处置撤单############################################
class CTORATstpSPQryStockDisposalActionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPQryStockDisposalActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPQryStockDisposalActionField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryStockDisposalActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryStockDisposalActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPQryStockDisposalActionField_InvestorID_get, _sptraderapi.CTORATstpSPQryStockDisposalActionField_InvestorID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryStockDisposalActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryStockDisposalActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPQryStockDisposalActionField_ExchangeID_get, _sptraderapi.CTORATstpSPQryStockDisposalActionField_ExchangeID_set)

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPQryStockDisposalActionField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPQryStockDisposalActionField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPQryStockDisposalActionField_MarketID_get, _sptraderapi.CTORATstpSPQryStockDisposalActionField_MarketID_set)

	# 目前该字段存放的是上证所和深圳的股东代码。
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPQryStockDisposalActionField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPQryStockDisposalActionField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPQryStockDisposalActionField_ShareholderID_get, _sptraderapi.CTORATstpSPQryStockDisposalActionField_ShareholderID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPQryStockDisposalActionField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPQryStockDisposalActionField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPQryStockDisposalActionField_BusinessUnitID_get, _sptraderapi.CTORATstpSPQryStockDisposalActionField_BusinessUnitID_set)

	# 交易单元代码
    __swig_setmethods__["PbuID"] = _sptraderapi.CTORATstpSPQryStockDisposalActionField_PbuID_set
    __swig_getmethods__["PbuID"] = _sptraderapi.CTORATstpSPQryStockDisposalActionField_PbuID_get
    if _newclass:
        PbuID = _swig_property(_sptraderapi.CTORATstpSPQryStockDisposalActionField_PbuID_get, _sptraderapi.CTORATstpSPQryStockDisposalActionField_PbuID_set)

	# 全系统的唯一报单编号。
    __swig_setmethods__["CancelStockDisposalLocalID"] = _sptraderapi.CTORATstpSPQryStockDisposalActionField_CancelStockDisposalLocalID_set
    __swig_getmethods__["CancelStockDisposalLocalID"] = _sptraderapi.CTORATstpSPQryStockDisposalActionField_CancelStockDisposalLocalID_get
    if _newclass:
        CancelStockDisposalLocalID = _swig_property(_sptraderapi.CTORATstpSPQryStockDisposalActionField_CancelStockDisposalLocalID_get, _sptraderapi.CTORATstpSPQryStockDisposalActionField_CancelStockDisposalLocalID_set)

	# 本地证券处置编号
    __swig_setmethods__["StockDisposalLocalID"] = _sptraderapi.CTORATstpSPQryStockDisposalActionField_StockDisposalLocalID_set
    __swig_getmethods__["StockDisposalLocalID"] = _sptraderapi.CTORATstpSPQryStockDisposalActionField_StockDisposalLocalID_get
    if _newclass:
        StockDisposalLocalID = _swig_property(_sptraderapi.CTORATstpSPQryStockDisposalActionField_StockDisposalLocalID_get, _sptraderapi.CTORATstpSPQryStockDisposalActionField_StockDisposalLocalID_set)

	# 长字符串附加信息
    __swig_setmethods__["BInfo"] = _sptraderapi.CTORATstpSPQryStockDisposalActionField_BInfo_set
    __swig_getmethods__["BInfo"] = _sptraderapi.CTORATstpSPQryStockDisposalActionField_BInfo_get
    if _newclass:
        BInfo = _swig_property(_sptraderapi.CTORATstpSPQryStockDisposalActionField_BInfo_get, _sptraderapi.CTORATstpSPQryStockDisposalActionField_BInfo_set)

	# 短字符串附加信息
    __swig_setmethods__["SInfo"] = _sptraderapi.CTORATstpSPQryStockDisposalActionField_SInfo_set
    __swig_getmethods__["SInfo"] = _sptraderapi.CTORATstpSPQryStockDisposalActionField_SInfo_get
    if _newclass:
        SInfo = _swig_property(_sptraderapi.CTORATstpSPQryStockDisposalActionField_SInfo_get, _sptraderapi.CTORATstpSPQryStockDisposalActionField_SInfo_set)

	# 整形附加信息
    __swig_setmethods__["IInfo"] = _sptraderapi.CTORATstpSPQryStockDisposalActionField_IInfo_set
    __swig_getmethods__["IInfo"] = _sptraderapi.CTORATstpSPQryStockDisposalActionField_IInfo_get
    if _newclass:
        IInfo = _swig_property(_sptraderapi.CTORATstpSPQryStockDisposalActionField_IInfo_get, _sptraderapi.CTORATstpSPQryStockDisposalActionField_IInfo_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPQryStockDisposalActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPQryStockDisposalActionField
    __del__ = lambda self: None
CTORATstpSPQryStockDisposalActionField_swigregister = _sptraderapi.CTORATstpSPQryStockDisposalActionField_swigregister
CTORATstpSPQryStockDisposalActionField_swigregister(CTORATstpSPQryStockDisposalActionField)




#########################################证券处置撤单############################################
class CTORATstpSPStockDisposalActionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPStockDisposalActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPStockDisposalActionField, name)
    __repr__ = _swig_repr

	# 交易日
    __swig_setmethods__["TradingDay"] = _sptraderapi.CTORATstpSPStockDisposalActionField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _sptraderapi.CTORATstpSPStockDisposalActionField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_sptraderapi.CTORATstpSPStockDisposalActionField_TradingDay_get, _sptraderapi.CTORATstpSPStockDisposalActionField_TradingDay_set)

	# 交易所营业部编码
    __swig_setmethods__["BranchID"] = _sptraderapi.CTORATstpSPStockDisposalActionField_BranchID_set
    __swig_getmethods__["BranchID"] = _sptraderapi.CTORATstpSPStockDisposalActionField_BranchID_get
    if _newclass:
        BranchID = _swig_property(_sptraderapi.CTORATstpSPStockDisposalActionField_BranchID_get, _sptraderapi.CTORATstpSPStockDisposalActionField_BranchID_set)

	# 交易所交易单元代码
    __swig_setmethods__["PbuID"] = _sptraderapi.CTORATstpSPStockDisposalActionField_PbuID_set
    __swig_getmethods__["PbuID"] = _sptraderapi.CTORATstpSPStockDisposalActionField_PbuID_get
    if _newclass:
        PbuID = _swig_property(_sptraderapi.CTORATstpSPStockDisposalActionField_PbuID_get, _sptraderapi.CTORATstpSPStockDisposalActionField_PbuID_set)

	# 本地证券处置撤单编号
    __swig_setmethods__["CancelStockDisposalLocalID"] = _sptraderapi.CTORATstpSPStockDisposalActionField_CancelStockDisposalLocalID_set
    __swig_getmethods__["CancelStockDisposalLocalID"] = _sptraderapi.CTORATstpSPStockDisposalActionField_CancelStockDisposalLocalID_get
    if _newclass:
        CancelStockDisposalLocalID = _swig_property(_sptraderapi.CTORATstpSPStockDisposalActionField_CancelStockDisposalLocalID_get, _sptraderapi.CTORATstpSPStockDisposalActionField_CancelStockDisposalLocalID_set)

	# 撤单前置编号
    __swig_setmethods__["ActionFrontID"] = _sptraderapi.CTORATstpSPStockDisposalActionField_ActionFrontID_set
    __swig_getmethods__["ActionFrontID"] = _sptraderapi.CTORATstpSPStockDisposalActionField_ActionFrontID_get
    if _newclass:
        ActionFrontID = _swig_property(_sptraderapi.CTORATstpSPStockDisposalActionField_ActionFrontID_get, _sptraderapi.CTORATstpSPStockDisposalActionField_ActionFrontID_set)

	# 撤单会话编号
    __swig_setmethods__["ActionSessionID"] = _sptraderapi.CTORATstpSPStockDisposalActionField_ActionSessionID_set
    __swig_getmethods__["ActionSessionID"] = _sptraderapi.CTORATstpSPStockDisposalActionField_ActionSessionID_get
    if _newclass:
        ActionSessionID = _swig_property(_sptraderapi.CTORATstpSPStockDisposalActionField_ActionSessionID_get, _sptraderapi.CTORATstpSPStockDisposalActionField_ActionSessionID_set)

	# 证券处置撤单引用
    __swig_setmethods__["StockDisposalActionRef"] = _sptraderapi.CTORATstpSPStockDisposalActionField_StockDisposalActionRef_set
    __swig_getmethods__["StockDisposalActionRef"] = _sptraderapi.CTORATstpSPStockDisposalActionField_StockDisposalActionRef_get
    if _newclass:
        StockDisposalActionRef = _swig_property(_sptraderapi.CTORATstpSPStockDisposalActionField_StockDisposalActionRef_get, _sptraderapi.CTORATstpSPStockDisposalActionField_StockDisposalActionRef_set)

	# 被撤本地证券处置报单编号
    __swig_setmethods__["StockDisposalLocalID"] = _sptraderapi.CTORATstpSPStockDisposalActionField_StockDisposalLocalID_set
    __swig_getmethods__["StockDisposalLocalID"] = _sptraderapi.CTORATstpSPStockDisposalActionField_StockDisposalLocalID_get
    if _newclass:
        StockDisposalLocalID = _swig_property(_sptraderapi.CTORATstpSPStockDisposalActionField_StockDisposalLocalID_get, _sptraderapi.CTORATstpSPStockDisposalActionField_StockDisposalLocalID_set)

	# 被撤证券处置系统报单编号
    __swig_setmethods__["StockDisposalSysID"] = _sptraderapi.CTORATstpSPStockDisposalActionField_StockDisposalSysID_set
    __swig_getmethods__["StockDisposalSysID"] = _sptraderapi.CTORATstpSPStockDisposalActionField_StockDisposalSysID_get
    if _newclass:
        StockDisposalSysID = _swig_property(_sptraderapi.CTORATstpSPStockDisposalActionField_StockDisposalSysID_get, _sptraderapi.CTORATstpSPStockDisposalActionField_StockDisposalSysID_set)

	# 前置编号
    __swig_setmethods__["FrontID"] = _sptraderapi.CTORATstpSPStockDisposalActionField_FrontID_set
    __swig_getmethods__["FrontID"] = _sptraderapi.CTORATstpSPStockDisposalActionField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_sptraderapi.CTORATstpSPStockDisposalActionField_FrontID_get, _sptraderapi.CTORATstpSPStockDisposalActionField_FrontID_set)

	# 会话编号
    __swig_setmethods__["SessionID"] = _sptraderapi.CTORATstpSPStockDisposalActionField_SessionID_set
    __swig_getmethods__["SessionID"] = _sptraderapi.CTORATstpSPStockDisposalActionField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_sptraderapi.CTORATstpSPStockDisposalActionField_SessionID_get, _sptraderapi.CTORATstpSPStockDisposalActionField_SessionID_set)

	# 被撤证券处置引用
    __swig_setmethods__["StockDisposalRef"] = _sptraderapi.CTORATstpSPStockDisposalActionField_StockDisposalRef_set
    __swig_getmethods__["StockDisposalRef"] = _sptraderapi.CTORATstpSPStockDisposalActionField_StockDisposalRef_get
    if _newclass:
        StockDisposalRef = _swig_property(_sptraderapi.CTORATstpSPStockDisposalActionField_StockDisposalRef_get, _sptraderapi.CTORATstpSPStockDisposalActionField_StockDisposalRef_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPStockDisposalActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPStockDisposalActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPStockDisposalActionField_InvestorID_get, _sptraderapi.CTORATstpSPStockDisposalActionField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPStockDisposalActionField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPStockDisposalActionField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPStockDisposalActionField_BusinessUnitID_get, _sptraderapi.CTORATstpSPStockDisposalActionField_BusinessUnitID_set)

	# 市场代码
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPStockDisposalActionField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPStockDisposalActionField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPStockDisposalActionField_MarketID_get, _sptraderapi.CTORATstpSPStockDisposalActionField_MarketID_set)

	# 股东账户代码
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPStockDisposalActionField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPStockDisposalActionField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPStockDisposalActionField_ShareholderID_get, _sptraderapi.CTORATstpSPStockDisposalActionField_ShareholderID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPStockDisposalActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPStockDisposalActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPStockDisposalActionField_ExchangeID_get, _sptraderapi.CTORATstpSPStockDisposalActionField_ExchangeID_set)

	# 合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPStockDisposalActionField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPStockDisposalActionField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPStockDisposalActionField_SecurityID_get, _sptraderapi.CTORATstpSPStockDisposalActionField_SecurityID_set)

	# 证券处置操作标志
    __swig_setmethods__["StockDisposalActionFlag"] = _sptraderapi.CTORATstpSPStockDisposalActionField_StockDisposalActionFlag_set
    __swig_getmethods__["StockDisposalActionFlag"] = _sptraderapi.CTORATstpSPStockDisposalActionField_StockDisposalActionFlag_get
    if _newclass:
        StockDisposalActionFlag = _swig_property(_sptraderapi.CTORATstpSPStockDisposalActionField_StockDisposalActionFlag_get, _sptraderapi.CTORATstpSPStockDisposalActionField_StockDisposalActionFlag_set)

	# 撤单状态
    __swig_setmethods__["CancelStockDisposalStatus"] = _sptraderapi.CTORATstpSPStockDisposalActionField_CancelStockDisposalStatus_set
    __swig_getmethods__["CancelStockDisposalStatus"] = _sptraderapi.CTORATstpSPStockDisposalActionField_CancelStockDisposalStatus_get
    if _newclass:
        CancelStockDisposalStatus = _swig_property(_sptraderapi.CTORATstpSPStockDisposalActionField_CancelStockDisposalStatus_get, _sptraderapi.CTORATstpSPStockDisposalActionField_CancelStockDisposalStatus_set)

	# 撤单数量
    __swig_setmethods__["VolumeCanceled"] = _sptraderapi.CTORATstpSPStockDisposalActionField_VolumeCanceled_set
    __swig_getmethods__["VolumeCanceled"] = _sptraderapi.CTORATstpSPStockDisposalActionField_VolumeCanceled_get
    if _newclass:
        VolumeCanceled = _swig_property(_sptraderapi.CTORATstpSPStockDisposalActionField_VolumeCanceled_get, _sptraderapi.CTORATstpSPStockDisposalActionField_VolumeCanceled_set)

	# 状态信息
    __swig_setmethods__["StatusMsg"] = _sptraderapi.CTORATstpSPStockDisposalActionField_StatusMsg_set
    __swig_getmethods__["StatusMsg"] = _sptraderapi.CTORATstpSPStockDisposalActionField_StatusMsg_get
    if _newclass:
        StatusMsg = _swig_property(_sptraderapi.CTORATstpSPStockDisposalActionField_StatusMsg_get, _sptraderapi.CTORATstpSPStockDisposalActionField_StatusMsg_set)

	# 系统错误代码
    __swig_setmethods__["ErrorID"] = _sptraderapi.CTORATstpSPStockDisposalActionField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _sptraderapi.CTORATstpSPStockDisposalActionField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_sptraderapi.CTORATstpSPStockDisposalActionField_ErrorID_get, _sptraderapi.CTORATstpSPStockDisposalActionField_ErrorID_set)

	# 报单申报用户
    __swig_setmethods__["InsertUserID"] = _sptraderapi.CTORATstpSPStockDisposalActionField_InsertUserID_set
    __swig_getmethods__["InsertUserID"] = _sptraderapi.CTORATstpSPStockDisposalActionField_InsertUserID_get
    if _newclass:
        InsertUserID = _swig_property(_sptraderapi.CTORATstpSPStockDisposalActionField_InsertUserID_get, _sptraderapi.CTORATstpSPStockDisposalActionField_InsertUserID_set)

	# 操作日期
    __swig_setmethods__["InsertDate"] = _sptraderapi.CTORATstpSPStockDisposalActionField_InsertDate_set
    __swig_getmethods__["InsertDate"] = _sptraderapi.CTORATstpSPStockDisposalActionField_InsertDate_get
    if _newclass:
        InsertDate = _swig_property(_sptraderapi.CTORATstpSPStockDisposalActionField_InsertDate_get, _sptraderapi.CTORATstpSPStockDisposalActionField_InsertDate_set)

	# 操作时间
    __swig_setmethods__["InsertTime"] = _sptraderapi.CTORATstpSPStockDisposalActionField_InsertTime_set
    __swig_getmethods__["InsertTime"] = _sptraderapi.CTORATstpSPStockDisposalActionField_InsertTime_get
    if _newclass:
        InsertTime = _swig_property(_sptraderapi.CTORATstpSPStockDisposalActionField_InsertTime_get, _sptraderapi.CTORATstpSPStockDisposalActionField_InsertTime_set)

	# 申报时间(毫秒)
    __swig_setmethods__["InsertMillisec"] = _sptraderapi.CTORATstpSPStockDisposalActionField_InsertMillisec_set
    __swig_getmethods__["InsertMillisec"] = _sptraderapi.CTORATstpSPStockDisposalActionField_InsertMillisec_get
    if _newclass:
        InsertMillisec = _swig_property(_sptraderapi.CTORATstpSPStockDisposalActionField_InsertMillisec_get, _sptraderapi.CTORATstpSPStockDisposalActionField_InsertMillisec_set)

	# IP地址
    __swig_setmethods__["IPAddress"] = _sptraderapi.CTORATstpSPStockDisposalActionField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _sptraderapi.CTORATstpSPStockDisposalActionField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_sptraderapi.CTORATstpSPStockDisposalActionField_IPAddress_get, _sptraderapi.CTORATstpSPStockDisposalActionField_IPAddress_set)

	# Mac地址
    __swig_setmethods__["MacAddress"] = _sptraderapi.CTORATstpSPStockDisposalActionField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _sptraderapi.CTORATstpSPStockDisposalActionField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_sptraderapi.CTORATstpSPStockDisposalActionField_MacAddress_get, _sptraderapi.CTORATstpSPStockDisposalActionField_MacAddress_set)

	# 请求编号
    __swig_setmethods__["RequestID"] = _sptraderapi.CTORATstpSPStockDisposalActionField_RequestID_set
    __swig_getmethods__["RequestID"] = _sptraderapi.CTORATstpSPStockDisposalActionField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_sptraderapi.CTORATstpSPStockDisposalActionField_RequestID_get, _sptraderapi.CTORATstpSPStockDisposalActionField_RequestID_set)

	# 长字符串附加信息
    __swig_setmethods__["BInfo"] = _sptraderapi.CTORATstpSPStockDisposalActionField_BInfo_set
    __swig_getmethods__["BInfo"] = _sptraderapi.CTORATstpSPStockDisposalActionField_BInfo_get
    if _newclass:
        BInfo = _swig_property(_sptraderapi.CTORATstpSPStockDisposalActionField_BInfo_get, _sptraderapi.CTORATstpSPStockDisposalActionField_BInfo_set)

	# 短字符串附加信息
    __swig_setmethods__["SInfo"] = _sptraderapi.CTORATstpSPStockDisposalActionField_SInfo_set
    __swig_getmethods__["SInfo"] = _sptraderapi.CTORATstpSPStockDisposalActionField_SInfo_get
    if _newclass:
        SInfo = _swig_property(_sptraderapi.CTORATstpSPStockDisposalActionField_SInfo_get, _sptraderapi.CTORATstpSPStockDisposalActionField_SInfo_set)

	# 整形附加信息
    __swig_setmethods__["IInfo"] = _sptraderapi.CTORATstpSPStockDisposalActionField_IInfo_set
    __swig_getmethods__["IInfo"] = _sptraderapi.CTORATstpSPStockDisposalActionField_IInfo_get
    if _newclass:
        IInfo = _swig_property(_sptraderapi.CTORATstpSPStockDisposalActionField_IInfo_get, _sptraderapi.CTORATstpSPStockDisposalActionField_IInfo_set)

	# 委托方式
    __swig_setmethods__["Operway"] = _sptraderapi.CTORATstpSPStockDisposalActionField_Operway_set
    __swig_getmethods__["Operway"] = _sptraderapi.CTORATstpSPStockDisposalActionField_Operway_get
    if _newclass:
        Operway = _swig_property(_sptraderapi.CTORATstpSPStockDisposalActionField_Operway_get, _sptraderapi.CTORATstpSPStockDisposalActionField_Operway_set)

	# 硬盘序列号
    __swig_setmethods__["HDSerial"] = _sptraderapi.CTORATstpSPStockDisposalActionField_HDSerial_set
    __swig_getmethods__["HDSerial"] = _sptraderapi.CTORATstpSPStockDisposalActionField_HDSerial_get
    if _newclass:
        HDSerial = _swig_property(_sptraderapi.CTORATstpSPStockDisposalActionField_HDSerial_get, _sptraderapi.CTORATstpSPStockDisposalActionField_HDSerial_set)

	# 电话
    __swig_setmethods__["Mobile"] = _sptraderapi.CTORATstpSPStockDisposalActionField_Mobile_set
    __swig_getmethods__["Mobile"] = _sptraderapi.CTORATstpSPStockDisposalActionField_Mobile_get
    if _newclass:
        Mobile = _swig_property(_sptraderapi.CTORATstpSPStockDisposalActionField_Mobile_get, _sptraderapi.CTORATstpSPStockDisposalActionField_Mobile_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPStockDisposalActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPStockDisposalActionField
    __del__ = lambda self: None
CTORATstpSPStockDisposalActionField_swigregister = _sptraderapi.CTORATstpSPStockDisposalActionField_swigregister
CTORATstpSPStockDisposalActionField_swigregister(CTORATstpSPStockDisposalActionField)




#########################################查询条件单############################################
class CTORATstpSPQryCondOrderField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPQryCondOrderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPQryCondOrderField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryCondOrderField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryCondOrderField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPQryCondOrderField_InvestorID_get, _sptraderapi.CTORATstpSPQryCondOrderField_InvestorID_set)

	# 合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPQryCondOrderField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPQryCondOrderField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPQryCondOrderField_SecurityID_get, _sptraderapi.CTORATstpSPQryCondOrderField_SecurityID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryCondOrderField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryCondOrderField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPQryCondOrderField_ExchangeID_get, _sptraderapi.CTORATstpSPQryCondOrderField_ExchangeID_set)

	# 目前该字段存放的是上证所和深圳的股东代码。
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPQryCondOrderField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPQryCondOrderField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPQryCondOrderField_ShareholderID_get, _sptraderapi.CTORATstpSPQryCondOrderField_ShareholderID_set)

	# 报单编号
    __swig_setmethods__["CondOrderID"] = _sptraderapi.CTORATstpSPQryCondOrderField_CondOrderID_set
    __swig_getmethods__["CondOrderID"] = _sptraderapi.CTORATstpSPQryCondOrderField_CondOrderID_get
    if _newclass:
        CondOrderID = _swig_property(_sptraderapi.CTORATstpSPQryCondOrderField_CondOrderID_get, _sptraderapi.CTORATstpSPQryCondOrderField_CondOrderID_set)

	# Time
    __swig_setmethods__["InsertTimeStart"] = _sptraderapi.CTORATstpSPQryCondOrderField_InsertTimeStart_set
    __swig_getmethods__["InsertTimeStart"] = _sptraderapi.CTORATstpSPQryCondOrderField_InsertTimeStart_get
    if _newclass:
        InsertTimeStart = _swig_property(_sptraderapi.CTORATstpSPQryCondOrderField_InsertTimeStart_get, _sptraderapi.CTORATstpSPQryCondOrderField_InsertTimeStart_set)

	# Time
    __swig_setmethods__["InsertTimeEnd"] = _sptraderapi.CTORATstpSPQryCondOrderField_InsertTimeEnd_set
    __swig_getmethods__["InsertTimeEnd"] = _sptraderapi.CTORATstpSPQryCondOrderField_InsertTimeEnd_get
    if _newclass:
        InsertTimeEnd = _swig_property(_sptraderapi.CTORATstpSPQryCondOrderField_InsertTimeEnd_get, _sptraderapi.CTORATstpSPQryCondOrderField_InsertTimeEnd_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPQryCondOrderField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPQryCondOrderField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPQryCondOrderField_BusinessUnitID_get, _sptraderapi.CTORATstpSPQryCondOrderField_BusinessUnitID_set)

	# 长字符串附加信息
    __swig_setmethods__["BInfo"] = _sptraderapi.CTORATstpSPQryCondOrderField_BInfo_set
    __swig_getmethods__["BInfo"] = _sptraderapi.CTORATstpSPQryCondOrderField_BInfo_get
    if _newclass:
        BInfo = _swig_property(_sptraderapi.CTORATstpSPQryCondOrderField_BInfo_get, _sptraderapi.CTORATstpSPQryCondOrderField_BInfo_set)

	# 短字符串附加信息
    __swig_setmethods__["SInfo"] = _sptraderapi.CTORATstpSPQryCondOrderField_SInfo_set
    __swig_getmethods__["SInfo"] = _sptraderapi.CTORATstpSPQryCondOrderField_SInfo_get
    if _newclass:
        SInfo = _swig_property(_sptraderapi.CTORATstpSPQryCondOrderField_SInfo_get, _sptraderapi.CTORATstpSPQryCondOrderField_SInfo_set)

	# 整形附加信息
    __swig_setmethods__["IInfo"] = _sptraderapi.CTORATstpSPQryCondOrderField_IInfo_set
    __swig_getmethods__["IInfo"] = _sptraderapi.CTORATstpSPQryCondOrderField_IInfo_get
    if _newclass:
        IInfo = _swig_property(_sptraderapi.CTORATstpSPQryCondOrderField_IInfo_get, _sptraderapi.CTORATstpSPQryCondOrderField_IInfo_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPQryCondOrderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPQryCondOrderField
    __del__ = lambda self: None
CTORATstpSPQryCondOrderField_swigregister = _sptraderapi.CTORATstpSPQryCondOrderField_swigregister
CTORATstpSPQryCondOrderField_swigregister(CTORATstpSPQryCondOrderField)




#########################################条件单############################################
class CTORATstpSPCondOrderField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPCondOrderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPCondOrderField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPCondOrderField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPCondOrderField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_ExchangeID_get, _sptraderapi.CTORATstpSPCondOrderField_ExchangeID_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPCondOrderField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPCondOrderField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_InvestorID_get, _sptraderapi.CTORATstpSPCondOrderField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPCondOrderField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPCondOrderField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_BusinessUnitID_get, _sptraderapi.CTORATstpSPCondOrderField_BusinessUnitID_set)

	# 股东账户代码
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPCondOrderField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPCondOrderField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_ShareholderID_get, _sptraderapi.CTORATstpSPCondOrderField_ShareholderID_set)

	# 合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPCondOrderField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPCondOrderField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_SecurityID_get, _sptraderapi.CTORATstpSPCondOrderField_SecurityID_set)

	# 买卖方向
    __swig_setmethods__["Direction"] = _sptraderapi.CTORATstpSPCondOrderField_Direction_set
    __swig_getmethods__["Direction"] = _sptraderapi.CTORATstpSPCondOrderField_Direction_get
    if _newclass:
        Direction = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_Direction_get, _sptraderapi.CTORATstpSPCondOrderField_Direction_set)

	# 条件单价格类型
    __swig_setmethods__["OrderPriceType"] = _sptraderapi.CTORATstpSPCondOrderField_OrderPriceType_set
    __swig_getmethods__["OrderPriceType"] = _sptraderapi.CTORATstpSPCondOrderField_OrderPriceType_get
    if _newclass:
        OrderPriceType = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_OrderPriceType_get, _sptraderapi.CTORATstpSPCondOrderField_OrderPriceType_set)

	# 条件单数量类型
    __swig_setmethods__["OrderVolumeType"] = _sptraderapi.CTORATstpSPCondOrderField_OrderVolumeType_set
    __swig_getmethods__["OrderVolumeType"] = _sptraderapi.CTORATstpSPCondOrderField_OrderVolumeType_get
    if _newclass:
        OrderVolumeType = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_OrderVolumeType_get, _sptraderapi.CTORATstpSPCondOrderField_OrderVolumeType_set)

	# 有效期类型
    __swig_setmethods__["TimeCondition"] = _sptraderapi.CTORATstpSPCondOrderField_TimeCondition_set
    __swig_getmethods__["TimeCondition"] = _sptraderapi.CTORATstpSPCondOrderField_TimeCondition_get
    if _newclass:
        TimeCondition = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_TimeCondition_get, _sptraderapi.CTORATstpSPCondOrderField_TimeCondition_set)

	# 成交量类型
    __swig_setmethods__["VolumeCondition"] = _sptraderapi.CTORATstpSPCondOrderField_VolumeCondition_set
    __swig_getmethods__["VolumeCondition"] = _sptraderapi.CTORATstpSPCondOrderField_VolumeCondition_get
    if _newclass:
        VolumeCondition = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_VolumeCondition_get, _sptraderapi.CTORATstpSPCondOrderField_VolumeCondition_set)

	# 最小成交量
    __swig_setmethods__["MinVolume"] = _sptraderapi.CTORATstpSPCondOrderField_MinVolume_set
    __swig_getmethods__["MinVolume"] = _sptraderapi.CTORATstpSPCondOrderField_MinVolume_get
    if _newclass:
        MinVolume = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_MinVolume_get, _sptraderapi.CTORATstpSPCondOrderField_MinVolume_set)

	# 强平原因
    __swig_setmethods__["ForceCloseReason"] = _sptraderapi.CTORATstpSPCondOrderField_ForceCloseReason_set
    __swig_getmethods__["ForceCloseReason"] = _sptraderapi.CTORATstpSPCondOrderField_ForceCloseReason_get
    if _newclass:
        ForceCloseReason = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_ForceCloseReason_get, _sptraderapi.CTORATstpSPCondOrderField_ForceCloseReason_set)

	# 报单价格
    __swig_setmethods__["LimitPrice"] = _sptraderapi.CTORATstpSPCondOrderField_LimitPrice_set
    __swig_getmethods__["LimitPrice"] = _sptraderapi.CTORATstpSPCondOrderField_LimitPrice_get
    if _newclass:
        LimitPrice = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_LimitPrice_get, _sptraderapi.CTORATstpSPCondOrderField_LimitPrice_set)

	# 报单数量
    __swig_setmethods__["VolumeTotalOriginal"] = _sptraderapi.CTORATstpSPCondOrderField_VolumeTotalOriginal_set
    __swig_getmethods__["VolumeTotalOriginal"] = _sptraderapi.CTORATstpSPCondOrderField_VolumeTotalOriginal_get
    if _newclass:
        VolumeTotalOriginal = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_VolumeTotalOriginal_get, _sptraderapi.CTORATstpSPCondOrderField_VolumeTotalOriginal_set)

	# 组合开平标志
    __swig_setmethods__["CombOffsetFlag"] = _sptraderapi.CTORATstpSPCondOrderField_CombOffsetFlag_set
    __swig_getmethods__["CombOffsetFlag"] = _sptraderapi.CTORATstpSPCondOrderField_CombOffsetFlag_get
    if _newclass:
        CombOffsetFlag = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_CombOffsetFlag_get, _sptraderapi.CTORATstpSPCondOrderField_CombOffsetFlag_set)

	# 组合投机套保标志
    __swig_setmethods__["CombHedgeFlag"] = _sptraderapi.CTORATstpSPCondOrderField_CombHedgeFlag_set
    __swig_getmethods__["CombHedgeFlag"] = _sptraderapi.CTORATstpSPCondOrderField_CombHedgeFlag_get
    if _newclass:
        CombHedgeFlag = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_CombHedgeFlag_get, _sptraderapi.CTORATstpSPCondOrderField_CombHedgeFlag_set)

	# 条件报单引用
    __swig_setmethods__["CondOrderRef"] = _sptraderapi.CTORATstpSPCondOrderField_CondOrderRef_set
    __swig_getmethods__["CondOrderRef"] = _sptraderapi.CTORATstpSPCondOrderField_CondOrderRef_get
    if _newclass:
        CondOrderRef = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_CondOrderRef_get, _sptraderapi.CTORATstpSPCondOrderField_CondOrderRef_set)

	# 资金账户代码
    __swig_setmethods__["AccountID"] = _sptraderapi.CTORATstpSPCondOrderField_AccountID_set
    __swig_getmethods__["AccountID"] = _sptraderapi.CTORATstpSPCondOrderField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_AccountID_get, _sptraderapi.CTORATstpSPCondOrderField_AccountID_set)

	# 请求编号
    __swig_setmethods__["RequestID"] = _sptraderapi.CTORATstpSPCondOrderField_RequestID_set
    __swig_getmethods__["RequestID"] = _sptraderapi.CTORATstpSPCondOrderField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_RequestID_get, _sptraderapi.CTORATstpSPCondOrderField_RequestID_set)

	# IP地址
    __swig_setmethods__["IPAddress"] = _sptraderapi.CTORATstpSPCondOrderField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _sptraderapi.CTORATstpSPCondOrderField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_IPAddress_get, _sptraderapi.CTORATstpSPCondOrderField_IPAddress_set)

	# Mac地址
    __swig_setmethods__["MacAddress"] = _sptraderapi.CTORATstpSPCondOrderField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _sptraderapi.CTORATstpSPCondOrderField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_MacAddress_get, _sptraderapi.CTORATstpSPCondOrderField_MacAddress_set)

	# 条件报单编号
    __swig_setmethods__["CondOrderID"] = _sptraderapi.CTORATstpSPCondOrderField_CondOrderID_set
    __swig_getmethods__["CondOrderID"] = _sptraderapi.CTORATstpSPCondOrderField_CondOrderID_get
    if _newclass:
        CondOrderID = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_CondOrderID_get, _sptraderapi.CTORATstpSPCondOrderField_CondOrderID_set)

	# 终端信息
    __swig_setmethods__["TerminalInfo"] = _sptraderapi.CTORATstpSPCondOrderField_TerminalInfo_set
    __swig_getmethods__["TerminalInfo"] = _sptraderapi.CTORATstpSPCondOrderField_TerminalInfo_get
    if _newclass:
        TerminalInfo = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_TerminalInfo_get, _sptraderapi.CTORATstpSPCondOrderField_TerminalInfo_set)

	# 长字符串附加信息
    __swig_setmethods__["BInfo"] = _sptraderapi.CTORATstpSPCondOrderField_BInfo_set
    __swig_getmethods__["BInfo"] = _sptraderapi.CTORATstpSPCondOrderField_BInfo_get
    if _newclass:
        BInfo = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_BInfo_get, _sptraderapi.CTORATstpSPCondOrderField_BInfo_set)

	# 短字符串附加信息
    __swig_setmethods__["SInfo"] = _sptraderapi.CTORATstpSPCondOrderField_SInfo_set
    __swig_getmethods__["SInfo"] = _sptraderapi.CTORATstpSPCondOrderField_SInfo_get
    if _newclass:
        SInfo = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_SInfo_get, _sptraderapi.CTORATstpSPCondOrderField_SInfo_set)

	# 整形附加信息
    __swig_setmethods__["IInfo"] = _sptraderapi.CTORATstpSPCondOrderField_IInfo_set
    __swig_getmethods__["IInfo"] = _sptraderapi.CTORATstpSPCondOrderField_IInfo_get
    if _newclass:
        IInfo = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_IInfo_get, _sptraderapi.CTORATstpSPCondOrderField_IInfo_set)

	# 触发条件
    __swig_setmethods__["ContingentCondition"] = _sptraderapi.CTORATstpSPCondOrderField_ContingentCondition_set
    __swig_getmethods__["ContingentCondition"] = _sptraderapi.CTORATstpSPCondOrderField_ContingentCondition_get
    if _newclass:
        ContingentCondition = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_ContingentCondition_get, _sptraderapi.CTORATstpSPCondOrderField_ContingentCondition_set)

	# 条件价
    __swig_setmethods__["ConditionPrice"] = _sptraderapi.CTORATstpSPCondOrderField_ConditionPrice_set
    __swig_getmethods__["ConditionPrice"] = _sptraderapi.CTORATstpSPCondOrderField_ConditionPrice_get
    if _newclass:
        ConditionPrice = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_ConditionPrice_get, _sptraderapi.CTORATstpSPCondOrderField_ConditionPrice_set)

	# 价格浮动tick数
    __swig_setmethods__["PriceTicks"] = _sptraderapi.CTORATstpSPCondOrderField_PriceTicks_set
    __swig_getmethods__["PriceTicks"] = _sptraderapi.CTORATstpSPCondOrderField_PriceTicks_get
    if _newclass:
        PriceTicks = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_PriceTicks_get, _sptraderapi.CTORATstpSPCondOrderField_PriceTicks_set)

	# 数量浮动倍数
    __swig_setmethods__["VolumeMultiple"] = _sptraderapi.CTORATstpSPCondOrderField_VolumeMultiple_set
    __swig_getmethods__["VolumeMultiple"] = _sptraderapi.CTORATstpSPCondOrderField_VolumeMultiple_get
    if _newclass:
        VolumeMultiple = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_VolumeMultiple_get, _sptraderapi.CTORATstpSPCondOrderField_VolumeMultiple_set)

	# 相关前置编号
    __swig_setmethods__["RelativeFrontID"] = _sptraderapi.CTORATstpSPCondOrderField_RelativeFrontID_set
    __swig_getmethods__["RelativeFrontID"] = _sptraderapi.CTORATstpSPCondOrderField_RelativeFrontID_get
    if _newclass:
        RelativeFrontID = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_RelativeFrontID_get, _sptraderapi.CTORATstpSPCondOrderField_RelativeFrontID_set)

	# 相关会话编号
    __swig_setmethods__["RelativeSessionID"] = _sptraderapi.CTORATstpSPCondOrderField_RelativeSessionID_set
    __swig_getmethods__["RelativeSessionID"] = _sptraderapi.CTORATstpSPCondOrderField_RelativeSessionID_get
    if _newclass:
        RelativeSessionID = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_RelativeSessionID_get, _sptraderapi.CTORATstpSPCondOrderField_RelativeSessionID_set)

	# 相关条件参数
    __swig_setmethods__["RelativeParam"] = _sptraderapi.CTORATstpSPCondOrderField_RelativeParam_set
    __swig_getmethods__["RelativeParam"] = _sptraderapi.CTORATstpSPCondOrderField_RelativeParam_get
    if _newclass:
        RelativeParam = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_RelativeParam_get, _sptraderapi.CTORATstpSPCondOrderField_RelativeParam_set)

	# 附加触发条件
    __swig_setmethods__["AppendContingentCondition"] = _sptraderapi.CTORATstpSPCondOrderField_AppendContingentCondition_set
    __swig_getmethods__["AppendContingentCondition"] = _sptraderapi.CTORATstpSPCondOrderField_AppendContingentCondition_get
    if _newclass:
        AppendContingentCondition = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_AppendContingentCondition_get, _sptraderapi.CTORATstpSPCondOrderField_AppendContingentCondition_set)

	# 附加条件价
    __swig_setmethods__["AppendConditionPrice"] = _sptraderapi.CTORATstpSPCondOrderField_AppendConditionPrice_set
    __swig_getmethods__["AppendConditionPrice"] = _sptraderapi.CTORATstpSPCondOrderField_AppendConditionPrice_get
    if _newclass:
        AppendConditionPrice = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_AppendConditionPrice_get, _sptraderapi.CTORATstpSPCondOrderField_AppendConditionPrice_set)

	# 附加相关前置编号
    __swig_setmethods__["AppendRelativeFrontID"] = _sptraderapi.CTORATstpSPCondOrderField_AppendRelativeFrontID_set
    __swig_getmethods__["AppendRelativeFrontID"] = _sptraderapi.CTORATstpSPCondOrderField_AppendRelativeFrontID_get
    if _newclass:
        AppendRelativeFrontID = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_AppendRelativeFrontID_get, _sptraderapi.CTORATstpSPCondOrderField_AppendRelativeFrontID_set)

	# 附加相关会话编号
    __swig_setmethods__["AppendRelativeSessionID"] = _sptraderapi.CTORATstpSPCondOrderField_AppendRelativeSessionID_set
    __swig_getmethods__["AppendRelativeSessionID"] = _sptraderapi.CTORATstpSPCondOrderField_AppendRelativeSessionID_get
    if _newclass:
        AppendRelativeSessionID = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_AppendRelativeSessionID_get, _sptraderapi.CTORATstpSPCondOrderField_AppendRelativeSessionID_set)

	# 附加相关条件参数
    __swig_setmethods__["AppendRelativeParam"] = _sptraderapi.CTORATstpSPCondOrderField_AppendRelativeParam_set
    __swig_getmethods__["AppendRelativeParam"] = _sptraderapi.CTORATstpSPCondOrderField_AppendRelativeParam_get
    if _newclass:
        AppendRelativeParam = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_AppendRelativeParam_get, _sptraderapi.CTORATstpSPCondOrderField_AppendRelativeParam_set)

	# 交易日
    __swig_setmethods__["TradingDay"] = _sptraderapi.CTORATstpSPCondOrderField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _sptraderapi.CTORATstpSPCondOrderField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_TradingDay_get, _sptraderapi.CTORATstpSPCondOrderField_TradingDay_set)

	# 前置编号
    __swig_setmethods__["FrontID"] = _sptraderapi.CTORATstpSPCondOrderField_FrontID_set
    __swig_getmethods__["FrontID"] = _sptraderapi.CTORATstpSPCondOrderField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_FrontID_get, _sptraderapi.CTORATstpSPCondOrderField_FrontID_set)

	# 会话编号
    __swig_setmethods__["SessionID"] = _sptraderapi.CTORATstpSPCondOrderField_SessionID_set
    __swig_getmethods__["SessionID"] = _sptraderapi.CTORATstpSPCondOrderField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_SessionID_get, _sptraderapi.CTORATstpSPCondOrderField_SessionID_set)

	# 经纪公司部门代码
    __swig_setmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPCondOrderField_DepartmentID_set
    __swig_getmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPCondOrderField_DepartmentID_get
    if _newclass:
        DepartmentID = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_DepartmentID_get, _sptraderapi.CTORATstpSPCondOrderField_DepartmentID_set)

	# 条件单状态
    __swig_setmethods__["CondOrderStatus"] = _sptraderapi.CTORATstpSPCondOrderField_CondOrderStatus_set
    __swig_getmethods__["CondOrderStatus"] = _sptraderapi.CTORATstpSPCondOrderField_CondOrderStatus_get
    if _newclass:
        CondOrderStatus = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_CondOrderStatus_get, _sptraderapi.CTORATstpSPCondOrderField_CondOrderStatus_set)

	# 状态信息
    __swig_setmethods__["StatusMsg"] = _sptraderapi.CTORATstpSPCondOrderField_StatusMsg_set
    __swig_getmethods__["StatusMsg"] = _sptraderapi.CTORATstpSPCondOrderField_StatusMsg_get
    if _newclass:
        StatusMsg = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_StatusMsg_get, _sptraderapi.CTORATstpSPCondOrderField_StatusMsg_set)

	# 报单申报用户
    __swig_setmethods__["InsertUserID"] = _sptraderapi.CTORATstpSPCondOrderField_InsertUserID_set
    __swig_getmethods__["InsertUserID"] = _sptraderapi.CTORATstpSPCondOrderField_InsertUserID_get
    if _newclass:
        InsertUserID = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_InsertUserID_get, _sptraderapi.CTORATstpSPCondOrderField_InsertUserID_set)

	# 报单日期
    __swig_setmethods__["InsertDate"] = _sptraderapi.CTORATstpSPCondOrderField_InsertDate_set
    __swig_getmethods__["InsertDate"] = _sptraderapi.CTORATstpSPCondOrderField_InsertDate_get
    if _newclass:
        InsertDate = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_InsertDate_get, _sptraderapi.CTORATstpSPCondOrderField_InsertDate_set)

	# 委托时间
    __swig_setmethods__["InsertTime"] = _sptraderapi.CTORATstpSPCondOrderField_InsertTime_set
    __swig_getmethods__["InsertTime"] = _sptraderapi.CTORATstpSPCondOrderField_InsertTime_get
    if _newclass:
        InsertTime = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_InsertTime_get, _sptraderapi.CTORATstpSPCondOrderField_InsertTime_set)

	# 委托毫秒
    __swig_setmethods__["InsertMillisec"] = _sptraderapi.CTORATstpSPCondOrderField_InsertMillisec_set
    __swig_getmethods__["InsertMillisec"] = _sptraderapi.CTORATstpSPCondOrderField_InsertMillisec_get
    if _newclass:
        InsertMillisec = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_InsertMillisec_get, _sptraderapi.CTORATstpSPCondOrderField_InsertMillisec_set)

	# 撤销时间
    __swig_setmethods__["CancelTime"] = _sptraderapi.CTORATstpSPCondOrderField_CancelTime_set
    __swig_getmethods__["CancelTime"] = _sptraderapi.CTORATstpSPCondOrderField_CancelTime_get
    if _newclass:
        CancelTime = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_CancelTime_get, _sptraderapi.CTORATstpSPCondOrderField_CancelTime_set)

	# 撤销用户
    __swig_setmethods__["CancelUserID"] = _sptraderapi.CTORATstpSPCondOrderField_CancelUserID_set
    __swig_getmethods__["CancelUserID"] = _sptraderapi.CTORATstpSPCondOrderField_CancelUserID_get
    if _newclass:
        CancelUserID = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_CancelUserID_get, _sptraderapi.CTORATstpSPCondOrderField_CancelUserID_set)

	# 触发时间
    __swig_setmethods__["ActiveTime"] = _sptraderapi.CTORATstpSPCondOrderField_ActiveTime_set
    __swig_getmethods__["ActiveTime"] = _sptraderapi.CTORATstpSPCondOrderField_ActiveTime_get
    if _newclass:
        ActiveTime = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_ActiveTime_get, _sptraderapi.CTORATstpSPCondOrderField_ActiveTime_set)

	# 委托方式
    __swig_setmethods__["Operway"] = _sptraderapi.CTORATstpSPCondOrderField_Operway_set
    __swig_getmethods__["Operway"] = _sptraderapi.CTORATstpSPCondOrderField_Operway_get
    if _newclass:
        Operway = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_Operway_get, _sptraderapi.CTORATstpSPCondOrderField_Operway_set)

	# 硬盘序列号
    __swig_setmethods__["HDSerial"] = _sptraderapi.CTORATstpSPCondOrderField_HDSerial_set
    __swig_getmethods__["HDSerial"] = _sptraderapi.CTORATstpSPCondOrderField_HDSerial_get
    if _newclass:
        HDSerial = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_HDSerial_get, _sptraderapi.CTORATstpSPCondOrderField_HDSerial_set)

	# 移动设备手机号
    __swig_setmethods__["Mobile"] = _sptraderapi.CTORATstpSPCondOrderField_Mobile_set
    __swig_getmethods__["Mobile"] = _sptraderapi.CTORATstpSPCondOrderField_Mobile_get
    if _newclass:
        Mobile = _swig_property(_sptraderapi.CTORATstpSPCondOrderField_Mobile_get, _sptraderapi.CTORATstpSPCondOrderField_Mobile_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPCondOrderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPCondOrderField
    __del__ = lambda self: None
CTORATstpSPCondOrderField_swigregister = _sptraderapi.CTORATstpSPCondOrderField_swigregister
CTORATstpSPCondOrderField_swigregister(CTORATstpSPCondOrderField)




#########################################查询条件单撤单############################################
class CTORATstpSPQryCondOrderActionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPQryCondOrderActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPQryCondOrderActionField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryCondOrderActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryCondOrderActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPQryCondOrderActionField_InvestorID_get, _sptraderapi.CTORATstpSPQryCondOrderActionField_InvestorID_set)

	# 一个交易所的编号
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryCondOrderActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryCondOrderActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPQryCondOrderActionField_ExchangeID_get, _sptraderapi.CTORATstpSPQryCondOrderActionField_ExchangeID_set)

	# 股东账户代码
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPQryCondOrderActionField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPQryCondOrderActionField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPQryCondOrderActionField_ShareholderID_get, _sptraderapi.CTORATstpSPQryCondOrderActionField_ShareholderID_set)

	# 长字符串附加信息
    __swig_setmethods__["BInfo"] = _sptraderapi.CTORATstpSPQryCondOrderActionField_BInfo_set
    __swig_getmethods__["BInfo"] = _sptraderapi.CTORATstpSPQryCondOrderActionField_BInfo_get
    if _newclass:
        BInfo = _swig_property(_sptraderapi.CTORATstpSPQryCondOrderActionField_BInfo_get, _sptraderapi.CTORATstpSPQryCondOrderActionField_BInfo_set)

	# 短字符串附加信息
    __swig_setmethods__["SInfo"] = _sptraderapi.CTORATstpSPQryCondOrderActionField_SInfo_set
    __swig_getmethods__["SInfo"] = _sptraderapi.CTORATstpSPQryCondOrderActionField_SInfo_get
    if _newclass:
        SInfo = _swig_property(_sptraderapi.CTORATstpSPQryCondOrderActionField_SInfo_get, _sptraderapi.CTORATstpSPQryCondOrderActionField_SInfo_set)

	# 整形附加信息
    __swig_setmethods__["IInfo"] = _sptraderapi.CTORATstpSPQryCondOrderActionField_IInfo_set
    __swig_getmethods__["IInfo"] = _sptraderapi.CTORATstpSPQryCondOrderActionField_IInfo_get
    if _newclass:
        IInfo = _swig_property(_sptraderapi.CTORATstpSPQryCondOrderActionField_IInfo_get, _sptraderapi.CTORATstpSPQryCondOrderActionField_IInfo_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPQryCondOrderActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPQryCondOrderActionField
    __del__ = lambda self: None
CTORATstpSPQryCondOrderActionField_swigregister = _sptraderapi.CTORATstpSPQryCondOrderActionField_swigregister
CTORATstpSPQryCondOrderActionField_swigregister(CTORATstpSPQryCondOrderActionField)




#########################################条件单撤单############################################
class CTORATstpSPCondOrderActionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPCondOrderActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPCondOrderActionField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPCondOrderActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPCondOrderActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPCondOrderActionField_ExchangeID_get, _sptraderapi.CTORATstpSPCondOrderActionField_ExchangeID_set)

	# 请求编号
    __swig_setmethods__["RequestID"] = _sptraderapi.CTORATstpSPCondOrderActionField_RequestID_set
    __swig_getmethods__["RequestID"] = _sptraderapi.CTORATstpSPCondOrderActionField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_sptraderapi.CTORATstpSPCondOrderActionField_RequestID_get, _sptraderapi.CTORATstpSPCondOrderActionField_RequestID_set)

	# 条件单操作引用
    __swig_setmethods__["CondOrderActionRef"] = _sptraderapi.CTORATstpSPCondOrderActionField_CondOrderActionRef_set
    __swig_getmethods__["CondOrderActionRef"] = _sptraderapi.CTORATstpSPCondOrderActionField_CondOrderActionRef_get
    if _newclass:
        CondOrderActionRef = _swig_property(_sptraderapi.CTORATstpSPCondOrderActionField_CondOrderActionRef_get, _sptraderapi.CTORATstpSPCondOrderActionField_CondOrderActionRef_set)

	# 条件单引用
    __swig_setmethods__["CondOrderRef"] = _sptraderapi.CTORATstpSPCondOrderActionField_CondOrderRef_set
    __swig_getmethods__["CondOrderRef"] = _sptraderapi.CTORATstpSPCondOrderActionField_CondOrderRef_get
    if _newclass:
        CondOrderRef = _swig_property(_sptraderapi.CTORATstpSPCondOrderActionField_CondOrderRef_get, _sptraderapi.CTORATstpSPCondOrderActionField_CondOrderRef_set)

	# 前置编号
    __swig_setmethods__["FrontID"] = _sptraderapi.CTORATstpSPCondOrderActionField_FrontID_set
    __swig_getmethods__["FrontID"] = _sptraderapi.CTORATstpSPCondOrderActionField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_sptraderapi.CTORATstpSPCondOrderActionField_FrontID_get, _sptraderapi.CTORATstpSPCondOrderActionField_FrontID_set)

	# 会话编号
    __swig_setmethods__["SessionID"] = _sptraderapi.CTORATstpSPCondOrderActionField_SessionID_set
    __swig_getmethods__["SessionID"] = _sptraderapi.CTORATstpSPCondOrderActionField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_sptraderapi.CTORATstpSPCondOrderActionField_SessionID_get, _sptraderapi.CTORATstpSPCondOrderActionField_SessionID_set)

	# 条件单编号
    __swig_setmethods__["CondOrderID"] = _sptraderapi.CTORATstpSPCondOrderActionField_CondOrderID_set
    __swig_getmethods__["CondOrderID"] = _sptraderapi.CTORATstpSPCondOrderActionField_CondOrderID_get
    if _newclass:
        CondOrderID = _swig_property(_sptraderapi.CTORATstpSPCondOrderActionField_CondOrderID_get, _sptraderapi.CTORATstpSPCondOrderActionField_CondOrderID_set)

	# 操作标志
    __swig_setmethods__["OrderActionFlag"] = _sptraderapi.CTORATstpSPCondOrderActionField_OrderActionFlag_set
    __swig_getmethods__["OrderActionFlag"] = _sptraderapi.CTORATstpSPCondOrderActionField_OrderActionFlag_get
    if _newclass:
        OrderActionFlag = _swig_property(_sptraderapi.CTORATstpSPCondOrderActionField_OrderActionFlag_get, _sptraderapi.CTORATstpSPCondOrderActionField_OrderActionFlag_set)

	# 合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPCondOrderActionField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPCondOrderActionField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPCondOrderActionField_SecurityID_get, _sptraderapi.CTORATstpSPCondOrderActionField_SecurityID_set)

	# 条件单撤单编号
    __swig_setmethods__["CancelCondOrderID"] = _sptraderapi.CTORATstpSPCondOrderActionField_CancelCondOrderID_set
    __swig_getmethods__["CancelCondOrderID"] = _sptraderapi.CTORATstpSPCondOrderActionField_CancelCondOrderID_get
    if _newclass:
        CancelCondOrderID = _swig_property(_sptraderapi.CTORATstpSPCondOrderActionField_CancelCondOrderID_get, _sptraderapi.CTORATstpSPCondOrderActionField_CancelCondOrderID_set)

	# IP地址
    __swig_setmethods__["IPAddress"] = _sptraderapi.CTORATstpSPCondOrderActionField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _sptraderapi.CTORATstpSPCondOrderActionField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_sptraderapi.CTORATstpSPCondOrderActionField_IPAddress_get, _sptraderapi.CTORATstpSPCondOrderActionField_IPAddress_set)

	# MAC地址
    __swig_setmethods__["MacAddress"] = _sptraderapi.CTORATstpSPCondOrderActionField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _sptraderapi.CTORATstpSPCondOrderActionField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_sptraderapi.CTORATstpSPCondOrderActionField_MacAddress_get, _sptraderapi.CTORATstpSPCondOrderActionField_MacAddress_set)

	# 终端信息
    __swig_setmethods__["TerminalInfo"] = _sptraderapi.CTORATstpSPCondOrderActionField_TerminalInfo_set
    __swig_getmethods__["TerminalInfo"] = _sptraderapi.CTORATstpSPCondOrderActionField_TerminalInfo_get
    if _newclass:
        TerminalInfo = _swig_property(_sptraderapi.CTORATstpSPCondOrderActionField_TerminalInfo_get, _sptraderapi.CTORATstpSPCondOrderActionField_TerminalInfo_set)

	# 长字符串附加信息
    __swig_setmethods__["BInfo"] = _sptraderapi.CTORATstpSPCondOrderActionField_BInfo_set
    __swig_getmethods__["BInfo"] = _sptraderapi.CTORATstpSPCondOrderActionField_BInfo_get
    if _newclass:
        BInfo = _swig_property(_sptraderapi.CTORATstpSPCondOrderActionField_BInfo_get, _sptraderapi.CTORATstpSPCondOrderActionField_BInfo_set)

	# 短字符串附加信息
    __swig_setmethods__["SInfo"] = _sptraderapi.CTORATstpSPCondOrderActionField_SInfo_set
    __swig_getmethods__["SInfo"] = _sptraderapi.CTORATstpSPCondOrderActionField_SInfo_get
    if _newclass:
        SInfo = _swig_property(_sptraderapi.CTORATstpSPCondOrderActionField_SInfo_get, _sptraderapi.CTORATstpSPCondOrderActionField_SInfo_set)

	# 整形附加信息
    __swig_setmethods__["IInfo"] = _sptraderapi.CTORATstpSPCondOrderActionField_IInfo_set
    __swig_getmethods__["IInfo"] = _sptraderapi.CTORATstpSPCondOrderActionField_IInfo_get
    if _newclass:
        IInfo = _swig_property(_sptraderapi.CTORATstpSPCondOrderActionField_IInfo_get, _sptraderapi.CTORATstpSPCondOrderActionField_IInfo_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPCondOrderActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPCondOrderActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPCondOrderActionField_InvestorID_get, _sptraderapi.CTORATstpSPCondOrderActionField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPCondOrderActionField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPCondOrderActionField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPCondOrderActionField_BusinessUnitID_get, _sptraderapi.CTORATstpSPCondOrderActionField_BusinessUnitID_set)

	# 股东账户代码
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPCondOrderActionField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPCondOrderActionField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPCondOrderActionField_ShareholderID_get, _sptraderapi.CTORATstpSPCondOrderActionField_ShareholderID_set)

	# 申报用户
    __swig_setmethods__["InsertUserID"] = _sptraderapi.CTORATstpSPCondOrderActionField_InsertUserID_set
    __swig_getmethods__["InsertUserID"] = _sptraderapi.CTORATstpSPCondOrderActionField_InsertUserID_get
    if _newclass:
        InsertUserID = _swig_property(_sptraderapi.CTORATstpSPCondOrderActionField_InsertUserID_get, _sptraderapi.CTORATstpSPCondOrderActionField_InsertUserID_set)

	# 申报日期
    __swig_setmethods__["InsertDate"] = _sptraderapi.CTORATstpSPCondOrderActionField_InsertDate_set
    __swig_getmethods__["InsertDate"] = _sptraderapi.CTORATstpSPCondOrderActionField_InsertDate_get
    if _newclass:
        InsertDate = _swig_property(_sptraderapi.CTORATstpSPCondOrderActionField_InsertDate_get, _sptraderapi.CTORATstpSPCondOrderActionField_InsertDate_set)

	# 申报时间
    __swig_setmethods__["InsertTime"] = _sptraderapi.CTORATstpSPCondOrderActionField_InsertTime_set
    __swig_getmethods__["InsertTime"] = _sptraderapi.CTORATstpSPCondOrderActionField_InsertTime_get
    if _newclass:
        InsertTime = _swig_property(_sptraderapi.CTORATstpSPCondOrderActionField_InsertTime_get, _sptraderapi.CTORATstpSPCondOrderActionField_InsertTime_set)

	# 申报毫秒
    __swig_setmethods__["InsertMillisec"] = _sptraderapi.CTORATstpSPCondOrderActionField_InsertMillisec_set
    __swig_getmethods__["InsertMillisec"] = _sptraderapi.CTORATstpSPCondOrderActionField_InsertMillisec_get
    if _newclass:
        InsertMillisec = _swig_property(_sptraderapi.CTORATstpSPCondOrderActionField_InsertMillisec_get, _sptraderapi.CTORATstpSPCondOrderActionField_InsertMillisec_set)

	# 委托方式
    __swig_setmethods__["Operway"] = _sptraderapi.CTORATstpSPCondOrderActionField_Operway_set
    __swig_getmethods__["Operway"] = _sptraderapi.CTORATstpSPCondOrderActionField_Operway_get
    if _newclass:
        Operway = _swig_property(_sptraderapi.CTORATstpSPCondOrderActionField_Operway_get, _sptraderapi.CTORATstpSPCondOrderActionField_Operway_set)

	# 硬盘序列号
    __swig_setmethods__["HDSerial"] = _sptraderapi.CTORATstpSPCondOrderActionField_HDSerial_set
    __swig_getmethods__["HDSerial"] = _sptraderapi.CTORATstpSPCondOrderActionField_HDSerial_get
    if _newclass:
        HDSerial = _swig_property(_sptraderapi.CTORATstpSPCondOrderActionField_HDSerial_get, _sptraderapi.CTORATstpSPCondOrderActionField_HDSerial_set)

	# 移动设备手机号
    __swig_setmethods__["Mobile"] = _sptraderapi.CTORATstpSPCondOrderActionField_Mobile_set
    __swig_getmethods__["Mobile"] = _sptraderapi.CTORATstpSPCondOrderActionField_Mobile_get
    if _newclass:
        Mobile = _swig_property(_sptraderapi.CTORATstpSPCondOrderActionField_Mobile_get, _sptraderapi.CTORATstpSPCondOrderActionField_Mobile_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPCondOrderActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPCondOrderActionField
    __del__ = lambda self: None
CTORATstpSPCondOrderActionField_swigregister = _sptraderapi.CTORATstpSPCondOrderActionField_swigregister
CTORATstpSPCondOrderActionField_swigregister(CTORATstpSPCondOrderActionField)




#########################################查询投资者限仓额度############################################
class CTORATstpSPQryInvestorLimitPositionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPQryInvestorLimitPositionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPQryInvestorLimitPositionField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryInvestorLimitPositionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryInvestorLimitPositionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPQryInvestorLimitPositionField_InvestorID_get, _sptraderapi.CTORATstpSPQryInvestorLimitPositionField_InvestorID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryInvestorLimitPositionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryInvestorLimitPositionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPQryInvestorLimitPositionField_ExchangeID_get, _sptraderapi.CTORATstpSPQryInvestorLimitPositionField_ExchangeID_set)

	# 标的证券代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPQryInvestorLimitPositionField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPQryInvestorLimitPositionField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPQryInvestorLimitPositionField_SecurityID_get, _sptraderapi.CTORATstpSPQryInvestorLimitPositionField_SecurityID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPQryInvestorLimitPositionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPQryInvestorLimitPositionField
    __del__ = lambda self: None
CTORATstpSPQryInvestorLimitPositionField_swigregister = _sptraderapi.CTORATstpSPQryInvestorLimitPositionField_swigregister
CTORATstpSPQryInvestorLimitPositionField_swigregister(CTORATstpSPQryInvestorLimitPositionField)




#########################################投资者限仓额度############################################
class CTORATstpSPInvestorLimitPositionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPInvestorLimitPositionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPInvestorLimitPositionField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPInvestorLimitPositionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPInvestorLimitPositionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPInvestorLimitPositionField_InvestorID_get, _sptraderapi.CTORATstpSPInvestorLimitPositionField_InvestorID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPInvestorLimitPositionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPInvestorLimitPositionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPInvestorLimitPositionField_ExchangeID_get, _sptraderapi.CTORATstpSPInvestorLimitPositionField_ExchangeID_set)

	# 标的证券代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPInvestorLimitPositionField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPInvestorLimitPositionField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPInvestorLimitPositionField_SecurityID_get, _sptraderapi.CTORATstpSPInvestorLimitPositionField_SecurityID_set)

	# 总持仓限额
    __swig_setmethods__["TotalPositionLimit"] = _sptraderapi.CTORATstpSPInvestorLimitPositionField_TotalPositionLimit_set
    __swig_getmethods__["TotalPositionLimit"] = _sptraderapi.CTORATstpSPInvestorLimitPositionField_TotalPositionLimit_get
    if _newclass:
        TotalPositionLimit = _swig_property(_sptraderapi.CTORATstpSPInvestorLimitPositionField_TotalPositionLimit_get, _sptraderapi.CTORATstpSPInvestorLimitPositionField_TotalPositionLimit_set)

	# 多头持仓限额
    __swig_setmethods__["LongPositionLimit"] = _sptraderapi.CTORATstpSPInvestorLimitPositionField_LongPositionLimit_set
    __swig_getmethods__["LongPositionLimit"] = _sptraderapi.CTORATstpSPInvestorLimitPositionField_LongPositionLimit_get
    if _newclass:
        LongPositionLimit = _swig_property(_sptraderapi.CTORATstpSPInvestorLimitPositionField_LongPositionLimit_get, _sptraderapi.CTORATstpSPInvestorLimitPositionField_LongPositionLimit_set)

	# 单日买入开仓限额
    __swig_setmethods__["TodayBuyOpenLimit"] = _sptraderapi.CTORATstpSPInvestorLimitPositionField_TodayBuyOpenLimit_set
    __swig_getmethods__["TodayBuyOpenLimit"] = _sptraderapi.CTORATstpSPInvestorLimitPositionField_TodayBuyOpenLimit_get
    if _newclass:
        TodayBuyOpenLimit = _swig_property(_sptraderapi.CTORATstpSPInvestorLimitPositionField_TodayBuyOpenLimit_get, _sptraderapi.CTORATstpSPInvestorLimitPositionField_TodayBuyOpenLimit_set)

	# 单日卖出开仓限额
    __swig_setmethods__["TodaySellOpenLimit"] = _sptraderapi.CTORATstpSPInvestorLimitPositionField_TodaySellOpenLimit_set
    __swig_getmethods__["TodaySellOpenLimit"] = _sptraderapi.CTORATstpSPInvestorLimitPositionField_TodaySellOpenLimit_get
    if _newclass:
        TodaySellOpenLimit = _swig_property(_sptraderapi.CTORATstpSPInvestorLimitPositionField_TodaySellOpenLimit_get, _sptraderapi.CTORATstpSPInvestorLimitPositionField_TodaySellOpenLimit_set)

	# 单日备兑开仓限额
    __swig_setmethods__["TodayCoveredOpenLimit"] = _sptraderapi.CTORATstpSPInvestorLimitPositionField_TodayCoveredOpenLimit_set
    __swig_getmethods__["TodayCoveredOpenLimit"] = _sptraderapi.CTORATstpSPInvestorLimitPositionField_TodayCoveredOpenLimit_get
    if _newclass:
        TodayCoveredOpenLimit = _swig_property(_sptraderapi.CTORATstpSPInvestorLimitPositionField_TodayCoveredOpenLimit_get, _sptraderapi.CTORATstpSPInvestorLimitPositionField_TodayCoveredOpenLimit_set)

	# 单日开仓限额
    __swig_setmethods__["TodayOpenLimit"] = _sptraderapi.CTORATstpSPInvestorLimitPositionField_TodayOpenLimit_set
    __swig_getmethods__["TodayOpenLimit"] = _sptraderapi.CTORATstpSPInvestorLimitPositionField_TodayOpenLimit_get
    if _newclass:
        TodayOpenLimit = _swig_property(_sptraderapi.CTORATstpSPInvestorLimitPositionField_TodayOpenLimit_get, _sptraderapi.CTORATstpSPInvestorLimitPositionField_TodayOpenLimit_set)

	# 认购多头持仓限额
    __swig_setmethods__["LongCallPositionLimit"] = _sptraderapi.CTORATstpSPInvestorLimitPositionField_LongCallPositionLimit_set
    __swig_getmethods__["LongCallPositionLimit"] = _sptraderapi.CTORATstpSPInvestorLimitPositionField_LongCallPositionLimit_get
    if _newclass:
        LongCallPositionLimit = _swig_property(_sptraderapi.CTORATstpSPInvestorLimitPositionField_LongCallPositionLimit_get, _sptraderapi.CTORATstpSPInvestorLimitPositionField_LongCallPositionLimit_set)

	# 认沽多头持仓限额
    __swig_setmethods__["LongPutPositionLimit"] = _sptraderapi.CTORATstpSPInvestorLimitPositionField_LongPutPositionLimit_set
    __swig_getmethods__["LongPutPositionLimit"] = _sptraderapi.CTORATstpSPInvestorLimitPositionField_LongPutPositionLimit_get
    if _newclass:
        LongPutPositionLimit = _swig_property(_sptraderapi.CTORATstpSPInvestorLimitPositionField_LongPutPositionLimit_get, _sptraderapi.CTORATstpSPInvestorLimitPositionField_LongPutPositionLimit_set)

	# 标的多头持仓限额
    __swig_setmethods__["LongUnderlyingPositionLimit"] = _sptraderapi.CTORATstpSPInvestorLimitPositionField_LongUnderlyingPositionLimit_set
    __swig_getmethods__["LongUnderlyingPositionLimit"] = _sptraderapi.CTORATstpSPInvestorLimitPositionField_LongUnderlyingPositionLimit_get
    if _newclass:
        LongUnderlyingPositionLimit = _swig_property(_sptraderapi.CTORATstpSPInvestorLimitPositionField_LongUnderlyingPositionLimit_get, _sptraderapi.CTORATstpSPInvestorLimitPositionField_LongUnderlyingPositionLimit_set)

	# 标的空头持仓限额
    __swig_setmethods__["ShortUnderlyingPositionLimit"] = _sptraderapi.CTORATstpSPInvestorLimitPositionField_ShortUnderlyingPositionLimit_set
    __swig_getmethods__["ShortUnderlyingPositionLimit"] = _sptraderapi.CTORATstpSPInvestorLimitPositionField_ShortUnderlyingPositionLimit_get
    if _newclass:
        ShortUnderlyingPositionLimit = _swig_property(_sptraderapi.CTORATstpSPInvestorLimitPositionField_ShortUnderlyingPositionLimit_get, _sptraderapi.CTORATstpSPInvestorLimitPositionField_ShortUnderlyingPositionLimit_set)

	# 总持仓冻结额度
    __swig_setmethods__["TotalPositionFrozen"] = _sptraderapi.CTORATstpSPInvestorLimitPositionField_TotalPositionFrozen_set
    __swig_getmethods__["TotalPositionFrozen"] = _sptraderapi.CTORATstpSPInvestorLimitPositionField_TotalPositionFrozen_get
    if _newclass:
        TotalPositionFrozen = _swig_property(_sptraderapi.CTORATstpSPInvestorLimitPositionField_TotalPositionFrozen_get, _sptraderapi.CTORATstpSPInvestorLimitPositionField_TotalPositionFrozen_set)

	# 多头持仓冻结额度
    __swig_setmethods__["LongPositionFrozen"] = _sptraderapi.CTORATstpSPInvestorLimitPositionField_LongPositionFrozen_set
    __swig_getmethods__["LongPositionFrozen"] = _sptraderapi.CTORATstpSPInvestorLimitPositionField_LongPositionFrozen_get
    if _newclass:
        LongPositionFrozen = _swig_property(_sptraderapi.CTORATstpSPInvestorLimitPositionField_LongPositionFrozen_get, _sptraderapi.CTORATstpSPInvestorLimitPositionField_LongPositionFrozen_set)

	# 单日买入开仓冻结额度
    __swig_setmethods__["TodayBuyOpenFrozen"] = _sptraderapi.CTORATstpSPInvestorLimitPositionField_TodayBuyOpenFrozen_set
    __swig_getmethods__["TodayBuyOpenFrozen"] = _sptraderapi.CTORATstpSPInvestorLimitPositionField_TodayBuyOpenFrozen_get
    if _newclass:
        TodayBuyOpenFrozen = _swig_property(_sptraderapi.CTORATstpSPInvestorLimitPositionField_TodayBuyOpenFrozen_get, _sptraderapi.CTORATstpSPInvestorLimitPositionField_TodayBuyOpenFrozen_set)

	# 单日卖出开仓冻结额度
    __swig_setmethods__["TodaySellOpenFrozen"] = _sptraderapi.CTORATstpSPInvestorLimitPositionField_TodaySellOpenFrozen_set
    __swig_getmethods__["TodaySellOpenFrozen"] = _sptraderapi.CTORATstpSPInvestorLimitPositionField_TodaySellOpenFrozen_get
    if _newclass:
        TodaySellOpenFrozen = _swig_property(_sptraderapi.CTORATstpSPInvestorLimitPositionField_TodaySellOpenFrozen_get, _sptraderapi.CTORATstpSPInvestorLimitPositionField_TodaySellOpenFrozen_set)

	# 单日备兑开仓冻结额度
    __swig_setmethods__["TodayCoveredOpenFrozen"] = _sptraderapi.CTORATstpSPInvestorLimitPositionField_TodayCoveredOpenFrozen_set
    __swig_getmethods__["TodayCoveredOpenFrozen"] = _sptraderapi.CTORATstpSPInvestorLimitPositionField_TodayCoveredOpenFrozen_get
    if _newclass:
        TodayCoveredOpenFrozen = _swig_property(_sptraderapi.CTORATstpSPInvestorLimitPositionField_TodayCoveredOpenFrozen_get, _sptraderapi.CTORATstpSPInvestorLimitPositionField_TodayCoveredOpenFrozen_set)

	# 单日开仓冻结额度
    __swig_setmethods__["TodayOpenFrozen"] = _sptraderapi.CTORATstpSPInvestorLimitPositionField_TodayOpenFrozen_set
    __swig_getmethods__["TodayOpenFrozen"] = _sptraderapi.CTORATstpSPInvestorLimitPositionField_TodayOpenFrozen_get
    if _newclass:
        TodayOpenFrozen = _swig_property(_sptraderapi.CTORATstpSPInvestorLimitPositionField_TodayOpenFrozen_get, _sptraderapi.CTORATstpSPInvestorLimitPositionField_TodayOpenFrozen_set)

	# 认购多头持仓冻结额度
    __swig_setmethods__["LongCallPositionFrozen"] = _sptraderapi.CTORATstpSPInvestorLimitPositionField_LongCallPositionFrozen_set
    __swig_getmethods__["LongCallPositionFrozen"] = _sptraderapi.CTORATstpSPInvestorLimitPositionField_LongCallPositionFrozen_get
    if _newclass:
        LongCallPositionFrozen = _swig_property(_sptraderapi.CTORATstpSPInvestorLimitPositionField_LongCallPositionFrozen_get, _sptraderapi.CTORATstpSPInvestorLimitPositionField_LongCallPositionFrozen_set)

	# 认沽多头持仓冻结额度
    __swig_setmethods__["LongPutPositionFrozen"] = _sptraderapi.CTORATstpSPInvestorLimitPositionField_LongPutPositionFrozen_set
    __swig_getmethods__["LongPutPositionFrozen"] = _sptraderapi.CTORATstpSPInvestorLimitPositionField_LongPutPositionFrozen_get
    if _newclass:
        LongPutPositionFrozen = _swig_property(_sptraderapi.CTORATstpSPInvestorLimitPositionField_LongPutPositionFrozen_get, _sptraderapi.CTORATstpSPInvestorLimitPositionField_LongPutPositionFrozen_set)

	# 标的多头持仓冻结额度
    __swig_setmethods__["LongUnderlyingPositionFrozen"] = _sptraderapi.CTORATstpSPInvestorLimitPositionField_LongUnderlyingPositionFrozen_set
    __swig_getmethods__["LongUnderlyingPositionFrozen"] = _sptraderapi.CTORATstpSPInvestorLimitPositionField_LongUnderlyingPositionFrozen_get
    if _newclass:
        LongUnderlyingPositionFrozen = _swig_property(_sptraderapi.CTORATstpSPInvestorLimitPositionField_LongUnderlyingPositionFrozen_get, _sptraderapi.CTORATstpSPInvestorLimitPositionField_LongUnderlyingPositionFrozen_set)

	# 标的空头持仓冻结额度
    __swig_setmethods__["ShortUnderlyingPositionFrozen"] = _sptraderapi.CTORATstpSPInvestorLimitPositionField_ShortUnderlyingPositionFrozen_set
    __swig_getmethods__["ShortUnderlyingPositionFrozen"] = _sptraderapi.CTORATstpSPInvestorLimitPositionField_ShortUnderlyingPositionFrozen_get
    if _newclass:
        ShortUnderlyingPositionFrozen = _swig_property(_sptraderapi.CTORATstpSPInvestorLimitPositionField_ShortUnderlyingPositionFrozen_get, _sptraderapi.CTORATstpSPInvestorLimitPositionField_ShortUnderlyingPositionFrozen_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPInvestorLimitPositionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPInvestorLimitPositionField
    __del__ = lambda self: None
CTORATstpSPInvestorLimitPositionField_swigregister = _sptraderapi.CTORATstpSPInvestorLimitPositionField_swigregister
CTORATstpSPInvestorLimitPositionField_swigregister(CTORATstpSPInvestorLimitPositionField)




#########################################查询投资者限额############################################
class CTORATstpSPQryInvestorLimitAmountField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPQryInvestorLimitAmountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPQryInvestorLimitAmountField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryInvestorLimitAmountField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryInvestorLimitAmountField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPQryInvestorLimitAmountField_InvestorID_get, _sptraderapi.CTORATstpSPQryInvestorLimitAmountField_InvestorID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPQryInvestorLimitAmountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPQryInvestorLimitAmountField
    __del__ = lambda self: None
CTORATstpSPQryInvestorLimitAmountField_swigregister = _sptraderapi.CTORATstpSPQryInvestorLimitAmountField_swigregister
CTORATstpSPQryInvestorLimitAmountField_swigregister(CTORATstpSPQryInvestorLimitAmountField)




#########################################投资者限额############################################
class CTORATstpSPInvestorLimitAmountField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPInvestorLimitAmountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPInvestorLimitAmountField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPInvestorLimitAmountField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPInvestorLimitAmountField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPInvestorLimitAmountField_InvestorID_get, _sptraderapi.CTORATstpSPInvestorLimitAmountField_InvestorID_set)

	# 多头金额限额
    __swig_setmethods__["LongAmountLimit"] = _sptraderapi.CTORATstpSPInvestorLimitAmountField_LongAmountLimit_set
    __swig_getmethods__["LongAmountLimit"] = _sptraderapi.CTORATstpSPInvestorLimitAmountField_LongAmountLimit_get
    if _newclass:
        LongAmountLimit = _swig_property(_sptraderapi.CTORATstpSPInvestorLimitAmountField_LongAmountLimit_get, _sptraderapi.CTORATstpSPInvestorLimitAmountField_LongAmountLimit_set)

	# 多头金额冻结
    __swig_setmethods__["LongAmountFrozen"] = _sptraderapi.CTORATstpSPInvestorLimitAmountField_LongAmountFrozen_set
    __swig_getmethods__["LongAmountFrozen"] = _sptraderapi.CTORATstpSPInvestorLimitAmountField_LongAmountFrozen_get
    if _newclass:
        LongAmountFrozen = _swig_property(_sptraderapi.CTORATstpSPInvestorLimitAmountField_LongAmountFrozen_get, _sptraderapi.CTORATstpSPInvestorLimitAmountField_LongAmountFrozen_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPInvestorLimitAmountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPInvestorLimitAmountField
    __del__ = lambda self: None
CTORATstpSPInvestorLimitAmountField_swigregister = _sptraderapi.CTORATstpSPInvestorLimitAmountField_swigregister
CTORATstpSPInvestorLimitAmountField_swigregister(CTORATstpSPInvestorLimitAmountField)




#########################################查询组合撤单############################################
class CTORATstpSPQryCombOrderActionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPQryCombOrderActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPQryCombOrderActionField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryCombOrderActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryCombOrderActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPQryCombOrderActionField_InvestorID_get, _sptraderapi.CTORATstpSPQryCombOrderActionField_InvestorID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryCombOrderActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryCombOrderActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPQryCombOrderActionField_ExchangeID_get, _sptraderapi.CTORATstpSPQryCombOrderActionField_ExchangeID_set)

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPQryCombOrderActionField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPQryCombOrderActionField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPQryCombOrderActionField_MarketID_get, _sptraderapi.CTORATstpSPQryCombOrderActionField_MarketID_set)

	# 目前该字段存放的是上证所和深圳的股东代码。
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPQryCombOrderActionField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPQryCombOrderActionField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPQryCombOrderActionField_ShareholderID_get, _sptraderapi.CTORATstpSPQryCombOrderActionField_ShareholderID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPQryCombOrderActionField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPQryCombOrderActionField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPQryCombOrderActionField_BusinessUnitID_get, _sptraderapi.CTORATstpSPQryCombOrderActionField_BusinessUnitID_set)

	# 交易单元代码
    __swig_setmethods__["PbuID"] = _sptraderapi.CTORATstpSPQryCombOrderActionField_PbuID_set
    __swig_getmethods__["PbuID"] = _sptraderapi.CTORATstpSPQryCombOrderActionField_PbuID_get
    if _newclass:
        PbuID = _swig_property(_sptraderapi.CTORATstpSPQryCombOrderActionField_PbuID_get, _sptraderapi.CTORATstpSPQryCombOrderActionField_PbuID_set)

	# 全系统的唯一的组合报单撤单编号
    __swig_setmethods__["CancelCombOrderLocalID"] = _sptraderapi.CTORATstpSPQryCombOrderActionField_CancelCombOrderLocalID_set
    __swig_getmethods__["CancelCombOrderLocalID"] = _sptraderapi.CTORATstpSPQryCombOrderActionField_CancelCombOrderLocalID_get
    if _newclass:
        CancelCombOrderLocalID = _swig_property(_sptraderapi.CTORATstpSPQryCombOrderActionField_CancelCombOrderLocalID_get, _sptraderapi.CTORATstpSPQryCombOrderActionField_CancelCombOrderLocalID_set)

	# 本地组合报单编号
    __swig_setmethods__["CombOrderLocalID"] = _sptraderapi.CTORATstpSPQryCombOrderActionField_CombOrderLocalID_set
    __swig_getmethods__["CombOrderLocalID"] = _sptraderapi.CTORATstpSPQryCombOrderActionField_CombOrderLocalID_get
    if _newclass:
        CombOrderLocalID = _swig_property(_sptraderapi.CTORATstpSPQryCombOrderActionField_CombOrderLocalID_get, _sptraderapi.CTORATstpSPQryCombOrderActionField_CombOrderLocalID_set)

	# 长字符串附加信息
    __swig_setmethods__["BInfo"] = _sptraderapi.CTORATstpSPQryCombOrderActionField_BInfo_set
    __swig_getmethods__["BInfo"] = _sptraderapi.CTORATstpSPQryCombOrderActionField_BInfo_get
    if _newclass:
        BInfo = _swig_property(_sptraderapi.CTORATstpSPQryCombOrderActionField_BInfo_get, _sptraderapi.CTORATstpSPQryCombOrderActionField_BInfo_set)

	# 短字符串附加信息
    __swig_setmethods__["SInfo"] = _sptraderapi.CTORATstpSPQryCombOrderActionField_SInfo_set
    __swig_getmethods__["SInfo"] = _sptraderapi.CTORATstpSPQryCombOrderActionField_SInfo_get
    if _newclass:
        SInfo = _swig_property(_sptraderapi.CTORATstpSPQryCombOrderActionField_SInfo_get, _sptraderapi.CTORATstpSPQryCombOrderActionField_SInfo_set)

	# 整形附加信息
    __swig_setmethods__["IInfo"] = _sptraderapi.CTORATstpSPQryCombOrderActionField_IInfo_set
    __swig_getmethods__["IInfo"] = _sptraderapi.CTORATstpSPQryCombOrderActionField_IInfo_get
    if _newclass:
        IInfo = _swig_property(_sptraderapi.CTORATstpSPQryCombOrderActionField_IInfo_get, _sptraderapi.CTORATstpSPQryCombOrderActionField_IInfo_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPQryCombOrderActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPQryCombOrderActionField
    __del__ = lambda self: None
CTORATstpSPQryCombOrderActionField_swigregister = _sptraderapi.CTORATstpSPQryCombOrderActionField_swigregister
CTORATstpSPQryCombOrderActionField_swigregister(CTORATstpSPQryCombOrderActionField)




#########################################组合撤单############################################
class CTORATstpSPCombOrderActionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPCombOrderActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPCombOrderActionField, name)
    __repr__ = _swig_repr

	# 交易日
    __swig_setmethods__["TradingDay"] = _sptraderapi.CTORATstpSPCombOrderActionField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _sptraderapi.CTORATstpSPCombOrderActionField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_sptraderapi.CTORATstpSPCombOrderActionField_TradingDay_get, _sptraderapi.CTORATstpSPCombOrderActionField_TradingDay_set)

	# 交易所营业部编码
    __swig_setmethods__["BranchID"] = _sptraderapi.CTORATstpSPCombOrderActionField_BranchID_set
    __swig_getmethods__["BranchID"] = _sptraderapi.CTORATstpSPCombOrderActionField_BranchID_get
    if _newclass:
        BranchID = _swig_property(_sptraderapi.CTORATstpSPCombOrderActionField_BranchID_get, _sptraderapi.CTORATstpSPCombOrderActionField_BranchID_set)

	# 交易单元代码
    __swig_setmethods__["PbuID"] = _sptraderapi.CTORATstpSPCombOrderActionField_PbuID_set
    __swig_getmethods__["PbuID"] = _sptraderapi.CTORATstpSPCombOrderActionField_PbuID_get
    if _newclass:
        PbuID = _swig_property(_sptraderapi.CTORATstpSPCombOrderActionField_PbuID_get, _sptraderapi.CTORATstpSPCombOrderActionField_PbuID_set)

	# 本地组合委托撤单编号
    __swig_setmethods__["CancelCombOrderLocalID"] = _sptraderapi.CTORATstpSPCombOrderActionField_CancelCombOrderLocalID_set
    __swig_getmethods__["CancelCombOrderLocalID"] = _sptraderapi.CTORATstpSPCombOrderActionField_CancelCombOrderLocalID_get
    if _newclass:
        CancelCombOrderLocalID = _swig_property(_sptraderapi.CTORATstpSPCombOrderActionField_CancelCombOrderLocalID_get, _sptraderapi.CTORATstpSPCombOrderActionField_CancelCombOrderLocalID_set)

	# 组合撤单前置编号
    __swig_setmethods__["ActionFrontID"] = _sptraderapi.CTORATstpSPCombOrderActionField_ActionFrontID_set
    __swig_getmethods__["ActionFrontID"] = _sptraderapi.CTORATstpSPCombOrderActionField_ActionFrontID_get
    if _newclass:
        ActionFrontID = _swig_property(_sptraderapi.CTORATstpSPCombOrderActionField_ActionFrontID_get, _sptraderapi.CTORATstpSPCombOrderActionField_ActionFrontID_set)

	# 组合撤单会话编号
    __swig_setmethods__["ActionSessionID"] = _sptraderapi.CTORATstpSPCombOrderActionField_ActionSessionID_set
    __swig_getmethods__["ActionSessionID"] = _sptraderapi.CTORATstpSPCombOrderActionField_ActionSessionID_get
    if _newclass:
        ActionSessionID = _swig_property(_sptraderapi.CTORATstpSPCombOrderActionField_ActionSessionID_get, _sptraderapi.CTORATstpSPCombOrderActionField_ActionSessionID_set)

	# 组合撤单引用
    __swig_setmethods__["CombOrderActionRef"] = _sptraderapi.CTORATstpSPCombOrderActionField_CombOrderActionRef_set
    __swig_getmethods__["CombOrderActionRef"] = _sptraderapi.CTORATstpSPCombOrderActionField_CombOrderActionRef_get
    if _newclass:
        CombOrderActionRef = _swig_property(_sptraderapi.CTORATstpSPCombOrderActionField_CombOrderActionRef_get, _sptraderapi.CTORATstpSPCombOrderActionField_CombOrderActionRef_set)

	# 被撤本地组合委托报单编号
    __swig_setmethods__["CombOrderLocalID"] = _sptraderapi.CTORATstpSPCombOrderActionField_CombOrderLocalID_set
    __swig_getmethods__["CombOrderLocalID"] = _sptraderapi.CTORATstpSPCombOrderActionField_CombOrderLocalID_get
    if _newclass:
        CombOrderLocalID = _swig_property(_sptraderapi.CTORATstpSPCombOrderActionField_CombOrderLocalID_get, _sptraderapi.CTORATstpSPCombOrderActionField_CombOrderLocalID_set)

	# 被撤系统组合报单编号
    __swig_setmethods__["CombOrderSysID"] = _sptraderapi.CTORATstpSPCombOrderActionField_CombOrderSysID_set
    __swig_getmethods__["CombOrderSysID"] = _sptraderapi.CTORATstpSPCombOrderActionField_CombOrderSysID_get
    if _newclass:
        CombOrderSysID = _swig_property(_sptraderapi.CTORATstpSPCombOrderActionField_CombOrderSysID_get, _sptraderapi.CTORATstpSPCombOrderActionField_CombOrderSysID_set)

	# 前置编号
    __swig_setmethods__["FrontID"] = _sptraderapi.CTORATstpSPCombOrderActionField_FrontID_set
    __swig_getmethods__["FrontID"] = _sptraderapi.CTORATstpSPCombOrderActionField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_sptraderapi.CTORATstpSPCombOrderActionField_FrontID_get, _sptraderapi.CTORATstpSPCombOrderActionField_FrontID_set)

	# 会话编号
    __swig_setmethods__["SessionID"] = _sptraderapi.CTORATstpSPCombOrderActionField_SessionID_set
    __swig_getmethods__["SessionID"] = _sptraderapi.CTORATstpSPCombOrderActionField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_sptraderapi.CTORATstpSPCombOrderActionField_SessionID_get, _sptraderapi.CTORATstpSPCombOrderActionField_SessionID_set)

	# 组合报单引用
    __swig_setmethods__["OrderRef"] = _sptraderapi.CTORATstpSPCombOrderActionField_OrderRef_set
    __swig_getmethods__["OrderRef"] = _sptraderapi.CTORATstpSPCombOrderActionField_OrderRef_get
    if _newclass:
        OrderRef = _swig_property(_sptraderapi.CTORATstpSPCombOrderActionField_OrderRef_get, _sptraderapi.CTORATstpSPCombOrderActionField_OrderRef_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPCombOrderActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPCombOrderActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPCombOrderActionField_InvestorID_get, _sptraderapi.CTORATstpSPCombOrderActionField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPCombOrderActionField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPCombOrderActionField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPCombOrderActionField_BusinessUnitID_get, _sptraderapi.CTORATstpSPCombOrderActionField_BusinessUnitID_set)

	# 市场代码
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPCombOrderActionField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPCombOrderActionField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPCombOrderActionField_MarketID_get, _sptraderapi.CTORATstpSPCombOrderActionField_MarketID_set)

	# 股东账户代码
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPCombOrderActionField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPCombOrderActionField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPCombOrderActionField_ShareholderID_get, _sptraderapi.CTORATstpSPCombOrderActionField_ShareholderID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPCombOrderActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPCombOrderActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPCombOrderActionField_ExchangeID_get, _sptraderapi.CTORATstpSPCombOrderActionField_ExchangeID_set)

	# 组合代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPCombOrderActionField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPCombOrderActionField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPCombOrderActionField_SecurityID_get, _sptraderapi.CTORATstpSPCombOrderActionField_SecurityID_set)

	# 组合委托操作标志
    __swig_setmethods__["CombOrderActionFlag"] = _sptraderapi.CTORATstpSPCombOrderActionField_CombOrderActionFlag_set
    __swig_getmethods__["CombOrderActionFlag"] = _sptraderapi.CTORATstpSPCombOrderActionField_CombOrderActionFlag_get
    if _newclass:
        CombOrderActionFlag = _swig_property(_sptraderapi.CTORATstpSPCombOrderActionField_CombOrderActionFlag_get, _sptraderapi.CTORATstpSPCombOrderActionField_CombOrderActionFlag_set)

	# 撤单状态
    __swig_setmethods__["CancelOrderStatus"] = _sptraderapi.CTORATstpSPCombOrderActionField_CancelOrderStatus_set
    __swig_getmethods__["CancelOrderStatus"] = _sptraderapi.CTORATstpSPCombOrderActionField_CancelOrderStatus_get
    if _newclass:
        CancelOrderStatus = _swig_property(_sptraderapi.CTORATstpSPCombOrderActionField_CancelOrderStatus_get, _sptraderapi.CTORATstpSPCombOrderActionField_CancelOrderStatus_set)

	# 撤单数量
    __swig_setmethods__["VolumeCanceled"] = _sptraderapi.CTORATstpSPCombOrderActionField_VolumeCanceled_set
    __swig_getmethods__["VolumeCanceled"] = _sptraderapi.CTORATstpSPCombOrderActionField_VolumeCanceled_get
    if _newclass:
        VolumeCanceled = _swig_property(_sptraderapi.CTORATstpSPCombOrderActionField_VolumeCanceled_get, _sptraderapi.CTORATstpSPCombOrderActionField_VolumeCanceled_set)

	# 状态信息
    __swig_setmethods__["StatusMsg"] = _sptraderapi.CTORATstpSPCombOrderActionField_StatusMsg_set
    __swig_getmethods__["StatusMsg"] = _sptraderapi.CTORATstpSPCombOrderActionField_StatusMsg_get
    if _newclass:
        StatusMsg = _swig_property(_sptraderapi.CTORATstpSPCombOrderActionField_StatusMsg_get, _sptraderapi.CTORATstpSPCombOrderActionField_StatusMsg_set)

	# 系统错误代码
    __swig_setmethods__["ErrorID"] = _sptraderapi.CTORATstpSPCombOrderActionField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _sptraderapi.CTORATstpSPCombOrderActionField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_sptraderapi.CTORATstpSPCombOrderActionField_ErrorID_get, _sptraderapi.CTORATstpSPCombOrderActionField_ErrorID_set)

	# 报单申报用户
    __swig_setmethods__["InsertUserID"] = _sptraderapi.CTORATstpSPCombOrderActionField_InsertUserID_set
    __swig_getmethods__["InsertUserID"] = _sptraderapi.CTORATstpSPCombOrderActionField_InsertUserID_get
    if _newclass:
        InsertUserID = _swig_property(_sptraderapi.CTORATstpSPCombOrderActionField_InsertUserID_get, _sptraderapi.CTORATstpSPCombOrderActionField_InsertUserID_set)

	# 操作日期
    __swig_setmethods__["InsertDate"] = _sptraderapi.CTORATstpSPCombOrderActionField_InsertDate_set
    __swig_getmethods__["InsertDate"] = _sptraderapi.CTORATstpSPCombOrderActionField_InsertDate_get
    if _newclass:
        InsertDate = _swig_property(_sptraderapi.CTORATstpSPCombOrderActionField_InsertDate_get, _sptraderapi.CTORATstpSPCombOrderActionField_InsertDate_set)

	# 操作时间
    __swig_setmethods__["InsertTime"] = _sptraderapi.CTORATstpSPCombOrderActionField_InsertTime_set
    __swig_getmethods__["InsertTime"] = _sptraderapi.CTORATstpSPCombOrderActionField_InsertTime_get
    if _newclass:
        InsertTime = _swig_property(_sptraderapi.CTORATstpSPCombOrderActionField_InsertTime_get, _sptraderapi.CTORATstpSPCombOrderActionField_InsertTime_set)

	# 申报时间(毫秒)
    __swig_setmethods__["InsertMillisec"] = _sptraderapi.CTORATstpSPCombOrderActionField_InsertMillisec_set
    __swig_getmethods__["InsertMillisec"] = _sptraderapi.CTORATstpSPCombOrderActionField_InsertMillisec_get
    if _newclass:
        InsertMillisec = _swig_property(_sptraderapi.CTORATstpSPCombOrderActionField_InsertMillisec_get, _sptraderapi.CTORATstpSPCombOrderActionField_InsertMillisec_set)

	# IP地址
    __swig_setmethods__["IPAddress"] = _sptraderapi.CTORATstpSPCombOrderActionField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _sptraderapi.CTORATstpSPCombOrderActionField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_sptraderapi.CTORATstpSPCombOrderActionField_IPAddress_get, _sptraderapi.CTORATstpSPCombOrderActionField_IPAddress_set)

	# Mac地址
    __swig_setmethods__["MacAddress"] = _sptraderapi.CTORATstpSPCombOrderActionField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _sptraderapi.CTORATstpSPCombOrderActionField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_sptraderapi.CTORATstpSPCombOrderActionField_MacAddress_get, _sptraderapi.CTORATstpSPCombOrderActionField_MacAddress_set)

	# 请求编号
    __swig_setmethods__["RequestID"] = _sptraderapi.CTORATstpSPCombOrderActionField_RequestID_set
    __swig_getmethods__["RequestID"] = _sptraderapi.CTORATstpSPCombOrderActionField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_sptraderapi.CTORATstpSPCombOrderActionField_RequestID_get, _sptraderapi.CTORATstpSPCombOrderActionField_RequestID_set)

	# 终端信息
    __swig_setmethods__["TerminalInfo"] = _sptraderapi.CTORATstpSPCombOrderActionField_TerminalInfo_set
    __swig_getmethods__["TerminalInfo"] = _sptraderapi.CTORATstpSPCombOrderActionField_TerminalInfo_get
    if _newclass:
        TerminalInfo = _swig_property(_sptraderapi.CTORATstpSPCombOrderActionField_TerminalInfo_get, _sptraderapi.CTORATstpSPCombOrderActionField_TerminalInfo_set)

	# 长字符串附加信息
    __swig_setmethods__["BInfo"] = _sptraderapi.CTORATstpSPCombOrderActionField_BInfo_set
    __swig_getmethods__["BInfo"] = _sptraderapi.CTORATstpSPCombOrderActionField_BInfo_get
    if _newclass:
        BInfo = _swig_property(_sptraderapi.CTORATstpSPCombOrderActionField_BInfo_get, _sptraderapi.CTORATstpSPCombOrderActionField_BInfo_set)

	# 短字符串附加信息
    __swig_setmethods__["SInfo"] = _sptraderapi.CTORATstpSPCombOrderActionField_SInfo_set
    __swig_getmethods__["SInfo"] = _sptraderapi.CTORATstpSPCombOrderActionField_SInfo_get
    if _newclass:
        SInfo = _swig_property(_sptraderapi.CTORATstpSPCombOrderActionField_SInfo_get, _sptraderapi.CTORATstpSPCombOrderActionField_SInfo_set)

	# 整形附加信息
    __swig_setmethods__["IInfo"] = _sptraderapi.CTORATstpSPCombOrderActionField_IInfo_set
    __swig_getmethods__["IInfo"] = _sptraderapi.CTORATstpSPCombOrderActionField_IInfo_get
    if _newclass:
        IInfo = _swig_property(_sptraderapi.CTORATstpSPCombOrderActionField_IInfo_get, _sptraderapi.CTORATstpSPCombOrderActionField_IInfo_set)

	# 委托方式
    __swig_setmethods__["Operway"] = _sptraderapi.CTORATstpSPCombOrderActionField_Operway_set
    __swig_getmethods__["Operway"] = _sptraderapi.CTORATstpSPCombOrderActionField_Operway_get
    if _newclass:
        Operway = _swig_property(_sptraderapi.CTORATstpSPCombOrderActionField_Operway_get, _sptraderapi.CTORATstpSPCombOrderActionField_Operway_set)

	# 硬盘序列号
    __swig_setmethods__["HDSerial"] = _sptraderapi.CTORATstpSPCombOrderActionField_HDSerial_set
    __swig_getmethods__["HDSerial"] = _sptraderapi.CTORATstpSPCombOrderActionField_HDSerial_get
    if _newclass:
        HDSerial = _swig_property(_sptraderapi.CTORATstpSPCombOrderActionField_HDSerial_get, _sptraderapi.CTORATstpSPCombOrderActionField_HDSerial_set)

	# 移动设备手机号
    __swig_setmethods__["Mobile"] = _sptraderapi.CTORATstpSPCombOrderActionField_Mobile_set
    __swig_getmethods__["Mobile"] = _sptraderapi.CTORATstpSPCombOrderActionField_Mobile_get
    if _newclass:
        Mobile = _swig_property(_sptraderapi.CTORATstpSPCombOrderActionField_Mobile_get, _sptraderapi.CTORATstpSPCombOrderActionField_Mobile_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPCombOrderActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPCombOrderActionField
    __del__ = lambda self: None
CTORATstpSPCombOrderActionField_swigregister = _sptraderapi.CTORATstpSPCombOrderActionField_swigregister
CTORATstpSPCombOrderActionField_swigregister(CTORATstpSPCombOrderActionField)




#########################################查询组合委托############################################
class CTORATstpSPQryCombOrderField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPQryCombOrderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPQryCombOrderField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryCombOrderField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryCombOrderField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPQryCombOrderField_InvestorID_get, _sptraderapi.CTORATstpSPQryCombOrderField_InvestorID_set)

	# 组合合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPQryCombOrderField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPQryCombOrderField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPQryCombOrderField_SecurityID_get, _sptraderapi.CTORATstpSPQryCombOrderField_SecurityID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryCombOrderField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryCombOrderField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPQryCombOrderField_ExchangeID_get, _sptraderapi.CTORATstpSPQryCombOrderField_ExchangeID_set)

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPQryCombOrderField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPQryCombOrderField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPQryCombOrderField_MarketID_get, _sptraderapi.CTORATstpSPQryCombOrderField_MarketID_set)

	# 客户在系统中的编号，编号唯一且遵循交易所制定的编码规则
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPQryCombOrderField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPQryCombOrderField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPQryCombOrderField_ShareholderID_get, _sptraderapi.CTORATstpSPQryCombOrderField_ShareholderID_set)

	# 组合系统编号
    __swig_setmethods__["CombOrderSysID"] = _sptraderapi.CTORATstpSPQryCombOrderField_CombOrderSysID_set
    __swig_getmethods__["CombOrderSysID"] = _sptraderapi.CTORATstpSPQryCombOrderField_CombOrderSysID_get
    if _newclass:
        CombOrderSysID = _swig_property(_sptraderapi.CTORATstpSPQryCombOrderField_CombOrderSysID_get, _sptraderapi.CTORATstpSPQryCombOrderField_CombOrderSysID_set)

	# Time
    __swig_setmethods__["InsertTimeStart"] = _sptraderapi.CTORATstpSPQryCombOrderField_InsertTimeStart_set
    __swig_getmethods__["InsertTimeStart"] = _sptraderapi.CTORATstpSPQryCombOrderField_InsertTimeStart_get
    if _newclass:
        InsertTimeStart = _swig_property(_sptraderapi.CTORATstpSPQryCombOrderField_InsertTimeStart_get, _sptraderapi.CTORATstpSPQryCombOrderField_InsertTimeStart_set)

	# Time
    __swig_setmethods__["InsertTimeEnd"] = _sptraderapi.CTORATstpSPQryCombOrderField_InsertTimeEnd_set
    __swig_getmethods__["InsertTimeEnd"] = _sptraderapi.CTORATstpSPQryCombOrderField_InsertTimeEnd_get
    if _newclass:
        InsertTimeEnd = _swig_property(_sptraderapi.CTORATstpSPQryCombOrderField_InsertTimeEnd_get, _sptraderapi.CTORATstpSPQryCombOrderField_InsertTimeEnd_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPQryCombOrderField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPQryCombOrderField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPQryCombOrderField_BusinessUnitID_get, _sptraderapi.CTORATstpSPQryCombOrderField_BusinessUnitID_set)

	# 组合策略
    __swig_setmethods__["CombinationStrategy"] = _sptraderapi.CTORATstpSPQryCombOrderField_CombinationStrategy_set
    __swig_getmethods__["CombinationStrategy"] = _sptraderapi.CTORATstpSPQryCombOrderField_CombinationStrategy_get
    if _newclass:
        CombinationStrategy = _swig_property(_sptraderapi.CTORATstpSPQryCombOrderField_CombinationStrategy_get, _sptraderapi.CTORATstpSPQryCombOrderField_CombinationStrategy_set)

	# 组合报单类别
    __swig_setmethods__["CombDirection"] = _sptraderapi.CTORATstpSPQryCombOrderField_CombDirection_set
    __swig_getmethods__["CombDirection"] = _sptraderapi.CTORATstpSPQryCombOrderField_CombDirection_get
    if _newclass:
        CombDirection = _swig_property(_sptraderapi.CTORATstpSPQryCombOrderField_CombDirection_get, _sptraderapi.CTORATstpSPQryCombOrderField_CombDirection_set)

	# 长字符串附加信息
    __swig_setmethods__["BInfo"] = _sptraderapi.CTORATstpSPQryCombOrderField_BInfo_set
    __swig_getmethods__["BInfo"] = _sptraderapi.CTORATstpSPQryCombOrderField_BInfo_get
    if _newclass:
        BInfo = _swig_property(_sptraderapi.CTORATstpSPQryCombOrderField_BInfo_get, _sptraderapi.CTORATstpSPQryCombOrderField_BInfo_set)

	# 短字符串附加信息
    __swig_setmethods__["SInfo"] = _sptraderapi.CTORATstpSPQryCombOrderField_SInfo_set
    __swig_getmethods__["SInfo"] = _sptraderapi.CTORATstpSPQryCombOrderField_SInfo_get
    if _newclass:
        SInfo = _swig_property(_sptraderapi.CTORATstpSPQryCombOrderField_SInfo_get, _sptraderapi.CTORATstpSPQryCombOrderField_SInfo_set)

	# 整形附加信息
    __swig_setmethods__["IInfo"] = _sptraderapi.CTORATstpSPQryCombOrderField_IInfo_set
    __swig_getmethods__["IInfo"] = _sptraderapi.CTORATstpSPQryCombOrderField_IInfo_get
    if _newclass:
        IInfo = _swig_property(_sptraderapi.CTORATstpSPQryCombOrderField_IInfo_get, _sptraderapi.CTORATstpSPQryCombOrderField_IInfo_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPQryCombOrderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPQryCombOrderField
    __del__ = lambda self: None
CTORATstpSPQryCombOrderField_swigregister = _sptraderapi.CTORATstpSPQryCombOrderField_swigregister
CTORATstpSPQryCombOrderField_swigregister(CTORATstpSPQryCombOrderField)




#########################################查询投资者组合持仓############################################
class CTORATstpSPQryCombPositionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPQryCombPositionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPQryCombPositionField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryCombPositionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryCombPositionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPQryCombPositionField_InvestorID_get, _sptraderapi.CTORATstpSPQryCombPositionField_InvestorID_set)

	# 组合证券代码(A&B)
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPQryCombPositionField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPQryCombPositionField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPQryCombPositionField_SecurityID_get, _sptraderapi.CTORATstpSPQryCombPositionField_SecurityID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryCombPositionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryCombPositionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPQryCombPositionField_ExchangeID_get, _sptraderapi.CTORATstpSPQryCombPositionField_ExchangeID_set)

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPQryCombPositionField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPQryCombPositionField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPQryCombPositionField_MarketID_get, _sptraderapi.CTORATstpSPQryCombPositionField_MarketID_set)

	# 交易账户代码
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPQryCombPositionField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPQryCombPositionField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPQryCombPositionField_ShareholderID_get, _sptraderapi.CTORATstpSPQryCombPositionField_ShareholderID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPQryCombPositionField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPQryCombPositionField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPQryCombPositionField_BusinessUnitID_get, _sptraderapi.CTORATstpSPQryCombPositionField_BusinessUnitID_set)

	# 组合策略(CNSJC/CXSJC/PXSJC/PNSJC/KS/KKS/ZBD)
    __swig_setmethods__["CombinationStrategy"] = _sptraderapi.CTORATstpSPQryCombPositionField_CombinationStrategy_set
    __swig_getmethods__["CombinationStrategy"] = _sptraderapi.CTORATstpSPQryCombPositionField_CombinationStrategy_get
    if _newclass:
        CombinationStrategy = _swig_property(_sptraderapi.CTORATstpSPQryCombPositionField_CombinationStrategy_get, _sptraderapi.CTORATstpSPQryCombPositionField_CombinationStrategy_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPQryCombPositionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPQryCombPositionField
    __del__ = lambda self: None
CTORATstpSPQryCombPositionField_swigregister = _sptraderapi.CTORATstpSPQryCombPositionField_swigregister
CTORATstpSPQryCombPositionField_swigregister(CTORATstpSPQryCombPositionField)




#########################################投资者组合持仓############################################
class CTORATstpSPCombPositionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPCombPositionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPCombPositionField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPCombPositionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPCombPositionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPCombPositionField_InvestorID_get, _sptraderapi.CTORATstpSPCombPositionField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPCombPositionField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPCombPositionField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPCombPositionField_BusinessUnitID_get, _sptraderapi.CTORATstpSPCombPositionField_BusinessUnitID_set)

	# 市场代码
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPCombPositionField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPCombPositionField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPCombPositionField_MarketID_get, _sptraderapi.CTORATstpSPCombPositionField_MarketID_set)

	# 客户代码
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPCombPositionField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPCombPositionField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPCombPositionField_ShareholderID_get, _sptraderapi.CTORATstpSPCombPositionField_ShareholderID_set)

	# 交易日
    __swig_setmethods__["TradingDay"] = _sptraderapi.CTORATstpSPCombPositionField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _sptraderapi.CTORATstpSPCombPositionField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_sptraderapi.CTORATstpSPCombPositionField_TradingDay_get, _sptraderapi.CTORATstpSPCombPositionField_TradingDay_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPCombPositionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPCombPositionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPCombPositionField_ExchangeID_get, _sptraderapi.CTORATstpSPCombPositionField_ExchangeID_set)

	# 组合证券代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPCombPositionField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPCombPositionField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPCombPositionField_SecurityID_get, _sptraderapi.CTORATstpSPCombPositionField_SecurityID_set)

	# 组合策略
    __swig_setmethods__["CombinationStrategy"] = _sptraderapi.CTORATstpSPCombPositionField_CombinationStrategy_set
    __swig_getmethods__["CombinationStrategy"] = _sptraderapi.CTORATstpSPCombPositionField_CombinationStrategy_get
    if _newclass:
        CombinationStrategy = _swig_property(_sptraderapi.CTORATstpSPCombPositionField_CombinationStrategy_get, _sptraderapi.CTORATstpSPCombPositionField_CombinationStrategy_set)

	# 昨日持仓
    __swig_setmethods__["HistoryPos"] = _sptraderapi.CTORATstpSPCombPositionField_HistoryPos_set
    __swig_getmethods__["HistoryPos"] = _sptraderapi.CTORATstpSPCombPositionField_HistoryPos_get
    if _newclass:
        HistoryPos = _swig_property(_sptraderapi.CTORATstpSPCombPositionField_HistoryPos_get, _sptraderapi.CTORATstpSPCombPositionField_HistoryPos_set)

	# 昨日持仓冻结
    __swig_setmethods__["HistoryPosFrozen"] = _sptraderapi.CTORATstpSPCombPositionField_HistoryPosFrozen_set
    __swig_getmethods__["HistoryPosFrozen"] = _sptraderapi.CTORATstpSPCombPositionField_HistoryPosFrozen_get
    if _newclass:
        HistoryPosFrozen = _swig_property(_sptraderapi.CTORATstpSPCombPositionField_HistoryPosFrozen_get, _sptraderapi.CTORATstpSPCombPositionField_HistoryPosFrozen_set)

	# 今日买卖持仓
    __swig_setmethods__["TodayPos"] = _sptraderapi.CTORATstpSPCombPositionField_TodayPos_set
    __swig_getmethods__["TodayPos"] = _sptraderapi.CTORATstpSPCombPositionField_TodayPos_get
    if _newclass:
        TodayPos = _swig_property(_sptraderapi.CTORATstpSPCombPositionField_TodayPos_get, _sptraderapi.CTORATstpSPCombPositionField_TodayPos_set)

	# 今日买卖持仓冻结
    __swig_setmethods__["TodayPosFrozen"] = _sptraderapi.CTORATstpSPCombPositionField_TodayPosFrozen_set
    __swig_getmethods__["TodayPosFrozen"] = _sptraderapi.CTORATstpSPCombPositionField_TodayPosFrozen_get
    if _newclass:
        TodayPosFrozen = _swig_property(_sptraderapi.CTORATstpSPCombPositionField_TodayPosFrozen_get, _sptraderapi.CTORATstpSPCombPositionField_TodayPosFrozen_set)

	# 占用的保证金
    __swig_setmethods__["Margin"] = _sptraderapi.CTORATstpSPCombPositionField_Margin_set
    __swig_getmethods__["Margin"] = _sptraderapi.CTORATstpSPCombPositionField_Margin_get
    if _newclass:
        Margin = _swig_property(_sptraderapi.CTORATstpSPCombPositionField_Margin_get, _sptraderapi.CTORATstpSPCombPositionField_Margin_set)

	# 冻结的保证金
    __swig_setmethods__["FrozenMargin"] = _sptraderapi.CTORATstpSPCombPositionField_FrozenMargin_set
    __swig_getmethods__["FrozenMargin"] = _sptraderapi.CTORATstpSPCombPositionField_FrozenMargin_get
    if _newclass:
        FrozenMargin = _swig_property(_sptraderapi.CTORATstpSPCombPositionField_FrozenMargin_get, _sptraderapi.CTORATstpSPCombPositionField_FrozenMargin_set)

	# 冻结的手续费
    __swig_setmethods__["FrozenCommission"] = _sptraderapi.CTORATstpSPCombPositionField_FrozenCommission_set
    __swig_getmethods__["FrozenCommission"] = _sptraderapi.CTORATstpSPCombPositionField_FrozenCommission_get
    if _newclass:
        FrozenCommission = _swig_property(_sptraderapi.CTORATstpSPCombPositionField_FrozenCommission_get, _sptraderapi.CTORATstpSPCombPositionField_FrozenCommission_set)

	# 手续费
    __swig_setmethods__["Commission"] = _sptraderapi.CTORATstpSPCombPositionField_Commission_set
    __swig_getmethods__["Commission"] = _sptraderapi.CTORATstpSPCombPositionField_Commission_get
    if _newclass:
        Commission = _swig_property(_sptraderapi.CTORATstpSPCombPositionField_Commission_get, _sptraderapi.CTORATstpSPCombPositionField_Commission_set)

	# 上次余额(盘中不变)
    __swig_setmethods__["PrePosition"] = _sptraderapi.CTORATstpSPCombPositionField_PrePosition_set
    __swig_getmethods__["PrePosition"] = _sptraderapi.CTORATstpSPCombPositionField_PrePosition_get
    if _newclass:
        PrePosition = _swig_property(_sptraderapi.CTORATstpSPCombPositionField_PrePosition_get, _sptraderapi.CTORATstpSPCombPositionField_PrePosition_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPCombPositionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPCombPositionField
    __del__ = lambda self: None
CTORATstpSPCombPositionField_swigregister = _sptraderapi.CTORATstpSPCombPositionField_swigregister
CTORATstpSPCombPositionField_swigregister(CTORATstpSPCombPositionField)




#########################################查询投资者组合持仓明细############################################
class CTORATstpSPQryCombPosDetailField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPQryCombPosDetailField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPQryCombPosDetailField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryCombPosDetailField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryCombPosDetailField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPQryCombPosDetailField_InvestorID_get, _sptraderapi.CTORATstpSPQryCombPosDetailField_InvestorID_set)

	# 组合合约代码
    __swig_setmethods__["CombSecurityID"] = _sptraderapi.CTORATstpSPQryCombPosDetailField_CombSecurityID_set
    __swig_getmethods__["CombSecurityID"] = _sptraderapi.CTORATstpSPQryCombPosDetailField_CombSecurityID_get
    if _newclass:
        CombSecurityID = _swig_property(_sptraderapi.CTORATstpSPQryCombPosDetailField_CombSecurityID_get, _sptraderapi.CTORATstpSPQryCombPosDetailField_CombSecurityID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryCombPosDetailField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryCombPosDetailField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPQryCombPosDetailField_ExchangeID_get, _sptraderapi.CTORATstpSPQryCombPosDetailField_ExchangeID_set)

	# 市场代码
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPQryCombPosDetailField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPQryCombPosDetailField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPQryCombPosDetailField_MarketID_get, _sptraderapi.CTORATstpSPQryCombPosDetailField_MarketID_set)

	# 交易账户代码
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPQryCombPosDetailField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPQryCombPosDetailField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPQryCombPosDetailField_ShareholderID_get, _sptraderapi.CTORATstpSPQryCombPosDetailField_ShareholderID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPQryCombPosDetailField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPQryCombPosDetailField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPQryCombPosDetailField_BusinessUnitID_get, _sptraderapi.CTORATstpSPQryCombPosDetailField_BusinessUnitID_set)

	# 组合策略
    __swig_setmethods__["CombinationStrategy"] = _sptraderapi.CTORATstpSPQryCombPosDetailField_CombinationStrategy_set
    __swig_getmethods__["CombinationStrategy"] = _sptraderapi.CTORATstpSPQryCombPosDetailField_CombinationStrategy_get
    if _newclass:
        CombinationStrategy = _swig_property(_sptraderapi.CTORATstpSPQryCombPosDetailField_CombinationStrategy_get, _sptraderapi.CTORATstpSPQryCombPosDetailField_CombinationStrategy_set)

	# 交易所组合编码
    __swig_setmethods__["ExchangeCombID"] = _sptraderapi.CTORATstpSPQryCombPosDetailField_ExchangeCombID_set
    __swig_getmethods__["ExchangeCombID"] = _sptraderapi.CTORATstpSPQryCombPosDetailField_ExchangeCombID_get
    if _newclass:
        ExchangeCombID = _swig_property(_sptraderapi.CTORATstpSPQryCombPosDetailField_ExchangeCombID_get, _sptraderapi.CTORATstpSPQryCombPosDetailField_ExchangeCombID_set)

	# 组合状态
    __swig_setmethods__["CombinationStatus"] = _sptraderapi.CTORATstpSPQryCombPosDetailField_CombinationStatus_set
    __swig_getmethods__["CombinationStatus"] = _sptraderapi.CTORATstpSPQryCombPosDetailField_CombinationStatus_get
    if _newclass:
        CombinationStatus = _swig_property(_sptraderapi.CTORATstpSPQryCombPosDetailField_CombinationStatus_get, _sptraderapi.CTORATstpSPQryCombPosDetailField_CombinationStatus_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPQryCombPosDetailField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPQryCombPosDetailField
    __del__ = lambda self: None
CTORATstpSPQryCombPosDetailField_swigregister = _sptraderapi.CTORATstpSPQryCombPosDetailField_swigregister
CTORATstpSPQryCombPosDetailField_swigregister(CTORATstpSPQryCombPosDetailField)




#########################################投资者组合持仓明细############################################
class CTORATstpSPCombPosDetailField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPCombPosDetailField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPCombPosDetailField, name)
    __repr__ = _swig_repr

	# 交易日
    __swig_setmethods__["TradingDay"] = _sptraderapi.CTORATstpSPCombPosDetailField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _sptraderapi.CTORATstpSPCombPosDetailField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_sptraderapi.CTORATstpSPCombPosDetailField_TradingDay_get, _sptraderapi.CTORATstpSPCombPosDetailField_TradingDay_set)

	# 交易所组合编码
    __swig_setmethods__["ExchangeCombID"] = _sptraderapi.CTORATstpSPCombPosDetailField_ExchangeCombID_set
    __swig_getmethods__["ExchangeCombID"] = _sptraderapi.CTORATstpSPCombPosDetailField_ExchangeCombID_get
    if _newclass:
        ExchangeCombID = _swig_property(_sptraderapi.CTORATstpSPCombPosDetailField_ExchangeCombID_get, _sptraderapi.CTORATstpSPCombPosDetailField_ExchangeCombID_set)

	# 组合策略
    __swig_setmethods__["CombinationStrategy"] = _sptraderapi.CTORATstpSPCombPosDetailField_CombinationStrategy_set
    __swig_getmethods__["CombinationStrategy"] = _sptraderapi.CTORATstpSPCombPosDetailField_CombinationStrategy_get
    if _newclass:
        CombinationStrategy = _swig_property(_sptraderapi.CTORATstpSPCombPosDetailField_CombinationStrategy_get, _sptraderapi.CTORATstpSPCombPosDetailField_CombinationStrategy_set)

	# 组合证券代码
    __swig_setmethods__["CombSecurityID"] = _sptraderapi.CTORATstpSPCombPosDetailField_CombSecurityID_set
    __swig_getmethods__["CombSecurityID"] = _sptraderapi.CTORATstpSPCombPosDetailField_CombSecurityID_get
    if _newclass:
        CombSecurityID = _swig_property(_sptraderapi.CTORATstpSPCombPosDetailField_CombSecurityID_get, _sptraderapi.CTORATstpSPCombPosDetailField_CombSecurityID_set)

	# 经纪公司部门代码
    __swig_setmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPCombPosDetailField_DepartmentID_set
    __swig_getmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPCombPosDetailField_DepartmentID_get
    if _newclass:
        DepartmentID = _swig_property(_sptraderapi.CTORATstpSPCombPosDetailField_DepartmentID_get, _sptraderapi.CTORATstpSPCombPosDetailField_DepartmentID_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPCombPosDetailField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPCombPosDetailField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPCombPosDetailField_InvestorID_get, _sptraderapi.CTORATstpSPCombPosDetailField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPCombPosDetailField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPCombPosDetailField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPCombPosDetailField_BusinessUnitID_get, _sptraderapi.CTORATstpSPCombPosDetailField_BusinessUnitID_set)

	# 市场代码
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPCombPosDetailField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPCombPosDetailField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPCombPosDetailField_MarketID_get, _sptraderapi.CTORATstpSPCombPosDetailField_MarketID_set)

	# 客户代码
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPCombPosDetailField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPCombPosDetailField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPCombPosDetailField_ShareholderID_get, _sptraderapi.CTORATstpSPCombPosDetailField_ShareholderID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPCombPosDetailField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPCombPosDetailField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPCombPosDetailField_ExchangeID_get, _sptraderapi.CTORATstpSPCombPosDetailField_ExchangeID_set)

	# 昨日持仓
    __swig_setmethods__["HistoryPos"] = _sptraderapi.CTORATstpSPCombPosDetailField_HistoryPos_set
    __swig_getmethods__["HistoryPos"] = _sptraderapi.CTORATstpSPCombPosDetailField_HistoryPos_get
    if _newclass:
        HistoryPos = _swig_property(_sptraderapi.CTORATstpSPCombPosDetailField_HistoryPos_get, _sptraderapi.CTORATstpSPCombPosDetailField_HistoryPos_set)

	# 今日买卖持仓
    __swig_setmethods__["TodayPos"] = _sptraderapi.CTORATstpSPCombPosDetailField_TodayPos_set
    __swig_getmethods__["TodayPos"] = _sptraderapi.CTORATstpSPCombPosDetailField_TodayPos_get
    if _newclass:
        TodayPos = _swig_property(_sptraderapi.CTORATstpSPCombPosDetailField_TodayPos_get, _sptraderapi.CTORATstpSPCombPosDetailField_TodayPos_set)

	# 组合时期
    __swig_setmethods__["TradeDate"] = _sptraderapi.CTORATstpSPCombPosDetailField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _sptraderapi.CTORATstpSPCombPosDetailField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_sptraderapi.CTORATstpSPCombPosDetailField_TradeDate_get, _sptraderapi.CTORATstpSPCombPosDetailField_TradeDate_set)

	# 组合时间
    __swig_setmethods__["TradeTime"] = _sptraderapi.CTORATstpSPCombPosDetailField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _sptraderapi.CTORATstpSPCombPosDetailField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_sptraderapi.CTORATstpSPCombPosDetailField_TradeTime_get, _sptraderapi.CTORATstpSPCombPosDetailField_TradeTime_set)

	# 组合状态
    __swig_setmethods__["CombinationStatus"] = _sptraderapi.CTORATstpSPCombPosDetailField_CombinationStatus_set
    __swig_getmethods__["CombinationStatus"] = _sptraderapi.CTORATstpSPCombPosDetailField_CombinationStatus_get
    if _newclass:
        CombinationStatus = _swig_property(_sptraderapi.CTORATstpSPCombPosDetailField_CombinationStatus_get, _sptraderapi.CTORATstpSPCombPosDetailField_CombinationStatus_set)

	# 成份合约个数，最多四条腿
    __swig_setmethods__["NoLegs"] = _sptraderapi.CTORATstpSPCombPosDetailField_NoLegs_set
    __swig_getmethods__["NoLegs"] = _sptraderapi.CTORATstpSPCombPosDetailField_NoLegs_get
    if _newclass:
        NoLegs = _swig_property(_sptraderapi.CTORATstpSPCombPosDetailField_NoLegs_get, _sptraderapi.CTORATstpSPCombPosDetailField_NoLegs_set)

	# 第一腿合约代码
    __swig_setmethods__["Leg1SecurityID"] = _sptraderapi.CTORATstpSPCombPosDetailField_Leg1SecurityID_set
    __swig_getmethods__["Leg1SecurityID"] = _sptraderapi.CTORATstpSPCombPosDetailField_Leg1SecurityID_get
    if _newclass:
        Leg1SecurityID = _swig_property(_sptraderapi.CTORATstpSPCombPosDetailField_Leg1SecurityID_get, _sptraderapi.CTORATstpSPCombPosDetailField_Leg1SecurityID_set)

	# 第一腿昨日组合数量
    __swig_setmethods__["Leg1HistoryPos"] = _sptraderapi.CTORATstpSPCombPosDetailField_Leg1HistoryPos_set
    __swig_getmethods__["Leg1HistoryPos"] = _sptraderapi.CTORATstpSPCombPosDetailField_Leg1HistoryPos_get
    if _newclass:
        Leg1HistoryPos = _swig_property(_sptraderapi.CTORATstpSPCombPosDetailField_Leg1HistoryPos_get, _sptraderapi.CTORATstpSPCombPosDetailField_Leg1HistoryPos_set)

	# 第一腿今日组合数量
    __swig_setmethods__["Leg1TodayPos"] = _sptraderapi.CTORATstpSPCombPosDetailField_Leg1TodayPos_set
    __swig_getmethods__["Leg1TodayPos"] = _sptraderapi.CTORATstpSPCombPosDetailField_Leg1TodayPos_get
    if _newclass:
        Leg1TodayPos = _swig_property(_sptraderapi.CTORATstpSPCombPosDetailField_Leg1TodayPos_get, _sptraderapi.CTORATstpSPCombPosDetailField_Leg1TodayPos_set)

	# 第一腿持仓方向
    __swig_setmethods__["Leg1PosiDirection"] = _sptraderapi.CTORATstpSPCombPosDetailField_Leg1PosiDirection_set
    __swig_getmethods__["Leg1PosiDirection"] = _sptraderapi.CTORATstpSPCombPosDetailField_Leg1PosiDirection_get
    if _newclass:
        Leg1PosiDirection = _swig_property(_sptraderapi.CTORATstpSPCombPosDetailField_Leg1PosiDirection_get, _sptraderapi.CTORATstpSPCombPosDetailField_Leg1PosiDirection_set)

	# 第一腿期权类型
    __swig_setmethods__["Leg1OptionsType"] = _sptraderapi.CTORATstpSPCombPosDetailField_Leg1OptionsType_set
    __swig_getmethods__["Leg1OptionsType"] = _sptraderapi.CTORATstpSPCombPosDetailField_Leg1OptionsType_get
    if _newclass:
        Leg1OptionsType = _swig_property(_sptraderapi.CTORATstpSPCombPosDetailField_Leg1OptionsType_get, _sptraderapi.CTORATstpSPCombPosDetailField_Leg1OptionsType_set)

	# 第二腿合约代码
    __swig_setmethods__["Leg2SecurityID"] = _sptraderapi.CTORATstpSPCombPosDetailField_Leg2SecurityID_set
    __swig_getmethods__["Leg2SecurityID"] = _sptraderapi.CTORATstpSPCombPosDetailField_Leg2SecurityID_get
    if _newclass:
        Leg2SecurityID = _swig_property(_sptraderapi.CTORATstpSPCombPosDetailField_Leg2SecurityID_get, _sptraderapi.CTORATstpSPCombPosDetailField_Leg2SecurityID_set)

	# 第二腿昨日组合数量
    __swig_setmethods__["Leg2HistoryPos"] = _sptraderapi.CTORATstpSPCombPosDetailField_Leg2HistoryPos_set
    __swig_getmethods__["Leg2HistoryPos"] = _sptraderapi.CTORATstpSPCombPosDetailField_Leg2HistoryPos_get
    if _newclass:
        Leg2HistoryPos = _swig_property(_sptraderapi.CTORATstpSPCombPosDetailField_Leg2HistoryPos_get, _sptraderapi.CTORATstpSPCombPosDetailField_Leg2HistoryPos_set)

	# 第二腿今日组合数量
    __swig_setmethods__["Leg2TodayPos"] = _sptraderapi.CTORATstpSPCombPosDetailField_Leg2TodayPos_set
    __swig_getmethods__["Leg2TodayPos"] = _sptraderapi.CTORATstpSPCombPosDetailField_Leg2TodayPos_get
    if _newclass:
        Leg2TodayPos = _swig_property(_sptraderapi.CTORATstpSPCombPosDetailField_Leg2TodayPos_get, _sptraderapi.CTORATstpSPCombPosDetailField_Leg2TodayPos_set)

	# 第二腿持仓方向
    __swig_setmethods__["Leg2PosiDirection"] = _sptraderapi.CTORATstpSPCombPosDetailField_Leg2PosiDirection_set
    __swig_getmethods__["Leg2PosiDirection"] = _sptraderapi.CTORATstpSPCombPosDetailField_Leg2PosiDirection_get
    if _newclass:
        Leg2PosiDirection = _swig_property(_sptraderapi.CTORATstpSPCombPosDetailField_Leg2PosiDirection_get, _sptraderapi.CTORATstpSPCombPosDetailField_Leg2PosiDirection_set)

	# 第二腿期权类型
    __swig_setmethods__["Leg2OptionsType"] = _sptraderapi.CTORATstpSPCombPosDetailField_Leg2OptionsType_set
    __swig_getmethods__["Leg2OptionsType"] = _sptraderapi.CTORATstpSPCombPosDetailField_Leg2OptionsType_get
    if _newclass:
        Leg2OptionsType = _swig_property(_sptraderapi.CTORATstpSPCombPosDetailField_Leg2OptionsType_get, _sptraderapi.CTORATstpSPCombPosDetailField_Leg2OptionsType_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPCombPosDetailField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPCombPosDetailField
    __del__ = lambda self: None
CTORATstpSPCombPosDetailField_swigregister = _sptraderapi.CTORATstpSPCombPosDetailField_swigregister
CTORATstpSPCombPosDetailField_swigregister(CTORATstpSPCombPosDetailField)




#########################################查询行权指派明细############################################
class CTORATstpSPQryExerciseAppointmentField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPQryExerciseAppointmentField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPQryExerciseAppointmentField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryExerciseAppointmentField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryExerciseAppointmentField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPQryExerciseAppointmentField_InvestorID_get, _sptraderapi.CTORATstpSPQryExerciseAppointmentField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPQryExerciseAppointmentField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPQryExerciseAppointmentField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPQryExerciseAppointmentField_BusinessUnitID_get, _sptraderapi.CTORATstpSPQryExerciseAppointmentField_BusinessUnitID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryExerciseAppointmentField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryExerciseAppointmentField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPQryExerciseAppointmentField_ExchangeID_get, _sptraderapi.CTORATstpSPQryExerciseAppointmentField_ExchangeID_set)

	# 行权日期
    __swig_setmethods__["ExerciseDay"] = _sptraderapi.CTORATstpSPQryExerciseAppointmentField_ExerciseDay_set
    __swig_getmethods__["ExerciseDay"] = _sptraderapi.CTORATstpSPQryExerciseAppointmentField_ExerciseDay_get
    if _newclass:
        ExerciseDay = _swig_property(_sptraderapi.CTORATstpSPQryExerciseAppointmentField_ExerciseDay_get, _sptraderapi.CTORATstpSPQryExerciseAppointmentField_ExerciseDay_set)

	# 交易单元代码
    __swig_setmethods__["PbuID"] = _sptraderapi.CTORATstpSPQryExerciseAppointmentField_PbuID_set
    __swig_getmethods__["PbuID"] = _sptraderapi.CTORATstpSPQryExerciseAppointmentField_PbuID_get
    if _newclass:
        PbuID = _swig_property(_sptraderapi.CTORATstpSPQryExerciseAppointmentField_PbuID_get, _sptraderapi.CTORATstpSPQryExerciseAppointmentField_PbuID_set)

	# 客户在系统中的编号，编号唯一且遵循交易所制定的编码规则
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPQryExerciseAppointmentField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPQryExerciseAppointmentField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPQryExerciseAppointmentField_ShareholderID_get, _sptraderapi.CTORATstpSPQryExerciseAppointmentField_ShareholderID_set)

	# 资金账户
    __swig_setmethods__["AccountID"] = _sptraderapi.CTORATstpSPQryExerciseAppointmentField_AccountID_set
    __swig_getmethods__["AccountID"] = _sptraderapi.CTORATstpSPQryExerciseAppointmentField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_sptraderapi.CTORATstpSPQryExerciseAppointmentField_AccountID_get, _sptraderapi.CTORATstpSPQryExerciseAppointmentField_AccountID_set)

	# 合约在系统中的编号
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPQryExerciseAppointmentField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPQryExerciseAppointmentField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPQryExerciseAppointmentField_SecurityID_get, _sptraderapi.CTORATstpSPQryExerciseAppointmentField_SecurityID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPQryExerciseAppointmentField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPQryExerciseAppointmentField
    __del__ = lambda self: None
CTORATstpSPQryExerciseAppointmentField_swigregister = _sptraderapi.CTORATstpSPQryExerciseAppointmentField_swigregister
CTORATstpSPQryExerciseAppointmentField_swigregister(CTORATstpSPQryExerciseAppointmentField)




#########################################行权指派明细############################################
class CTORATstpSPExerciseAppointmentField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPExerciseAppointmentField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPExerciseAppointmentField, name)
    __repr__ = _swig_repr

	# 投资者行权指派明细
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPExerciseAppointmentField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPExerciseAppointmentField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPExerciseAppointmentField_InvestorID_get, _sptraderapi.CTORATstpSPExerciseAppointmentField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPExerciseAppointmentField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPExerciseAppointmentField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPExerciseAppointmentField_BusinessUnitID_get, _sptraderapi.CTORATstpSPExerciseAppointmentField_BusinessUnitID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPExerciseAppointmentField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPExerciseAppointmentField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPExerciseAppointmentField_ExchangeID_get, _sptraderapi.CTORATstpSPExerciseAppointmentField_ExchangeID_set)

	# 行权日期
    __swig_setmethods__["ExerciseDay"] = _sptraderapi.CTORATstpSPExerciseAppointmentField_ExerciseDay_set
    __swig_getmethods__["ExerciseDay"] = _sptraderapi.CTORATstpSPExerciseAppointmentField_ExerciseDay_get
    if _newclass:
        ExerciseDay = _swig_property(_sptraderapi.CTORATstpSPExerciseAppointmentField_ExerciseDay_get, _sptraderapi.CTORATstpSPExerciseAppointmentField_ExerciseDay_set)

	# 交易所交易单元代码
    __swig_setmethods__["PbuID"] = _sptraderapi.CTORATstpSPExerciseAppointmentField_PbuID_set
    __swig_getmethods__["PbuID"] = _sptraderapi.CTORATstpSPExerciseAppointmentField_PbuID_get
    if _newclass:
        PbuID = _swig_property(_sptraderapi.CTORATstpSPExerciseAppointmentField_PbuID_get, _sptraderapi.CTORATstpSPExerciseAppointmentField_PbuID_set)

	# 股东账户代码
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPExerciseAppointmentField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPExerciseAppointmentField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPExerciseAppointmentField_ShareholderID_get, _sptraderapi.CTORATstpSPExerciseAppointmentField_ShareholderID_set)

	# 资金账户代码
    __swig_setmethods__["AccountID"] = _sptraderapi.CTORATstpSPExerciseAppointmentField_AccountID_set
    __swig_getmethods__["AccountID"] = _sptraderapi.CTORATstpSPExerciseAppointmentField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_sptraderapi.CTORATstpSPExerciseAppointmentField_AccountID_get, _sptraderapi.CTORATstpSPExerciseAppointmentField_AccountID_set)

	# 币种
    __swig_setmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPExerciseAppointmentField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPExerciseAppointmentField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_sptraderapi.CTORATstpSPExerciseAppointmentField_CurrencyID_get, _sptraderapi.CTORATstpSPExerciseAppointmentField_CurrencyID_set)

	# 合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPExerciseAppointmentField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPExerciseAppointmentField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPExerciseAppointmentField_SecurityID_get, _sptraderapi.CTORATstpSPExerciseAppointmentField_SecurityID_set)

	# 期权类型
    __swig_setmethods__["OptionsType"] = _sptraderapi.CTORATstpSPExerciseAppointmentField_OptionsType_set
    __swig_getmethods__["OptionsType"] = _sptraderapi.CTORATstpSPExerciseAppointmentField_OptionsType_get
    if _newclass:
        OptionsType = _swig_property(_sptraderapi.CTORATstpSPExerciseAppointmentField_OptionsType_get, _sptraderapi.CTORATstpSPExerciseAppointmentField_OptionsType_set)

	# 合约单位
    __swig_setmethods__["OptionUnit"] = _sptraderapi.CTORATstpSPExerciseAppointmentField_OptionUnit_set
    __swig_getmethods__["OptionUnit"] = _sptraderapi.CTORATstpSPExerciseAppointmentField_OptionUnit_get
    if _newclass:
        OptionUnit = _swig_property(_sptraderapi.CTORATstpSPExerciseAppointmentField_OptionUnit_get, _sptraderapi.CTORATstpSPExerciseAppointmentField_OptionUnit_set)

	# 标的证券代码
    __swig_setmethods__["UnderlyingSecurityID"] = _sptraderapi.CTORATstpSPExerciseAppointmentField_UnderlyingSecurityID_set
    __swig_getmethods__["UnderlyingSecurityID"] = _sptraderapi.CTORATstpSPExerciseAppointmentField_UnderlyingSecurityID_get
    if _newclass:
        UnderlyingSecurityID = _swig_property(_sptraderapi.CTORATstpSPExerciseAppointmentField_UnderlyingSecurityID_get, _sptraderapi.CTORATstpSPExerciseAppointmentField_UnderlyingSecurityID_set)

	# 行权数量
    __swig_setmethods__["ExerciseVolume"] = _sptraderapi.CTORATstpSPExerciseAppointmentField_ExerciseVolume_set
    __swig_getmethods__["ExerciseVolume"] = _sptraderapi.CTORATstpSPExerciseAppointmentField_ExerciseVolume_get
    if _newclass:
        ExerciseVolume = _swig_property(_sptraderapi.CTORATstpSPExerciseAppointmentField_ExerciseVolume_get, _sptraderapi.CTORATstpSPExerciseAppointmentField_ExerciseVolume_set)

	# 行权价
    __swig_setmethods__["ExercisePrice"] = _sptraderapi.CTORATstpSPExerciseAppointmentField_ExercisePrice_set
    __swig_getmethods__["ExercisePrice"] = _sptraderapi.CTORATstpSPExerciseAppointmentField_ExercisePrice_get
    if _newclass:
        ExercisePrice = _swig_property(_sptraderapi.CTORATstpSPExerciseAppointmentField_ExercisePrice_get, _sptraderapi.CTORATstpSPExerciseAppointmentField_ExercisePrice_set)

	# 行权方向
    __swig_setmethods__["ExerciseDirection"] = _sptraderapi.CTORATstpSPExerciseAppointmentField_ExerciseDirection_set
    __swig_getmethods__["ExerciseDirection"] = _sptraderapi.CTORATstpSPExerciseAppointmentField_ExerciseDirection_get
    if _newclass:
        ExerciseDirection = _swig_property(_sptraderapi.CTORATstpSPExerciseAppointmentField_ExerciseDirection_get, _sptraderapi.CTORATstpSPExerciseAppointmentField_ExerciseDirection_set)

	# 备兑标志
    __swig_setmethods__["CoverFlag"] = _sptraderapi.CTORATstpSPExerciseAppointmentField_CoverFlag_set
    __swig_getmethods__["CoverFlag"] = _sptraderapi.CTORATstpSPExerciseAppointmentField_CoverFlag_get
    if _newclass:
        CoverFlag = _swig_property(_sptraderapi.CTORATstpSPExerciseAppointmentField_CoverFlag_get, _sptraderapi.CTORATstpSPExerciseAppointmentField_CoverFlag_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPExerciseAppointmentField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPExerciseAppointmentField
    __del__ = lambda self: None
CTORATstpSPExerciseAppointmentField_swigregister = _sptraderapi.CTORATstpSPExerciseAppointmentField_swigregister
CTORATstpSPExerciseAppointmentField_swigregister(CTORATstpSPExerciseAppointmentField)




#########################################查询经纪公司限仓标的额度############################################
class CTORATstpSPQryBrokerLimitPositionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPQryBrokerLimitPositionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPQryBrokerLimitPositionField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryBrokerLimitPositionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryBrokerLimitPositionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPQryBrokerLimitPositionField_ExchangeID_get, _sptraderapi.CTORATstpSPQryBrokerLimitPositionField_ExchangeID_set)

	# 标的证券代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPQryBrokerLimitPositionField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPQryBrokerLimitPositionField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPQryBrokerLimitPositionField_SecurityID_get, _sptraderapi.CTORATstpSPQryBrokerLimitPositionField_SecurityID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPQryBrokerLimitPositionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPQryBrokerLimitPositionField
    __del__ = lambda self: None
CTORATstpSPQryBrokerLimitPositionField_swigregister = _sptraderapi.CTORATstpSPQryBrokerLimitPositionField_swigregister
CTORATstpSPQryBrokerLimitPositionField_swigregister(CTORATstpSPQryBrokerLimitPositionField)




#########################################经纪公司限仓标的额度############################################
class CTORATstpSPBrokerLimitPositionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPBrokerLimitPositionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPBrokerLimitPositionField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPBrokerLimitPositionField_ExchangeID_get, _sptraderapi.CTORATstpSPBrokerLimitPositionField_ExchangeID_set)

	# 标的证券代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPBrokerLimitPositionField_SecurityID_get, _sptraderapi.CTORATstpSPBrokerLimitPositionField_SecurityID_set)

	# 总持仓限额
    __swig_setmethods__["TotalPositionLimit"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_TotalPositionLimit_set
    __swig_getmethods__["TotalPositionLimit"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_TotalPositionLimit_get
    if _newclass:
        TotalPositionLimit = _swig_property(_sptraderapi.CTORATstpSPBrokerLimitPositionField_TotalPositionLimit_get, _sptraderapi.CTORATstpSPBrokerLimitPositionField_TotalPositionLimit_set)

	# 经纪业务持仓限额
    __swig_setmethods__["BrokeragePositionLimit"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_BrokeragePositionLimit_set
    __swig_getmethods__["BrokeragePositionLimit"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_BrokeragePositionLimit_get
    if _newclass:
        BrokeragePositionLimit = _swig_property(_sptraderapi.CTORATstpSPBrokerLimitPositionField_BrokeragePositionLimit_get, _sptraderapi.CTORATstpSPBrokerLimitPositionField_BrokeragePositionLimit_set)

	# 自营业务持仓限额
    __swig_setmethods__["SelfOperatedPositionLimit"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_SelfOperatedPositionLimit_set
    __swig_getmethods__["SelfOperatedPositionLimit"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_SelfOperatedPositionLimit_get
    if _newclass:
        SelfOperatedPositionLimit = _swig_property(_sptraderapi.CTORATstpSPBrokerLimitPositionField_SelfOperatedPositionLimit_get, _sptraderapi.CTORATstpSPBrokerLimitPositionField_SelfOperatedPositionLimit_set)

	# 多头持仓限额
    __swig_setmethods__["LongPositionLimit"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_LongPositionLimit_set
    __swig_getmethods__["LongPositionLimit"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_LongPositionLimit_get
    if _newclass:
        LongPositionLimit = _swig_property(_sptraderapi.CTORATstpSPBrokerLimitPositionField_LongPositionLimit_get, _sptraderapi.CTORATstpSPBrokerLimitPositionField_LongPositionLimit_set)

	# 单日买入开仓限额
    __swig_setmethods__["TodayBuyOpenLimit"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_TodayBuyOpenLimit_set
    __swig_getmethods__["TodayBuyOpenLimit"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_TodayBuyOpenLimit_get
    if _newclass:
        TodayBuyOpenLimit = _swig_property(_sptraderapi.CTORATstpSPBrokerLimitPositionField_TodayBuyOpenLimit_get, _sptraderapi.CTORATstpSPBrokerLimitPositionField_TodayBuyOpenLimit_set)

	# 单日卖出开仓限额
    __swig_setmethods__["TodaySellOpenLimit"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_TodaySellOpenLimit_set
    __swig_getmethods__["TodaySellOpenLimit"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_TodaySellOpenLimit_get
    if _newclass:
        TodaySellOpenLimit = _swig_property(_sptraderapi.CTORATstpSPBrokerLimitPositionField_TodaySellOpenLimit_get, _sptraderapi.CTORATstpSPBrokerLimitPositionField_TodaySellOpenLimit_set)

	# 单日备兑开仓限额
    __swig_setmethods__["TodayCoveredOpenLimit"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_TodayCoveredOpenLimit_set
    __swig_getmethods__["TodayCoveredOpenLimit"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_TodayCoveredOpenLimit_get
    if _newclass:
        TodayCoveredOpenLimit = _swig_property(_sptraderapi.CTORATstpSPBrokerLimitPositionField_TodayCoveredOpenLimit_get, _sptraderapi.CTORATstpSPBrokerLimitPositionField_TodayCoveredOpenLimit_set)

	# 单日开仓限额
    __swig_setmethods__["TodayOpenLimit"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_TodayOpenLimit_set
    __swig_getmethods__["TodayOpenLimit"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_TodayOpenLimit_get
    if _newclass:
        TodayOpenLimit = _swig_property(_sptraderapi.CTORATstpSPBrokerLimitPositionField_TodayOpenLimit_get, _sptraderapi.CTORATstpSPBrokerLimitPositionField_TodayOpenLimit_set)

	# 认购多头持仓限额
    __swig_setmethods__["LongCallPositionLimit"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_LongCallPositionLimit_set
    __swig_getmethods__["LongCallPositionLimit"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_LongCallPositionLimit_get
    if _newclass:
        LongCallPositionLimit = _swig_property(_sptraderapi.CTORATstpSPBrokerLimitPositionField_LongCallPositionLimit_get, _sptraderapi.CTORATstpSPBrokerLimitPositionField_LongCallPositionLimit_set)

	# 认沽多头持仓限额
    __swig_setmethods__["LongPutPositionLimit"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_LongPutPositionLimit_set
    __swig_getmethods__["LongPutPositionLimit"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_LongPutPositionLimit_get
    if _newclass:
        LongPutPositionLimit = _swig_property(_sptraderapi.CTORATstpSPBrokerLimitPositionField_LongPutPositionLimit_get, _sptraderapi.CTORATstpSPBrokerLimitPositionField_LongPutPositionLimit_set)

	# 标的多头持仓限额
    __swig_setmethods__["LongUnderlyingPositionLimit"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_LongUnderlyingPositionLimit_set
    __swig_getmethods__["LongUnderlyingPositionLimit"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_LongUnderlyingPositionLimit_get
    if _newclass:
        LongUnderlyingPositionLimit = _swig_property(_sptraderapi.CTORATstpSPBrokerLimitPositionField_LongUnderlyingPositionLimit_get, _sptraderapi.CTORATstpSPBrokerLimitPositionField_LongUnderlyingPositionLimit_set)

	# 标的空头持仓限额
    __swig_setmethods__["ShortUnderlyingPositionLimit"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_ShortUnderlyingPositionLimit_set
    __swig_getmethods__["ShortUnderlyingPositionLimit"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_ShortUnderlyingPositionLimit_get
    if _newclass:
        ShortUnderlyingPositionLimit = _swig_property(_sptraderapi.CTORATstpSPBrokerLimitPositionField_ShortUnderlyingPositionLimit_get, _sptraderapi.CTORATstpSPBrokerLimitPositionField_ShortUnderlyingPositionLimit_set)

	# 总持仓冻结额度
    __swig_setmethods__["TotalPositionFrozen"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_TotalPositionFrozen_set
    __swig_getmethods__["TotalPositionFrozen"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_TotalPositionFrozen_get
    if _newclass:
        TotalPositionFrozen = _swig_property(_sptraderapi.CTORATstpSPBrokerLimitPositionField_TotalPositionFrozen_get, _sptraderapi.CTORATstpSPBrokerLimitPositionField_TotalPositionFrozen_set)

	# 经纪业务持仓冻结额度
    __swig_setmethods__["BrokeragePositionFrozen"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_BrokeragePositionFrozen_set
    __swig_getmethods__["BrokeragePositionFrozen"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_BrokeragePositionFrozen_get
    if _newclass:
        BrokeragePositionFrozen = _swig_property(_sptraderapi.CTORATstpSPBrokerLimitPositionField_BrokeragePositionFrozen_get, _sptraderapi.CTORATstpSPBrokerLimitPositionField_BrokeragePositionFrozen_set)

	# 自营业务持仓冻结额度
    __swig_setmethods__["SelfOperatedPositionFrozen"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_SelfOperatedPositionFrozen_set
    __swig_getmethods__["SelfOperatedPositionFrozen"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_SelfOperatedPositionFrozen_get
    if _newclass:
        SelfOperatedPositionFrozen = _swig_property(_sptraderapi.CTORATstpSPBrokerLimitPositionField_SelfOperatedPositionFrozen_get, _sptraderapi.CTORATstpSPBrokerLimitPositionField_SelfOperatedPositionFrozen_set)

	# 多头持仓冻结额度
    __swig_setmethods__["LongPositionFrozen"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_LongPositionFrozen_set
    __swig_getmethods__["LongPositionFrozen"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_LongPositionFrozen_get
    if _newclass:
        LongPositionFrozen = _swig_property(_sptraderapi.CTORATstpSPBrokerLimitPositionField_LongPositionFrozen_get, _sptraderapi.CTORATstpSPBrokerLimitPositionField_LongPositionFrozen_set)

	# 单日买入开仓冻结额度
    __swig_setmethods__["TodayBuyOpenFrozen"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_TodayBuyOpenFrozen_set
    __swig_getmethods__["TodayBuyOpenFrozen"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_TodayBuyOpenFrozen_get
    if _newclass:
        TodayBuyOpenFrozen = _swig_property(_sptraderapi.CTORATstpSPBrokerLimitPositionField_TodayBuyOpenFrozen_get, _sptraderapi.CTORATstpSPBrokerLimitPositionField_TodayBuyOpenFrozen_set)

	# 单日卖出开仓冻结额度
    __swig_setmethods__["TodaySellOpenFrozen"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_TodaySellOpenFrozen_set
    __swig_getmethods__["TodaySellOpenFrozen"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_TodaySellOpenFrozen_get
    if _newclass:
        TodaySellOpenFrozen = _swig_property(_sptraderapi.CTORATstpSPBrokerLimitPositionField_TodaySellOpenFrozen_get, _sptraderapi.CTORATstpSPBrokerLimitPositionField_TodaySellOpenFrozen_set)

	# 单日备兑开仓冻结额度
    __swig_setmethods__["TodayCoveredOpenFrozen"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_TodayCoveredOpenFrozen_set
    __swig_getmethods__["TodayCoveredOpenFrozen"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_TodayCoveredOpenFrozen_get
    if _newclass:
        TodayCoveredOpenFrozen = _swig_property(_sptraderapi.CTORATstpSPBrokerLimitPositionField_TodayCoveredOpenFrozen_get, _sptraderapi.CTORATstpSPBrokerLimitPositionField_TodayCoveredOpenFrozen_set)

	# 单日开仓冻结额度
    __swig_setmethods__["TodayOpenFrozen"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_TodayOpenFrozen_set
    __swig_getmethods__["TodayOpenFrozen"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_TodayOpenFrozen_get
    if _newclass:
        TodayOpenFrozen = _swig_property(_sptraderapi.CTORATstpSPBrokerLimitPositionField_TodayOpenFrozen_get, _sptraderapi.CTORATstpSPBrokerLimitPositionField_TodayOpenFrozen_set)

	# 认购多头持仓冻结额度
    __swig_setmethods__["LongCallPositionFrozen"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_LongCallPositionFrozen_set
    __swig_getmethods__["LongCallPositionFrozen"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_LongCallPositionFrozen_get
    if _newclass:
        LongCallPositionFrozen = _swig_property(_sptraderapi.CTORATstpSPBrokerLimitPositionField_LongCallPositionFrozen_get, _sptraderapi.CTORATstpSPBrokerLimitPositionField_LongCallPositionFrozen_set)

	# 认沽多头持仓冻结额度
    __swig_setmethods__["LongPutPositionFrozen"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_LongPutPositionFrozen_set
    __swig_getmethods__["LongPutPositionFrozen"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_LongPutPositionFrozen_get
    if _newclass:
        LongPutPositionFrozen = _swig_property(_sptraderapi.CTORATstpSPBrokerLimitPositionField_LongPutPositionFrozen_get, _sptraderapi.CTORATstpSPBrokerLimitPositionField_LongPutPositionFrozen_set)

	# 标的多头持仓冻结额度
    __swig_setmethods__["LongUnderlyingPositionFrozen"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_LongUnderlyingPositionFrozen_set
    __swig_getmethods__["LongUnderlyingPositionFrozen"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_LongUnderlyingPositionFrozen_get
    if _newclass:
        LongUnderlyingPositionFrozen = _swig_property(_sptraderapi.CTORATstpSPBrokerLimitPositionField_LongUnderlyingPositionFrozen_get, _sptraderapi.CTORATstpSPBrokerLimitPositionField_LongUnderlyingPositionFrozen_set)

	# 标的空头持仓冻结额度
    __swig_setmethods__["ShortUnderlyingPositionFrozen"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_ShortUnderlyingPositionFrozen_set
    __swig_getmethods__["ShortUnderlyingPositionFrozen"] = _sptraderapi.CTORATstpSPBrokerLimitPositionField_ShortUnderlyingPositionFrozen_get
    if _newclass:
        ShortUnderlyingPositionFrozen = _swig_property(_sptraderapi.CTORATstpSPBrokerLimitPositionField_ShortUnderlyingPositionFrozen_get, _sptraderapi.CTORATstpSPBrokerLimitPositionField_ShortUnderlyingPositionFrozen_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPBrokerLimitPositionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPBrokerLimitPositionField
    __del__ = lambda self: None
CTORATstpSPBrokerLimitPositionField_swigregister = _sptraderapi.CTORATstpSPBrokerLimitPositionField_swigregister
CTORATstpSPBrokerLimitPositionField_swigregister(CTORATstpSPBrokerLimitPositionField)




#########################################查询备兑股份不足仓位############################################
class CTORATstpSPQryInsufficientCoveredStockPositionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPQryInsufficientCoveredStockPositionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPQryInsufficientCoveredStockPositionField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryInsufficientCoveredStockPositionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPQryInsufficientCoveredStockPositionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPQryInsufficientCoveredStockPositionField_InvestorID_get, _sptraderapi.CTORATstpSPQryInsufficientCoveredStockPositionField_InvestorID_set)

	# 标的证券代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPQryInsufficientCoveredStockPositionField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPQryInsufficientCoveredStockPositionField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPQryInsufficientCoveredStockPositionField_SecurityID_get, _sptraderapi.CTORATstpSPQryInsufficientCoveredStockPositionField_SecurityID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryInsufficientCoveredStockPositionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPQryInsufficientCoveredStockPositionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPQryInsufficientCoveredStockPositionField_ExchangeID_get, _sptraderapi.CTORATstpSPQryInsufficientCoveredStockPositionField_ExchangeID_set)

	# 市场代码
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPQryInsufficientCoveredStockPositionField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPQryInsufficientCoveredStockPositionField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPQryInsufficientCoveredStockPositionField_MarketID_get, _sptraderapi.CTORATstpSPQryInsufficientCoveredStockPositionField_MarketID_set)

	# 目前该字段存放的是上证所和深圳的股东代码。
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPQryInsufficientCoveredStockPositionField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPQryInsufficientCoveredStockPositionField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPQryInsufficientCoveredStockPositionField_ShareholderID_get, _sptraderapi.CTORATstpSPQryInsufficientCoveredStockPositionField_ShareholderID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPQryInsufficientCoveredStockPositionField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPQryInsufficientCoveredStockPositionField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPQryInsufficientCoveredStockPositionField_BusinessUnitID_get, _sptraderapi.CTORATstpSPQryInsufficientCoveredStockPositionField_BusinessUnitID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPQryInsufficientCoveredStockPositionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPQryInsufficientCoveredStockPositionField
    __del__ = lambda self: None
CTORATstpSPQryInsufficientCoveredStockPositionField_swigregister = _sptraderapi.CTORATstpSPQryInsufficientCoveredStockPositionField_swigregister
CTORATstpSPQryInsufficientCoveredStockPositionField_swigregister(CTORATstpSPQryInsufficientCoveredStockPositionField)




#########################################备兑股份不足仓位############################################
class CTORATstpSPInsufficientCoveredStockPositionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPInsufficientCoveredStockPositionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPInsufficientCoveredStockPositionField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPInsufficientCoveredStockPositionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPInsufficientCoveredStockPositionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPInsufficientCoveredStockPositionField_InvestorID_get, _sptraderapi.CTORATstpSPInsufficientCoveredStockPositionField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPInsufficientCoveredStockPositionField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPInsufficientCoveredStockPositionField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPInsufficientCoveredStockPositionField_BusinessUnitID_get, _sptraderapi.CTORATstpSPInsufficientCoveredStockPositionField_BusinessUnitID_set)

	# 市场代码
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPInsufficientCoveredStockPositionField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPInsufficientCoveredStockPositionField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPInsufficientCoveredStockPositionField_MarketID_get, _sptraderapi.CTORATstpSPInsufficientCoveredStockPositionField_MarketID_set)

	# 客户代码
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPInsufficientCoveredStockPositionField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPInsufficientCoveredStockPositionField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPInsufficientCoveredStockPositionField_ShareholderID_get, _sptraderapi.CTORATstpSPInsufficientCoveredStockPositionField_ShareholderID_set)

	# 交易日
    __swig_setmethods__["TradingDay"] = _sptraderapi.CTORATstpSPInsufficientCoveredStockPositionField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _sptraderapi.CTORATstpSPInsufficientCoveredStockPositionField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_sptraderapi.CTORATstpSPInsufficientCoveredStockPositionField_TradingDay_get, _sptraderapi.CTORATstpSPInsufficientCoveredStockPositionField_TradingDay_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPInsufficientCoveredStockPositionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPInsufficientCoveredStockPositionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPInsufficientCoveredStockPositionField_ExchangeID_get, _sptraderapi.CTORATstpSPInsufficientCoveredStockPositionField_ExchangeID_set)

	# 合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPInsufficientCoveredStockPositionField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPInsufficientCoveredStockPositionField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPInsufficientCoveredStockPositionField_SecurityID_get, _sptraderapi.CTORATstpSPInsufficientCoveredStockPositionField_SecurityID_set)

	# 初始备兑股份不足数量
    __swig_setmethods__["TotalInsufficientVolume"] = _sptraderapi.CTORATstpSPInsufficientCoveredStockPositionField_TotalInsufficientVolume_set
    __swig_getmethods__["TotalInsufficientVolume"] = _sptraderapi.CTORATstpSPInsufficientCoveredStockPositionField_TotalInsufficientVolume_get
    if _newclass:
        TotalInsufficientVolume = _swig_property(_sptraderapi.CTORATstpSPInsufficientCoveredStockPositionField_TotalInsufficientVolume_get, _sptraderapi.CTORATstpSPInsufficientCoveredStockPositionField_TotalInsufficientVolume_set)

	# 初始备兑股份预冻结数量
    __swig_setmethods__["PreFrozenVolume"] = _sptraderapi.CTORATstpSPInsufficientCoveredStockPositionField_PreFrozenVolume_set
    __swig_getmethods__["PreFrozenVolume"] = _sptraderapi.CTORATstpSPInsufficientCoveredStockPositionField_PreFrozenVolume_get
    if _newclass:
        PreFrozenVolume = _swig_property(_sptraderapi.CTORATstpSPInsufficientCoveredStockPositionField_PreFrozenVolume_get, _sptraderapi.CTORATstpSPInsufficientCoveredStockPositionField_PreFrozenVolume_set)

	# 备兑平仓已偿还的备兑股份数量
    __swig_setmethods__["RepaidVolume"] = _sptraderapi.CTORATstpSPInsufficientCoveredStockPositionField_RepaidVolume_set
    __swig_getmethods__["RepaidVolume"] = _sptraderapi.CTORATstpSPInsufficientCoveredStockPositionField_RepaidVolume_get
    if _newclass:
        RepaidVolume = _swig_property(_sptraderapi.CTORATstpSPInsufficientCoveredStockPositionField_RepaidVolume_get, _sptraderapi.CTORATstpSPInsufficientCoveredStockPositionField_RepaidVolume_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPInsufficientCoveredStockPositionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPInsufficientCoveredStockPositionField
    __del__ = lambda self: None
CTORATstpSPInsufficientCoveredStockPositionField_swigregister = _sptraderapi.CTORATstpSPInsufficientCoveredStockPositionField_swigregister
CTORATstpSPInsufficientCoveredStockPositionField_swigregister(CTORATstpSPInsufficientCoveredStockPositionField)




#########################################请求插入AppInfo############################################
class CTORATstpSPReqInsAppInfoField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsAppInfoField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsAppInfoField, name)
    __repr__ = _swig_repr

	# 应用程序名称
    __swig_setmethods__["AppName"] = _sptraderapi.CTORATstpSPReqInsAppInfoField_AppName_set
    __swig_getmethods__["AppName"] = _sptraderapi.CTORATstpSPReqInsAppInfoField_AppName_get
    if _newclass:
        AppName = _swig_property(_sptraderapi.CTORATstpSPReqInsAppInfoField_AppName_get, _sptraderapi.CTORATstpSPReqInsAppInfoField_AppName_set)

	# 交易所编码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsAppInfoField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsAppInfoField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqInsAppInfoField_ExchangeID_get, _sptraderapi.CTORATstpSPReqInsAppInfoField_ExchangeID_set)

	# 应用类型
    __swig_setmethods__["AppType"] = _sptraderapi.CTORATstpSPReqInsAppInfoField_AppType_set
    __swig_getmethods__["AppType"] = _sptraderapi.CTORATstpSPReqInsAppInfoField_AppType_get
    if _newclass:
        AppType = _swig_property(_sptraderapi.CTORATstpSPReqInsAppInfoField_AppType_get, _sptraderapi.CTORATstpSPReqInsAppInfoField_AppType_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsAppInfoField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsAppInfoField
    __del__ = lambda self: None
CTORATstpSPReqInsAppInfoField_swigregister = _sptraderapi.CTORATstpSPReqInsAppInfoField_swigregister
CTORATstpSPReqInsAppInfoField_swigregister(CTORATstpSPReqInsAppInfoField)




#########################################请求更新AppInfo############################################
class CTORATstpSPReqUpdAppInfoField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdAppInfoField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdAppInfoField, name)
    __repr__ = _swig_repr

	# 应用程序名称
    __swig_setmethods__["AppName"] = _sptraderapi.CTORATstpSPReqUpdAppInfoField_AppName_set
    __swig_getmethods__["AppName"] = _sptraderapi.CTORATstpSPReqUpdAppInfoField_AppName_get
    if _newclass:
        AppName = _swig_property(_sptraderapi.CTORATstpSPReqUpdAppInfoField_AppName_get, _sptraderapi.CTORATstpSPReqUpdAppInfoField_AppName_set)

	# 交易所编码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdAppInfoField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdAppInfoField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqUpdAppInfoField_ExchangeID_get, _sptraderapi.CTORATstpSPReqUpdAppInfoField_ExchangeID_set)

	# 应用类型
    __swig_setmethods__["AppType"] = _sptraderapi.CTORATstpSPReqUpdAppInfoField_AppType_set
    __swig_getmethods__["AppType"] = _sptraderapi.CTORATstpSPReqUpdAppInfoField_AppType_get
    if _newclass:
        AppType = _swig_property(_sptraderapi.CTORATstpSPReqUpdAppInfoField_AppType_get, _sptraderapi.CTORATstpSPReqUpdAppInfoField_AppType_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdAppInfoField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdAppInfoField
    __del__ = lambda self: None
CTORATstpSPReqUpdAppInfoField_swigregister = _sptraderapi.CTORATstpSPReqUpdAppInfoField_swigregister
CTORATstpSPReqUpdAppInfoField_swigregister(CTORATstpSPReqUpdAppInfoField)




#########################################请求删除AppInfo############################################
class CTORATstpSPReqDelAppInfoField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelAppInfoField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelAppInfoField, name)
    __repr__ = _swig_repr

	# 应用程序名称
    __swig_setmethods__["AppName"] = _sptraderapi.CTORATstpSPReqDelAppInfoField_AppName_set
    __swig_getmethods__["AppName"] = _sptraderapi.CTORATstpSPReqDelAppInfoField_AppName_get
    if _newclass:
        AppName = _swig_property(_sptraderapi.CTORATstpSPReqDelAppInfoField_AppName_get, _sptraderapi.CTORATstpSPReqDelAppInfoField_AppName_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelAppInfoField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelAppInfoField
    __del__ = lambda self: None
CTORATstpSPReqDelAppInfoField_swigregister = _sptraderapi.CTORATstpSPReqDelAppInfoField_swigregister
CTORATstpSPReqDelAppInfoField_swigregister(CTORATstpSPReqDelAppInfoField)




#########################################请求插入AppRunningInfo############################################
class CTORATstpSPReqInsAppRunningInfoField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsAppRunningInfoField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsAppRunningInfoField, name)
    __repr__ = _swig_repr

	# 应用名称
    __swig_setmethods__["AppName"] = _sptraderapi.CTORATstpSPReqInsAppRunningInfoField_AppName_set
    __swig_getmethods__["AppName"] = _sptraderapi.CTORATstpSPReqInsAppRunningInfoField_AppName_get
    if _newclass:
        AppName = _swig_property(_sptraderapi.CTORATstpSPReqInsAppRunningInfoField_AppName_get, _sptraderapi.CTORATstpSPReqInsAppRunningInfoField_AppName_set)

	# 说明该交易员的报盘程序的编号
    __swig_setmethods__["RunID"] = _sptraderapi.CTORATstpSPReqInsAppRunningInfoField_RunID_set
    __swig_getmethods__["RunID"] = _sptraderapi.CTORATstpSPReqInsAppRunningInfoField_RunID_get
    if _newclass:
        RunID = _swig_property(_sptraderapi.CTORATstpSPReqInsAppRunningInfoField_RunID_get, _sptraderapi.CTORATstpSPReqInsAppRunningInfoField_RunID_set)

	# 一个交易所的编号
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsAppRunningInfoField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsAppRunningInfoField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqInsAppRunningInfoField_ExchangeID_get, _sptraderapi.CTORATstpSPReqInsAppRunningInfoField_ExchangeID_set)

	# 应用类型
    __swig_setmethods__["AppType"] = _sptraderapi.CTORATstpSPReqInsAppRunningInfoField_AppType_set
    __swig_getmethods__["AppType"] = _sptraderapi.CTORATstpSPReqInsAppRunningInfoField_AppType_get
    if _newclass:
        AppType = _swig_property(_sptraderapi.CTORATstpSPReqInsAppRunningInfoField_AppType_get, _sptraderapi.CTORATstpSPReqInsAppRunningInfoField_AppType_set)

	# 连接状态
    __swig_setmethods__["AppConnectStatus"] = _sptraderapi.CTORATstpSPReqInsAppRunningInfoField_AppConnectStatus_set
    __swig_getmethods__["AppConnectStatus"] = _sptraderapi.CTORATstpSPReqInsAppRunningInfoField_AppConnectStatus_get
    if _newclass:
        AppConnectStatus = _swig_property(_sptraderapi.CTORATstpSPReqInsAppRunningInfoField_AppConnectStatus_get, _sptraderapi.CTORATstpSPReqInsAppRunningInfoField_AppConnectStatus_set)

	# IP地址
    __swig_setmethods__["IPAddress"] = _sptraderapi.CTORATstpSPReqInsAppRunningInfoField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _sptraderapi.CTORATstpSPReqInsAppRunningInfoField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_sptraderapi.CTORATstpSPReqInsAppRunningInfoField_IPAddress_get, _sptraderapi.CTORATstpSPReqInsAppRunningInfoField_IPAddress_set)

	# 前置ID
    __swig_setmethods__["FrontID"] = _sptraderapi.CTORATstpSPReqInsAppRunningInfoField_FrontID_set
    __swig_getmethods__["FrontID"] = _sptraderapi.CTORATstpSPReqInsAppRunningInfoField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_sptraderapi.CTORATstpSPReqInsAppRunningInfoField_FrontID_get, _sptraderapi.CTORATstpSPReqInsAppRunningInfoField_FrontID_set)

	# 会话ID
    __swig_setmethods__["SessionID"] = _sptraderapi.CTORATstpSPReqInsAppRunningInfoField_SessionID_set
    __swig_getmethods__["SessionID"] = _sptraderapi.CTORATstpSPReqInsAppRunningInfoField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_sptraderapi.CTORATstpSPReqInsAppRunningInfoField_SessionID_get, _sptraderapi.CTORATstpSPReqInsAppRunningInfoField_SessionID_set)

	# 发出连接请求的日期
    __swig_setmethods__["ConnectRequestDate"] = _sptraderapi.CTORATstpSPReqInsAppRunningInfoField_ConnectRequestDate_set
    __swig_getmethods__["ConnectRequestDate"] = _sptraderapi.CTORATstpSPReqInsAppRunningInfoField_ConnectRequestDate_get
    if _newclass:
        ConnectRequestDate = _swig_property(_sptraderapi.CTORATstpSPReqInsAppRunningInfoField_ConnectRequestDate_get, _sptraderapi.CTORATstpSPReqInsAppRunningInfoField_ConnectRequestDate_set)

	# 发出连接请求的时间
    __swig_setmethods__["ConnectRequestTime"] = _sptraderapi.CTORATstpSPReqInsAppRunningInfoField_ConnectRequestTime_set
    __swig_getmethods__["ConnectRequestTime"] = _sptraderapi.CTORATstpSPReqInsAppRunningInfoField_ConnectRequestTime_get
    if _newclass:
        ConnectRequestTime = _swig_property(_sptraderapi.CTORATstpSPReqInsAppRunningInfoField_ConnectRequestTime_get, _sptraderapi.CTORATstpSPReqInsAppRunningInfoField_ConnectRequestTime_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsAppRunningInfoField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsAppRunningInfoField
    __del__ = lambda self: None
CTORATstpSPReqInsAppRunningInfoField_swigregister = _sptraderapi.CTORATstpSPReqInsAppRunningInfoField_swigregister
CTORATstpSPReqInsAppRunningInfoField_swigregister(CTORATstpSPReqInsAppRunningInfoField)




#########################################请求更新AppRunningInfo############################################
class CTORATstpSPReqUpdAppRunningInfoField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdAppRunningInfoField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdAppRunningInfoField, name)
    __repr__ = _swig_repr

	# 应用名称
    __swig_setmethods__["AppName"] = _sptraderapi.CTORATstpSPReqUpdAppRunningInfoField_AppName_set
    __swig_getmethods__["AppName"] = _sptraderapi.CTORATstpSPReqUpdAppRunningInfoField_AppName_get
    if _newclass:
        AppName = _swig_property(_sptraderapi.CTORATstpSPReqUpdAppRunningInfoField_AppName_get, _sptraderapi.CTORATstpSPReqUpdAppRunningInfoField_AppName_set)

	# 说明该交易员的报盘程序的编号
    __swig_setmethods__["RunID"] = _sptraderapi.CTORATstpSPReqUpdAppRunningInfoField_RunID_set
    __swig_getmethods__["RunID"] = _sptraderapi.CTORATstpSPReqUpdAppRunningInfoField_RunID_get
    if _newclass:
        RunID = _swig_property(_sptraderapi.CTORATstpSPReqUpdAppRunningInfoField_RunID_get, _sptraderapi.CTORATstpSPReqUpdAppRunningInfoField_RunID_set)

	# 一个交易所的编号
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdAppRunningInfoField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdAppRunningInfoField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqUpdAppRunningInfoField_ExchangeID_get, _sptraderapi.CTORATstpSPReqUpdAppRunningInfoField_ExchangeID_set)

	# 应用类型
    __swig_setmethods__["AppType"] = _sptraderapi.CTORATstpSPReqUpdAppRunningInfoField_AppType_set
    __swig_getmethods__["AppType"] = _sptraderapi.CTORATstpSPReqUpdAppRunningInfoField_AppType_get
    if _newclass:
        AppType = _swig_property(_sptraderapi.CTORATstpSPReqUpdAppRunningInfoField_AppType_get, _sptraderapi.CTORATstpSPReqUpdAppRunningInfoField_AppType_set)

	# 连接状态
    __swig_setmethods__["AppConnectStatus"] = _sptraderapi.CTORATstpSPReqUpdAppRunningInfoField_AppConnectStatus_set
    __swig_getmethods__["AppConnectStatus"] = _sptraderapi.CTORATstpSPReqUpdAppRunningInfoField_AppConnectStatus_get
    if _newclass:
        AppConnectStatus = _swig_property(_sptraderapi.CTORATstpSPReqUpdAppRunningInfoField_AppConnectStatus_get, _sptraderapi.CTORATstpSPReqUpdAppRunningInfoField_AppConnectStatus_set)

	# IP地址
    __swig_setmethods__["IPAddress"] = _sptraderapi.CTORATstpSPReqUpdAppRunningInfoField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _sptraderapi.CTORATstpSPReqUpdAppRunningInfoField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_sptraderapi.CTORATstpSPReqUpdAppRunningInfoField_IPAddress_get, _sptraderapi.CTORATstpSPReqUpdAppRunningInfoField_IPAddress_set)

	# 前置ID
    __swig_setmethods__["FrontID"] = _sptraderapi.CTORATstpSPReqUpdAppRunningInfoField_FrontID_set
    __swig_getmethods__["FrontID"] = _sptraderapi.CTORATstpSPReqUpdAppRunningInfoField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_sptraderapi.CTORATstpSPReqUpdAppRunningInfoField_FrontID_get, _sptraderapi.CTORATstpSPReqUpdAppRunningInfoField_FrontID_set)

	# 会话ID
    __swig_setmethods__["SessionID"] = _sptraderapi.CTORATstpSPReqUpdAppRunningInfoField_SessionID_set
    __swig_getmethods__["SessionID"] = _sptraderapi.CTORATstpSPReqUpdAppRunningInfoField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_sptraderapi.CTORATstpSPReqUpdAppRunningInfoField_SessionID_get, _sptraderapi.CTORATstpSPReqUpdAppRunningInfoField_SessionID_set)

	# 发出连接请求的日期
    __swig_setmethods__["ConnectRequestDate"] = _sptraderapi.CTORATstpSPReqUpdAppRunningInfoField_ConnectRequestDate_set
    __swig_getmethods__["ConnectRequestDate"] = _sptraderapi.CTORATstpSPReqUpdAppRunningInfoField_ConnectRequestDate_get
    if _newclass:
        ConnectRequestDate = _swig_property(_sptraderapi.CTORATstpSPReqUpdAppRunningInfoField_ConnectRequestDate_get, _sptraderapi.CTORATstpSPReqUpdAppRunningInfoField_ConnectRequestDate_set)

	# 发出连接请求的时间
    __swig_setmethods__["ConnectRequestTime"] = _sptraderapi.CTORATstpSPReqUpdAppRunningInfoField_ConnectRequestTime_set
    __swig_getmethods__["ConnectRequestTime"] = _sptraderapi.CTORATstpSPReqUpdAppRunningInfoField_ConnectRequestTime_get
    if _newclass:
        ConnectRequestTime = _swig_property(_sptraderapi.CTORATstpSPReqUpdAppRunningInfoField_ConnectRequestTime_get, _sptraderapi.CTORATstpSPReqUpdAppRunningInfoField_ConnectRequestTime_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdAppRunningInfoField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdAppRunningInfoField
    __del__ = lambda self: None
CTORATstpSPReqUpdAppRunningInfoField_swigregister = _sptraderapi.CTORATstpSPReqUpdAppRunningInfoField_swigregister
CTORATstpSPReqUpdAppRunningInfoField_swigregister(CTORATstpSPReqUpdAppRunningInfoField)




#########################################请求删除AppRunningInfo############################################
class CTORATstpSPReqDelAppRunningInfoField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelAppRunningInfoField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelAppRunningInfoField, name)
    __repr__ = _swig_repr

	# 应用名称
    __swig_setmethods__["AppName"] = _sptraderapi.CTORATstpSPReqDelAppRunningInfoField_AppName_set
    __swig_getmethods__["AppName"] = _sptraderapi.CTORATstpSPReqDelAppRunningInfoField_AppName_get
    if _newclass:
        AppName = _swig_property(_sptraderapi.CTORATstpSPReqDelAppRunningInfoField_AppName_get, _sptraderapi.CTORATstpSPReqDelAppRunningInfoField_AppName_set)

	# 说明该交易员的报盘程序的编号
    __swig_setmethods__["RunID"] = _sptraderapi.CTORATstpSPReqDelAppRunningInfoField_RunID_set
    __swig_getmethods__["RunID"] = _sptraderapi.CTORATstpSPReqDelAppRunningInfoField_RunID_get
    if _newclass:
        RunID = _swig_property(_sptraderapi.CTORATstpSPReqDelAppRunningInfoField_RunID_get, _sptraderapi.CTORATstpSPReqDelAppRunningInfoField_RunID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelAppRunningInfoField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelAppRunningInfoField
    __del__ = lambda self: None
CTORATstpSPReqDelAppRunningInfoField_swigregister = _sptraderapi.CTORATstpSPReqDelAppRunningInfoField_swigregister
CTORATstpSPReqDelAppRunningInfoField_swigregister(CTORATstpSPReqDelAppRunningInfoField)




#########################################请求插入BrokerUserFunction############################################
class CTORATstpSPReqInsBrokerUserFunctionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsBrokerUserFunctionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsBrokerUserFunctionField, name)
    __repr__ = _swig_repr

	# 交易用户代码
    __swig_setmethods__["UserID"] = _sptraderapi.CTORATstpSPReqInsBrokerUserFunctionField_UserID_set
    __swig_getmethods__["UserID"] = _sptraderapi.CTORATstpSPReqInsBrokerUserFunctionField_UserID_get
    if _newclass:
        UserID = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerUserFunctionField_UserID_get, _sptraderapi.CTORATstpSPReqInsBrokerUserFunctionField_UserID_set)

	# 功能代码
    __swig_setmethods__["FunctionID"] = _sptraderapi.CTORATstpSPReqInsBrokerUserFunctionField_FunctionID_set
    __swig_getmethods__["FunctionID"] = _sptraderapi.CTORATstpSPReqInsBrokerUserFunctionField_FunctionID_get
    if _newclass:
        FunctionID = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerUserFunctionField_FunctionID_get, _sptraderapi.CTORATstpSPReqInsBrokerUserFunctionField_FunctionID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsBrokerUserFunctionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsBrokerUserFunctionField
    __del__ = lambda self: None
CTORATstpSPReqInsBrokerUserFunctionField_swigregister = _sptraderapi.CTORATstpSPReqInsBrokerUserFunctionField_swigregister
CTORATstpSPReqInsBrokerUserFunctionField_swigregister(CTORATstpSPReqInsBrokerUserFunctionField)




#########################################请求更新BrokerUserFunction############################################
class CTORATstpSPReqUpdBrokerUserFunctionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdBrokerUserFunctionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdBrokerUserFunctionField, name)
    __repr__ = _swig_repr

	# 交易用户代码
    __swig_setmethods__["UserID"] = _sptraderapi.CTORATstpSPReqUpdBrokerUserFunctionField_UserID_set
    __swig_getmethods__["UserID"] = _sptraderapi.CTORATstpSPReqUpdBrokerUserFunctionField_UserID_get
    if _newclass:
        UserID = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerUserFunctionField_UserID_get, _sptraderapi.CTORATstpSPReqUpdBrokerUserFunctionField_UserID_set)

	# 功能代码
    __swig_setmethods__["FunctionID"] = _sptraderapi.CTORATstpSPReqUpdBrokerUserFunctionField_FunctionID_set
    __swig_getmethods__["FunctionID"] = _sptraderapi.CTORATstpSPReqUpdBrokerUserFunctionField_FunctionID_get
    if _newclass:
        FunctionID = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerUserFunctionField_FunctionID_get, _sptraderapi.CTORATstpSPReqUpdBrokerUserFunctionField_FunctionID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdBrokerUserFunctionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdBrokerUserFunctionField
    __del__ = lambda self: None
CTORATstpSPReqUpdBrokerUserFunctionField_swigregister = _sptraderapi.CTORATstpSPReqUpdBrokerUserFunctionField_swigregister
CTORATstpSPReqUpdBrokerUserFunctionField_swigregister(CTORATstpSPReqUpdBrokerUserFunctionField)




#########################################请求删除BrokerUserFunction############################################
class CTORATstpSPReqDelBrokerUserFunctionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelBrokerUserFunctionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelBrokerUserFunctionField, name)
    __repr__ = _swig_repr

	# 交易用户代码
    __swig_setmethods__["UserID"] = _sptraderapi.CTORATstpSPReqDelBrokerUserFunctionField_UserID_set
    __swig_getmethods__["UserID"] = _sptraderapi.CTORATstpSPReqDelBrokerUserFunctionField_UserID_get
    if _newclass:
        UserID = _swig_property(_sptraderapi.CTORATstpSPReqDelBrokerUserFunctionField_UserID_get, _sptraderapi.CTORATstpSPReqDelBrokerUserFunctionField_UserID_set)

	# 功能代码
    __swig_setmethods__["FunctionID"] = _sptraderapi.CTORATstpSPReqDelBrokerUserFunctionField_FunctionID_set
    __swig_getmethods__["FunctionID"] = _sptraderapi.CTORATstpSPReqDelBrokerUserFunctionField_FunctionID_get
    if _newclass:
        FunctionID = _swig_property(_sptraderapi.CTORATstpSPReqDelBrokerUserFunctionField_FunctionID_get, _sptraderapi.CTORATstpSPReqDelBrokerUserFunctionField_FunctionID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelBrokerUserFunctionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelBrokerUserFunctionField
    __del__ = lambda self: None
CTORATstpSPReqDelBrokerUserFunctionField_swigregister = _sptraderapi.CTORATstpSPReqDelBrokerUserFunctionField_swigregister
CTORATstpSPReqDelBrokerUserFunctionField_swigregister(CTORATstpSPReqDelBrokerUserFunctionField)




#########################################请求插入BrokerUserRole############################################
class CTORATstpSPReqInsBrokerUserRoleField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsBrokerUserRoleField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsBrokerUserRoleField, name)
    __repr__ = _swig_repr

	# 角色编号
    __swig_setmethods__["RoleID"] = _sptraderapi.CTORATstpSPReqInsBrokerUserRoleField_RoleID_set
    __swig_getmethods__["RoleID"] = _sptraderapi.CTORATstpSPReqInsBrokerUserRoleField_RoleID_get
    if _newclass:
        RoleID = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerUserRoleField_RoleID_get, _sptraderapi.CTORATstpSPReqInsBrokerUserRoleField_RoleID_set)

	# 角色描述
    __swig_setmethods__["RoleDescription"] = _sptraderapi.CTORATstpSPReqInsBrokerUserRoleField_RoleDescription_set
    __swig_getmethods__["RoleDescription"] = _sptraderapi.CTORATstpSPReqInsBrokerUserRoleField_RoleDescription_get
    if _newclass:
        RoleDescription = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerUserRoleField_RoleDescription_get, _sptraderapi.CTORATstpSPReqInsBrokerUserRoleField_RoleDescription_set)

	# 功能权限集合
    __swig_setmethods__["Functions"] = _sptraderapi.CTORATstpSPReqInsBrokerUserRoleField_Functions_set
    __swig_getmethods__["Functions"] = _sptraderapi.CTORATstpSPReqInsBrokerUserRoleField_Functions_get
    if _newclass:
        Functions = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerUserRoleField_Functions_get, _sptraderapi.CTORATstpSPReqInsBrokerUserRoleField_Functions_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsBrokerUserRoleField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsBrokerUserRoleField
    __del__ = lambda self: None
CTORATstpSPReqInsBrokerUserRoleField_swigregister = _sptraderapi.CTORATstpSPReqInsBrokerUserRoleField_swigregister
CTORATstpSPReqInsBrokerUserRoleField_swigregister(CTORATstpSPReqInsBrokerUserRoleField)




#########################################请求更新BrokerUserRole############################################
class CTORATstpSPReqUpdBrokerUserRoleField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdBrokerUserRoleField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdBrokerUserRoleField, name)
    __repr__ = _swig_repr

	# 角色编号
    __swig_setmethods__["RoleID"] = _sptraderapi.CTORATstpSPReqUpdBrokerUserRoleField_RoleID_set
    __swig_getmethods__["RoleID"] = _sptraderapi.CTORATstpSPReqUpdBrokerUserRoleField_RoleID_get
    if _newclass:
        RoleID = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerUserRoleField_RoleID_get, _sptraderapi.CTORATstpSPReqUpdBrokerUserRoleField_RoleID_set)

	# 角色描述
    __swig_setmethods__["RoleDescription"] = _sptraderapi.CTORATstpSPReqUpdBrokerUserRoleField_RoleDescription_set
    __swig_getmethods__["RoleDescription"] = _sptraderapi.CTORATstpSPReqUpdBrokerUserRoleField_RoleDescription_get
    if _newclass:
        RoleDescription = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerUserRoleField_RoleDescription_get, _sptraderapi.CTORATstpSPReqUpdBrokerUserRoleField_RoleDescription_set)

	# 功能权限集合
    __swig_setmethods__["Functions"] = _sptraderapi.CTORATstpSPReqUpdBrokerUserRoleField_Functions_set
    __swig_getmethods__["Functions"] = _sptraderapi.CTORATstpSPReqUpdBrokerUserRoleField_Functions_get
    if _newclass:
        Functions = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerUserRoleField_Functions_get, _sptraderapi.CTORATstpSPReqUpdBrokerUserRoleField_Functions_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdBrokerUserRoleField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdBrokerUserRoleField
    __del__ = lambda self: None
CTORATstpSPReqUpdBrokerUserRoleField_swigregister = _sptraderapi.CTORATstpSPReqUpdBrokerUserRoleField_swigregister
CTORATstpSPReqUpdBrokerUserRoleField_swigregister(CTORATstpSPReqUpdBrokerUserRoleField)




#########################################请求删除BrokerUserRole############################################
class CTORATstpSPReqDelBrokerUserRoleField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelBrokerUserRoleField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelBrokerUserRoleField, name)
    __repr__ = _swig_repr

	# 角色编号
    __swig_setmethods__["RoleID"] = _sptraderapi.CTORATstpSPReqDelBrokerUserRoleField_RoleID_set
    __swig_getmethods__["RoleID"] = _sptraderapi.CTORATstpSPReqDelBrokerUserRoleField_RoleID_get
    if _newclass:
        RoleID = _swig_property(_sptraderapi.CTORATstpSPReqDelBrokerUserRoleField_RoleID_get, _sptraderapi.CTORATstpSPReqDelBrokerUserRoleField_RoleID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelBrokerUserRoleField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelBrokerUserRoleField
    __del__ = lambda self: None
CTORATstpSPReqDelBrokerUserRoleField_swigregister = _sptraderapi.CTORATstpSPReqDelBrokerUserRoleField_swigregister
CTORATstpSPReqDelBrokerUserRoleField_swigregister(CTORATstpSPReqDelBrokerUserRoleField)




#########################################请求插入BrokerUserRoleAssignment############################################
class CTORATstpSPReqInsBrokerUserRoleAssignmentField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsBrokerUserRoleAssignmentField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsBrokerUserRoleAssignmentField, name)
    __repr__ = _swig_repr

	# 交易用户代码
    __swig_setmethods__["UserID"] = _sptraderapi.CTORATstpSPReqInsBrokerUserRoleAssignmentField_UserID_set
    __swig_getmethods__["UserID"] = _sptraderapi.CTORATstpSPReqInsBrokerUserRoleAssignmentField_UserID_get
    if _newclass:
        UserID = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerUserRoleAssignmentField_UserID_get, _sptraderapi.CTORATstpSPReqInsBrokerUserRoleAssignmentField_UserID_set)

	# 角色编号
    __swig_setmethods__["RoleID"] = _sptraderapi.CTORATstpSPReqInsBrokerUserRoleAssignmentField_RoleID_set
    __swig_getmethods__["RoleID"] = _sptraderapi.CTORATstpSPReqInsBrokerUserRoleAssignmentField_RoleID_get
    if _newclass:
        RoleID = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerUserRoleAssignmentField_RoleID_get, _sptraderapi.CTORATstpSPReqInsBrokerUserRoleAssignmentField_RoleID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsBrokerUserRoleAssignmentField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsBrokerUserRoleAssignmentField
    __del__ = lambda self: None
CTORATstpSPReqInsBrokerUserRoleAssignmentField_swigregister = _sptraderapi.CTORATstpSPReqInsBrokerUserRoleAssignmentField_swigregister
CTORATstpSPReqInsBrokerUserRoleAssignmentField_swigregister(CTORATstpSPReqInsBrokerUserRoleAssignmentField)




#########################################请求更新BrokerUserRoleAssignment############################################
class CTORATstpSPReqUpdBrokerUserRoleAssignmentField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdBrokerUserRoleAssignmentField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdBrokerUserRoleAssignmentField, name)
    __repr__ = _swig_repr

	# 交易用户代码
    __swig_setmethods__["UserID"] = _sptraderapi.CTORATstpSPReqUpdBrokerUserRoleAssignmentField_UserID_set
    __swig_getmethods__["UserID"] = _sptraderapi.CTORATstpSPReqUpdBrokerUserRoleAssignmentField_UserID_get
    if _newclass:
        UserID = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerUserRoleAssignmentField_UserID_get, _sptraderapi.CTORATstpSPReqUpdBrokerUserRoleAssignmentField_UserID_set)

	# 角色编号
    __swig_setmethods__["RoleID"] = _sptraderapi.CTORATstpSPReqUpdBrokerUserRoleAssignmentField_RoleID_set
    __swig_getmethods__["RoleID"] = _sptraderapi.CTORATstpSPReqUpdBrokerUserRoleAssignmentField_RoleID_get
    if _newclass:
        RoleID = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerUserRoleAssignmentField_RoleID_get, _sptraderapi.CTORATstpSPReqUpdBrokerUserRoleAssignmentField_RoleID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdBrokerUserRoleAssignmentField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdBrokerUserRoleAssignmentField
    __del__ = lambda self: None
CTORATstpSPReqUpdBrokerUserRoleAssignmentField_swigregister = _sptraderapi.CTORATstpSPReqUpdBrokerUserRoleAssignmentField_swigregister
CTORATstpSPReqUpdBrokerUserRoleAssignmentField_swigregister(CTORATstpSPReqUpdBrokerUserRoleAssignmentField)




#########################################请求删除BrokerUserRoleAssignment############################################
class CTORATstpSPReqDelBrokerUserRoleAssignmentField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelBrokerUserRoleAssignmentField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelBrokerUserRoleAssignmentField, name)
    __repr__ = _swig_repr

	# 交易用户代码
    __swig_setmethods__["UserID"] = _sptraderapi.CTORATstpSPReqDelBrokerUserRoleAssignmentField_UserID_set
    __swig_getmethods__["UserID"] = _sptraderapi.CTORATstpSPReqDelBrokerUserRoleAssignmentField_UserID_get
    if _newclass:
        UserID = _swig_property(_sptraderapi.CTORATstpSPReqDelBrokerUserRoleAssignmentField_UserID_get, _sptraderapi.CTORATstpSPReqDelBrokerUserRoleAssignmentField_UserID_set)

	# 角色编号
    __swig_setmethods__["RoleID"] = _sptraderapi.CTORATstpSPReqDelBrokerUserRoleAssignmentField_RoleID_set
    __swig_getmethods__["RoleID"] = _sptraderapi.CTORATstpSPReqDelBrokerUserRoleAssignmentField_RoleID_get
    if _newclass:
        RoleID = _swig_property(_sptraderapi.CTORATstpSPReqDelBrokerUserRoleAssignmentField_RoleID_get, _sptraderapi.CTORATstpSPReqDelBrokerUserRoleAssignmentField_RoleID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelBrokerUserRoleAssignmentField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelBrokerUserRoleAssignmentField
    __del__ = lambda self: None
CTORATstpSPReqDelBrokerUserRoleAssignmentField_swigregister = _sptraderapi.CTORATstpSPReqDelBrokerUserRoleAssignmentField_swigregister
CTORATstpSPReqDelBrokerUserRoleAssignmentField_swigregister(CTORATstpSPReqDelBrokerUserRoleAssignmentField)




#########################################请求插入BUProxy############################################
class CTORATstpSPReqInsBUProxyField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsBUProxyField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsBUProxyField, name)
    __repr__ = _swig_repr

	# 交易用户代码
    __swig_setmethods__["UserID"] = _sptraderapi.CTORATstpSPReqInsBUProxyField_UserID_set
    __swig_getmethods__["UserID"] = _sptraderapi.CTORATstpSPReqInsBUProxyField_UserID_get
    if _newclass:
        UserID = _swig_property(_sptraderapi.CTORATstpSPReqInsBUProxyField_UserID_get, _sptraderapi.CTORATstpSPReqInsBUProxyField_UserID_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqInsBUProxyField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqInsBUProxyField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqInsBUProxyField_InvestorID_get, _sptraderapi.CTORATstpSPReqInsBUProxyField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPReqInsBUProxyField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPReqInsBUProxyField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPReqInsBUProxyField_BusinessUnitID_get, _sptraderapi.CTORATstpSPReqInsBUProxyField_BusinessUnitID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsBUProxyField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsBUProxyField
    __del__ = lambda self: None
CTORATstpSPReqInsBUProxyField_swigregister = _sptraderapi.CTORATstpSPReqInsBUProxyField_swigregister
CTORATstpSPReqInsBUProxyField_swigregister(CTORATstpSPReqInsBUProxyField)




#########################################请求更新BUProxy############################################
class CTORATstpSPReqUpdBUProxyField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdBUProxyField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdBUProxyField, name)
    __repr__ = _swig_repr

	# 交易用户代码
    __swig_setmethods__["UserID"] = _sptraderapi.CTORATstpSPReqUpdBUProxyField_UserID_set
    __swig_getmethods__["UserID"] = _sptraderapi.CTORATstpSPReqUpdBUProxyField_UserID_get
    if _newclass:
        UserID = _swig_property(_sptraderapi.CTORATstpSPReqUpdBUProxyField_UserID_get, _sptraderapi.CTORATstpSPReqUpdBUProxyField_UserID_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqUpdBUProxyField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqUpdBUProxyField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqUpdBUProxyField_InvestorID_get, _sptraderapi.CTORATstpSPReqUpdBUProxyField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPReqUpdBUProxyField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPReqUpdBUProxyField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPReqUpdBUProxyField_BusinessUnitID_get, _sptraderapi.CTORATstpSPReqUpdBUProxyField_BusinessUnitID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdBUProxyField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdBUProxyField
    __del__ = lambda self: None
CTORATstpSPReqUpdBUProxyField_swigregister = _sptraderapi.CTORATstpSPReqUpdBUProxyField_swigregister
CTORATstpSPReqUpdBUProxyField_swigregister(CTORATstpSPReqUpdBUProxyField)




#########################################请求删除BUProxy############################################
class CTORATstpSPReqDelBUProxyField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelBUProxyField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelBUProxyField, name)
    __repr__ = _swig_repr

	# 交易用户代码
    __swig_setmethods__["UserID"] = _sptraderapi.CTORATstpSPReqDelBUProxyField_UserID_set
    __swig_getmethods__["UserID"] = _sptraderapi.CTORATstpSPReqDelBUProxyField_UserID_get
    if _newclass:
        UserID = _swig_property(_sptraderapi.CTORATstpSPReqDelBUProxyField_UserID_get, _sptraderapi.CTORATstpSPReqDelBUProxyField_UserID_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqDelBUProxyField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqDelBUProxyField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqDelBUProxyField_InvestorID_get, _sptraderapi.CTORATstpSPReqDelBUProxyField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPReqDelBUProxyField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPReqDelBUProxyField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPReqDelBUProxyField_BusinessUnitID_get, _sptraderapi.CTORATstpSPReqDelBUProxyField_BusinessUnitID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelBUProxyField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelBUProxyField
    __del__ = lambda self: None
CTORATstpSPReqDelBUProxyField_swigregister = _sptraderapi.CTORATstpSPReqDelBUProxyField_swigregister
CTORATstpSPReqDelBUProxyField_swigregister(CTORATstpSPReqDelBUProxyField)




#########################################请求插入BusinessUnit############################################
class CTORATstpSPReqInsBusinessUnitField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsBusinessUnitField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsBusinessUnitField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqInsBusinessUnitField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqInsBusinessUnitField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqInsBusinessUnitField_InvestorID_get, _sptraderapi.CTORATstpSPReqInsBusinessUnitField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPReqInsBusinessUnitField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPReqInsBusinessUnitField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPReqInsBusinessUnitField_BusinessUnitID_get, _sptraderapi.CTORATstpSPReqInsBusinessUnitField_BusinessUnitID_set)

	# 投资单元名称
    __swig_setmethods__["BusinessUnitName"] = _sptraderapi.CTORATstpSPReqInsBusinessUnitField_BusinessUnitName_set
    __swig_getmethods__["BusinessUnitName"] = _sptraderapi.CTORATstpSPReqInsBusinessUnitField_BusinessUnitName_get
    if _newclass:
        BusinessUnitName = _swig_property(_sptraderapi.CTORATstpSPReqInsBusinessUnitField_BusinessUnitName_get, _sptraderapi.CTORATstpSPReqInsBusinessUnitField_BusinessUnitName_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsBusinessUnitField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsBusinessUnitField
    __del__ = lambda self: None
CTORATstpSPReqInsBusinessUnitField_swigregister = _sptraderapi.CTORATstpSPReqInsBusinessUnitField_swigregister
CTORATstpSPReqInsBusinessUnitField_swigregister(CTORATstpSPReqInsBusinessUnitField)




#########################################请求更新BusinessUnit############################################
class CTORATstpSPReqUpdBusinessUnitField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdBusinessUnitField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdBusinessUnitField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqUpdBusinessUnitField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqUpdBusinessUnitField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqUpdBusinessUnitField_InvestorID_get, _sptraderapi.CTORATstpSPReqUpdBusinessUnitField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPReqUpdBusinessUnitField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPReqUpdBusinessUnitField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPReqUpdBusinessUnitField_BusinessUnitID_get, _sptraderapi.CTORATstpSPReqUpdBusinessUnitField_BusinessUnitID_set)

	# 投资单元名称
    __swig_setmethods__["BusinessUnitName"] = _sptraderapi.CTORATstpSPReqUpdBusinessUnitField_BusinessUnitName_set
    __swig_getmethods__["BusinessUnitName"] = _sptraderapi.CTORATstpSPReqUpdBusinessUnitField_BusinessUnitName_get
    if _newclass:
        BusinessUnitName = _swig_property(_sptraderapi.CTORATstpSPReqUpdBusinessUnitField_BusinessUnitName_get, _sptraderapi.CTORATstpSPReqUpdBusinessUnitField_BusinessUnitName_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdBusinessUnitField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdBusinessUnitField
    __del__ = lambda self: None
CTORATstpSPReqUpdBusinessUnitField_swigregister = _sptraderapi.CTORATstpSPReqUpdBusinessUnitField_swigregister
CTORATstpSPReqUpdBusinessUnitField_swigregister(CTORATstpSPReqUpdBusinessUnitField)




#########################################请求删除BusinessUnit############################################
class CTORATstpSPReqDelBusinessUnitField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelBusinessUnitField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelBusinessUnitField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqDelBusinessUnitField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqDelBusinessUnitField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqDelBusinessUnitField_InvestorID_get, _sptraderapi.CTORATstpSPReqDelBusinessUnitField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPReqDelBusinessUnitField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPReqDelBusinessUnitField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPReqDelBusinessUnitField_BusinessUnitID_get, _sptraderapi.CTORATstpSPReqDelBusinessUnitField_BusinessUnitID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelBusinessUnitField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelBusinessUnitField
    __del__ = lambda self: None
CTORATstpSPReqDelBusinessUnitField_swigregister = _sptraderapi.CTORATstpSPReqDelBusinessUnitField_swigregister
CTORATstpSPReqDelBusinessUnitField_swigregister(CTORATstpSPReqDelBusinessUnitField)




#########################################请求插入DbmtInfo############################################
class CTORATstpSPReqInsDbmtInfoField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsDbmtInfoField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsDbmtInfoField, name)
    __repr__ = _swig_repr

	# 应用名称
    __swig_setmethods__["AppName"] = _sptraderapi.CTORATstpSPReqInsDbmtInfoField_AppName_set
    __swig_getmethods__["AppName"] = _sptraderapi.CTORATstpSPReqInsDbmtInfoField_AppName_get
    if _newclass:
        AppName = _swig_property(_sptraderapi.CTORATstpSPReqInsDbmtInfoField_AppName_get, _sptraderapi.CTORATstpSPReqInsDbmtInfoField_AppName_set)

	# 上次查询请求的日期
    __swig_setmethods__["LastQryDate"] = _sptraderapi.CTORATstpSPReqInsDbmtInfoField_LastQryDate_set
    __swig_getmethods__["LastQryDate"] = _sptraderapi.CTORATstpSPReqInsDbmtInfoField_LastQryDate_get
    if _newclass:
        LastQryDate = _swig_property(_sptraderapi.CTORATstpSPReqInsDbmtInfoField_LastQryDate_get, _sptraderapi.CTORATstpSPReqInsDbmtInfoField_LastQryDate_set)

	# 上次查询请求的时间
    __swig_setmethods__["LastQryTime"] = _sptraderapi.CTORATstpSPReqInsDbmtInfoField_LastQryTime_set
    __swig_getmethods__["LastQryTime"] = _sptraderapi.CTORATstpSPReqInsDbmtInfoField_LastQryTime_get
    if _newclass:
        LastQryTime = _swig_property(_sptraderapi.CTORATstpSPReqInsDbmtInfoField_LastQryTime_get, _sptraderapi.CTORATstpSPReqInsDbmtInfoField_LastQryTime_set)

	# 重启查询使用
    __swig_setmethods__["CurrDbmtNo"] = _sptraderapi.CTORATstpSPReqInsDbmtInfoField_CurrDbmtNo_set
    __swig_getmethods__["CurrDbmtNo"] = _sptraderapi.CTORATstpSPReqInsDbmtInfoField_CurrDbmtNo_get
    if _newclass:
        CurrDbmtNo = _swig_property(_sptraderapi.CTORATstpSPReqInsDbmtInfoField_CurrDbmtNo_get, _sptraderapi.CTORATstpSPReqInsDbmtInfoField_CurrDbmtNo_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsDbmtInfoField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsDbmtInfoField
    __del__ = lambda self: None
CTORATstpSPReqInsDbmtInfoField_swigregister = _sptraderapi.CTORATstpSPReqInsDbmtInfoField_swigregister
CTORATstpSPReqInsDbmtInfoField_swigregister(CTORATstpSPReqInsDbmtInfoField)




#########################################请求更新DbmtInfo############################################
class CTORATstpSPReqUpdDbmtInfoField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdDbmtInfoField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdDbmtInfoField, name)
    __repr__ = _swig_repr

	# 应用名称
    __swig_setmethods__["AppName"] = _sptraderapi.CTORATstpSPReqUpdDbmtInfoField_AppName_set
    __swig_getmethods__["AppName"] = _sptraderapi.CTORATstpSPReqUpdDbmtInfoField_AppName_get
    if _newclass:
        AppName = _swig_property(_sptraderapi.CTORATstpSPReqUpdDbmtInfoField_AppName_get, _sptraderapi.CTORATstpSPReqUpdDbmtInfoField_AppName_set)

	# 上次查询请求的日期
    __swig_setmethods__["LastQryDate"] = _sptraderapi.CTORATstpSPReqUpdDbmtInfoField_LastQryDate_set
    __swig_getmethods__["LastQryDate"] = _sptraderapi.CTORATstpSPReqUpdDbmtInfoField_LastQryDate_get
    if _newclass:
        LastQryDate = _swig_property(_sptraderapi.CTORATstpSPReqUpdDbmtInfoField_LastQryDate_get, _sptraderapi.CTORATstpSPReqUpdDbmtInfoField_LastQryDate_set)

	# 上次查询请求的时间
    __swig_setmethods__["LastQryTime"] = _sptraderapi.CTORATstpSPReqUpdDbmtInfoField_LastQryTime_set
    __swig_getmethods__["LastQryTime"] = _sptraderapi.CTORATstpSPReqUpdDbmtInfoField_LastQryTime_get
    if _newclass:
        LastQryTime = _swig_property(_sptraderapi.CTORATstpSPReqUpdDbmtInfoField_LastQryTime_get, _sptraderapi.CTORATstpSPReqUpdDbmtInfoField_LastQryTime_set)

	# 重启查询使用
    __swig_setmethods__["CurrDbmtNo"] = _sptraderapi.CTORATstpSPReqUpdDbmtInfoField_CurrDbmtNo_set
    __swig_getmethods__["CurrDbmtNo"] = _sptraderapi.CTORATstpSPReqUpdDbmtInfoField_CurrDbmtNo_get
    if _newclass:
        CurrDbmtNo = _swig_property(_sptraderapi.CTORATstpSPReqUpdDbmtInfoField_CurrDbmtNo_get, _sptraderapi.CTORATstpSPReqUpdDbmtInfoField_CurrDbmtNo_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdDbmtInfoField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdDbmtInfoField
    __del__ = lambda self: None
CTORATstpSPReqUpdDbmtInfoField_swigregister = _sptraderapi.CTORATstpSPReqUpdDbmtInfoField_swigregister
CTORATstpSPReqUpdDbmtInfoField_swigregister(CTORATstpSPReqUpdDbmtInfoField)




#########################################请求删除DbmtInfo############################################
class CTORATstpSPReqDelDbmtInfoField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelDbmtInfoField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelDbmtInfoField, name)
    __repr__ = _swig_repr

	# 应用名称
    __swig_setmethods__["AppName"] = _sptraderapi.CTORATstpSPReqDelDbmtInfoField_AppName_set
    __swig_getmethods__["AppName"] = _sptraderapi.CTORATstpSPReqDelDbmtInfoField_AppName_get
    if _newclass:
        AppName = _swig_property(_sptraderapi.CTORATstpSPReqDelDbmtInfoField_AppName_get, _sptraderapi.CTORATstpSPReqDelDbmtInfoField_AppName_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelDbmtInfoField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelDbmtInfoField
    __del__ = lambda self: None
CTORATstpSPReqDelDbmtInfoField_swigregister = _sptraderapi.CTORATstpSPReqDelDbmtInfoField_swigregister
CTORATstpSPReqDelDbmtInfoField_swigregister(CTORATstpSPReqDelDbmtInfoField)




#########################################请求插入ExchangeSyncStatus############################################
class CTORATstpSPReqInsExchangeSyncStatusField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsExchangeSyncStatusField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsExchangeSyncStatusField, name)
    __repr__ = _swig_repr

	# 交易发生的日期
    __swig_setmethods__["TradingDay"] = _sptraderapi.CTORATstpSPReqInsExchangeSyncStatusField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _sptraderapi.CTORATstpSPReqInsExchangeSyncStatusField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_sptraderapi.CTORATstpSPReqInsExchangeSyncStatusField_TradingDay_get, _sptraderapi.CTORATstpSPReqInsExchangeSyncStatusField_TradingDay_set)

	# 一个交易所的编号
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsExchangeSyncStatusField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsExchangeSyncStatusField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqInsExchangeSyncStatusField_ExchangeID_get, _sptraderapi.CTORATstpSPReqInsExchangeSyncStatusField_ExchangeID_set)

	# 数据同步状态
    __swig_setmethods__["DataSyncStatus"] = _sptraderapi.CTORATstpSPReqInsExchangeSyncStatusField_DataSyncStatus_set
    __swig_getmethods__["DataSyncStatus"] = _sptraderapi.CTORATstpSPReqInsExchangeSyncStatusField_DataSyncStatus_get
    if _newclass:
        DataSyncStatus = _swig_property(_sptraderapi.CTORATstpSPReqInsExchangeSyncStatusField_DataSyncStatus_get, _sptraderapi.CTORATstpSPReqInsExchangeSyncStatusField_DataSyncStatus_set)

	# 同步顺序
    __swig_setmethods__["SyncNo"] = _sptraderapi.CTORATstpSPReqInsExchangeSyncStatusField_SyncNo_set
    __swig_getmethods__["SyncNo"] = _sptraderapi.CTORATstpSPReqInsExchangeSyncStatusField_SyncNo_get
    if _newclass:
        SyncNo = _swig_property(_sptraderapi.CTORATstpSPReqInsExchangeSyncStatusField_SyncNo_get, _sptraderapi.CTORATstpSPReqInsExchangeSyncStatusField_SyncNo_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsExchangeSyncStatusField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsExchangeSyncStatusField
    __del__ = lambda self: None
CTORATstpSPReqInsExchangeSyncStatusField_swigregister = _sptraderapi.CTORATstpSPReqInsExchangeSyncStatusField_swigregister
CTORATstpSPReqInsExchangeSyncStatusField_swigregister(CTORATstpSPReqInsExchangeSyncStatusField)




#########################################请求更新ExchangeSyncStatus############################################
class CTORATstpSPReqUpdExchangeSyncStatusField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdExchangeSyncStatusField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdExchangeSyncStatusField, name)
    __repr__ = _swig_repr

	# 交易发生的日期
    __swig_setmethods__["TradingDay"] = _sptraderapi.CTORATstpSPReqUpdExchangeSyncStatusField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _sptraderapi.CTORATstpSPReqUpdExchangeSyncStatusField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_sptraderapi.CTORATstpSPReqUpdExchangeSyncStatusField_TradingDay_get, _sptraderapi.CTORATstpSPReqUpdExchangeSyncStatusField_TradingDay_set)

	# 一个交易所的编号
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdExchangeSyncStatusField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdExchangeSyncStatusField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqUpdExchangeSyncStatusField_ExchangeID_get, _sptraderapi.CTORATstpSPReqUpdExchangeSyncStatusField_ExchangeID_set)

	# 数据同步状态
    __swig_setmethods__["DataSyncStatus"] = _sptraderapi.CTORATstpSPReqUpdExchangeSyncStatusField_DataSyncStatus_set
    __swig_getmethods__["DataSyncStatus"] = _sptraderapi.CTORATstpSPReqUpdExchangeSyncStatusField_DataSyncStatus_get
    if _newclass:
        DataSyncStatus = _swig_property(_sptraderapi.CTORATstpSPReqUpdExchangeSyncStatusField_DataSyncStatus_get, _sptraderapi.CTORATstpSPReqUpdExchangeSyncStatusField_DataSyncStatus_set)

	# 同步顺序
    __swig_setmethods__["SyncNo"] = _sptraderapi.CTORATstpSPReqUpdExchangeSyncStatusField_SyncNo_set
    __swig_getmethods__["SyncNo"] = _sptraderapi.CTORATstpSPReqUpdExchangeSyncStatusField_SyncNo_get
    if _newclass:
        SyncNo = _swig_property(_sptraderapi.CTORATstpSPReqUpdExchangeSyncStatusField_SyncNo_get, _sptraderapi.CTORATstpSPReqUpdExchangeSyncStatusField_SyncNo_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdExchangeSyncStatusField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdExchangeSyncStatusField
    __del__ = lambda self: None
CTORATstpSPReqUpdExchangeSyncStatusField_swigregister = _sptraderapi.CTORATstpSPReqUpdExchangeSyncStatusField_swigregister
CTORATstpSPReqUpdExchangeSyncStatusField_swigregister(CTORATstpSPReqUpdExchangeSyncStatusField)




#########################################请求删除ExchangeSyncStatus############################################
class CTORATstpSPReqDelExchangeSyncStatusField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelExchangeSyncStatusField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelExchangeSyncStatusField, name)
    __repr__ = _swig_repr

	# 一个交易所的编号
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelExchangeSyncStatusField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelExchangeSyncStatusField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqDelExchangeSyncStatusField_ExchangeID_get, _sptraderapi.CTORATstpSPReqDelExchangeSyncStatusField_ExchangeID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelExchangeSyncStatusField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelExchangeSyncStatusField
    __del__ = lambda self: None
CTORATstpSPReqDelExchangeSyncStatusField_swigregister = _sptraderapi.CTORATstpSPReqDelExchangeSyncStatusField_swigregister
CTORATstpSPReqDelExchangeSyncStatusField_swigregister(CTORATstpSPReqDelExchangeSyncStatusField)




#########################################请求插入Investor############################################
class CTORATstpSPReqInsInvestorField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsInvestorField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsInvestorField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqInsInvestorField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqInsInvestorField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorField_InvestorID_get, _sptraderapi.CTORATstpSPReqInsInvestorField_InvestorID_set)

	# 经纪公司部门代码
    __swig_setmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPReqInsInvestorField_DepartmentID_set
    __swig_getmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPReqInsInvestorField_DepartmentID_get
    if _newclass:
        DepartmentID = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorField_DepartmentID_get, _sptraderapi.CTORATstpSPReqInsInvestorField_DepartmentID_set)

	# 自然人、法人、特殊法人、资管、基金等
    __swig_setmethods__["InvestorType"] = _sptraderapi.CTORATstpSPReqInsInvestorField_InvestorType_set
    __swig_getmethods__["InvestorType"] = _sptraderapi.CTORATstpSPReqInsInvestorField_InvestorType_get
    if _newclass:
        InvestorType = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorField_InvestorType_get, _sptraderapi.CTORATstpSPReqInsInvestorField_InvestorType_set)

	# 投资者名称
    __swig_setmethods__["InvestorName"] = _sptraderapi.CTORATstpSPReqInsInvestorField_InvestorName_set
    __swig_getmethods__["InvestorName"] = _sptraderapi.CTORATstpSPReqInsInvestorField_InvestorName_get
    if _newclass:
        InvestorName = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorField_InvestorName_get, _sptraderapi.CTORATstpSPReqInsInvestorField_InvestorName_set)

	# 证件类型
    __swig_setmethods__["IdCardType"] = _sptraderapi.CTORATstpSPReqInsInvestorField_IdCardType_set
    __swig_getmethods__["IdCardType"] = _sptraderapi.CTORATstpSPReqInsInvestorField_IdCardType_get
    if _newclass:
        IdCardType = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorField_IdCardType_get, _sptraderapi.CTORATstpSPReqInsInvestorField_IdCardType_set)

	# 证件号码
    __swig_setmethods__["IdCardNo"] = _sptraderapi.CTORATstpSPReqInsInvestorField_IdCardNo_set
    __swig_getmethods__["IdCardNo"] = _sptraderapi.CTORATstpSPReqInsInvestorField_IdCardNo_get
    if _newclass:
        IdCardNo = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorField_IdCardNo_get, _sptraderapi.CTORATstpSPReqInsInvestorField_IdCardNo_set)

	# 合同编号
    __swig_setmethods__["ContractNo"] = _sptraderapi.CTORATstpSPReqInsInvestorField_ContractNo_set
    __swig_getmethods__["ContractNo"] = _sptraderapi.CTORATstpSPReqInsInvestorField_ContractNo_get
    if _newclass:
        ContractNo = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorField_ContractNo_get, _sptraderapi.CTORATstpSPReqInsInvestorField_ContractNo_set)

	# 开户日期
    __swig_setmethods__["OpenDate"] = _sptraderapi.CTORATstpSPReqInsInvestorField_OpenDate_set
    __swig_getmethods__["OpenDate"] = _sptraderapi.CTORATstpSPReqInsInvestorField_OpenDate_get
    if _newclass:
        OpenDate = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorField_OpenDate_get, _sptraderapi.CTORATstpSPReqInsInvestorField_OpenDate_set)

	# 销户日期
    __swig_setmethods__["CloseDate"] = _sptraderapi.CTORATstpSPReqInsInvestorField_CloseDate_set
    __swig_getmethods__["CloseDate"] = _sptraderapi.CTORATstpSPReqInsInvestorField_CloseDate_get
    if _newclass:
        CloseDate = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorField_CloseDate_get, _sptraderapi.CTORATstpSPReqInsInvestorField_CloseDate_set)

	# 初始、启用、禁用、激活等
    __swig_setmethods__["Status"] = _sptraderapi.CTORATstpSPReqInsInvestorField_Status_set
    __swig_getmethods__["Status"] = _sptraderapi.CTORATstpSPReqInsInvestorField_Status_get
    if _newclass:
        Status = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorField_Status_get, _sptraderapi.CTORATstpSPReqInsInvestorField_Status_set)

	# 内部机构编码
    __swig_setmethods__["InnerBranchID"] = _sptraderapi.CTORATstpSPReqInsInvestorField_InnerBranchID_set
    __swig_getmethods__["InnerBranchID"] = _sptraderapi.CTORATstpSPReqInsInvestorField_InnerBranchID_get
    if _newclass:
        InnerBranchID = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorField_InnerBranchID_get, _sptraderapi.CTORATstpSPReqInsInvestorField_InnerBranchID_set)

	# 投资者分级类别
    __swig_setmethods__["InvestorLevel"] = _sptraderapi.CTORATstpSPReqInsInvestorField_InvestorLevel_set
    __swig_getmethods__["InvestorLevel"] = _sptraderapi.CTORATstpSPReqInsInvestorField_InvestorLevel_get
    if _newclass:
        InvestorLevel = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorField_InvestorLevel_get, _sptraderapi.CTORATstpSPReqInsInvestorField_InvestorLevel_set)

	# 手机
    __swig_setmethods__["Mobile"] = _sptraderapi.CTORATstpSPReqInsInvestorField_Mobile_set
    __swig_getmethods__["Mobile"] = _sptraderapi.CTORATstpSPReqInsInvestorField_Mobile_get
    if _newclass:
        Mobile = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorField_Mobile_get, _sptraderapi.CTORATstpSPReqInsInvestorField_Mobile_set)

	# 联系电话
    __swig_setmethods__["Telephone"] = _sptraderapi.CTORATstpSPReqInsInvestorField_Telephone_set
    __swig_getmethods__["Telephone"] = _sptraderapi.CTORATstpSPReqInsInvestorField_Telephone_get
    if _newclass:
        Telephone = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorField_Telephone_get, _sptraderapi.CTORATstpSPReqInsInvestorField_Telephone_set)

	# 电子邮件
    __swig_setmethods__["Email"] = _sptraderapi.CTORATstpSPReqInsInvestorField_Email_set
    __swig_getmethods__["Email"] = _sptraderapi.CTORATstpSPReqInsInvestorField_Email_get
    if _newclass:
        Email = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorField_Email_get, _sptraderapi.CTORATstpSPReqInsInvestorField_Email_set)

	# 传真
    __swig_setmethods__["Fax"] = _sptraderapi.CTORATstpSPReqInsInvestorField_Fax_set
    __swig_getmethods__["Fax"] = _sptraderapi.CTORATstpSPReqInsInvestorField_Fax_get
    if _newclass:
        Fax = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorField_Fax_get, _sptraderapi.CTORATstpSPReqInsInvestorField_Fax_set)

	# 通讯地址
    __swig_setmethods__["Address"] = _sptraderapi.CTORATstpSPReqInsInvestorField_Address_set
    __swig_getmethods__["Address"] = _sptraderapi.CTORATstpSPReqInsInvestorField_Address_get
    if _newclass:
        Address = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorField_Address_get, _sptraderapi.CTORATstpSPReqInsInvestorField_Address_set)

	# 邮政编码
    __swig_setmethods__["ZipCode"] = _sptraderapi.CTORATstpSPReqInsInvestorField_ZipCode_set
    __swig_getmethods__["ZipCode"] = _sptraderapi.CTORATstpSPReqInsInvestorField_ZipCode_get
    if _newclass:
        ZipCode = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorField_ZipCode_get, _sptraderapi.CTORATstpSPReqInsInvestorField_ZipCode_set)

	# 备注
    __swig_setmethods__["Remark"] = _sptraderapi.CTORATstpSPReqInsInvestorField_Remark_set
    __swig_getmethods__["Remark"] = _sptraderapi.CTORATstpSPReqInsInvestorField_Remark_get
    if _newclass:
        Remark = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorField_Remark_get, _sptraderapi.CTORATstpSPReqInsInvestorField_Remark_set)

	# 佣金模板代码
    __swig_setmethods__["TradingFeeTemplateID"] = _sptraderapi.CTORATstpSPReqInsInvestorField_TradingFeeTemplateID_set
    __swig_getmethods__["TradingFeeTemplateID"] = _sptraderapi.CTORATstpSPReqInsInvestorField_TradingFeeTemplateID_get
    if _newclass:
        TradingFeeTemplateID = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorField_TradingFeeTemplateID_get, _sptraderapi.CTORATstpSPReqInsInvestorField_TradingFeeTemplateID_set)

	# 保证金模板代码
    __swig_setmethods__["MarginFeeTemplateID"] = _sptraderapi.CTORATstpSPReqInsInvestorField_MarginFeeTemplateID_set
    __swig_getmethods__["MarginFeeTemplateID"] = _sptraderapi.CTORATstpSPReqInsInvestorField_MarginFeeTemplateID_get
    if _newclass:
        MarginFeeTemplateID = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorField_MarginFeeTemplateID_get, _sptraderapi.CTORATstpSPReqInsInvestorField_MarginFeeTemplateID_set)

	# 委托方式
    __swig_setmethods__["Operways"] = _sptraderapi.CTORATstpSPReqInsInvestorField_Operways_set
    __swig_getmethods__["Operways"] = _sptraderapi.CTORATstpSPReqInsInvestorField_Operways_get
    if _newclass:
        Operways = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorField_Operways_get, _sptraderapi.CTORATstpSPReqInsInvestorField_Operways_set)

	# 专业投资者类别
    __swig_setmethods__["ProfInvestorType"] = _sptraderapi.CTORATstpSPReqInsInvestorField_ProfInvestorType_set
    __swig_getmethods__["ProfInvestorType"] = _sptraderapi.CTORATstpSPReqInsInvestorField_ProfInvestorType_get
    if _newclass:
        ProfInvestorType = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorField_ProfInvestorType_get, _sptraderapi.CTORATstpSPReqInsInvestorField_ProfInvestorType_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsInvestorField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsInvestorField
    __del__ = lambda self: None
CTORATstpSPReqInsInvestorField_swigregister = _sptraderapi.CTORATstpSPReqInsInvestorField_swigregister
CTORATstpSPReqInsInvestorField_swigregister(CTORATstpSPReqInsInvestorField)




#########################################请求更新Investor############################################
class CTORATstpSPReqUpdInvestorField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdInvestorField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdInvestorField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqUpdInvestorField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqUpdInvestorField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorField_InvestorID_get, _sptraderapi.CTORATstpSPReqUpdInvestorField_InvestorID_set)

	# 经纪公司部门代码
    __swig_setmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPReqUpdInvestorField_DepartmentID_set
    __swig_getmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPReqUpdInvestorField_DepartmentID_get
    if _newclass:
        DepartmentID = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorField_DepartmentID_get, _sptraderapi.CTORATstpSPReqUpdInvestorField_DepartmentID_set)

	# 自然人、法人、特殊法人、资管、基金等
    __swig_setmethods__["InvestorType"] = _sptraderapi.CTORATstpSPReqUpdInvestorField_InvestorType_set
    __swig_getmethods__["InvestorType"] = _sptraderapi.CTORATstpSPReqUpdInvestorField_InvestorType_get
    if _newclass:
        InvestorType = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorField_InvestorType_get, _sptraderapi.CTORATstpSPReqUpdInvestorField_InvestorType_set)

	# 投资者名称
    __swig_setmethods__["InvestorName"] = _sptraderapi.CTORATstpSPReqUpdInvestorField_InvestorName_set
    __swig_getmethods__["InvestorName"] = _sptraderapi.CTORATstpSPReqUpdInvestorField_InvestorName_get
    if _newclass:
        InvestorName = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorField_InvestorName_get, _sptraderapi.CTORATstpSPReqUpdInvestorField_InvestorName_set)

	# 证件类型
    __swig_setmethods__["IdCardType"] = _sptraderapi.CTORATstpSPReqUpdInvestorField_IdCardType_set
    __swig_getmethods__["IdCardType"] = _sptraderapi.CTORATstpSPReqUpdInvestorField_IdCardType_get
    if _newclass:
        IdCardType = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorField_IdCardType_get, _sptraderapi.CTORATstpSPReqUpdInvestorField_IdCardType_set)

	# 证件号码
    __swig_setmethods__["IdCardNo"] = _sptraderapi.CTORATstpSPReqUpdInvestorField_IdCardNo_set
    __swig_getmethods__["IdCardNo"] = _sptraderapi.CTORATstpSPReqUpdInvestorField_IdCardNo_get
    if _newclass:
        IdCardNo = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorField_IdCardNo_get, _sptraderapi.CTORATstpSPReqUpdInvestorField_IdCardNo_set)

	# 合同编号
    __swig_setmethods__["ContractNo"] = _sptraderapi.CTORATstpSPReqUpdInvestorField_ContractNo_set
    __swig_getmethods__["ContractNo"] = _sptraderapi.CTORATstpSPReqUpdInvestorField_ContractNo_get
    if _newclass:
        ContractNo = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorField_ContractNo_get, _sptraderapi.CTORATstpSPReqUpdInvestorField_ContractNo_set)

	# 开户日期
    __swig_setmethods__["OpenDate"] = _sptraderapi.CTORATstpSPReqUpdInvestorField_OpenDate_set
    __swig_getmethods__["OpenDate"] = _sptraderapi.CTORATstpSPReqUpdInvestorField_OpenDate_get
    if _newclass:
        OpenDate = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorField_OpenDate_get, _sptraderapi.CTORATstpSPReqUpdInvestorField_OpenDate_set)

	# 销户日期
    __swig_setmethods__["CloseDate"] = _sptraderapi.CTORATstpSPReqUpdInvestorField_CloseDate_set
    __swig_getmethods__["CloseDate"] = _sptraderapi.CTORATstpSPReqUpdInvestorField_CloseDate_get
    if _newclass:
        CloseDate = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorField_CloseDate_get, _sptraderapi.CTORATstpSPReqUpdInvestorField_CloseDate_set)

	# 初始、启用、禁用、激活等
    __swig_setmethods__["Status"] = _sptraderapi.CTORATstpSPReqUpdInvestorField_Status_set
    __swig_getmethods__["Status"] = _sptraderapi.CTORATstpSPReqUpdInvestorField_Status_get
    if _newclass:
        Status = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorField_Status_get, _sptraderapi.CTORATstpSPReqUpdInvestorField_Status_set)

	# 内部机构编码
    __swig_setmethods__["InnerBranchID"] = _sptraderapi.CTORATstpSPReqUpdInvestorField_InnerBranchID_set
    __swig_getmethods__["InnerBranchID"] = _sptraderapi.CTORATstpSPReqUpdInvestorField_InnerBranchID_get
    if _newclass:
        InnerBranchID = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorField_InnerBranchID_get, _sptraderapi.CTORATstpSPReqUpdInvestorField_InnerBranchID_set)

	# 投资者分级类别
    __swig_setmethods__["InvestorLevel"] = _sptraderapi.CTORATstpSPReqUpdInvestorField_InvestorLevel_set
    __swig_getmethods__["InvestorLevel"] = _sptraderapi.CTORATstpSPReqUpdInvestorField_InvestorLevel_get
    if _newclass:
        InvestorLevel = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorField_InvestorLevel_get, _sptraderapi.CTORATstpSPReqUpdInvestorField_InvestorLevel_set)

	# 手机
    __swig_setmethods__["Mobile"] = _sptraderapi.CTORATstpSPReqUpdInvestorField_Mobile_set
    __swig_getmethods__["Mobile"] = _sptraderapi.CTORATstpSPReqUpdInvestorField_Mobile_get
    if _newclass:
        Mobile = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorField_Mobile_get, _sptraderapi.CTORATstpSPReqUpdInvestorField_Mobile_set)

	# 联系电话
    __swig_setmethods__["Telephone"] = _sptraderapi.CTORATstpSPReqUpdInvestorField_Telephone_set
    __swig_getmethods__["Telephone"] = _sptraderapi.CTORATstpSPReqUpdInvestorField_Telephone_get
    if _newclass:
        Telephone = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorField_Telephone_get, _sptraderapi.CTORATstpSPReqUpdInvestorField_Telephone_set)

	# 电子邮件
    __swig_setmethods__["Email"] = _sptraderapi.CTORATstpSPReqUpdInvestorField_Email_set
    __swig_getmethods__["Email"] = _sptraderapi.CTORATstpSPReqUpdInvestorField_Email_get
    if _newclass:
        Email = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorField_Email_get, _sptraderapi.CTORATstpSPReqUpdInvestorField_Email_set)

	# 传真
    __swig_setmethods__["Fax"] = _sptraderapi.CTORATstpSPReqUpdInvestorField_Fax_set
    __swig_getmethods__["Fax"] = _sptraderapi.CTORATstpSPReqUpdInvestorField_Fax_get
    if _newclass:
        Fax = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorField_Fax_get, _sptraderapi.CTORATstpSPReqUpdInvestorField_Fax_set)

	# 通讯地址
    __swig_setmethods__["Address"] = _sptraderapi.CTORATstpSPReqUpdInvestorField_Address_set
    __swig_getmethods__["Address"] = _sptraderapi.CTORATstpSPReqUpdInvestorField_Address_get
    if _newclass:
        Address = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorField_Address_get, _sptraderapi.CTORATstpSPReqUpdInvestorField_Address_set)

	# 邮政编码
    __swig_setmethods__["ZipCode"] = _sptraderapi.CTORATstpSPReqUpdInvestorField_ZipCode_set
    __swig_getmethods__["ZipCode"] = _sptraderapi.CTORATstpSPReqUpdInvestorField_ZipCode_get
    if _newclass:
        ZipCode = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorField_ZipCode_get, _sptraderapi.CTORATstpSPReqUpdInvestorField_ZipCode_set)

	# 备注
    __swig_setmethods__["Remark"] = _sptraderapi.CTORATstpSPReqUpdInvestorField_Remark_set
    __swig_getmethods__["Remark"] = _sptraderapi.CTORATstpSPReqUpdInvestorField_Remark_get
    if _newclass:
        Remark = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorField_Remark_get, _sptraderapi.CTORATstpSPReqUpdInvestorField_Remark_set)

	# 佣金模板代码
    __swig_setmethods__["TradingFeeTemplateID"] = _sptraderapi.CTORATstpSPReqUpdInvestorField_TradingFeeTemplateID_set
    __swig_getmethods__["TradingFeeTemplateID"] = _sptraderapi.CTORATstpSPReqUpdInvestorField_TradingFeeTemplateID_get
    if _newclass:
        TradingFeeTemplateID = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorField_TradingFeeTemplateID_get, _sptraderapi.CTORATstpSPReqUpdInvestorField_TradingFeeTemplateID_set)

	# 保证金模板代码
    __swig_setmethods__["MarginFeeTemplateID"] = _sptraderapi.CTORATstpSPReqUpdInvestorField_MarginFeeTemplateID_set
    __swig_getmethods__["MarginFeeTemplateID"] = _sptraderapi.CTORATstpSPReqUpdInvestorField_MarginFeeTemplateID_get
    if _newclass:
        MarginFeeTemplateID = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorField_MarginFeeTemplateID_get, _sptraderapi.CTORATstpSPReqUpdInvestorField_MarginFeeTemplateID_set)

	# 委托方式
    __swig_setmethods__["Operways"] = _sptraderapi.CTORATstpSPReqUpdInvestorField_Operways_set
    __swig_getmethods__["Operways"] = _sptraderapi.CTORATstpSPReqUpdInvestorField_Operways_get
    if _newclass:
        Operways = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorField_Operways_get, _sptraderapi.CTORATstpSPReqUpdInvestorField_Operways_set)

	# 专业投资者类别
    __swig_setmethods__["ProfInvestorType"] = _sptraderapi.CTORATstpSPReqUpdInvestorField_ProfInvestorType_set
    __swig_getmethods__["ProfInvestorType"] = _sptraderapi.CTORATstpSPReqUpdInvestorField_ProfInvestorType_get
    if _newclass:
        ProfInvestorType = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorField_ProfInvestorType_get, _sptraderapi.CTORATstpSPReqUpdInvestorField_ProfInvestorType_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdInvestorField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdInvestorField
    __del__ = lambda self: None
CTORATstpSPReqUpdInvestorField_swigregister = _sptraderapi.CTORATstpSPReqUpdInvestorField_swigregister
CTORATstpSPReqUpdInvestorField_swigregister(CTORATstpSPReqUpdInvestorField)




#########################################请求删除Investor############################################
class CTORATstpSPReqDelInvestorField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelInvestorField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelInvestorField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqDelInvestorField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqDelInvestorField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqDelInvestorField_InvestorID_get, _sptraderapi.CTORATstpSPReqDelInvestorField_InvestorID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelInvestorField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelInvestorField
    __del__ = lambda self: None
CTORATstpSPReqDelInvestorField_swigregister = _sptraderapi.CTORATstpSPReqDelInvestorField_swigregister
CTORATstpSPReqDelInvestorField_swigregister(CTORATstpSPReqDelInvestorField)




#########################################请求插入InvestorCondOrderLimitParam############################################
class CTORATstpSPReqInsInvestorCondOrderLimitParamField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsInvestorCondOrderLimitParamField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsInvestorCondOrderLimitParamField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqInsInvestorCondOrderLimitParamField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqInsInvestorCondOrderLimitParamField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorCondOrderLimitParamField_InvestorID_get, _sptraderapi.CTORATstpSPReqInsInvestorCondOrderLimitParamField_InvestorID_set)

	# 最大条件单数
    __swig_setmethods__["MaxCondOrderLimitCnt"] = _sptraderapi.CTORATstpSPReqInsInvestorCondOrderLimitParamField_MaxCondOrderLimitCnt_set
    __swig_getmethods__["MaxCondOrderLimitCnt"] = _sptraderapi.CTORATstpSPReqInsInvestorCondOrderLimitParamField_MaxCondOrderLimitCnt_get
    if _newclass:
        MaxCondOrderLimitCnt = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorCondOrderLimitParamField_MaxCondOrderLimitCnt_get, _sptraderapi.CTORATstpSPReqInsInvestorCondOrderLimitParamField_MaxCondOrderLimitCnt_set)

	# 当前条件单数
    __swig_setmethods__["CurrCondOrderCnt"] = _sptraderapi.CTORATstpSPReqInsInvestorCondOrderLimitParamField_CurrCondOrderCnt_set
    __swig_getmethods__["CurrCondOrderCnt"] = _sptraderapi.CTORATstpSPReqInsInvestorCondOrderLimitParamField_CurrCondOrderCnt_get
    if _newclass:
        CurrCondOrderCnt = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorCondOrderLimitParamField_CurrCondOrderCnt_get, _sptraderapi.CTORATstpSPReqInsInvestorCondOrderLimitParamField_CurrCondOrderCnt_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsInvestorCondOrderLimitParamField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsInvestorCondOrderLimitParamField
    __del__ = lambda self: None
CTORATstpSPReqInsInvestorCondOrderLimitParamField_swigregister = _sptraderapi.CTORATstpSPReqInsInvestorCondOrderLimitParamField_swigregister
CTORATstpSPReqInsInvestorCondOrderLimitParamField_swigregister(CTORATstpSPReqInsInvestorCondOrderLimitParamField)




#########################################请求更新InvestorCondOrderLimitParam############################################
class CTORATstpSPReqUpdInvestorCondOrderLimitParamField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdInvestorCondOrderLimitParamField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdInvestorCondOrderLimitParamField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqUpdInvestorCondOrderLimitParamField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqUpdInvestorCondOrderLimitParamField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorCondOrderLimitParamField_InvestorID_get, _sptraderapi.CTORATstpSPReqUpdInvestorCondOrderLimitParamField_InvestorID_set)

	# 最大条件单数
    __swig_setmethods__["MaxCondOrderLimitCnt"] = _sptraderapi.CTORATstpSPReqUpdInvestorCondOrderLimitParamField_MaxCondOrderLimitCnt_set
    __swig_getmethods__["MaxCondOrderLimitCnt"] = _sptraderapi.CTORATstpSPReqUpdInvestorCondOrderLimitParamField_MaxCondOrderLimitCnt_get
    if _newclass:
        MaxCondOrderLimitCnt = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorCondOrderLimitParamField_MaxCondOrderLimitCnt_get, _sptraderapi.CTORATstpSPReqUpdInvestorCondOrderLimitParamField_MaxCondOrderLimitCnt_set)

	# 当前条件单数
    __swig_setmethods__["CurrCondOrderCnt"] = _sptraderapi.CTORATstpSPReqUpdInvestorCondOrderLimitParamField_CurrCondOrderCnt_set
    __swig_getmethods__["CurrCondOrderCnt"] = _sptraderapi.CTORATstpSPReqUpdInvestorCondOrderLimitParamField_CurrCondOrderCnt_get
    if _newclass:
        CurrCondOrderCnt = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorCondOrderLimitParamField_CurrCondOrderCnt_get, _sptraderapi.CTORATstpSPReqUpdInvestorCondOrderLimitParamField_CurrCondOrderCnt_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdInvestorCondOrderLimitParamField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdInvestorCondOrderLimitParamField
    __del__ = lambda self: None
CTORATstpSPReqUpdInvestorCondOrderLimitParamField_swigregister = _sptraderapi.CTORATstpSPReqUpdInvestorCondOrderLimitParamField_swigregister
CTORATstpSPReqUpdInvestorCondOrderLimitParamField_swigregister(CTORATstpSPReqUpdInvestorCondOrderLimitParamField)




#########################################请求删除InvestorCondOrderLimitParam############################################
class CTORATstpSPReqDelInvestorCondOrderLimitParamField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelInvestorCondOrderLimitParamField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelInvestorCondOrderLimitParamField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqDelInvestorCondOrderLimitParamField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqDelInvestorCondOrderLimitParamField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqDelInvestorCondOrderLimitParamField_InvestorID_get, _sptraderapi.CTORATstpSPReqDelInvestorCondOrderLimitParamField_InvestorID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelInvestorCondOrderLimitParamField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelInvestorCondOrderLimitParamField
    __del__ = lambda self: None
CTORATstpSPReqDelInvestorCondOrderLimitParamField_swigregister = _sptraderapi.CTORATstpSPReqDelInvestorCondOrderLimitParamField_swigregister
CTORATstpSPReqDelInvestorCondOrderLimitParamField_swigregister(CTORATstpSPReqDelInvestorCondOrderLimitParamField)




#########################################请求插入InvestorLimitAmount############################################
class CTORATstpSPReqInsInvestorLimitAmountField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsInvestorLimitAmountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsInvestorLimitAmountField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitAmountField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitAmountField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorLimitAmountField_InvestorID_get, _sptraderapi.CTORATstpSPReqInsInvestorLimitAmountField_InvestorID_set)

	# 多头金额限额
    __swig_setmethods__["LongAmountLimit"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitAmountField_LongAmountLimit_set
    __swig_getmethods__["LongAmountLimit"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitAmountField_LongAmountLimit_get
    if _newclass:
        LongAmountLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorLimitAmountField_LongAmountLimit_get, _sptraderapi.CTORATstpSPReqInsInvestorLimitAmountField_LongAmountLimit_set)

	# 多头金额冻结
    __swig_setmethods__["LongAmountFrozen"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitAmountField_LongAmountFrozen_set
    __swig_getmethods__["LongAmountFrozen"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitAmountField_LongAmountFrozen_get
    if _newclass:
        LongAmountFrozen = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorLimitAmountField_LongAmountFrozen_get, _sptraderapi.CTORATstpSPReqInsInvestorLimitAmountField_LongAmountFrozen_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsInvestorLimitAmountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsInvestorLimitAmountField
    __del__ = lambda self: None
CTORATstpSPReqInsInvestorLimitAmountField_swigregister = _sptraderapi.CTORATstpSPReqInsInvestorLimitAmountField_swigregister
CTORATstpSPReqInsInvestorLimitAmountField_swigregister(CTORATstpSPReqInsInvestorLimitAmountField)




#########################################请求更新InvestorLimitAmount############################################
class CTORATstpSPReqUpdInvestorLimitAmountField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdInvestorLimitAmountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdInvestorLimitAmountField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitAmountField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitAmountField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorLimitAmountField_InvestorID_get, _sptraderapi.CTORATstpSPReqUpdInvestorLimitAmountField_InvestorID_set)

	# 多头金额限额
    __swig_setmethods__["LongAmountLimit"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitAmountField_LongAmountLimit_set
    __swig_getmethods__["LongAmountLimit"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitAmountField_LongAmountLimit_get
    if _newclass:
        LongAmountLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorLimitAmountField_LongAmountLimit_get, _sptraderapi.CTORATstpSPReqUpdInvestorLimitAmountField_LongAmountLimit_set)

	# 多头金额冻结
    __swig_setmethods__["LongAmountFrozen"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitAmountField_LongAmountFrozen_set
    __swig_getmethods__["LongAmountFrozen"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitAmountField_LongAmountFrozen_get
    if _newclass:
        LongAmountFrozen = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorLimitAmountField_LongAmountFrozen_get, _sptraderapi.CTORATstpSPReqUpdInvestorLimitAmountField_LongAmountFrozen_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdInvestorLimitAmountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdInvestorLimitAmountField
    __del__ = lambda self: None
CTORATstpSPReqUpdInvestorLimitAmountField_swigregister = _sptraderapi.CTORATstpSPReqUpdInvestorLimitAmountField_swigregister
CTORATstpSPReqUpdInvestorLimitAmountField_swigregister(CTORATstpSPReqUpdInvestorLimitAmountField)




#########################################请求删除InvestorLimitAmount############################################
class CTORATstpSPReqDelInvestorLimitAmountField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelInvestorLimitAmountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelInvestorLimitAmountField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqDelInvestorLimitAmountField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqDelInvestorLimitAmountField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqDelInvestorLimitAmountField_InvestorID_get, _sptraderapi.CTORATstpSPReqDelInvestorLimitAmountField_InvestorID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelInvestorLimitAmountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelInvestorLimitAmountField
    __del__ = lambda self: None
CTORATstpSPReqDelInvestorLimitAmountField_swigregister = _sptraderapi.CTORATstpSPReqDelInvestorLimitAmountField_swigregister
CTORATstpSPReqDelInvestorLimitAmountField_swigregister(CTORATstpSPReqDelInvestorLimitAmountField)




#########################################请求插入IPLocateLimit############################################
class CTORATstpSPReqInsIPLocateLimitField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsIPLocateLimitField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsIPLocateLimitField, name)
    __repr__ = _swig_repr

	# 网关Mac地址
    __swig_setmethods__["MacAddress"] = _sptraderapi.CTORATstpSPReqInsIPLocateLimitField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _sptraderapi.CTORATstpSPReqInsIPLocateLimitField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_sptraderapi.CTORATstpSPReqInsIPLocateLimitField_MacAddress_get, _sptraderapi.CTORATstpSPReqInsIPLocateLimitField_MacAddress_set)

	# 网关内网IP地址
    __swig_setmethods__["InnerIPAddress"] = _sptraderapi.CTORATstpSPReqInsIPLocateLimitField_InnerIPAddress_set
    __swig_getmethods__["InnerIPAddress"] = _sptraderapi.CTORATstpSPReqInsIPLocateLimitField_InnerIPAddress_get
    if _newclass:
        InnerIPAddress = _swig_property(_sptraderapi.CTORATstpSPReqInsIPLocateLimitField_InnerIPAddress_get, _sptraderapi.CTORATstpSPReqInsIPLocateLimitField_InnerIPAddress_set)

	# 网关外网IP地址
    __swig_setmethods__["OuterIPAddress"] = _sptraderapi.CTORATstpSPReqInsIPLocateLimitField_OuterIPAddress_set
    __swig_getmethods__["OuterIPAddress"] = _sptraderapi.CTORATstpSPReqInsIPLocateLimitField_OuterIPAddress_get
    if _newclass:
        OuterIPAddress = _swig_property(_sptraderapi.CTORATstpSPReqInsIPLocateLimitField_OuterIPAddress_get, _sptraderapi.CTORATstpSPReqInsIPLocateLimitField_OuterIPAddress_set)

	# 是否禁止
    __swig_setmethods__["bForbidden"] = _sptraderapi.CTORATstpSPReqInsIPLocateLimitField_bForbidden_set
    __swig_getmethods__["bForbidden"] = _sptraderapi.CTORATstpSPReqInsIPLocateLimitField_bForbidden_get
    if _newclass:
        bForbidden = _swig_property(_sptraderapi.CTORATstpSPReqInsIPLocateLimitField_bForbidden_get, _sptraderapi.CTORATstpSPReqInsIPLocateLimitField_bForbidden_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsIPLocateLimitField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsIPLocateLimitField
    __del__ = lambda self: None
CTORATstpSPReqInsIPLocateLimitField_swigregister = _sptraderapi.CTORATstpSPReqInsIPLocateLimitField_swigregister
CTORATstpSPReqInsIPLocateLimitField_swigregister(CTORATstpSPReqInsIPLocateLimitField)




#########################################请求更新IPLocateLimit############################################
class CTORATstpSPReqUpdIPLocateLimitField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdIPLocateLimitField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdIPLocateLimitField, name)
    __repr__ = _swig_repr

	# 网关Mac地址
    __swig_setmethods__["MacAddress"] = _sptraderapi.CTORATstpSPReqUpdIPLocateLimitField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _sptraderapi.CTORATstpSPReqUpdIPLocateLimitField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_sptraderapi.CTORATstpSPReqUpdIPLocateLimitField_MacAddress_get, _sptraderapi.CTORATstpSPReqUpdIPLocateLimitField_MacAddress_set)

	# 网关内网IP地址
    __swig_setmethods__["InnerIPAddress"] = _sptraderapi.CTORATstpSPReqUpdIPLocateLimitField_InnerIPAddress_set
    __swig_getmethods__["InnerIPAddress"] = _sptraderapi.CTORATstpSPReqUpdIPLocateLimitField_InnerIPAddress_get
    if _newclass:
        InnerIPAddress = _swig_property(_sptraderapi.CTORATstpSPReqUpdIPLocateLimitField_InnerIPAddress_get, _sptraderapi.CTORATstpSPReqUpdIPLocateLimitField_InnerIPAddress_set)

	# 网关外网IP地址
    __swig_setmethods__["OuterIPAddress"] = _sptraderapi.CTORATstpSPReqUpdIPLocateLimitField_OuterIPAddress_set
    __swig_getmethods__["OuterIPAddress"] = _sptraderapi.CTORATstpSPReqUpdIPLocateLimitField_OuterIPAddress_get
    if _newclass:
        OuterIPAddress = _swig_property(_sptraderapi.CTORATstpSPReqUpdIPLocateLimitField_OuterIPAddress_get, _sptraderapi.CTORATstpSPReqUpdIPLocateLimitField_OuterIPAddress_set)

	# 是否禁止
    __swig_setmethods__["bForbidden"] = _sptraderapi.CTORATstpSPReqUpdIPLocateLimitField_bForbidden_set
    __swig_getmethods__["bForbidden"] = _sptraderapi.CTORATstpSPReqUpdIPLocateLimitField_bForbidden_get
    if _newclass:
        bForbidden = _swig_property(_sptraderapi.CTORATstpSPReqUpdIPLocateLimitField_bForbidden_get, _sptraderapi.CTORATstpSPReqUpdIPLocateLimitField_bForbidden_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdIPLocateLimitField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdIPLocateLimitField
    __del__ = lambda self: None
CTORATstpSPReqUpdIPLocateLimitField_swigregister = _sptraderapi.CTORATstpSPReqUpdIPLocateLimitField_swigregister
CTORATstpSPReqUpdIPLocateLimitField_swigregister(CTORATstpSPReqUpdIPLocateLimitField)




#########################################请求删除IPLocateLimit############################################
class CTORATstpSPReqDelIPLocateLimitField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelIPLocateLimitField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelIPLocateLimitField, name)
    __repr__ = _swig_repr

	# 网关Mac地址
    __swig_setmethods__["MacAddress"] = _sptraderapi.CTORATstpSPReqDelIPLocateLimitField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _sptraderapi.CTORATstpSPReqDelIPLocateLimitField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_sptraderapi.CTORATstpSPReqDelIPLocateLimitField_MacAddress_get, _sptraderapi.CTORATstpSPReqDelIPLocateLimitField_MacAddress_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelIPLocateLimitField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelIPLocateLimitField
    __del__ = lambda self: None
CTORATstpSPReqDelIPLocateLimitField_swigregister = _sptraderapi.CTORATstpSPReqDelIPLocateLimitField_swigregister
CTORATstpSPReqDelIPLocateLimitField_swigregister(CTORATstpSPReqDelIPLocateLimitField)




#########################################请求插入LoginForbiddenUser############################################
class CTORATstpSPReqInsLoginForbiddenUserField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsLoginForbiddenUserField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsLoginForbiddenUserField, name)
    __repr__ = _swig_repr

	# 用户代码
    __swig_setmethods__["UserID"] = _sptraderapi.CTORATstpSPReqInsLoginForbiddenUserField_UserID_set
    __swig_getmethods__["UserID"] = _sptraderapi.CTORATstpSPReqInsLoginForbiddenUserField_UserID_get
    if _newclass:
        UserID = _swig_property(_sptraderapi.CTORATstpSPReqInsLoginForbiddenUserField_UserID_get, _sptraderapi.CTORATstpSPReqInsLoginForbiddenUserField_UserID_set)

	# IP地址
    __swig_setmethods__["IPAddress"] = _sptraderapi.CTORATstpSPReqInsLoginForbiddenUserField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _sptraderapi.CTORATstpSPReqInsLoginForbiddenUserField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_sptraderapi.CTORATstpSPReqInsLoginForbiddenUserField_IPAddress_get, _sptraderapi.CTORATstpSPReqInsLoginForbiddenUserField_IPAddress_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsLoginForbiddenUserField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsLoginForbiddenUserField
    __del__ = lambda self: None
CTORATstpSPReqInsLoginForbiddenUserField_swigregister = _sptraderapi.CTORATstpSPReqInsLoginForbiddenUserField_swigregister
CTORATstpSPReqInsLoginForbiddenUserField_swigregister(CTORATstpSPReqInsLoginForbiddenUserField)




#########################################请求更新LoginForbiddenUser############################################
class CTORATstpSPReqUpdLoginForbiddenUserField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdLoginForbiddenUserField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdLoginForbiddenUserField, name)
    __repr__ = _swig_repr

	# 用户代码
    __swig_setmethods__["UserID"] = _sptraderapi.CTORATstpSPReqUpdLoginForbiddenUserField_UserID_set
    __swig_getmethods__["UserID"] = _sptraderapi.CTORATstpSPReqUpdLoginForbiddenUserField_UserID_get
    if _newclass:
        UserID = _swig_property(_sptraderapi.CTORATstpSPReqUpdLoginForbiddenUserField_UserID_get, _sptraderapi.CTORATstpSPReqUpdLoginForbiddenUserField_UserID_set)

	# IP地址
    __swig_setmethods__["IPAddress"] = _sptraderapi.CTORATstpSPReqUpdLoginForbiddenUserField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _sptraderapi.CTORATstpSPReqUpdLoginForbiddenUserField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_sptraderapi.CTORATstpSPReqUpdLoginForbiddenUserField_IPAddress_get, _sptraderapi.CTORATstpSPReqUpdLoginForbiddenUserField_IPAddress_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdLoginForbiddenUserField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdLoginForbiddenUserField
    __del__ = lambda self: None
CTORATstpSPReqUpdLoginForbiddenUserField_swigregister = _sptraderapi.CTORATstpSPReqUpdLoginForbiddenUserField_swigregister
CTORATstpSPReqUpdLoginForbiddenUserField_swigregister(CTORATstpSPReqUpdLoginForbiddenUserField)




#########################################请求删除LoginForbiddenUser############################################
class CTORATstpSPReqDelLoginForbiddenUserField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelLoginForbiddenUserField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelLoginForbiddenUserField, name)
    __repr__ = _swig_repr

	# 用户代码
    __swig_setmethods__["UserID"] = _sptraderapi.CTORATstpSPReqDelLoginForbiddenUserField_UserID_set
    __swig_getmethods__["UserID"] = _sptraderapi.CTORATstpSPReqDelLoginForbiddenUserField_UserID_get
    if _newclass:
        UserID = _swig_property(_sptraderapi.CTORATstpSPReqDelLoginForbiddenUserField_UserID_get, _sptraderapi.CTORATstpSPReqDelLoginForbiddenUserField_UserID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelLoginForbiddenUserField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelLoginForbiddenUserField
    __del__ = lambda self: None
CTORATstpSPReqDelLoginForbiddenUserField_swigregister = _sptraderapi.CTORATstpSPReqDelLoginForbiddenUserField_swigregister
CTORATstpSPReqDelLoginForbiddenUserField_swigregister(CTORATstpSPReqDelLoginForbiddenUserField)




#########################################请求插入MarketStatus############################################
class CTORATstpSPReqInsMarketStatusField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsMarketStatusField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsMarketStatusField, name)
    __repr__ = _swig_repr

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqInsMarketStatusField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqInsMarketStatusField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPReqInsMarketStatusField_MarketID_get, _sptraderapi.CTORATstpSPReqInsMarketStatusField_MarketID_set)

	# 市场状态
    __swig_setmethods__["MarketStatus"] = _sptraderapi.CTORATstpSPReqInsMarketStatusField_MarketStatus_set
    __swig_getmethods__["MarketStatus"] = _sptraderapi.CTORATstpSPReqInsMarketStatusField_MarketStatus_get
    if _newclass:
        MarketStatus = _swig_property(_sptraderapi.CTORATstpSPReqInsMarketStatusField_MarketStatus_get, _sptraderapi.CTORATstpSPReqInsMarketStatusField_MarketStatus_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsMarketStatusField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsMarketStatusField
    __del__ = lambda self: None
CTORATstpSPReqInsMarketStatusField_swigregister = _sptraderapi.CTORATstpSPReqInsMarketStatusField_swigregister
CTORATstpSPReqInsMarketStatusField_swigregister(CTORATstpSPReqInsMarketStatusField)




#########################################请求更新MarketStatus############################################
class CTORATstpSPReqUpdMarketStatusField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdMarketStatusField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdMarketStatusField, name)
    __repr__ = _swig_repr

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqUpdMarketStatusField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqUpdMarketStatusField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarketStatusField_MarketID_get, _sptraderapi.CTORATstpSPReqUpdMarketStatusField_MarketID_set)

	# 市场状态
    __swig_setmethods__["MarketStatus"] = _sptraderapi.CTORATstpSPReqUpdMarketStatusField_MarketStatus_set
    __swig_getmethods__["MarketStatus"] = _sptraderapi.CTORATstpSPReqUpdMarketStatusField_MarketStatus_get
    if _newclass:
        MarketStatus = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarketStatusField_MarketStatus_get, _sptraderapi.CTORATstpSPReqUpdMarketStatusField_MarketStatus_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdMarketStatusField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdMarketStatusField
    __del__ = lambda self: None
CTORATstpSPReqUpdMarketStatusField_swigregister = _sptraderapi.CTORATstpSPReqUpdMarketStatusField_swigregister
CTORATstpSPReqUpdMarketStatusField_swigregister(CTORATstpSPReqUpdMarketStatusField)




#########################################请求删除MarketStatus############################################
class CTORATstpSPReqDelMarketStatusField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelMarketStatusField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelMarketStatusField, name)
    __repr__ = _swig_repr

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqDelMarketStatusField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqDelMarketStatusField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPReqDelMarketStatusField_MarketID_get, _sptraderapi.CTORATstpSPReqDelMarketStatusField_MarketID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelMarketStatusField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelMarketStatusField
    __del__ = lambda self: None
CTORATstpSPReqDelMarketStatusField_swigregister = _sptraderapi.CTORATstpSPReqDelMarketStatusField_swigregister
CTORATstpSPReqDelMarketStatusField_swigregister(CTORATstpSPReqDelMarketStatusField)




#########################################请求插入MaxSystemSerial############################################
class CTORATstpSPReqInsMaxSystemSerialField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsMaxSystemSerialField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsMaxSystemSerialField, name)
    __repr__ = _swig_repr

	# 操作日
    __swig_setmethods__["OperateDate"] = _sptraderapi.CTORATstpSPReqInsMaxSystemSerialField_OperateDate_set
    __swig_getmethods__["OperateDate"] = _sptraderapi.CTORATstpSPReqInsMaxSystemSerialField_OperateDate_get
    if _newclass:
        OperateDate = _swig_property(_sptraderapi.CTORATstpSPReqInsMaxSystemSerialField_OperateDate_get, _sptraderapi.CTORATstpSPReqInsMaxSystemSerialField_OperateDate_set)

	# 最大资金转移流水号
    __swig_setmethods__["MaxFundSerial"] = _sptraderapi.CTORATstpSPReqInsMaxSystemSerialField_MaxFundSerial_set
    __swig_getmethods__["MaxFundSerial"] = _sptraderapi.CTORATstpSPReqInsMaxSystemSerialField_MaxFundSerial_get
    if _newclass:
        MaxFundSerial = _swig_property(_sptraderapi.CTORATstpSPReqInsMaxSystemSerialField_MaxFundSerial_get, _sptraderapi.CTORATstpSPReqInsMaxSystemSerialField_MaxFundSerial_set)

	# 最大仓位转移流水号
    __swig_setmethods__["MaxPositionSerial"] = _sptraderapi.CTORATstpSPReqInsMaxSystemSerialField_MaxPositionSerial_set
    __swig_getmethods__["MaxPositionSerial"] = _sptraderapi.CTORATstpSPReqInsMaxSystemSerialField_MaxPositionSerial_get
    if _newclass:
        MaxPositionSerial = _swig_property(_sptraderapi.CTORATstpSPReqInsMaxSystemSerialField_MaxPositionSerial_get, _sptraderapi.CTORATstpSPReqInsMaxSystemSerialField_MaxPositionSerial_set)

	# 最大现货仓位转移流水号
    __swig_setmethods__["MaxStockPositionSerial"] = _sptraderapi.CTORATstpSPReqInsMaxSystemSerialField_MaxStockPositionSerial_set
    __swig_getmethods__["MaxStockPositionSerial"] = _sptraderapi.CTORATstpSPReqInsMaxSystemSerialField_MaxStockPositionSerial_get
    if _newclass:
        MaxStockPositionSerial = _swig_property(_sptraderapi.CTORATstpSPReqInsMaxSystemSerialField_MaxStockPositionSerial_get, _sptraderapi.CTORATstpSPReqInsMaxSystemSerialField_MaxStockPositionSerial_set)

	# 最大交易通知流水号
    __swig_setmethods__["MaxNoticeSerial"] = _sptraderapi.CTORATstpSPReqInsMaxSystemSerialField_MaxNoticeSerial_set
    __swig_getmethods__["MaxNoticeSerial"] = _sptraderapi.CTORATstpSPReqInsMaxSystemSerialField_MaxNoticeSerial_get
    if _newclass:
        MaxNoticeSerial = _swig_property(_sptraderapi.CTORATstpSPReqInsMaxSystemSerialField_MaxNoticeSerial_get, _sptraderapi.CTORATstpSPReqInsMaxSystemSerialField_MaxNoticeSerial_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsMaxSystemSerialField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsMaxSystemSerialField
    __del__ = lambda self: None
CTORATstpSPReqInsMaxSystemSerialField_swigregister = _sptraderapi.CTORATstpSPReqInsMaxSystemSerialField_swigregister
CTORATstpSPReqInsMaxSystemSerialField_swigregister(CTORATstpSPReqInsMaxSystemSerialField)




#########################################请求更新MaxSystemSerial############################################
class CTORATstpSPReqUpdMaxSystemSerialField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdMaxSystemSerialField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdMaxSystemSerialField, name)
    __repr__ = _swig_repr

	# 操作日
    __swig_setmethods__["OperateDate"] = _sptraderapi.CTORATstpSPReqUpdMaxSystemSerialField_OperateDate_set
    __swig_getmethods__["OperateDate"] = _sptraderapi.CTORATstpSPReqUpdMaxSystemSerialField_OperateDate_get
    if _newclass:
        OperateDate = _swig_property(_sptraderapi.CTORATstpSPReqUpdMaxSystemSerialField_OperateDate_get, _sptraderapi.CTORATstpSPReqUpdMaxSystemSerialField_OperateDate_set)

	# 最大资金转移流水号
    __swig_setmethods__["MaxFundSerial"] = _sptraderapi.CTORATstpSPReqUpdMaxSystemSerialField_MaxFundSerial_set
    __swig_getmethods__["MaxFundSerial"] = _sptraderapi.CTORATstpSPReqUpdMaxSystemSerialField_MaxFundSerial_get
    if _newclass:
        MaxFundSerial = _swig_property(_sptraderapi.CTORATstpSPReqUpdMaxSystemSerialField_MaxFundSerial_get, _sptraderapi.CTORATstpSPReqUpdMaxSystemSerialField_MaxFundSerial_set)

	# 最大仓位转移流水号
    __swig_setmethods__["MaxPositionSerial"] = _sptraderapi.CTORATstpSPReqUpdMaxSystemSerialField_MaxPositionSerial_set
    __swig_getmethods__["MaxPositionSerial"] = _sptraderapi.CTORATstpSPReqUpdMaxSystemSerialField_MaxPositionSerial_get
    if _newclass:
        MaxPositionSerial = _swig_property(_sptraderapi.CTORATstpSPReqUpdMaxSystemSerialField_MaxPositionSerial_get, _sptraderapi.CTORATstpSPReqUpdMaxSystemSerialField_MaxPositionSerial_set)

	# 最大现货仓位转移流水号
    __swig_setmethods__["MaxStockPositionSerial"] = _sptraderapi.CTORATstpSPReqUpdMaxSystemSerialField_MaxStockPositionSerial_set
    __swig_getmethods__["MaxStockPositionSerial"] = _sptraderapi.CTORATstpSPReqUpdMaxSystemSerialField_MaxStockPositionSerial_get
    if _newclass:
        MaxStockPositionSerial = _swig_property(_sptraderapi.CTORATstpSPReqUpdMaxSystemSerialField_MaxStockPositionSerial_get, _sptraderapi.CTORATstpSPReqUpdMaxSystemSerialField_MaxStockPositionSerial_set)

	# 最大交易通知流水号
    __swig_setmethods__["MaxNoticeSerial"] = _sptraderapi.CTORATstpSPReqUpdMaxSystemSerialField_MaxNoticeSerial_set
    __swig_getmethods__["MaxNoticeSerial"] = _sptraderapi.CTORATstpSPReqUpdMaxSystemSerialField_MaxNoticeSerial_get
    if _newclass:
        MaxNoticeSerial = _swig_property(_sptraderapi.CTORATstpSPReqUpdMaxSystemSerialField_MaxNoticeSerial_get, _sptraderapi.CTORATstpSPReqUpdMaxSystemSerialField_MaxNoticeSerial_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdMaxSystemSerialField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdMaxSystemSerialField
    __del__ = lambda self: None
CTORATstpSPReqUpdMaxSystemSerialField_swigregister = _sptraderapi.CTORATstpSPReqUpdMaxSystemSerialField_swigregister
CTORATstpSPReqUpdMaxSystemSerialField_swigregister(CTORATstpSPReqUpdMaxSystemSerialField)




#########################################请求删除MaxSystemSerial############################################
class CTORATstpSPReqDelMaxSystemSerialField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelMaxSystemSerialField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelMaxSystemSerialField, name)
    __repr__ = _swig_repr

	# 操作日
    __swig_setmethods__["OperateDate"] = _sptraderapi.CTORATstpSPReqDelMaxSystemSerialField_OperateDate_set
    __swig_getmethods__["OperateDate"] = _sptraderapi.CTORATstpSPReqDelMaxSystemSerialField_OperateDate_get
    if _newclass:
        OperateDate = _swig_property(_sptraderapi.CTORATstpSPReqDelMaxSystemSerialField_OperateDate_get, _sptraderapi.CTORATstpSPReqDelMaxSystemSerialField_OperateDate_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelMaxSystemSerialField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelMaxSystemSerialField
    __del__ = lambda self: None
CTORATstpSPReqDelMaxSystemSerialField_swigregister = _sptraderapi.CTORATstpSPReqDelMaxSystemSerialField_swigregister
CTORATstpSPReqDelMaxSystemSerialField_swigregister(CTORATstpSPReqDelMaxSystemSerialField)




#########################################请求插入OrderLocalSeqPrefix############################################
class CTORATstpSPReqInsOrderLocalSeqPrefixField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsOrderLocalSeqPrefixField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsOrderLocalSeqPrefixField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsOrderLocalSeqPrefixField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsOrderLocalSeqPrefixField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqInsOrderLocalSeqPrefixField_ExchangeID_get, _sptraderapi.CTORATstpSPReqInsOrderLocalSeqPrefixField_ExchangeID_set)

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqInsOrderLocalSeqPrefixField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqInsOrderLocalSeqPrefixField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPReqInsOrderLocalSeqPrefixField_MarketID_get, _sptraderapi.CTORATstpSPReqInsOrderLocalSeqPrefixField_MarketID_set)

	# 经纪公司部门代码
    __swig_setmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPReqInsOrderLocalSeqPrefixField_DepartmentID_set
    __swig_getmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPReqInsOrderLocalSeqPrefixField_DepartmentID_get
    if _newclass:
        DepartmentID = _swig_property(_sptraderapi.CTORATstpSPReqInsOrderLocalSeqPrefixField_DepartmentID_get, _sptraderapi.CTORATstpSPReqInsOrderLocalSeqPrefixField_DepartmentID_set)

	# 机构编码
    __swig_setmethods__["BranchID"] = _sptraderapi.CTORATstpSPReqInsOrderLocalSeqPrefixField_BranchID_set
    __swig_getmethods__["BranchID"] = _sptraderapi.CTORATstpSPReqInsOrderLocalSeqPrefixField_BranchID_get
    if _newclass:
        BranchID = _swig_property(_sptraderapi.CTORATstpSPReqInsOrderLocalSeqPrefixField_BranchID_get, _sptraderapi.CTORATstpSPReqInsOrderLocalSeqPrefixField_BranchID_set)

	# 交易单元代码
    __swig_setmethods__["PbuID"] = _sptraderapi.CTORATstpSPReqInsOrderLocalSeqPrefixField_PbuID_set
    __swig_getmethods__["PbuID"] = _sptraderapi.CTORATstpSPReqInsOrderLocalSeqPrefixField_PbuID_get
    if _newclass:
        PbuID = _swig_property(_sptraderapi.CTORATstpSPReqInsOrderLocalSeqPrefixField_PbuID_get, _sptraderapi.CTORATstpSPReqInsOrderLocalSeqPrefixField_PbuID_set)

	# 本地报单编号前缀
    __swig_setmethods__["Prefix"] = _sptraderapi.CTORATstpSPReqInsOrderLocalSeqPrefixField_Prefix_set
    __swig_getmethods__["Prefix"] = _sptraderapi.CTORATstpSPReqInsOrderLocalSeqPrefixField_Prefix_get
    if _newclass:
        Prefix = _swig_property(_sptraderapi.CTORATstpSPReqInsOrderLocalSeqPrefixField_Prefix_get, _sptraderapi.CTORATstpSPReqInsOrderLocalSeqPrefixField_Prefix_set)

	# 包含开始报单编号本身
    __swig_setmethods__["StartOrderNo"] = _sptraderapi.CTORATstpSPReqInsOrderLocalSeqPrefixField_StartOrderNo_set
    __swig_getmethods__["StartOrderNo"] = _sptraderapi.CTORATstpSPReqInsOrderLocalSeqPrefixField_StartOrderNo_get
    if _newclass:
        StartOrderNo = _swig_property(_sptraderapi.CTORATstpSPReqInsOrderLocalSeqPrefixField_StartOrderNo_get, _sptraderapi.CTORATstpSPReqInsOrderLocalSeqPrefixField_StartOrderNo_set)

	# 包含结束报单编号本身
    __swig_setmethods__["EndOrderNo"] = _sptraderapi.CTORATstpSPReqInsOrderLocalSeqPrefixField_EndOrderNo_set
    __swig_getmethods__["EndOrderNo"] = _sptraderapi.CTORATstpSPReqInsOrderLocalSeqPrefixField_EndOrderNo_get
    if _newclass:
        EndOrderNo = _swig_property(_sptraderapi.CTORATstpSPReqInsOrderLocalSeqPrefixField_EndOrderNo_get, _sptraderapi.CTORATstpSPReqInsOrderLocalSeqPrefixField_EndOrderNo_set)

	# 当前报单编号
    __swig_setmethods__["CurrentOrderNo"] = _sptraderapi.CTORATstpSPReqInsOrderLocalSeqPrefixField_CurrentOrderNo_set
    __swig_getmethods__["CurrentOrderNo"] = _sptraderapi.CTORATstpSPReqInsOrderLocalSeqPrefixField_CurrentOrderNo_get
    if _newclass:
        CurrentOrderNo = _swig_property(_sptraderapi.CTORATstpSPReqInsOrderLocalSeqPrefixField_CurrentOrderNo_get, _sptraderapi.CTORATstpSPReqInsOrderLocalSeqPrefixField_CurrentOrderNo_set)

	# 报单编号长度
    __swig_setmethods__["OrderIDLen"] = _sptraderapi.CTORATstpSPReqInsOrderLocalSeqPrefixField_OrderIDLen_set
    __swig_getmethods__["OrderIDLen"] = _sptraderapi.CTORATstpSPReqInsOrderLocalSeqPrefixField_OrderIDLen_get
    if _newclass:
        OrderIDLen = _swig_property(_sptraderapi.CTORATstpSPReqInsOrderLocalSeqPrefixField_OrderIDLen_get, _sptraderapi.CTORATstpSPReqInsOrderLocalSeqPrefixField_OrderIDLen_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsOrderLocalSeqPrefixField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsOrderLocalSeqPrefixField
    __del__ = lambda self: None
CTORATstpSPReqInsOrderLocalSeqPrefixField_swigregister = _sptraderapi.CTORATstpSPReqInsOrderLocalSeqPrefixField_swigregister
CTORATstpSPReqInsOrderLocalSeqPrefixField_swigregister(CTORATstpSPReqInsOrderLocalSeqPrefixField)




#########################################请求更新OrderLocalSeqPrefix############################################
class CTORATstpSPReqUpdOrderLocalSeqPrefixField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdOrderLocalSeqPrefixField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdOrderLocalSeqPrefixField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdOrderLocalSeqPrefixField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdOrderLocalSeqPrefixField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqUpdOrderLocalSeqPrefixField_ExchangeID_get, _sptraderapi.CTORATstpSPReqUpdOrderLocalSeqPrefixField_ExchangeID_set)

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqUpdOrderLocalSeqPrefixField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqUpdOrderLocalSeqPrefixField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPReqUpdOrderLocalSeqPrefixField_MarketID_get, _sptraderapi.CTORATstpSPReqUpdOrderLocalSeqPrefixField_MarketID_set)

	# 经纪公司部门代码
    __swig_setmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPReqUpdOrderLocalSeqPrefixField_DepartmentID_set
    __swig_getmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPReqUpdOrderLocalSeqPrefixField_DepartmentID_get
    if _newclass:
        DepartmentID = _swig_property(_sptraderapi.CTORATstpSPReqUpdOrderLocalSeqPrefixField_DepartmentID_get, _sptraderapi.CTORATstpSPReqUpdOrderLocalSeqPrefixField_DepartmentID_set)

	# 机构编码
    __swig_setmethods__["BranchID"] = _sptraderapi.CTORATstpSPReqUpdOrderLocalSeqPrefixField_BranchID_set
    __swig_getmethods__["BranchID"] = _sptraderapi.CTORATstpSPReqUpdOrderLocalSeqPrefixField_BranchID_get
    if _newclass:
        BranchID = _swig_property(_sptraderapi.CTORATstpSPReqUpdOrderLocalSeqPrefixField_BranchID_get, _sptraderapi.CTORATstpSPReqUpdOrderLocalSeqPrefixField_BranchID_set)

	# 交易单元代码
    __swig_setmethods__["PbuID"] = _sptraderapi.CTORATstpSPReqUpdOrderLocalSeqPrefixField_PbuID_set
    __swig_getmethods__["PbuID"] = _sptraderapi.CTORATstpSPReqUpdOrderLocalSeqPrefixField_PbuID_get
    if _newclass:
        PbuID = _swig_property(_sptraderapi.CTORATstpSPReqUpdOrderLocalSeqPrefixField_PbuID_get, _sptraderapi.CTORATstpSPReqUpdOrderLocalSeqPrefixField_PbuID_set)

	# 本地报单编号前缀
    __swig_setmethods__["Prefix"] = _sptraderapi.CTORATstpSPReqUpdOrderLocalSeqPrefixField_Prefix_set
    __swig_getmethods__["Prefix"] = _sptraderapi.CTORATstpSPReqUpdOrderLocalSeqPrefixField_Prefix_get
    if _newclass:
        Prefix = _swig_property(_sptraderapi.CTORATstpSPReqUpdOrderLocalSeqPrefixField_Prefix_get, _sptraderapi.CTORATstpSPReqUpdOrderLocalSeqPrefixField_Prefix_set)

	# 包含开始报单编号本身
    __swig_setmethods__["StartOrderNo"] = _sptraderapi.CTORATstpSPReqUpdOrderLocalSeqPrefixField_StartOrderNo_set
    __swig_getmethods__["StartOrderNo"] = _sptraderapi.CTORATstpSPReqUpdOrderLocalSeqPrefixField_StartOrderNo_get
    if _newclass:
        StartOrderNo = _swig_property(_sptraderapi.CTORATstpSPReqUpdOrderLocalSeqPrefixField_StartOrderNo_get, _sptraderapi.CTORATstpSPReqUpdOrderLocalSeqPrefixField_StartOrderNo_set)

	# 包含结束报单编号本身
    __swig_setmethods__["EndOrderNo"] = _sptraderapi.CTORATstpSPReqUpdOrderLocalSeqPrefixField_EndOrderNo_set
    __swig_getmethods__["EndOrderNo"] = _sptraderapi.CTORATstpSPReqUpdOrderLocalSeqPrefixField_EndOrderNo_get
    if _newclass:
        EndOrderNo = _swig_property(_sptraderapi.CTORATstpSPReqUpdOrderLocalSeqPrefixField_EndOrderNo_get, _sptraderapi.CTORATstpSPReqUpdOrderLocalSeqPrefixField_EndOrderNo_set)

	# 当前报单编号
    __swig_setmethods__["CurrentOrderNo"] = _sptraderapi.CTORATstpSPReqUpdOrderLocalSeqPrefixField_CurrentOrderNo_set
    __swig_getmethods__["CurrentOrderNo"] = _sptraderapi.CTORATstpSPReqUpdOrderLocalSeqPrefixField_CurrentOrderNo_get
    if _newclass:
        CurrentOrderNo = _swig_property(_sptraderapi.CTORATstpSPReqUpdOrderLocalSeqPrefixField_CurrentOrderNo_get, _sptraderapi.CTORATstpSPReqUpdOrderLocalSeqPrefixField_CurrentOrderNo_set)

	# 报单编号长度
    __swig_setmethods__["OrderIDLen"] = _sptraderapi.CTORATstpSPReqUpdOrderLocalSeqPrefixField_OrderIDLen_set
    __swig_getmethods__["OrderIDLen"] = _sptraderapi.CTORATstpSPReqUpdOrderLocalSeqPrefixField_OrderIDLen_get
    if _newclass:
        OrderIDLen = _swig_property(_sptraderapi.CTORATstpSPReqUpdOrderLocalSeqPrefixField_OrderIDLen_get, _sptraderapi.CTORATstpSPReqUpdOrderLocalSeqPrefixField_OrderIDLen_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdOrderLocalSeqPrefixField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdOrderLocalSeqPrefixField
    __del__ = lambda self: None
CTORATstpSPReqUpdOrderLocalSeqPrefixField_swigregister = _sptraderapi.CTORATstpSPReqUpdOrderLocalSeqPrefixField_swigregister
CTORATstpSPReqUpdOrderLocalSeqPrefixField_swigregister(CTORATstpSPReqUpdOrderLocalSeqPrefixField)




#########################################请求删除OrderLocalSeqPrefix############################################
class CTORATstpSPReqDelOrderLocalSeqPrefixField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelOrderLocalSeqPrefixField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelOrderLocalSeqPrefixField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelOrderLocalSeqPrefixField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelOrderLocalSeqPrefixField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqDelOrderLocalSeqPrefixField_ExchangeID_get, _sptraderapi.CTORATstpSPReqDelOrderLocalSeqPrefixField_ExchangeID_set)

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqDelOrderLocalSeqPrefixField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqDelOrderLocalSeqPrefixField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPReqDelOrderLocalSeqPrefixField_MarketID_get, _sptraderapi.CTORATstpSPReqDelOrderLocalSeqPrefixField_MarketID_set)

	# 经纪公司部门代码
    __swig_setmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPReqDelOrderLocalSeqPrefixField_DepartmentID_set
    __swig_getmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPReqDelOrderLocalSeqPrefixField_DepartmentID_get
    if _newclass:
        DepartmentID = _swig_property(_sptraderapi.CTORATstpSPReqDelOrderLocalSeqPrefixField_DepartmentID_get, _sptraderapi.CTORATstpSPReqDelOrderLocalSeqPrefixField_DepartmentID_set)

	# 机构编码
    __swig_setmethods__["BranchID"] = _sptraderapi.CTORATstpSPReqDelOrderLocalSeqPrefixField_BranchID_set
    __swig_getmethods__["BranchID"] = _sptraderapi.CTORATstpSPReqDelOrderLocalSeqPrefixField_BranchID_get
    if _newclass:
        BranchID = _swig_property(_sptraderapi.CTORATstpSPReqDelOrderLocalSeqPrefixField_BranchID_get, _sptraderapi.CTORATstpSPReqDelOrderLocalSeqPrefixField_BranchID_set)

	# 交易单元代码
    __swig_setmethods__["PbuID"] = _sptraderapi.CTORATstpSPReqDelOrderLocalSeqPrefixField_PbuID_set
    __swig_getmethods__["PbuID"] = _sptraderapi.CTORATstpSPReqDelOrderLocalSeqPrefixField_PbuID_get
    if _newclass:
        PbuID = _swig_property(_sptraderapi.CTORATstpSPReqDelOrderLocalSeqPrefixField_PbuID_get, _sptraderapi.CTORATstpSPReqDelOrderLocalSeqPrefixField_PbuID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelOrderLocalSeqPrefixField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelOrderLocalSeqPrefixField
    __del__ = lambda self: None
CTORATstpSPReqDelOrderLocalSeqPrefixField_swigregister = _sptraderapi.CTORATstpSPReqDelOrderLocalSeqPrefixField_swigregister
CTORATstpSPReqDelOrderLocalSeqPrefixField_swigregister(CTORATstpSPReqDelOrderLocalSeqPrefixField)




#########################################请求插入RiskParam############################################
class CTORATstpSPReqInsRiskParamField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsRiskParamField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsRiskParamField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqInsRiskParamField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqInsRiskParamField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqInsRiskParamField_InvestorID_get, _sptraderapi.CTORATstpSPReqInsRiskParamField_InvestorID_set)

	# 风控参数类型
    __swig_setmethods__["RiskParamType"] = _sptraderapi.CTORATstpSPReqInsRiskParamField_RiskParamType_set
    __swig_getmethods__["RiskParamType"] = _sptraderapi.CTORATstpSPReqInsRiskParamField_RiskParamType_get
    if _newclass:
        RiskParamType = _swig_property(_sptraderapi.CTORATstpSPReqInsRiskParamField_RiskParamType_get, _sptraderapi.CTORATstpSPReqInsRiskParamField_RiskParamType_set)

	# 风控参数值
    __swig_setmethods__["RiskParamVal"] = _sptraderapi.CTORATstpSPReqInsRiskParamField_RiskParamVal_set
    __swig_getmethods__["RiskParamVal"] = _sptraderapi.CTORATstpSPReqInsRiskParamField_RiskParamVal_get
    if _newclass:
        RiskParamVal = _swig_property(_sptraderapi.CTORATstpSPReqInsRiskParamField_RiskParamVal_get, _sptraderapi.CTORATstpSPReqInsRiskParamField_RiskParamVal_set)

	# 参数说明
    __swig_setmethods__["ParamRemark"] = _sptraderapi.CTORATstpSPReqInsRiskParamField_ParamRemark_set
    __swig_getmethods__["ParamRemark"] = _sptraderapi.CTORATstpSPReqInsRiskParamField_ParamRemark_get
    if _newclass:
        ParamRemark = _swig_property(_sptraderapi.CTORATstpSPReqInsRiskParamField_ParamRemark_get, _sptraderapi.CTORATstpSPReqInsRiskParamField_ParamRemark_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsRiskParamField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsRiskParamField
    __del__ = lambda self: None
CTORATstpSPReqInsRiskParamField_swigregister = _sptraderapi.CTORATstpSPReqInsRiskParamField_swigregister
CTORATstpSPReqInsRiskParamField_swigregister(CTORATstpSPReqInsRiskParamField)




#########################################请求更新RiskParam############################################
class CTORATstpSPReqUpdRiskParamField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdRiskParamField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdRiskParamField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqUpdRiskParamField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqUpdRiskParamField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqUpdRiskParamField_InvestorID_get, _sptraderapi.CTORATstpSPReqUpdRiskParamField_InvestorID_set)

	# 风控参数类型
    __swig_setmethods__["RiskParamType"] = _sptraderapi.CTORATstpSPReqUpdRiskParamField_RiskParamType_set
    __swig_getmethods__["RiskParamType"] = _sptraderapi.CTORATstpSPReqUpdRiskParamField_RiskParamType_get
    if _newclass:
        RiskParamType = _swig_property(_sptraderapi.CTORATstpSPReqUpdRiskParamField_RiskParamType_get, _sptraderapi.CTORATstpSPReqUpdRiskParamField_RiskParamType_set)

	# 风控参数值
    __swig_setmethods__["RiskParamVal"] = _sptraderapi.CTORATstpSPReqUpdRiskParamField_RiskParamVal_set
    __swig_getmethods__["RiskParamVal"] = _sptraderapi.CTORATstpSPReqUpdRiskParamField_RiskParamVal_get
    if _newclass:
        RiskParamVal = _swig_property(_sptraderapi.CTORATstpSPReqUpdRiskParamField_RiskParamVal_get, _sptraderapi.CTORATstpSPReqUpdRiskParamField_RiskParamVal_set)

	# 参数说明
    __swig_setmethods__["ParamRemark"] = _sptraderapi.CTORATstpSPReqUpdRiskParamField_ParamRemark_set
    __swig_getmethods__["ParamRemark"] = _sptraderapi.CTORATstpSPReqUpdRiskParamField_ParamRemark_get
    if _newclass:
        ParamRemark = _swig_property(_sptraderapi.CTORATstpSPReqUpdRiskParamField_ParamRemark_get, _sptraderapi.CTORATstpSPReqUpdRiskParamField_ParamRemark_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdRiskParamField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdRiskParamField
    __del__ = lambda self: None
CTORATstpSPReqUpdRiskParamField_swigregister = _sptraderapi.CTORATstpSPReqUpdRiskParamField_swigregister
CTORATstpSPReqUpdRiskParamField_swigregister(CTORATstpSPReqUpdRiskParamField)




#########################################请求删除RiskParam############################################
class CTORATstpSPReqDelRiskParamField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelRiskParamField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelRiskParamField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqDelRiskParamField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqDelRiskParamField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqDelRiskParamField_InvestorID_get, _sptraderapi.CTORATstpSPReqDelRiskParamField_InvestorID_set)

	# 风控参数类型
    __swig_setmethods__["RiskParamType"] = _sptraderapi.CTORATstpSPReqDelRiskParamField_RiskParamType_set
    __swig_getmethods__["RiskParamType"] = _sptraderapi.CTORATstpSPReqDelRiskParamField_RiskParamType_get
    if _newclass:
        RiskParamType = _swig_property(_sptraderapi.CTORATstpSPReqDelRiskParamField_RiskParamType_get, _sptraderapi.CTORATstpSPReqDelRiskParamField_RiskParamType_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelRiskParamField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelRiskParamField
    __del__ = lambda self: None
CTORATstpSPReqDelRiskParamField_swigregister = _sptraderapi.CTORATstpSPReqDelRiskParamField_swigregister
CTORATstpSPReqDelRiskParamField_swigregister(CTORATstpSPReqDelRiskParamField)




#########################################请求插入BrokerLimitPosition############################################
class CTORATstpSPReqInsBrokerLimitPositionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsBrokerLimitPositionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsBrokerLimitPositionField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_ExchangeID_get, _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_ExchangeID_set)

	# 标的证券代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_SecurityID_get, _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_SecurityID_set)

	# 限仓单位（2.份、3.张）
    __swig_setmethods__["LimitPositionUnit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_LimitPositionUnit_set
    __swig_getmethods__["LimitPositionUnit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_LimitPositionUnit_get
    if _newclass:
        LimitPositionUnit = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_LimitPositionUnit_get, _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_LimitPositionUnit_set)

	# 总持仓限额
    __swig_setmethods__["TotalPositionLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_TotalPositionLimit_set
    __swig_getmethods__["TotalPositionLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_TotalPositionLimit_get
    if _newclass:
        TotalPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_TotalPositionLimit_get, _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_TotalPositionLimit_set)

	# 经纪业务持仓限额
    __swig_setmethods__["BrokeragePositionLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_BrokeragePositionLimit_set
    __swig_getmethods__["BrokeragePositionLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_BrokeragePositionLimit_get
    if _newclass:
        BrokeragePositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_BrokeragePositionLimit_get, _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_BrokeragePositionLimit_set)

	# 自营业务持仓限额
    __swig_setmethods__["SelfOperatedPositionLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_SelfOperatedPositionLimit_set
    __swig_getmethods__["SelfOperatedPositionLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_SelfOperatedPositionLimit_get
    if _newclass:
        SelfOperatedPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_SelfOperatedPositionLimit_get, _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_SelfOperatedPositionLimit_set)

	# 多头持仓限额
    __swig_setmethods__["LongPositionLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_LongPositionLimit_set
    __swig_getmethods__["LongPositionLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_LongPositionLimit_get
    if _newclass:
        LongPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_LongPositionLimit_get, _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_LongPositionLimit_set)

	# 单日买入开仓限额
    __swig_setmethods__["TodayBuyOpenLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_TodayBuyOpenLimit_set
    __swig_getmethods__["TodayBuyOpenLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_TodayBuyOpenLimit_get
    if _newclass:
        TodayBuyOpenLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_TodayBuyOpenLimit_get, _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_TodayBuyOpenLimit_set)

	# 单日卖出开仓限额
    __swig_setmethods__["TodaySellOpenLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_TodaySellOpenLimit_set
    __swig_getmethods__["TodaySellOpenLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_TodaySellOpenLimit_get
    if _newclass:
        TodaySellOpenLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_TodaySellOpenLimit_get, _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_TodaySellOpenLimit_set)

	# 单日备兑开仓限额
    __swig_setmethods__["TodayCoveredOpenLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_TodayCoveredOpenLimit_set
    __swig_getmethods__["TodayCoveredOpenLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_TodayCoveredOpenLimit_get
    if _newclass:
        TodayCoveredOpenLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_TodayCoveredOpenLimit_get, _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_TodayCoveredOpenLimit_set)

	# 单日开仓限额
    __swig_setmethods__["TodayOpenLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_TodayOpenLimit_set
    __swig_getmethods__["TodayOpenLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_TodayOpenLimit_get
    if _newclass:
        TodayOpenLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_TodayOpenLimit_get, _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_TodayOpenLimit_set)

	# 认购多头持仓限额
    __swig_setmethods__["LongCallPositionLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_LongCallPositionLimit_set
    __swig_getmethods__["LongCallPositionLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_LongCallPositionLimit_get
    if _newclass:
        LongCallPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_LongCallPositionLimit_get, _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_LongCallPositionLimit_set)

	# 认沽多头持仓限额
    __swig_setmethods__["LongPutPositionLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_LongPutPositionLimit_set
    __swig_getmethods__["LongPutPositionLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_LongPutPositionLimit_get
    if _newclass:
        LongPutPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_LongPutPositionLimit_get, _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_LongPutPositionLimit_set)

	# 标的多头持仓限额
    __swig_setmethods__["LongUnderlyingPositionLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_LongUnderlyingPositionLimit_set
    __swig_getmethods__["LongUnderlyingPositionLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_LongUnderlyingPositionLimit_get
    if _newclass:
        LongUnderlyingPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_LongUnderlyingPositionLimit_get, _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_LongUnderlyingPositionLimit_set)

	# 标的空头持仓限额
    __swig_setmethods__["ShortUnderlyingPositionLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_ShortUnderlyingPositionLimit_set
    __swig_getmethods__["ShortUnderlyingPositionLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_ShortUnderlyingPositionLimit_get
    if _newclass:
        ShortUnderlyingPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_ShortUnderlyingPositionLimit_get, _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_ShortUnderlyingPositionLimit_set)

	# 总持仓冻结额度
    __swig_setmethods__["TotalPositionFrozen"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_TotalPositionFrozen_set
    __swig_getmethods__["TotalPositionFrozen"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_TotalPositionFrozen_get
    if _newclass:
        TotalPositionFrozen = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_TotalPositionFrozen_get, _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_TotalPositionFrozen_set)

	# 经纪业务持仓冻结额度
    __swig_setmethods__["BrokeragePositionFrozen"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_BrokeragePositionFrozen_set
    __swig_getmethods__["BrokeragePositionFrozen"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_BrokeragePositionFrozen_get
    if _newclass:
        BrokeragePositionFrozen = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_BrokeragePositionFrozen_get, _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_BrokeragePositionFrozen_set)

	# 自营业务持仓冻结额度
    __swig_setmethods__["SelfOperatedPositionFrozen"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_SelfOperatedPositionFrozen_set
    __swig_getmethods__["SelfOperatedPositionFrozen"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_SelfOperatedPositionFrozen_get
    if _newclass:
        SelfOperatedPositionFrozen = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_SelfOperatedPositionFrozen_get, _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_SelfOperatedPositionFrozen_set)

	# 多头持仓冻结额度
    __swig_setmethods__["LongPositionFrozen"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_LongPositionFrozen_set
    __swig_getmethods__["LongPositionFrozen"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_LongPositionFrozen_get
    if _newclass:
        LongPositionFrozen = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_LongPositionFrozen_get, _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_LongPositionFrozen_set)

	# 单日买入开仓冻结额度
    __swig_setmethods__["TodayBuyOpenFrozen"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_TodayBuyOpenFrozen_set
    __swig_getmethods__["TodayBuyOpenFrozen"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_TodayBuyOpenFrozen_get
    if _newclass:
        TodayBuyOpenFrozen = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_TodayBuyOpenFrozen_get, _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_TodayBuyOpenFrozen_set)

	# 单日卖出开仓冻结额度
    __swig_setmethods__["TodaySellOpenFrozen"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_TodaySellOpenFrozen_set
    __swig_getmethods__["TodaySellOpenFrozen"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_TodaySellOpenFrozen_get
    if _newclass:
        TodaySellOpenFrozen = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_TodaySellOpenFrozen_get, _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_TodaySellOpenFrozen_set)

	# 单日备兑开仓冻结额度
    __swig_setmethods__["TodayCoveredOpenFrozen"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_TodayCoveredOpenFrozen_set
    __swig_getmethods__["TodayCoveredOpenFrozen"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_TodayCoveredOpenFrozen_get
    if _newclass:
        TodayCoveredOpenFrozen = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_TodayCoveredOpenFrozen_get, _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_TodayCoveredOpenFrozen_set)

	# 单日开仓冻结额度
    __swig_setmethods__["TodayOpenFrozen"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_TodayOpenFrozen_set
    __swig_getmethods__["TodayOpenFrozen"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_TodayOpenFrozen_get
    if _newclass:
        TodayOpenFrozen = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_TodayOpenFrozen_get, _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_TodayOpenFrozen_set)

	# 认购多头持仓冻结额度
    __swig_setmethods__["LongCallPositionFrozen"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_LongCallPositionFrozen_set
    __swig_getmethods__["LongCallPositionFrozen"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_LongCallPositionFrozen_get
    if _newclass:
        LongCallPositionFrozen = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_LongCallPositionFrozen_get, _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_LongCallPositionFrozen_set)

	# 认沽多头持仓冻结额度
    __swig_setmethods__["LongPutPositionFrozen"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_LongPutPositionFrozen_set
    __swig_getmethods__["LongPutPositionFrozen"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_LongPutPositionFrozen_get
    if _newclass:
        LongPutPositionFrozen = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_LongPutPositionFrozen_get, _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_LongPutPositionFrozen_set)

	# 标的多头持仓冻结额度
    __swig_setmethods__["LongUnderlyingPositionFrozen"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_LongUnderlyingPositionFrozen_set
    __swig_getmethods__["LongUnderlyingPositionFrozen"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_LongUnderlyingPositionFrozen_get
    if _newclass:
        LongUnderlyingPositionFrozen = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_LongUnderlyingPositionFrozen_get, _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_LongUnderlyingPositionFrozen_set)

	# 标的空头持仓冻结额度
    __swig_setmethods__["ShortUnderlyingPositionFrozen"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_ShortUnderlyingPositionFrozen_set
    __swig_getmethods__["ShortUnderlyingPositionFrozen"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_ShortUnderlyingPositionFrozen_get
    if _newclass:
        ShortUnderlyingPositionFrozen = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_ShortUnderlyingPositionFrozen_get, _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_ShortUnderlyingPositionFrozen_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsBrokerLimitPositionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsBrokerLimitPositionField
    __del__ = lambda self: None
CTORATstpSPReqInsBrokerLimitPositionField_swigregister = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionField_swigregister
CTORATstpSPReqInsBrokerLimitPositionField_swigregister(CTORATstpSPReqInsBrokerLimitPositionField)




#########################################请求更新BrokerLimitPosition############################################
class CTORATstpSPReqUpdBrokerLimitPositionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdBrokerLimitPositionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdBrokerLimitPositionField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_ExchangeID_get, _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_ExchangeID_set)

	# 标的证券代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_SecurityID_get, _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_SecurityID_set)

	# 限仓单位（2.份、3.张）
    __swig_setmethods__["LimitPositionUnit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_LimitPositionUnit_set
    __swig_getmethods__["LimitPositionUnit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_LimitPositionUnit_get
    if _newclass:
        LimitPositionUnit = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_LimitPositionUnit_get, _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_LimitPositionUnit_set)

	# 总持仓限额
    __swig_setmethods__["TotalPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_TotalPositionLimit_set
    __swig_getmethods__["TotalPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_TotalPositionLimit_get
    if _newclass:
        TotalPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_TotalPositionLimit_get, _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_TotalPositionLimit_set)

	# 经纪业务持仓限额
    __swig_setmethods__["BrokeragePositionLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_BrokeragePositionLimit_set
    __swig_getmethods__["BrokeragePositionLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_BrokeragePositionLimit_get
    if _newclass:
        BrokeragePositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_BrokeragePositionLimit_get, _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_BrokeragePositionLimit_set)

	# 自营业务持仓限额
    __swig_setmethods__["SelfOperatedPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_SelfOperatedPositionLimit_set
    __swig_getmethods__["SelfOperatedPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_SelfOperatedPositionLimit_get
    if _newclass:
        SelfOperatedPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_SelfOperatedPositionLimit_get, _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_SelfOperatedPositionLimit_set)

	# 多头持仓限额
    __swig_setmethods__["LongPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_LongPositionLimit_set
    __swig_getmethods__["LongPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_LongPositionLimit_get
    if _newclass:
        LongPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_LongPositionLimit_get, _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_LongPositionLimit_set)

	# 单日买入开仓限额
    __swig_setmethods__["TodayBuyOpenLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_TodayBuyOpenLimit_set
    __swig_getmethods__["TodayBuyOpenLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_TodayBuyOpenLimit_get
    if _newclass:
        TodayBuyOpenLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_TodayBuyOpenLimit_get, _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_TodayBuyOpenLimit_set)

	# 单日卖出开仓限额
    __swig_setmethods__["TodaySellOpenLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_TodaySellOpenLimit_set
    __swig_getmethods__["TodaySellOpenLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_TodaySellOpenLimit_get
    if _newclass:
        TodaySellOpenLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_TodaySellOpenLimit_get, _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_TodaySellOpenLimit_set)

	# 单日备兑开仓限额
    __swig_setmethods__["TodayCoveredOpenLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_TodayCoveredOpenLimit_set
    __swig_getmethods__["TodayCoveredOpenLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_TodayCoveredOpenLimit_get
    if _newclass:
        TodayCoveredOpenLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_TodayCoveredOpenLimit_get, _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_TodayCoveredOpenLimit_set)

	# 单日开仓限额
    __swig_setmethods__["TodayOpenLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_TodayOpenLimit_set
    __swig_getmethods__["TodayOpenLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_TodayOpenLimit_get
    if _newclass:
        TodayOpenLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_TodayOpenLimit_get, _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_TodayOpenLimit_set)

	# 认购多头持仓限额
    __swig_setmethods__["LongCallPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_LongCallPositionLimit_set
    __swig_getmethods__["LongCallPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_LongCallPositionLimit_get
    if _newclass:
        LongCallPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_LongCallPositionLimit_get, _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_LongCallPositionLimit_set)

	# 认沽多头持仓限额
    __swig_setmethods__["LongPutPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_LongPutPositionLimit_set
    __swig_getmethods__["LongPutPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_LongPutPositionLimit_get
    if _newclass:
        LongPutPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_LongPutPositionLimit_get, _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_LongPutPositionLimit_set)

	# 标的多头持仓限额
    __swig_setmethods__["LongUnderlyingPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_LongUnderlyingPositionLimit_set
    __swig_getmethods__["LongUnderlyingPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_LongUnderlyingPositionLimit_get
    if _newclass:
        LongUnderlyingPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_LongUnderlyingPositionLimit_get, _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_LongUnderlyingPositionLimit_set)

	# 标的空头持仓限额
    __swig_setmethods__["ShortUnderlyingPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_ShortUnderlyingPositionLimit_set
    __swig_getmethods__["ShortUnderlyingPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_ShortUnderlyingPositionLimit_get
    if _newclass:
        ShortUnderlyingPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_ShortUnderlyingPositionLimit_get, _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_ShortUnderlyingPositionLimit_set)

	# 总持仓冻结额度
    __swig_setmethods__["TotalPositionFrozen"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_TotalPositionFrozen_set
    __swig_getmethods__["TotalPositionFrozen"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_TotalPositionFrozen_get
    if _newclass:
        TotalPositionFrozen = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_TotalPositionFrozen_get, _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_TotalPositionFrozen_set)

	# 经纪业务持仓冻结额度
    __swig_setmethods__["BrokeragePositionFrozen"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_BrokeragePositionFrozen_set
    __swig_getmethods__["BrokeragePositionFrozen"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_BrokeragePositionFrozen_get
    if _newclass:
        BrokeragePositionFrozen = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_BrokeragePositionFrozen_get, _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_BrokeragePositionFrozen_set)

	# 自营业务持仓冻结额度
    __swig_setmethods__["SelfOperatedPositionFrozen"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_SelfOperatedPositionFrozen_set
    __swig_getmethods__["SelfOperatedPositionFrozen"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_SelfOperatedPositionFrozen_get
    if _newclass:
        SelfOperatedPositionFrozen = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_SelfOperatedPositionFrozen_get, _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_SelfOperatedPositionFrozen_set)

	# 多头持仓冻结额度
    __swig_setmethods__["LongPositionFrozen"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_LongPositionFrozen_set
    __swig_getmethods__["LongPositionFrozen"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_LongPositionFrozen_get
    if _newclass:
        LongPositionFrozen = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_LongPositionFrozen_get, _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_LongPositionFrozen_set)

	# 单日买入开仓冻结额度
    __swig_setmethods__["TodayBuyOpenFrozen"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_TodayBuyOpenFrozen_set
    __swig_getmethods__["TodayBuyOpenFrozen"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_TodayBuyOpenFrozen_get
    if _newclass:
        TodayBuyOpenFrozen = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_TodayBuyOpenFrozen_get, _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_TodayBuyOpenFrozen_set)

	# 单日卖出开仓冻结额度
    __swig_setmethods__["TodaySellOpenFrozen"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_TodaySellOpenFrozen_set
    __swig_getmethods__["TodaySellOpenFrozen"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_TodaySellOpenFrozen_get
    if _newclass:
        TodaySellOpenFrozen = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_TodaySellOpenFrozen_get, _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_TodaySellOpenFrozen_set)

	# 单日备兑开仓冻结额度
    __swig_setmethods__["TodayCoveredOpenFrozen"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_TodayCoveredOpenFrozen_set
    __swig_getmethods__["TodayCoveredOpenFrozen"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_TodayCoveredOpenFrozen_get
    if _newclass:
        TodayCoveredOpenFrozen = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_TodayCoveredOpenFrozen_get, _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_TodayCoveredOpenFrozen_set)

	# 单日开仓冻结额度
    __swig_setmethods__["TodayOpenFrozen"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_TodayOpenFrozen_set
    __swig_getmethods__["TodayOpenFrozen"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_TodayOpenFrozen_get
    if _newclass:
        TodayOpenFrozen = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_TodayOpenFrozen_get, _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_TodayOpenFrozen_set)

	# 认购多头持仓冻结额度
    __swig_setmethods__["LongCallPositionFrozen"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_LongCallPositionFrozen_set
    __swig_getmethods__["LongCallPositionFrozen"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_LongCallPositionFrozen_get
    if _newclass:
        LongCallPositionFrozen = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_LongCallPositionFrozen_get, _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_LongCallPositionFrozen_set)

	# 认沽多头持仓冻结额度
    __swig_setmethods__["LongPutPositionFrozen"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_LongPutPositionFrozen_set
    __swig_getmethods__["LongPutPositionFrozen"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_LongPutPositionFrozen_get
    if _newclass:
        LongPutPositionFrozen = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_LongPutPositionFrozen_get, _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_LongPutPositionFrozen_set)

	# 标的多头持仓冻结额度
    __swig_setmethods__["LongUnderlyingPositionFrozen"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_LongUnderlyingPositionFrozen_set
    __swig_getmethods__["LongUnderlyingPositionFrozen"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_LongUnderlyingPositionFrozen_get
    if _newclass:
        LongUnderlyingPositionFrozen = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_LongUnderlyingPositionFrozen_get, _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_LongUnderlyingPositionFrozen_set)

	# 标的空头持仓冻结额度
    __swig_setmethods__["ShortUnderlyingPositionFrozen"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_ShortUnderlyingPositionFrozen_set
    __swig_getmethods__["ShortUnderlyingPositionFrozen"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_ShortUnderlyingPositionFrozen_get
    if _newclass:
        ShortUnderlyingPositionFrozen = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_ShortUnderlyingPositionFrozen_get, _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_ShortUnderlyingPositionFrozen_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdBrokerLimitPositionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdBrokerLimitPositionField
    __del__ = lambda self: None
CTORATstpSPReqUpdBrokerLimitPositionField_swigregister = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionField_swigregister
CTORATstpSPReqUpdBrokerLimitPositionField_swigregister(CTORATstpSPReqUpdBrokerLimitPositionField)




#########################################请求删除BrokerLimitPosition############################################
class CTORATstpSPReqDelBrokerLimitPositionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelBrokerLimitPositionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelBrokerLimitPositionField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelBrokerLimitPositionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelBrokerLimitPositionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqDelBrokerLimitPositionField_ExchangeID_get, _sptraderapi.CTORATstpSPReqDelBrokerLimitPositionField_ExchangeID_set)

	# 标的证券代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqDelBrokerLimitPositionField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqDelBrokerLimitPositionField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqDelBrokerLimitPositionField_SecurityID_get, _sptraderapi.CTORATstpSPReqDelBrokerLimitPositionField_SecurityID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelBrokerLimitPositionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelBrokerLimitPositionField
    __del__ = lambda self: None
CTORATstpSPReqDelBrokerLimitPositionField_swigregister = _sptraderapi.CTORATstpSPReqDelBrokerLimitPositionField_swigregister
CTORATstpSPReqDelBrokerLimitPositionField_swigregister(CTORATstpSPReqDelBrokerLimitPositionField)




#########################################请求插入BrokerLimitPositionParam############################################
class CTORATstpSPReqInsBrokerLimitPositionParamField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsBrokerLimitPositionParamField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsBrokerLimitPositionParamField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_ExchangeID_get, _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_ExchangeID_set)

	# 证券市场中的具体品种，如上海股票
    __swig_setmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_ProductID_set
    __swig_getmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_ProductID_get, _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_ProductID_set)

	# 标的证券代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_SecurityID_get, _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_SecurityID_set)

	# 总持仓限额
    __swig_setmethods__["TotalPositionLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_TotalPositionLimit_set
    __swig_getmethods__["TotalPositionLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_TotalPositionLimit_get
    if _newclass:
        TotalPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_TotalPositionLimit_get, _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_TotalPositionLimit_set)

	# 经纪业务持仓限额
    __swig_setmethods__["BrokeragePositionLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_BrokeragePositionLimit_set
    __swig_getmethods__["BrokeragePositionLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_BrokeragePositionLimit_get
    if _newclass:
        BrokeragePositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_BrokeragePositionLimit_get, _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_BrokeragePositionLimit_set)

	# 自营业务持仓限额
    __swig_setmethods__["SelfOperatedPositionLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_SelfOperatedPositionLimit_set
    __swig_getmethods__["SelfOperatedPositionLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_SelfOperatedPositionLimit_get
    if _newclass:
        SelfOperatedPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_SelfOperatedPositionLimit_get, _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_SelfOperatedPositionLimit_set)

	# 多头持仓限额
    __swig_setmethods__["LongPositionLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_LongPositionLimit_set
    __swig_getmethods__["LongPositionLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_LongPositionLimit_get
    if _newclass:
        LongPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_LongPositionLimit_get, _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_LongPositionLimit_set)

	# 单日买入开仓限额
    __swig_setmethods__["TodayBuyOpenLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_TodayBuyOpenLimit_set
    __swig_getmethods__["TodayBuyOpenLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_TodayBuyOpenLimit_get
    if _newclass:
        TodayBuyOpenLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_TodayBuyOpenLimit_get, _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_TodayBuyOpenLimit_set)

	# 单日卖出开仓限额
    __swig_setmethods__["TodaySellOpenLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_TodaySellOpenLimit_set
    __swig_getmethods__["TodaySellOpenLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_TodaySellOpenLimit_get
    if _newclass:
        TodaySellOpenLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_TodaySellOpenLimit_get, _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_TodaySellOpenLimit_set)

	# 单日备兑开仓限额
    __swig_setmethods__["TodayCoveredOpenLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_TodayCoveredOpenLimit_set
    __swig_getmethods__["TodayCoveredOpenLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_TodayCoveredOpenLimit_get
    if _newclass:
        TodayCoveredOpenLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_TodayCoveredOpenLimit_get, _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_TodayCoveredOpenLimit_set)

	# 单日开仓限额
    __swig_setmethods__["TodayOpenLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_TodayOpenLimit_set
    __swig_getmethods__["TodayOpenLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_TodayOpenLimit_get
    if _newclass:
        TodayOpenLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_TodayOpenLimit_get, _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_TodayOpenLimit_set)

	# 认购多头持仓限额
    __swig_setmethods__["LongCallPositionLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_LongCallPositionLimit_set
    __swig_getmethods__["LongCallPositionLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_LongCallPositionLimit_get
    if _newclass:
        LongCallPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_LongCallPositionLimit_get, _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_LongCallPositionLimit_set)

	# 认沽多头持仓限额
    __swig_setmethods__["LongPutPositionLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_LongPutPositionLimit_set
    __swig_getmethods__["LongPutPositionLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_LongPutPositionLimit_get
    if _newclass:
        LongPutPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_LongPutPositionLimit_get, _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_LongPutPositionLimit_set)

	# 标的多头持仓限额
    __swig_setmethods__["LongUnderlyingPositionLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_LongUnderlyingPositionLimit_set
    __swig_getmethods__["LongUnderlyingPositionLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_LongUnderlyingPositionLimit_get
    if _newclass:
        LongUnderlyingPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_LongUnderlyingPositionLimit_get, _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_LongUnderlyingPositionLimit_set)

	# 标的空头持仓限额
    __swig_setmethods__["ShortUnderlyingPositionLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_ShortUnderlyingPositionLimit_set
    __swig_getmethods__["ShortUnderlyingPositionLimit"] = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_ShortUnderlyingPositionLimit_get
    if _newclass:
        ShortUnderlyingPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_ShortUnderlyingPositionLimit_get, _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_ShortUnderlyingPositionLimit_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsBrokerLimitPositionParamField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsBrokerLimitPositionParamField
    __del__ = lambda self: None
CTORATstpSPReqInsBrokerLimitPositionParamField_swigregister = _sptraderapi.CTORATstpSPReqInsBrokerLimitPositionParamField_swigregister
CTORATstpSPReqInsBrokerLimitPositionParamField_swigregister(CTORATstpSPReqInsBrokerLimitPositionParamField)




#########################################请求更新BrokerLimitPositionParam############################################
class CTORATstpSPReqUpdBrokerLimitPositionParamField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdBrokerLimitPositionParamField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdBrokerLimitPositionParamField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_ExchangeID_get, _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_ExchangeID_set)

	# 证券市场中的具体品种，如上海股票
    __swig_setmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_ProductID_set
    __swig_getmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_ProductID_get, _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_ProductID_set)

	# 标的证券代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_SecurityID_get, _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_SecurityID_set)

	# 总持仓限额
    __swig_setmethods__["TotalPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_TotalPositionLimit_set
    __swig_getmethods__["TotalPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_TotalPositionLimit_get
    if _newclass:
        TotalPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_TotalPositionLimit_get, _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_TotalPositionLimit_set)

	# 经纪业务持仓限额
    __swig_setmethods__["BrokeragePositionLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_BrokeragePositionLimit_set
    __swig_getmethods__["BrokeragePositionLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_BrokeragePositionLimit_get
    if _newclass:
        BrokeragePositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_BrokeragePositionLimit_get, _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_BrokeragePositionLimit_set)

	# 自营业务持仓限额
    __swig_setmethods__["SelfOperatedPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_SelfOperatedPositionLimit_set
    __swig_getmethods__["SelfOperatedPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_SelfOperatedPositionLimit_get
    if _newclass:
        SelfOperatedPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_SelfOperatedPositionLimit_get, _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_SelfOperatedPositionLimit_set)

	# 多头持仓限额
    __swig_setmethods__["LongPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_LongPositionLimit_set
    __swig_getmethods__["LongPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_LongPositionLimit_get
    if _newclass:
        LongPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_LongPositionLimit_get, _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_LongPositionLimit_set)

	# 单日买入开仓限额
    __swig_setmethods__["TodayBuyOpenLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_TodayBuyOpenLimit_set
    __swig_getmethods__["TodayBuyOpenLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_TodayBuyOpenLimit_get
    if _newclass:
        TodayBuyOpenLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_TodayBuyOpenLimit_get, _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_TodayBuyOpenLimit_set)

	# 单日卖出开仓限额
    __swig_setmethods__["TodaySellOpenLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_TodaySellOpenLimit_set
    __swig_getmethods__["TodaySellOpenLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_TodaySellOpenLimit_get
    if _newclass:
        TodaySellOpenLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_TodaySellOpenLimit_get, _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_TodaySellOpenLimit_set)

	# 单日备兑开仓限额
    __swig_setmethods__["TodayCoveredOpenLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_TodayCoveredOpenLimit_set
    __swig_getmethods__["TodayCoveredOpenLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_TodayCoveredOpenLimit_get
    if _newclass:
        TodayCoveredOpenLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_TodayCoveredOpenLimit_get, _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_TodayCoveredOpenLimit_set)

	# 单日开仓限额
    __swig_setmethods__["TodayOpenLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_TodayOpenLimit_set
    __swig_getmethods__["TodayOpenLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_TodayOpenLimit_get
    if _newclass:
        TodayOpenLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_TodayOpenLimit_get, _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_TodayOpenLimit_set)

	# 认购多头持仓限额
    __swig_setmethods__["LongCallPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_LongCallPositionLimit_set
    __swig_getmethods__["LongCallPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_LongCallPositionLimit_get
    if _newclass:
        LongCallPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_LongCallPositionLimit_get, _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_LongCallPositionLimit_set)

	# 认沽多头持仓限额
    __swig_setmethods__["LongPutPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_LongPutPositionLimit_set
    __swig_getmethods__["LongPutPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_LongPutPositionLimit_get
    if _newclass:
        LongPutPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_LongPutPositionLimit_get, _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_LongPutPositionLimit_set)

	# 标的多头持仓限额
    __swig_setmethods__["LongUnderlyingPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_LongUnderlyingPositionLimit_set
    __swig_getmethods__["LongUnderlyingPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_LongUnderlyingPositionLimit_get
    if _newclass:
        LongUnderlyingPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_LongUnderlyingPositionLimit_get, _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_LongUnderlyingPositionLimit_set)

	# 标的空头持仓限额
    __swig_setmethods__["ShortUnderlyingPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_ShortUnderlyingPositionLimit_set
    __swig_getmethods__["ShortUnderlyingPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_ShortUnderlyingPositionLimit_get
    if _newclass:
        ShortUnderlyingPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_ShortUnderlyingPositionLimit_get, _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_ShortUnderlyingPositionLimit_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdBrokerLimitPositionParamField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdBrokerLimitPositionParamField
    __del__ = lambda self: None
CTORATstpSPReqUpdBrokerLimitPositionParamField_swigregister = _sptraderapi.CTORATstpSPReqUpdBrokerLimitPositionParamField_swigregister
CTORATstpSPReqUpdBrokerLimitPositionParamField_swigregister(CTORATstpSPReqUpdBrokerLimitPositionParamField)




#########################################请求删除BrokerLimitPositionParam############################################
class CTORATstpSPReqDelBrokerLimitPositionParamField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelBrokerLimitPositionParamField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelBrokerLimitPositionParamField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelBrokerLimitPositionParamField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelBrokerLimitPositionParamField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqDelBrokerLimitPositionParamField_ExchangeID_get, _sptraderapi.CTORATstpSPReqDelBrokerLimitPositionParamField_ExchangeID_set)

	# 证券市场中的具体品种，如上海股票
    __swig_setmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqDelBrokerLimitPositionParamField_ProductID_set
    __swig_getmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqDelBrokerLimitPositionParamField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_sptraderapi.CTORATstpSPReqDelBrokerLimitPositionParamField_ProductID_get, _sptraderapi.CTORATstpSPReqDelBrokerLimitPositionParamField_ProductID_set)

	# 标的证券代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqDelBrokerLimitPositionParamField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqDelBrokerLimitPositionParamField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqDelBrokerLimitPositionParamField_SecurityID_get, _sptraderapi.CTORATstpSPReqDelBrokerLimitPositionParamField_SecurityID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelBrokerLimitPositionParamField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelBrokerLimitPositionParamField
    __del__ = lambda self: None
CTORATstpSPReqDelBrokerLimitPositionParamField_swigregister = _sptraderapi.CTORATstpSPReqDelBrokerLimitPositionParamField_swigregister
CTORATstpSPReqDelBrokerLimitPositionParamField_swigregister(CTORATstpSPReqDelBrokerLimitPositionParamField)




#########################################请求插入BusinessUnitAccount############################################
class CTORATstpSPReqInsBusinessUnitAccountField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsBusinessUnitAccountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsBusinessUnitAccountField, name)
    __repr__ = _swig_repr

	# 登录用户
    __swig_setmethods__["UserID"] = _sptraderapi.CTORATstpSPReqInsBusinessUnitAccountField_UserID_set
    __swig_getmethods__["UserID"] = _sptraderapi.CTORATstpSPReqInsBusinessUnitAccountField_UserID_get
    if _newclass:
        UserID = _swig_property(_sptraderapi.CTORATstpSPReqInsBusinessUnitAccountField_UserID_get, _sptraderapi.CTORATstpSPReqInsBusinessUnitAccountField_UserID_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqInsBusinessUnitAccountField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqInsBusinessUnitAccountField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqInsBusinessUnitAccountField_InvestorID_get, _sptraderapi.CTORATstpSPReqInsBusinessUnitAccountField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPReqInsBusinessUnitAccountField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPReqInsBusinessUnitAccountField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPReqInsBusinessUnitAccountField_BusinessUnitID_get, _sptraderapi.CTORATstpSPReqInsBusinessUnitAccountField_BusinessUnitID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsBusinessUnitAccountField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsBusinessUnitAccountField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqInsBusinessUnitAccountField_ExchangeID_get, _sptraderapi.CTORATstpSPReqInsBusinessUnitAccountField_ExchangeID_set)

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqInsBusinessUnitAccountField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqInsBusinessUnitAccountField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPReqInsBusinessUnitAccountField_MarketID_get, _sptraderapi.CTORATstpSPReqInsBusinessUnitAccountField_MarketID_set)

	# 目前该字段存放的是上证所和深圳的股东代码。
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqInsBusinessUnitAccountField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqInsBusinessUnitAccountField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPReqInsBusinessUnitAccountField_ShareholderID_get, _sptraderapi.CTORATstpSPReqInsBusinessUnitAccountField_ShareholderID_set)

	# 普通、信用、衍生品等
    __swig_setmethods__["ShareholderIDType"] = _sptraderapi.CTORATstpSPReqInsBusinessUnitAccountField_ShareholderIDType_set
    __swig_getmethods__["ShareholderIDType"] = _sptraderapi.CTORATstpSPReqInsBusinessUnitAccountField_ShareholderIDType_get
    if _newclass:
        ShareholderIDType = _swig_property(_sptraderapi.CTORATstpSPReqInsBusinessUnitAccountField_ShareholderIDType_get, _sptraderapi.CTORATstpSPReqInsBusinessUnitAccountField_ShareholderIDType_set)

	# 证券市场中的具体品种，如上海股票
    __swig_setmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqInsBusinessUnitAccountField_ProductID_set
    __swig_getmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqInsBusinessUnitAccountField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_sptraderapi.CTORATstpSPReqInsBusinessUnitAccountField_ProductID_get, _sptraderapi.CTORATstpSPReqInsBusinessUnitAccountField_ProductID_set)

	# 资金账户
    __swig_setmethods__["AccountID"] = _sptraderapi.CTORATstpSPReqInsBusinessUnitAccountField_AccountID_set
    __swig_getmethods__["AccountID"] = _sptraderapi.CTORATstpSPReqInsBusinessUnitAccountField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_sptraderapi.CTORATstpSPReqInsBusinessUnitAccountField_AccountID_get, _sptraderapi.CTORATstpSPReqInsBusinessUnitAccountField_AccountID_set)

	# 币种
    __swig_setmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPReqInsBusinessUnitAccountField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPReqInsBusinessUnitAccountField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_sptraderapi.CTORATstpSPReqInsBusinessUnitAccountField_CurrencyID_get, _sptraderapi.CTORATstpSPReqInsBusinessUnitAccountField_CurrencyID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsBusinessUnitAccountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsBusinessUnitAccountField
    __del__ = lambda self: None
CTORATstpSPReqInsBusinessUnitAccountField_swigregister = _sptraderapi.CTORATstpSPReqInsBusinessUnitAccountField_swigregister
CTORATstpSPReqInsBusinessUnitAccountField_swigregister(CTORATstpSPReqInsBusinessUnitAccountField)




#########################################请求更新BusinessUnitAccount############################################
class CTORATstpSPReqUpdBusinessUnitAccountField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdBusinessUnitAccountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdBusinessUnitAccountField, name)
    __repr__ = _swig_repr

	# 登录用户
    __swig_setmethods__["UserID"] = _sptraderapi.CTORATstpSPReqUpdBusinessUnitAccountField_UserID_set
    __swig_getmethods__["UserID"] = _sptraderapi.CTORATstpSPReqUpdBusinessUnitAccountField_UserID_get
    if _newclass:
        UserID = _swig_property(_sptraderapi.CTORATstpSPReqUpdBusinessUnitAccountField_UserID_get, _sptraderapi.CTORATstpSPReqUpdBusinessUnitAccountField_UserID_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqUpdBusinessUnitAccountField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqUpdBusinessUnitAccountField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqUpdBusinessUnitAccountField_InvestorID_get, _sptraderapi.CTORATstpSPReqUpdBusinessUnitAccountField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPReqUpdBusinessUnitAccountField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPReqUpdBusinessUnitAccountField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPReqUpdBusinessUnitAccountField_BusinessUnitID_get, _sptraderapi.CTORATstpSPReqUpdBusinessUnitAccountField_BusinessUnitID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdBusinessUnitAccountField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdBusinessUnitAccountField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqUpdBusinessUnitAccountField_ExchangeID_get, _sptraderapi.CTORATstpSPReqUpdBusinessUnitAccountField_ExchangeID_set)

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqUpdBusinessUnitAccountField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqUpdBusinessUnitAccountField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPReqUpdBusinessUnitAccountField_MarketID_get, _sptraderapi.CTORATstpSPReqUpdBusinessUnitAccountField_MarketID_set)

	# 目前该字段存放的是上证所和深圳的股东代码。
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqUpdBusinessUnitAccountField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqUpdBusinessUnitAccountField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPReqUpdBusinessUnitAccountField_ShareholderID_get, _sptraderapi.CTORATstpSPReqUpdBusinessUnitAccountField_ShareholderID_set)

	# 普通、信用、衍生品等
    __swig_setmethods__["ShareholderIDType"] = _sptraderapi.CTORATstpSPReqUpdBusinessUnitAccountField_ShareholderIDType_set
    __swig_getmethods__["ShareholderIDType"] = _sptraderapi.CTORATstpSPReqUpdBusinessUnitAccountField_ShareholderIDType_get
    if _newclass:
        ShareholderIDType = _swig_property(_sptraderapi.CTORATstpSPReqUpdBusinessUnitAccountField_ShareholderIDType_get, _sptraderapi.CTORATstpSPReqUpdBusinessUnitAccountField_ShareholderIDType_set)

	# 证券市场中的具体品种，如上海股票
    __swig_setmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqUpdBusinessUnitAccountField_ProductID_set
    __swig_getmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqUpdBusinessUnitAccountField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_sptraderapi.CTORATstpSPReqUpdBusinessUnitAccountField_ProductID_get, _sptraderapi.CTORATstpSPReqUpdBusinessUnitAccountField_ProductID_set)

	# 资金账户
    __swig_setmethods__["AccountID"] = _sptraderapi.CTORATstpSPReqUpdBusinessUnitAccountField_AccountID_set
    __swig_getmethods__["AccountID"] = _sptraderapi.CTORATstpSPReqUpdBusinessUnitAccountField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_sptraderapi.CTORATstpSPReqUpdBusinessUnitAccountField_AccountID_get, _sptraderapi.CTORATstpSPReqUpdBusinessUnitAccountField_AccountID_set)

	# 币种
    __swig_setmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPReqUpdBusinessUnitAccountField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPReqUpdBusinessUnitAccountField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_sptraderapi.CTORATstpSPReqUpdBusinessUnitAccountField_CurrencyID_get, _sptraderapi.CTORATstpSPReqUpdBusinessUnitAccountField_CurrencyID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdBusinessUnitAccountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdBusinessUnitAccountField
    __del__ = lambda self: None
CTORATstpSPReqUpdBusinessUnitAccountField_swigregister = _sptraderapi.CTORATstpSPReqUpdBusinessUnitAccountField_swigregister
CTORATstpSPReqUpdBusinessUnitAccountField_swigregister(CTORATstpSPReqUpdBusinessUnitAccountField)




#########################################请求删除BusinessUnitAccount############################################
class CTORATstpSPReqDelBusinessUnitAccountField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelBusinessUnitAccountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelBusinessUnitAccountField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelBusinessUnitAccountField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelBusinessUnitAccountField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqDelBusinessUnitAccountField_ExchangeID_get, _sptraderapi.CTORATstpSPReqDelBusinessUnitAccountField_ExchangeID_set)

	# 登录用户
    __swig_setmethods__["UserID"] = _sptraderapi.CTORATstpSPReqDelBusinessUnitAccountField_UserID_set
    __swig_getmethods__["UserID"] = _sptraderapi.CTORATstpSPReqDelBusinessUnitAccountField_UserID_get
    if _newclass:
        UserID = _swig_property(_sptraderapi.CTORATstpSPReqDelBusinessUnitAccountField_UserID_get, _sptraderapi.CTORATstpSPReqDelBusinessUnitAccountField_UserID_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqDelBusinessUnitAccountField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqDelBusinessUnitAccountField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqDelBusinessUnitAccountField_InvestorID_get, _sptraderapi.CTORATstpSPReqDelBusinessUnitAccountField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPReqDelBusinessUnitAccountField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPReqDelBusinessUnitAccountField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPReqDelBusinessUnitAccountField_BusinessUnitID_get, _sptraderapi.CTORATstpSPReqDelBusinessUnitAccountField_BusinessUnitID_set)

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqDelBusinessUnitAccountField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqDelBusinessUnitAccountField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPReqDelBusinessUnitAccountField_MarketID_get, _sptraderapi.CTORATstpSPReqDelBusinessUnitAccountField_MarketID_set)

	# 目前该字段存放的是上证所和深圳的股东代码。
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqDelBusinessUnitAccountField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqDelBusinessUnitAccountField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPReqDelBusinessUnitAccountField_ShareholderID_get, _sptraderapi.CTORATstpSPReqDelBusinessUnitAccountField_ShareholderID_set)

	# 证券市场中的具体品种，如上海股票
    __swig_setmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqDelBusinessUnitAccountField_ProductID_set
    __swig_getmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqDelBusinessUnitAccountField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_sptraderapi.CTORATstpSPReqDelBusinessUnitAccountField_ProductID_get, _sptraderapi.CTORATstpSPReqDelBusinessUnitAccountField_ProductID_set)

	# 币种
    __swig_setmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPReqDelBusinessUnitAccountField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPReqDelBusinessUnitAccountField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_sptraderapi.CTORATstpSPReqDelBusinessUnitAccountField_CurrencyID_get, _sptraderapi.CTORATstpSPReqDelBusinessUnitAccountField_CurrencyID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelBusinessUnitAccountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelBusinessUnitAccountField
    __del__ = lambda self: None
CTORATstpSPReqDelBusinessUnitAccountField_swigregister = _sptraderapi.CTORATstpSPReqDelBusinessUnitAccountField_swigregister
CTORATstpSPReqDelBusinessUnitAccountField_swigregister(CTORATstpSPReqDelBusinessUnitAccountField)




#########################################请求插入CombPosDetail############################################
class CTORATstpSPReqInsCombPosDetailField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsCombPosDetailField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsCombPosDetailField, name)
    __repr__ = _swig_repr

	# 交易日期
    __swig_setmethods__["TradingDay"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPosDetailField_TradingDay_get, _sptraderapi.CTORATstpSPReqInsCombPosDetailField_TradingDay_set)

	# 交易所组合编码
    __swig_setmethods__["ExchangeCombID"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_ExchangeCombID_set
    __swig_getmethods__["ExchangeCombID"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_ExchangeCombID_get
    if _newclass:
        ExchangeCombID = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPosDetailField_ExchangeCombID_get, _sptraderapi.CTORATstpSPReqInsCombPosDetailField_ExchangeCombID_set)

	# 组合策略
    __swig_setmethods__["CombinationStrategy"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_CombinationStrategy_set
    __swig_getmethods__["CombinationStrategy"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_CombinationStrategy_get
    if _newclass:
        CombinationStrategy = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPosDetailField_CombinationStrategy_get, _sptraderapi.CTORATstpSPReqInsCombPosDetailField_CombinationStrategy_set)

	# 组合合约代码
    __swig_setmethods__["CombSecurityID"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_CombSecurityID_set
    __swig_getmethods__["CombSecurityID"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_CombSecurityID_get
    if _newclass:
        CombSecurityID = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPosDetailField_CombSecurityID_get, _sptraderapi.CTORATstpSPReqInsCombPosDetailField_CombSecurityID_set)

	# 经纪公司部门代码
    __swig_setmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_DepartmentID_set
    __swig_getmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_DepartmentID_get
    if _newclass:
        DepartmentID = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPosDetailField_DepartmentID_get, _sptraderapi.CTORATstpSPReqInsCombPosDetailField_DepartmentID_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPosDetailField_InvestorID_get, _sptraderapi.CTORATstpSPReqInsCombPosDetailField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPosDetailField_BusinessUnitID_get, _sptraderapi.CTORATstpSPReqInsCombPosDetailField_BusinessUnitID_set)

	# 市场代码
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPosDetailField_MarketID_get, _sptraderapi.CTORATstpSPReqInsCombPosDetailField_MarketID_set)

	# 交易账户代码
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPosDetailField_ShareholderID_get, _sptraderapi.CTORATstpSPReqInsCombPosDetailField_ShareholderID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPosDetailField_ExchangeID_get, _sptraderapi.CTORATstpSPReqInsCombPosDetailField_ExchangeID_set)

	# 昨日组合数量
    __swig_setmethods__["HistoryPos"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_HistoryPos_set
    __swig_getmethods__["HistoryPos"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_HistoryPos_get
    if _newclass:
        HistoryPos = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPosDetailField_HistoryPos_get, _sptraderapi.CTORATstpSPReqInsCombPosDetailField_HistoryPos_set)

	# 今日组合数量
    __swig_setmethods__["TodayPos"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_TodayPos_set
    __swig_getmethods__["TodayPos"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_TodayPos_get
    if _newclass:
        TodayPos = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPosDetailField_TodayPos_get, _sptraderapi.CTORATstpSPReqInsCombPosDetailField_TodayPos_set)

	# 组合时期
    __swig_setmethods__["TradeDate"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPosDetailField_TradeDate_get, _sptraderapi.CTORATstpSPReqInsCombPosDetailField_TradeDate_set)

	# 组合时间
    __swig_setmethods__["TradeTime"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPosDetailField_TradeTime_get, _sptraderapi.CTORATstpSPReqInsCombPosDetailField_TradeTime_set)

	# 组合状态
    __swig_setmethods__["CombinationStatus"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_CombinationStatus_set
    __swig_getmethods__["CombinationStatus"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_CombinationStatus_get
    if _newclass:
        CombinationStatus = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPosDetailField_CombinationStatus_get, _sptraderapi.CTORATstpSPReqInsCombPosDetailField_CombinationStatus_set)

	# 成份合约个数，最多四条腿
    __swig_setmethods__["NoLegs"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_NoLegs_set
    __swig_getmethods__["NoLegs"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_NoLegs_get
    if _newclass:
        NoLegs = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPosDetailField_NoLegs_get, _sptraderapi.CTORATstpSPReqInsCombPosDetailField_NoLegs_set)

	# 第一腿合约代码
    __swig_setmethods__["Leg1SecurityID"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg1SecurityID_set
    __swig_getmethods__["Leg1SecurityID"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg1SecurityID_get
    if _newclass:
        Leg1SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg1SecurityID_get, _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg1SecurityID_set)

	# 第一腿昨日组合数量
    __swig_setmethods__["Leg1HistoryPos"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg1HistoryPos_set
    __swig_getmethods__["Leg1HistoryPos"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg1HistoryPos_get
    if _newclass:
        Leg1HistoryPos = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg1HistoryPos_get, _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg1HistoryPos_set)

	# 第一腿今日组合数量
    __swig_setmethods__["Leg1TodayPos"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg1TodayPos_set
    __swig_getmethods__["Leg1TodayPos"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg1TodayPos_get
    if _newclass:
        Leg1TodayPos = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg1TodayPos_get, _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg1TodayPos_set)

	# 第一腿持仓方向
    __swig_setmethods__["Leg1PosiDirection"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg1PosiDirection_set
    __swig_getmethods__["Leg1PosiDirection"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg1PosiDirection_get
    if _newclass:
        Leg1PosiDirection = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg1PosiDirection_get, _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg1PosiDirection_set)

	# 第一腿期权类型
    __swig_setmethods__["Leg1OptionsType"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg1OptionsType_set
    __swig_getmethods__["Leg1OptionsType"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg1OptionsType_get
    if _newclass:
        Leg1OptionsType = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg1OptionsType_get, _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg1OptionsType_set)

	# 第二腿合约代码
    __swig_setmethods__["Leg2SecurityID"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg2SecurityID_set
    __swig_getmethods__["Leg2SecurityID"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg2SecurityID_get
    if _newclass:
        Leg2SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg2SecurityID_get, _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg2SecurityID_set)

	# 第二腿昨日组合数量
    __swig_setmethods__["Leg2HistoryPos"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg2HistoryPos_set
    __swig_getmethods__["Leg2HistoryPos"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg2HistoryPos_get
    if _newclass:
        Leg2HistoryPos = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg2HistoryPos_get, _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg2HistoryPos_set)

	# 第二腿今日组合数量
    __swig_setmethods__["Leg2TodayPos"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg2TodayPos_set
    __swig_getmethods__["Leg2TodayPos"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg2TodayPos_get
    if _newclass:
        Leg2TodayPos = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg2TodayPos_get, _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg2TodayPos_set)

	# 第二腿持仓方向
    __swig_setmethods__["Leg2PosiDirection"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg2PosiDirection_set
    __swig_getmethods__["Leg2PosiDirection"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg2PosiDirection_get
    if _newclass:
        Leg2PosiDirection = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg2PosiDirection_get, _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg2PosiDirection_set)

	# 第二腿期权类型
    __swig_setmethods__["Leg2OptionsType"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg2OptionsType_set
    __swig_getmethods__["Leg2OptionsType"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg2OptionsType_get
    if _newclass:
        Leg2OptionsType = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg2OptionsType_get, _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg2OptionsType_set)

	# 第三腿合约代码
    __swig_setmethods__["Leg3SecurityID"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg3SecurityID_set
    __swig_getmethods__["Leg3SecurityID"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg3SecurityID_get
    if _newclass:
        Leg3SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg3SecurityID_get, _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg3SecurityID_set)

	# 第三腿昨日组合数量
    __swig_setmethods__["Leg3HistoryPos"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg3HistoryPos_set
    __swig_getmethods__["Leg3HistoryPos"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg3HistoryPos_get
    if _newclass:
        Leg3HistoryPos = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg3HistoryPos_get, _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg3HistoryPos_set)

	# 第三腿今日组合数量
    __swig_setmethods__["Leg3TodayPos"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg3TodayPos_set
    __swig_getmethods__["Leg3TodayPos"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg3TodayPos_get
    if _newclass:
        Leg3TodayPos = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg3TodayPos_get, _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg3TodayPos_set)

	# 第三腿持仓方向
    __swig_setmethods__["Leg3PosiDirection"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg3PosiDirection_set
    __swig_getmethods__["Leg3PosiDirection"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg3PosiDirection_get
    if _newclass:
        Leg3PosiDirection = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg3PosiDirection_get, _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg3PosiDirection_set)

	# 第三腿期权类型
    __swig_setmethods__["Leg3OptionsType"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg3OptionsType_set
    __swig_getmethods__["Leg3OptionsType"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg3OptionsType_get
    if _newclass:
        Leg3OptionsType = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg3OptionsType_get, _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg3OptionsType_set)

	# 第四腿合约代码
    __swig_setmethods__["Leg4SecurityID"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg4SecurityID_set
    __swig_getmethods__["Leg4SecurityID"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg4SecurityID_get
    if _newclass:
        Leg4SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg4SecurityID_get, _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg4SecurityID_set)

	# 第四腿昨日组合数量
    __swig_setmethods__["Leg4HistoryPos"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg4HistoryPos_set
    __swig_getmethods__["Leg4HistoryPos"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg4HistoryPos_get
    if _newclass:
        Leg4HistoryPos = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg4HistoryPos_get, _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg4HistoryPos_set)

	# 第四腿今日组合数量
    __swig_setmethods__["Leg4TodayPos"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg4TodayPos_set
    __swig_getmethods__["Leg4TodayPos"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg4TodayPos_get
    if _newclass:
        Leg4TodayPos = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg4TodayPos_get, _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg4TodayPos_set)

	# 第四腿持仓方向
    __swig_setmethods__["Leg4PosiDirection"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg4PosiDirection_set
    __swig_getmethods__["Leg4PosiDirection"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg4PosiDirection_get
    if _newclass:
        Leg4PosiDirection = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg4PosiDirection_get, _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg4PosiDirection_set)

	# 第四腿期权类型
    __swig_setmethods__["Leg4OptionsType"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg4OptionsType_set
    __swig_getmethods__["Leg4OptionsType"] = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg4OptionsType_get
    if _newclass:
        Leg4OptionsType = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg4OptionsType_get, _sptraderapi.CTORATstpSPReqInsCombPosDetailField_Leg4OptionsType_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsCombPosDetailField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsCombPosDetailField
    __del__ = lambda self: None
CTORATstpSPReqInsCombPosDetailField_swigregister = _sptraderapi.CTORATstpSPReqInsCombPosDetailField_swigregister
CTORATstpSPReqInsCombPosDetailField_swigregister(CTORATstpSPReqInsCombPosDetailField)




#########################################请求更新CombPosDetail############################################
class CTORATstpSPReqUpdCombPosDetailField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdCombPosDetailField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdCombPosDetailField, name)
    __repr__ = _swig_repr

	# 交易日期
    __swig_setmethods__["TradingDay"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPosDetailField_TradingDay_get, _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_TradingDay_set)

	# 交易所组合编码
    __swig_setmethods__["ExchangeCombID"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_ExchangeCombID_set
    __swig_getmethods__["ExchangeCombID"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_ExchangeCombID_get
    if _newclass:
        ExchangeCombID = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPosDetailField_ExchangeCombID_get, _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_ExchangeCombID_set)

	# 组合策略
    __swig_setmethods__["CombinationStrategy"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_CombinationStrategy_set
    __swig_getmethods__["CombinationStrategy"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_CombinationStrategy_get
    if _newclass:
        CombinationStrategy = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPosDetailField_CombinationStrategy_get, _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_CombinationStrategy_set)

	# 组合合约代码
    __swig_setmethods__["CombSecurityID"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_CombSecurityID_set
    __swig_getmethods__["CombSecurityID"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_CombSecurityID_get
    if _newclass:
        CombSecurityID = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPosDetailField_CombSecurityID_get, _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_CombSecurityID_set)

	# 经纪公司部门代码
    __swig_setmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_DepartmentID_set
    __swig_getmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_DepartmentID_get
    if _newclass:
        DepartmentID = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPosDetailField_DepartmentID_get, _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_DepartmentID_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPosDetailField_InvestorID_get, _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPosDetailField_BusinessUnitID_get, _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_BusinessUnitID_set)

	# 市场代码
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPosDetailField_MarketID_get, _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_MarketID_set)

	# 交易账户代码
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPosDetailField_ShareholderID_get, _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_ShareholderID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPosDetailField_ExchangeID_get, _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_ExchangeID_set)

	# 昨日组合数量
    __swig_setmethods__["HistoryPos"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_HistoryPos_set
    __swig_getmethods__["HistoryPos"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_HistoryPos_get
    if _newclass:
        HistoryPos = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPosDetailField_HistoryPos_get, _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_HistoryPos_set)

	# 今日组合数量
    __swig_setmethods__["TodayPos"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_TodayPos_set
    __swig_getmethods__["TodayPos"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_TodayPos_get
    if _newclass:
        TodayPos = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPosDetailField_TodayPos_get, _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_TodayPos_set)

	# 组合时期
    __swig_setmethods__["TradeDate"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPosDetailField_TradeDate_get, _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_TradeDate_set)

	# 组合时间
    __swig_setmethods__["TradeTime"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPosDetailField_TradeTime_get, _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_TradeTime_set)

	# 组合状态
    __swig_setmethods__["CombinationStatus"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_CombinationStatus_set
    __swig_getmethods__["CombinationStatus"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_CombinationStatus_get
    if _newclass:
        CombinationStatus = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPosDetailField_CombinationStatus_get, _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_CombinationStatus_set)

	# 成份合约个数，最多四条腿
    __swig_setmethods__["NoLegs"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_NoLegs_set
    __swig_getmethods__["NoLegs"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_NoLegs_get
    if _newclass:
        NoLegs = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPosDetailField_NoLegs_get, _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_NoLegs_set)

	# 第一腿合约代码
    __swig_setmethods__["Leg1SecurityID"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg1SecurityID_set
    __swig_getmethods__["Leg1SecurityID"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg1SecurityID_get
    if _newclass:
        Leg1SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg1SecurityID_get, _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg1SecurityID_set)

	# 第一腿昨日组合数量
    __swig_setmethods__["Leg1HistoryPos"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg1HistoryPos_set
    __swig_getmethods__["Leg1HistoryPos"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg1HistoryPos_get
    if _newclass:
        Leg1HistoryPos = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg1HistoryPos_get, _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg1HistoryPos_set)

	# 第一腿今日组合数量
    __swig_setmethods__["Leg1TodayPos"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg1TodayPos_set
    __swig_getmethods__["Leg1TodayPos"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg1TodayPos_get
    if _newclass:
        Leg1TodayPos = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg1TodayPos_get, _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg1TodayPos_set)

	# 第一腿持仓方向
    __swig_setmethods__["Leg1PosiDirection"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg1PosiDirection_set
    __swig_getmethods__["Leg1PosiDirection"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg1PosiDirection_get
    if _newclass:
        Leg1PosiDirection = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg1PosiDirection_get, _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg1PosiDirection_set)

	# 第一腿期权类型
    __swig_setmethods__["Leg1OptionsType"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg1OptionsType_set
    __swig_getmethods__["Leg1OptionsType"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg1OptionsType_get
    if _newclass:
        Leg1OptionsType = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg1OptionsType_get, _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg1OptionsType_set)

	# 第二腿合约代码
    __swig_setmethods__["Leg2SecurityID"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg2SecurityID_set
    __swig_getmethods__["Leg2SecurityID"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg2SecurityID_get
    if _newclass:
        Leg2SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg2SecurityID_get, _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg2SecurityID_set)

	# 第二腿昨日组合数量
    __swig_setmethods__["Leg2HistoryPos"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg2HistoryPos_set
    __swig_getmethods__["Leg2HistoryPos"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg2HistoryPos_get
    if _newclass:
        Leg2HistoryPos = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg2HistoryPos_get, _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg2HistoryPos_set)

	# 第二腿今日组合数量
    __swig_setmethods__["Leg2TodayPos"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg2TodayPos_set
    __swig_getmethods__["Leg2TodayPos"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg2TodayPos_get
    if _newclass:
        Leg2TodayPos = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg2TodayPos_get, _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg2TodayPos_set)

	# 第二腿持仓方向
    __swig_setmethods__["Leg2PosiDirection"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg2PosiDirection_set
    __swig_getmethods__["Leg2PosiDirection"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg2PosiDirection_get
    if _newclass:
        Leg2PosiDirection = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg2PosiDirection_get, _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg2PosiDirection_set)

	# 第二腿期权类型
    __swig_setmethods__["Leg2OptionsType"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg2OptionsType_set
    __swig_getmethods__["Leg2OptionsType"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg2OptionsType_get
    if _newclass:
        Leg2OptionsType = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg2OptionsType_get, _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg2OptionsType_set)

	# 第三腿合约代码
    __swig_setmethods__["Leg3SecurityID"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg3SecurityID_set
    __swig_getmethods__["Leg3SecurityID"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg3SecurityID_get
    if _newclass:
        Leg3SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg3SecurityID_get, _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg3SecurityID_set)

	# 第三腿昨日组合数量
    __swig_setmethods__["Leg3HistoryPos"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg3HistoryPos_set
    __swig_getmethods__["Leg3HistoryPos"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg3HistoryPos_get
    if _newclass:
        Leg3HistoryPos = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg3HistoryPos_get, _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg3HistoryPos_set)

	# 第三腿今日组合数量
    __swig_setmethods__["Leg3TodayPos"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg3TodayPos_set
    __swig_getmethods__["Leg3TodayPos"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg3TodayPos_get
    if _newclass:
        Leg3TodayPos = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg3TodayPos_get, _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg3TodayPos_set)

	# 第三腿持仓方向
    __swig_setmethods__["Leg3PosiDirection"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg3PosiDirection_set
    __swig_getmethods__["Leg3PosiDirection"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg3PosiDirection_get
    if _newclass:
        Leg3PosiDirection = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg3PosiDirection_get, _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg3PosiDirection_set)

	# 第三腿期权类型
    __swig_setmethods__["Leg3OptionsType"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg3OptionsType_set
    __swig_getmethods__["Leg3OptionsType"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg3OptionsType_get
    if _newclass:
        Leg3OptionsType = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg3OptionsType_get, _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg3OptionsType_set)

	# 第四腿合约代码
    __swig_setmethods__["Leg4SecurityID"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg4SecurityID_set
    __swig_getmethods__["Leg4SecurityID"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg4SecurityID_get
    if _newclass:
        Leg4SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg4SecurityID_get, _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg4SecurityID_set)

	# 第四腿昨日组合数量
    __swig_setmethods__["Leg4HistoryPos"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg4HistoryPos_set
    __swig_getmethods__["Leg4HistoryPos"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg4HistoryPos_get
    if _newclass:
        Leg4HistoryPos = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg4HistoryPos_get, _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg4HistoryPos_set)

	# 第四腿今日组合数量
    __swig_setmethods__["Leg4TodayPos"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg4TodayPos_set
    __swig_getmethods__["Leg4TodayPos"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg4TodayPos_get
    if _newclass:
        Leg4TodayPos = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg4TodayPos_get, _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg4TodayPos_set)

	# 第四腿持仓方向
    __swig_setmethods__["Leg4PosiDirection"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg4PosiDirection_set
    __swig_getmethods__["Leg4PosiDirection"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg4PosiDirection_get
    if _newclass:
        Leg4PosiDirection = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg4PosiDirection_get, _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg4PosiDirection_set)

	# 第四腿期权类型
    __swig_setmethods__["Leg4OptionsType"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg4OptionsType_set
    __swig_getmethods__["Leg4OptionsType"] = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg4OptionsType_get
    if _newclass:
        Leg4OptionsType = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg4OptionsType_get, _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_Leg4OptionsType_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdCombPosDetailField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdCombPosDetailField
    __del__ = lambda self: None
CTORATstpSPReqUpdCombPosDetailField_swigregister = _sptraderapi.CTORATstpSPReqUpdCombPosDetailField_swigregister
CTORATstpSPReqUpdCombPosDetailField_swigregister(CTORATstpSPReqUpdCombPosDetailField)




#########################################请求删除CombPosDetail############################################
class CTORATstpSPReqDelCombPosDetailField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelCombPosDetailField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelCombPosDetailField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelCombPosDetailField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelCombPosDetailField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqDelCombPosDetailField_ExchangeID_get, _sptraderapi.CTORATstpSPReqDelCombPosDetailField_ExchangeID_set)

	# 交易日期
    __swig_setmethods__["TradingDay"] = _sptraderapi.CTORATstpSPReqDelCombPosDetailField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _sptraderapi.CTORATstpSPReqDelCombPosDetailField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_sptraderapi.CTORATstpSPReqDelCombPosDetailField_TradingDay_get, _sptraderapi.CTORATstpSPReqDelCombPosDetailField_TradingDay_set)

	# 交易所组合编码
    __swig_setmethods__["ExchangeCombID"] = _sptraderapi.CTORATstpSPReqDelCombPosDetailField_ExchangeCombID_set
    __swig_getmethods__["ExchangeCombID"] = _sptraderapi.CTORATstpSPReqDelCombPosDetailField_ExchangeCombID_get
    if _newclass:
        ExchangeCombID = _swig_property(_sptraderapi.CTORATstpSPReqDelCombPosDetailField_ExchangeCombID_get, _sptraderapi.CTORATstpSPReqDelCombPosDetailField_ExchangeCombID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelCombPosDetailField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelCombPosDetailField
    __del__ = lambda self: None
CTORATstpSPReqDelCombPosDetailField_swigregister = _sptraderapi.CTORATstpSPReqDelCombPosDetailField_swigregister
CTORATstpSPReqDelCombPosDetailField_swigregister(CTORATstpSPReqDelCombPosDetailField)




#########################################请求插入CombPosition############################################
class CTORATstpSPReqInsCombPositionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsCombPositionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsCombPositionField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqInsCombPositionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqInsCombPositionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPositionField_InvestorID_get, _sptraderapi.CTORATstpSPReqInsCombPositionField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPReqInsCombPositionField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPReqInsCombPositionField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPositionField_BusinessUnitID_get, _sptraderapi.CTORATstpSPReqInsCombPositionField_BusinessUnitID_set)

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqInsCombPositionField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqInsCombPositionField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPositionField_MarketID_get, _sptraderapi.CTORATstpSPReqInsCombPositionField_MarketID_set)

	# 交易账户代码
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqInsCombPositionField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqInsCombPositionField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPositionField_ShareholderID_get, _sptraderapi.CTORATstpSPReqInsCombPositionField_ShareholderID_set)

	# 交易日期
    __swig_setmethods__["TradingDay"] = _sptraderapi.CTORATstpSPReqInsCombPositionField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _sptraderapi.CTORATstpSPReqInsCombPositionField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPositionField_TradingDay_get, _sptraderapi.CTORATstpSPReqInsCombPositionField_TradingDay_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsCombPositionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsCombPositionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPositionField_ExchangeID_get, _sptraderapi.CTORATstpSPReqInsCombPositionField_ExchangeID_set)

	# 组合证券代码(A&B)
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqInsCombPositionField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqInsCombPositionField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPositionField_SecurityID_get, _sptraderapi.CTORATstpSPReqInsCombPositionField_SecurityID_set)

	# 组合策略(CNSJC/CXSJC/PXSJC/PNSJC/KS/KKS/ZBD)
    __swig_setmethods__["CombinationStrategy"] = _sptraderapi.CTORATstpSPReqInsCombPositionField_CombinationStrategy_set
    __swig_getmethods__["CombinationStrategy"] = _sptraderapi.CTORATstpSPReqInsCombPositionField_CombinationStrategy_get
    if _newclass:
        CombinationStrategy = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPositionField_CombinationStrategy_get, _sptraderapi.CTORATstpSPReqInsCombPositionField_CombinationStrategy_set)

	# 昨日持仓（包含昨日持仓冻结数量）
    __swig_setmethods__["HistoryPos"] = _sptraderapi.CTORATstpSPReqInsCombPositionField_HistoryPos_set
    __swig_getmethods__["HistoryPos"] = _sptraderapi.CTORATstpSPReqInsCombPositionField_HistoryPos_get
    if _newclass:
        HistoryPos = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPositionField_HistoryPos_get, _sptraderapi.CTORATstpSPReqInsCombPositionField_HistoryPos_set)

	# 昨日持仓冻结
    __swig_setmethods__["HistoryPosFrozen"] = _sptraderapi.CTORATstpSPReqInsCombPositionField_HistoryPosFrozen_set
    __swig_getmethods__["HistoryPosFrozen"] = _sptraderapi.CTORATstpSPReqInsCombPositionField_HistoryPosFrozen_get
    if _newclass:
        HistoryPosFrozen = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPositionField_HistoryPosFrozen_get, _sptraderapi.CTORATstpSPReqInsCombPositionField_HistoryPosFrozen_set)

	# 今日持仓
    __swig_setmethods__["TodayPos"] = _sptraderapi.CTORATstpSPReqInsCombPositionField_TodayPos_set
    __swig_getmethods__["TodayPos"] = _sptraderapi.CTORATstpSPReqInsCombPositionField_TodayPos_get
    if _newclass:
        TodayPos = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPositionField_TodayPos_get, _sptraderapi.CTORATstpSPReqInsCombPositionField_TodayPos_set)

	# 今日持仓冻结
    __swig_setmethods__["TodayPosFrozen"] = _sptraderapi.CTORATstpSPReqInsCombPositionField_TodayPosFrozen_set
    __swig_getmethods__["TodayPosFrozen"] = _sptraderapi.CTORATstpSPReqInsCombPositionField_TodayPosFrozen_get
    if _newclass:
        TodayPosFrozen = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPositionField_TodayPosFrozen_get, _sptraderapi.CTORATstpSPReqInsCombPositionField_TodayPosFrozen_set)

	# 已成交持仓占用的保证金
    __swig_setmethods__["Margin"] = _sptraderapi.CTORATstpSPReqInsCombPositionField_Margin_set
    __swig_getmethods__["Margin"] = _sptraderapi.CTORATstpSPReqInsCombPositionField_Margin_get
    if _newclass:
        Margin = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPositionField_Margin_get, _sptraderapi.CTORATstpSPReqInsCombPositionField_Margin_set)

	# 已申报未成交持仓占用的保证金
    __swig_setmethods__["FrozenMargin"] = _sptraderapi.CTORATstpSPReqInsCombPositionField_FrozenMargin_set
    __swig_getmethods__["FrozenMargin"] = _sptraderapi.CTORATstpSPReqInsCombPositionField_FrozenMargin_get
    if _newclass:
        FrozenMargin = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPositionField_FrozenMargin_get, _sptraderapi.CTORATstpSPReqInsCombPositionField_FrozenMargin_set)

	# 因为下单而冻结的手续费
    __swig_setmethods__["FrozenCommission"] = _sptraderapi.CTORATstpSPReqInsCombPositionField_FrozenCommission_set
    __swig_getmethods__["FrozenCommission"] = _sptraderapi.CTORATstpSPReqInsCombPositionField_FrozenCommission_get
    if _newclass:
        FrozenCommission = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPositionField_FrozenCommission_get, _sptraderapi.CTORATstpSPReqInsCombPositionField_FrozenCommission_set)

	# 成交单产生的手续费
    __swig_setmethods__["Commission"] = _sptraderapi.CTORATstpSPReqInsCombPositionField_Commission_set
    __swig_getmethods__["Commission"] = _sptraderapi.CTORATstpSPReqInsCombPositionField_Commission_get
    if _newclass:
        Commission = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPositionField_Commission_get, _sptraderapi.CTORATstpSPReqInsCombPositionField_Commission_set)

	# 上次余额(盘中不变)
    __swig_setmethods__["PrePosition"] = _sptraderapi.CTORATstpSPReqInsCombPositionField_PrePosition_set
    __swig_getmethods__["PrePosition"] = _sptraderapi.CTORATstpSPReqInsCombPositionField_PrePosition_get
    if _newclass:
        PrePosition = _swig_property(_sptraderapi.CTORATstpSPReqInsCombPositionField_PrePosition_get, _sptraderapi.CTORATstpSPReqInsCombPositionField_PrePosition_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsCombPositionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsCombPositionField
    __del__ = lambda self: None
CTORATstpSPReqInsCombPositionField_swigregister = _sptraderapi.CTORATstpSPReqInsCombPositionField_swigregister
CTORATstpSPReqInsCombPositionField_swigregister(CTORATstpSPReqInsCombPositionField)




#########################################请求更新CombPosition############################################
class CTORATstpSPReqUpdCombPositionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdCombPositionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdCombPositionField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqUpdCombPositionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqUpdCombPositionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPositionField_InvestorID_get, _sptraderapi.CTORATstpSPReqUpdCombPositionField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPReqUpdCombPositionField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPReqUpdCombPositionField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPositionField_BusinessUnitID_get, _sptraderapi.CTORATstpSPReqUpdCombPositionField_BusinessUnitID_set)

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqUpdCombPositionField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqUpdCombPositionField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPositionField_MarketID_get, _sptraderapi.CTORATstpSPReqUpdCombPositionField_MarketID_set)

	# 交易账户代码
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqUpdCombPositionField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqUpdCombPositionField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPositionField_ShareholderID_get, _sptraderapi.CTORATstpSPReqUpdCombPositionField_ShareholderID_set)

	# 交易日期
    __swig_setmethods__["TradingDay"] = _sptraderapi.CTORATstpSPReqUpdCombPositionField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _sptraderapi.CTORATstpSPReqUpdCombPositionField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPositionField_TradingDay_get, _sptraderapi.CTORATstpSPReqUpdCombPositionField_TradingDay_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdCombPositionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdCombPositionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPositionField_ExchangeID_get, _sptraderapi.CTORATstpSPReqUpdCombPositionField_ExchangeID_set)

	# 组合证券代码(A&B)
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqUpdCombPositionField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqUpdCombPositionField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPositionField_SecurityID_get, _sptraderapi.CTORATstpSPReqUpdCombPositionField_SecurityID_set)

	# 组合策略(CNSJC/CXSJC/PXSJC/PNSJC/KS/KKS/ZBD)
    __swig_setmethods__["CombinationStrategy"] = _sptraderapi.CTORATstpSPReqUpdCombPositionField_CombinationStrategy_set
    __swig_getmethods__["CombinationStrategy"] = _sptraderapi.CTORATstpSPReqUpdCombPositionField_CombinationStrategy_get
    if _newclass:
        CombinationStrategy = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPositionField_CombinationStrategy_get, _sptraderapi.CTORATstpSPReqUpdCombPositionField_CombinationStrategy_set)

	# 昨日持仓（包含昨日持仓冻结数量）
    __swig_setmethods__["HistoryPos"] = _sptraderapi.CTORATstpSPReqUpdCombPositionField_HistoryPos_set
    __swig_getmethods__["HistoryPos"] = _sptraderapi.CTORATstpSPReqUpdCombPositionField_HistoryPos_get
    if _newclass:
        HistoryPos = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPositionField_HistoryPos_get, _sptraderapi.CTORATstpSPReqUpdCombPositionField_HistoryPos_set)

	# 昨日持仓冻结
    __swig_setmethods__["HistoryPosFrozen"] = _sptraderapi.CTORATstpSPReqUpdCombPositionField_HistoryPosFrozen_set
    __swig_getmethods__["HistoryPosFrozen"] = _sptraderapi.CTORATstpSPReqUpdCombPositionField_HistoryPosFrozen_get
    if _newclass:
        HistoryPosFrozen = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPositionField_HistoryPosFrozen_get, _sptraderapi.CTORATstpSPReqUpdCombPositionField_HistoryPosFrozen_set)

	# 今日持仓
    __swig_setmethods__["TodayPos"] = _sptraderapi.CTORATstpSPReqUpdCombPositionField_TodayPos_set
    __swig_getmethods__["TodayPos"] = _sptraderapi.CTORATstpSPReqUpdCombPositionField_TodayPos_get
    if _newclass:
        TodayPos = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPositionField_TodayPos_get, _sptraderapi.CTORATstpSPReqUpdCombPositionField_TodayPos_set)

	# 今日持仓冻结
    __swig_setmethods__["TodayPosFrozen"] = _sptraderapi.CTORATstpSPReqUpdCombPositionField_TodayPosFrozen_set
    __swig_getmethods__["TodayPosFrozen"] = _sptraderapi.CTORATstpSPReqUpdCombPositionField_TodayPosFrozen_get
    if _newclass:
        TodayPosFrozen = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPositionField_TodayPosFrozen_get, _sptraderapi.CTORATstpSPReqUpdCombPositionField_TodayPosFrozen_set)

	# 已成交持仓占用的保证金
    __swig_setmethods__["Margin"] = _sptraderapi.CTORATstpSPReqUpdCombPositionField_Margin_set
    __swig_getmethods__["Margin"] = _sptraderapi.CTORATstpSPReqUpdCombPositionField_Margin_get
    if _newclass:
        Margin = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPositionField_Margin_get, _sptraderapi.CTORATstpSPReqUpdCombPositionField_Margin_set)

	# 已申报未成交持仓占用的保证金
    __swig_setmethods__["FrozenMargin"] = _sptraderapi.CTORATstpSPReqUpdCombPositionField_FrozenMargin_set
    __swig_getmethods__["FrozenMargin"] = _sptraderapi.CTORATstpSPReqUpdCombPositionField_FrozenMargin_get
    if _newclass:
        FrozenMargin = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPositionField_FrozenMargin_get, _sptraderapi.CTORATstpSPReqUpdCombPositionField_FrozenMargin_set)

	# 因为下单而冻结的手续费
    __swig_setmethods__["FrozenCommission"] = _sptraderapi.CTORATstpSPReqUpdCombPositionField_FrozenCommission_set
    __swig_getmethods__["FrozenCommission"] = _sptraderapi.CTORATstpSPReqUpdCombPositionField_FrozenCommission_get
    if _newclass:
        FrozenCommission = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPositionField_FrozenCommission_get, _sptraderapi.CTORATstpSPReqUpdCombPositionField_FrozenCommission_set)

	# 成交单产生的手续费
    __swig_setmethods__["Commission"] = _sptraderapi.CTORATstpSPReqUpdCombPositionField_Commission_set
    __swig_getmethods__["Commission"] = _sptraderapi.CTORATstpSPReqUpdCombPositionField_Commission_get
    if _newclass:
        Commission = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPositionField_Commission_get, _sptraderapi.CTORATstpSPReqUpdCombPositionField_Commission_set)

	# 上次余额(盘中不变)
    __swig_setmethods__["PrePosition"] = _sptraderapi.CTORATstpSPReqUpdCombPositionField_PrePosition_set
    __swig_getmethods__["PrePosition"] = _sptraderapi.CTORATstpSPReqUpdCombPositionField_PrePosition_get
    if _newclass:
        PrePosition = _swig_property(_sptraderapi.CTORATstpSPReqUpdCombPositionField_PrePosition_get, _sptraderapi.CTORATstpSPReqUpdCombPositionField_PrePosition_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdCombPositionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdCombPositionField
    __del__ = lambda self: None
CTORATstpSPReqUpdCombPositionField_swigregister = _sptraderapi.CTORATstpSPReqUpdCombPositionField_swigregister
CTORATstpSPReqUpdCombPositionField_swigregister(CTORATstpSPReqUpdCombPositionField)




#########################################请求删除CombPosition############################################
class CTORATstpSPReqDelCombPositionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelCombPositionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelCombPositionField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelCombPositionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelCombPositionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqDelCombPositionField_ExchangeID_get, _sptraderapi.CTORATstpSPReqDelCombPositionField_ExchangeID_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqDelCombPositionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqDelCombPositionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqDelCombPositionField_InvestorID_get, _sptraderapi.CTORATstpSPReqDelCombPositionField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPReqDelCombPositionField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPReqDelCombPositionField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPReqDelCombPositionField_BusinessUnitID_get, _sptraderapi.CTORATstpSPReqDelCombPositionField_BusinessUnitID_set)

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqDelCombPositionField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqDelCombPositionField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPReqDelCombPositionField_MarketID_get, _sptraderapi.CTORATstpSPReqDelCombPositionField_MarketID_set)

	# 交易账户代码
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqDelCombPositionField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqDelCombPositionField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPReqDelCombPositionField_ShareholderID_get, _sptraderapi.CTORATstpSPReqDelCombPositionField_ShareholderID_set)

	# 交易日期
    __swig_setmethods__["TradingDay"] = _sptraderapi.CTORATstpSPReqDelCombPositionField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _sptraderapi.CTORATstpSPReqDelCombPositionField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_sptraderapi.CTORATstpSPReqDelCombPositionField_TradingDay_get, _sptraderapi.CTORATstpSPReqDelCombPositionField_TradingDay_set)

	# 组合证券代码(A&B)
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqDelCombPositionField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqDelCombPositionField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqDelCombPositionField_SecurityID_get, _sptraderapi.CTORATstpSPReqDelCombPositionField_SecurityID_set)

	# 组合策略(CNSJC/CXSJC/PXSJC/PNSJC/KS/KKS/ZBD)
    __swig_setmethods__["CombinationStrategy"] = _sptraderapi.CTORATstpSPReqDelCombPositionField_CombinationStrategy_set
    __swig_getmethods__["CombinationStrategy"] = _sptraderapi.CTORATstpSPReqDelCombPositionField_CombinationStrategy_get
    if _newclass:
        CombinationStrategy = _swig_property(_sptraderapi.CTORATstpSPReqDelCombPositionField_CombinationStrategy_get, _sptraderapi.CTORATstpSPReqDelCombPositionField_CombinationStrategy_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelCombPositionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelCombPositionField
    __del__ = lambda self: None
CTORATstpSPReqDelCombPositionField_swigregister = _sptraderapi.CTORATstpSPReqDelCombPositionField_swigregister
CTORATstpSPReqDelCombPositionField_swigregister(CTORATstpSPReqDelCombPositionField)




#########################################请求插入ExchRtnSeq############################################
class CTORATstpSPReqInsExchRtnSeqField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsExchRtnSeqField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsExchRtnSeqField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsExchRtnSeqField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsExchRtnSeqField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqInsExchRtnSeqField_ExchangeID_get, _sptraderapi.CTORATstpSPReqInsExchRtnSeqField_ExchangeID_set)

	# 交易报盘编号
    __swig_setmethods__["TraderOfferID"] = _sptraderapi.CTORATstpSPReqInsExchRtnSeqField_TraderOfferID_set
    __swig_getmethods__["TraderOfferID"] = _sptraderapi.CTORATstpSPReqInsExchRtnSeqField_TraderOfferID_get
    if _newclass:
        TraderOfferID = _swig_property(_sptraderapi.CTORATstpSPReqInsExchRtnSeqField_TraderOfferID_get, _sptraderapi.CTORATstpSPReqInsExchRtnSeqField_TraderOfferID_set)

	# 平台分区号(上证报单回报分区号为1，成交回报分区号为2)
    __swig_setmethods__["PartitionNo"] = _sptraderapi.CTORATstpSPReqInsExchRtnSeqField_PartitionNo_set
    __swig_getmethods__["PartitionNo"] = _sptraderapi.CTORATstpSPReqInsExchRtnSeqField_PartitionNo_get
    if _newclass:
        PartitionNo = _swig_property(_sptraderapi.CTORATstpSPReqInsExchRtnSeqField_PartitionNo_get, _sptraderapi.CTORATstpSPReqInsExchRtnSeqField_PartitionNo_set)

	# 回报序号
    __swig_setmethods__["SequenceNo"] = _sptraderapi.CTORATstpSPReqInsExchRtnSeqField_SequenceNo_set
    __swig_getmethods__["SequenceNo"] = _sptraderapi.CTORATstpSPReqInsExchRtnSeqField_SequenceNo_get
    if _newclass:
        SequenceNo = _swig_property(_sptraderapi.CTORATstpSPReqInsExchRtnSeqField_SequenceNo_get, _sptraderapi.CTORATstpSPReqInsExchRtnSeqField_SequenceNo_set)

	# 上证最大委托记录号
    __swig_setmethods__["MaxRecNum"] = _sptraderapi.CTORATstpSPReqInsExchRtnSeqField_MaxRecNum_set
    __swig_getmethods__["MaxRecNum"] = _sptraderapi.CTORATstpSPReqInsExchRtnSeqField_MaxRecNum_get
    if _newclass:
        MaxRecNum = _swig_property(_sptraderapi.CTORATstpSPReqInsExchRtnSeqField_MaxRecNum_get, _sptraderapi.CTORATstpSPReqInsExchRtnSeqField_MaxRecNum_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsExchRtnSeqField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsExchRtnSeqField
    __del__ = lambda self: None
CTORATstpSPReqInsExchRtnSeqField_swigregister = _sptraderapi.CTORATstpSPReqInsExchRtnSeqField_swigregister
CTORATstpSPReqInsExchRtnSeqField_swigregister(CTORATstpSPReqInsExchRtnSeqField)




#########################################请求更新ExchRtnSeq############################################
class CTORATstpSPReqUpdExchRtnSeqField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdExchRtnSeqField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdExchRtnSeqField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdExchRtnSeqField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdExchRtnSeqField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqUpdExchRtnSeqField_ExchangeID_get, _sptraderapi.CTORATstpSPReqUpdExchRtnSeqField_ExchangeID_set)

	# 交易报盘编号
    __swig_setmethods__["TraderOfferID"] = _sptraderapi.CTORATstpSPReqUpdExchRtnSeqField_TraderOfferID_set
    __swig_getmethods__["TraderOfferID"] = _sptraderapi.CTORATstpSPReqUpdExchRtnSeqField_TraderOfferID_get
    if _newclass:
        TraderOfferID = _swig_property(_sptraderapi.CTORATstpSPReqUpdExchRtnSeqField_TraderOfferID_get, _sptraderapi.CTORATstpSPReqUpdExchRtnSeqField_TraderOfferID_set)

	# 平台分区号(上证报单回报分区号为1，成交回报分区号为2)
    __swig_setmethods__["PartitionNo"] = _sptraderapi.CTORATstpSPReqUpdExchRtnSeqField_PartitionNo_set
    __swig_getmethods__["PartitionNo"] = _sptraderapi.CTORATstpSPReqUpdExchRtnSeqField_PartitionNo_get
    if _newclass:
        PartitionNo = _swig_property(_sptraderapi.CTORATstpSPReqUpdExchRtnSeqField_PartitionNo_get, _sptraderapi.CTORATstpSPReqUpdExchRtnSeqField_PartitionNo_set)

	# 回报序号
    __swig_setmethods__["SequenceNo"] = _sptraderapi.CTORATstpSPReqUpdExchRtnSeqField_SequenceNo_set
    __swig_getmethods__["SequenceNo"] = _sptraderapi.CTORATstpSPReqUpdExchRtnSeqField_SequenceNo_get
    if _newclass:
        SequenceNo = _swig_property(_sptraderapi.CTORATstpSPReqUpdExchRtnSeqField_SequenceNo_get, _sptraderapi.CTORATstpSPReqUpdExchRtnSeqField_SequenceNo_set)

	# 上证最大委托记录号
    __swig_setmethods__["MaxRecNum"] = _sptraderapi.CTORATstpSPReqUpdExchRtnSeqField_MaxRecNum_set
    __swig_getmethods__["MaxRecNum"] = _sptraderapi.CTORATstpSPReqUpdExchRtnSeqField_MaxRecNum_get
    if _newclass:
        MaxRecNum = _swig_property(_sptraderapi.CTORATstpSPReqUpdExchRtnSeqField_MaxRecNum_get, _sptraderapi.CTORATstpSPReqUpdExchRtnSeqField_MaxRecNum_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdExchRtnSeqField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdExchRtnSeqField
    __del__ = lambda self: None
CTORATstpSPReqUpdExchRtnSeqField_swigregister = _sptraderapi.CTORATstpSPReqUpdExchRtnSeqField_swigregister
CTORATstpSPReqUpdExchRtnSeqField_swigregister(CTORATstpSPReqUpdExchRtnSeqField)




#########################################请求删除ExchRtnSeq############################################
class CTORATstpSPReqDelExchRtnSeqField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelExchRtnSeqField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelExchRtnSeqField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelExchRtnSeqField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelExchRtnSeqField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqDelExchRtnSeqField_ExchangeID_get, _sptraderapi.CTORATstpSPReqDelExchRtnSeqField_ExchangeID_set)

	# 交易报盘编号
    __swig_setmethods__["TraderOfferID"] = _sptraderapi.CTORATstpSPReqDelExchRtnSeqField_TraderOfferID_set
    __swig_getmethods__["TraderOfferID"] = _sptraderapi.CTORATstpSPReqDelExchRtnSeqField_TraderOfferID_get
    if _newclass:
        TraderOfferID = _swig_property(_sptraderapi.CTORATstpSPReqDelExchRtnSeqField_TraderOfferID_get, _sptraderapi.CTORATstpSPReqDelExchRtnSeqField_TraderOfferID_set)

	# 平台分区号(上证报单回报分区号为1，成交回报分区号为2)
    __swig_setmethods__["PartitionNo"] = _sptraderapi.CTORATstpSPReqDelExchRtnSeqField_PartitionNo_set
    __swig_getmethods__["PartitionNo"] = _sptraderapi.CTORATstpSPReqDelExchRtnSeqField_PartitionNo_get
    if _newclass:
        PartitionNo = _swig_property(_sptraderapi.CTORATstpSPReqDelExchRtnSeqField_PartitionNo_get, _sptraderapi.CTORATstpSPReqDelExchRtnSeqField_PartitionNo_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelExchRtnSeqField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelExchRtnSeqField
    __del__ = lambda self: None
CTORATstpSPReqDelExchRtnSeqField_swigregister = _sptraderapi.CTORATstpSPReqDelExchRtnSeqField_swigregister
CTORATstpSPReqDelExchRtnSeqField_swigregister(CTORATstpSPReqDelExchRtnSeqField)




#########################################请求插入ExerciseAppointment############################################
class CTORATstpSPReqInsExerciseAppointmentField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsExerciseAppointmentField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsExerciseAppointmentField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_InvestorID_get, _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_BusinessUnitID_get, _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_BusinessUnitID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_ExchangeID_get, _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_ExchangeID_set)

	# 行权日期
    __swig_setmethods__["ExerciseDay"] = _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_ExerciseDay_set
    __swig_getmethods__["ExerciseDay"] = _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_ExerciseDay_get
    if _newclass:
        ExerciseDay = _swig_property(_sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_ExerciseDay_get, _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_ExerciseDay_set)

	# 交易单元代码
    __swig_setmethods__["PbuID"] = _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_PbuID_set
    __swig_getmethods__["PbuID"] = _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_PbuID_get
    if _newclass:
        PbuID = _swig_property(_sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_PbuID_get, _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_PbuID_set)

	# 客户在系统中的编号，编号唯一且遵循交易所制定的编码规则
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_ShareholderID_get, _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_ShareholderID_set)

	# 资金账户
    __swig_setmethods__["AccountID"] = _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_AccountID_set
    __swig_getmethods__["AccountID"] = _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_AccountID_get, _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_AccountID_set)

	# 币种
    __swig_setmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_CurrencyID_get, _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_CurrencyID_set)

	# 合约在系统中的编号
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_SecurityID_get, _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_SecurityID_set)

	# 看涨、看跌
    __swig_setmethods__["OptionsType"] = _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_OptionsType_set
    __swig_getmethods__["OptionsType"] = _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_OptionsType_get
    if _newclass:
        OptionsType = _swig_property(_sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_OptionsType_get, _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_OptionsType_set)

	# 一张合约对应的标的数量
    __swig_setmethods__["OptionUnit"] = _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_OptionUnit_set
    __swig_getmethods__["OptionUnit"] = _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_OptionUnit_get
    if _newclass:
        OptionUnit = _swig_property(_sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_OptionUnit_get, _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_OptionUnit_set)

	# 基础证券代码
    __swig_setmethods__["UnderlyingSecurityID"] = _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_UnderlyingSecurityID_set
    __swig_getmethods__["UnderlyingSecurityID"] = _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_UnderlyingSecurityID_get
    if _newclass:
        UnderlyingSecurityID = _swig_property(_sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_UnderlyingSecurityID_get, _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_UnderlyingSecurityID_set)

	# 行权数量
    __swig_setmethods__["ExerciseVolume"] = _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_ExerciseVolume_set
    __swig_getmethods__["ExerciseVolume"] = _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_ExerciseVolume_get
    if _newclass:
        ExerciseVolume = _swig_property(_sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_ExerciseVolume_get, _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_ExerciseVolume_set)

	# 行权价
    __swig_setmethods__["ExercisePrice"] = _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_ExercisePrice_set
    __swig_getmethods__["ExercisePrice"] = _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_ExercisePrice_get
    if _newclass:
        ExercisePrice = _swig_property(_sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_ExercisePrice_get, _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_ExercisePrice_set)

	# 行权方向
    __swig_setmethods__["ExerciseDirection"] = _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_ExerciseDirection_set
    __swig_getmethods__["ExerciseDirection"] = _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_ExerciseDirection_get
    if _newclass:
        ExerciseDirection = _swig_property(_sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_ExerciseDirection_get, _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_ExerciseDirection_set)

	# 备兑标志
    __swig_setmethods__["CoverFlag"] = _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_CoverFlag_set
    __swig_getmethods__["CoverFlag"] = _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_CoverFlag_get
    if _newclass:
        CoverFlag = _swig_property(_sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_CoverFlag_get, _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_CoverFlag_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsExerciseAppointmentField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsExerciseAppointmentField
    __del__ = lambda self: None
CTORATstpSPReqInsExerciseAppointmentField_swigregister = _sptraderapi.CTORATstpSPReqInsExerciseAppointmentField_swigregister
CTORATstpSPReqInsExerciseAppointmentField_swigregister(CTORATstpSPReqInsExerciseAppointmentField)




#########################################请求更新ExerciseAppointment############################################
class CTORATstpSPReqUpdExerciseAppointmentField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdExerciseAppointmentField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdExerciseAppointmentField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_InvestorID_get, _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_BusinessUnitID_get, _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_BusinessUnitID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_ExchangeID_get, _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_ExchangeID_set)

	# 行权日期
    __swig_setmethods__["ExerciseDay"] = _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_ExerciseDay_set
    __swig_getmethods__["ExerciseDay"] = _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_ExerciseDay_get
    if _newclass:
        ExerciseDay = _swig_property(_sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_ExerciseDay_get, _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_ExerciseDay_set)

	# 交易单元代码
    __swig_setmethods__["PbuID"] = _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_PbuID_set
    __swig_getmethods__["PbuID"] = _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_PbuID_get
    if _newclass:
        PbuID = _swig_property(_sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_PbuID_get, _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_PbuID_set)

	# 客户在系统中的编号，编号唯一且遵循交易所制定的编码规则
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_ShareholderID_get, _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_ShareholderID_set)

	# 资金账户
    __swig_setmethods__["AccountID"] = _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_AccountID_set
    __swig_getmethods__["AccountID"] = _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_AccountID_get, _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_AccountID_set)

	# 币种
    __swig_setmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_CurrencyID_get, _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_CurrencyID_set)

	# 合约在系统中的编号
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_SecurityID_get, _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_SecurityID_set)

	# 看涨、看跌
    __swig_setmethods__["OptionsType"] = _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_OptionsType_set
    __swig_getmethods__["OptionsType"] = _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_OptionsType_get
    if _newclass:
        OptionsType = _swig_property(_sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_OptionsType_get, _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_OptionsType_set)

	# 一张合约对应的标的数量
    __swig_setmethods__["OptionUnit"] = _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_OptionUnit_set
    __swig_getmethods__["OptionUnit"] = _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_OptionUnit_get
    if _newclass:
        OptionUnit = _swig_property(_sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_OptionUnit_get, _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_OptionUnit_set)

	# 基础证券代码
    __swig_setmethods__["UnderlyingSecurityID"] = _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_UnderlyingSecurityID_set
    __swig_getmethods__["UnderlyingSecurityID"] = _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_UnderlyingSecurityID_get
    if _newclass:
        UnderlyingSecurityID = _swig_property(_sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_UnderlyingSecurityID_get, _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_UnderlyingSecurityID_set)

	# 行权数量
    __swig_setmethods__["ExerciseVolume"] = _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_ExerciseVolume_set
    __swig_getmethods__["ExerciseVolume"] = _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_ExerciseVolume_get
    if _newclass:
        ExerciseVolume = _swig_property(_sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_ExerciseVolume_get, _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_ExerciseVolume_set)

	# 行权价
    __swig_setmethods__["ExercisePrice"] = _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_ExercisePrice_set
    __swig_getmethods__["ExercisePrice"] = _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_ExercisePrice_get
    if _newclass:
        ExercisePrice = _swig_property(_sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_ExercisePrice_get, _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_ExercisePrice_set)

	# 行权方向
    __swig_setmethods__["ExerciseDirection"] = _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_ExerciseDirection_set
    __swig_getmethods__["ExerciseDirection"] = _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_ExerciseDirection_get
    if _newclass:
        ExerciseDirection = _swig_property(_sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_ExerciseDirection_get, _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_ExerciseDirection_set)

	# 备兑标志
    __swig_setmethods__["CoverFlag"] = _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_CoverFlag_set
    __swig_getmethods__["CoverFlag"] = _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_CoverFlag_get
    if _newclass:
        CoverFlag = _swig_property(_sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_CoverFlag_get, _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_CoverFlag_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdExerciseAppointmentField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdExerciseAppointmentField
    __del__ = lambda self: None
CTORATstpSPReqUpdExerciseAppointmentField_swigregister = _sptraderapi.CTORATstpSPReqUpdExerciseAppointmentField_swigregister
CTORATstpSPReqUpdExerciseAppointmentField_swigregister(CTORATstpSPReqUpdExerciseAppointmentField)




#########################################请求删除ExerciseAppointment############################################
class CTORATstpSPReqDelExerciseAppointmentField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelExerciseAppointmentField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelExerciseAppointmentField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelExerciseAppointmentField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelExerciseAppointmentField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqDelExerciseAppointmentField_ExchangeID_get, _sptraderapi.CTORATstpSPReqDelExerciseAppointmentField_ExchangeID_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqDelExerciseAppointmentField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqDelExerciseAppointmentField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqDelExerciseAppointmentField_InvestorID_get, _sptraderapi.CTORATstpSPReqDelExerciseAppointmentField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPReqDelExerciseAppointmentField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPReqDelExerciseAppointmentField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPReqDelExerciseAppointmentField_BusinessUnitID_get, _sptraderapi.CTORATstpSPReqDelExerciseAppointmentField_BusinessUnitID_set)

	# 行权日期
    __swig_setmethods__["ExerciseDay"] = _sptraderapi.CTORATstpSPReqDelExerciseAppointmentField_ExerciseDay_set
    __swig_getmethods__["ExerciseDay"] = _sptraderapi.CTORATstpSPReqDelExerciseAppointmentField_ExerciseDay_get
    if _newclass:
        ExerciseDay = _swig_property(_sptraderapi.CTORATstpSPReqDelExerciseAppointmentField_ExerciseDay_get, _sptraderapi.CTORATstpSPReqDelExerciseAppointmentField_ExerciseDay_set)

	# 交易单元代码
    __swig_setmethods__["PbuID"] = _sptraderapi.CTORATstpSPReqDelExerciseAppointmentField_PbuID_set
    __swig_getmethods__["PbuID"] = _sptraderapi.CTORATstpSPReqDelExerciseAppointmentField_PbuID_get
    if _newclass:
        PbuID = _swig_property(_sptraderapi.CTORATstpSPReqDelExerciseAppointmentField_PbuID_get, _sptraderapi.CTORATstpSPReqDelExerciseAppointmentField_PbuID_set)

	# 合约在系统中的编号
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqDelExerciseAppointmentField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqDelExerciseAppointmentField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqDelExerciseAppointmentField_SecurityID_get, _sptraderapi.CTORATstpSPReqDelExerciseAppointmentField_SecurityID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelExerciseAppointmentField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelExerciseAppointmentField
    __del__ = lambda self: None
CTORATstpSPReqDelExerciseAppointmentField_swigregister = _sptraderapi.CTORATstpSPReqDelExerciseAppointmentField_swigregister
CTORATstpSPReqDelExerciseAppointmentField_swigregister(CTORATstpSPReqDelExerciseAppointmentField)




#########################################请求插入InvestorLimitPosition############################################
class CTORATstpSPReqInsInvestorLimitPositionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsInvestorLimitPositionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsInvestorLimitPositionField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_InvestorID_get, _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_InvestorID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_ExchangeID_get, _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_ExchangeID_set)

	# 标的证券代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_SecurityID_get, _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_SecurityID_set)

	# 总持仓限额
    __swig_setmethods__["TotalPositionLimit"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_TotalPositionLimit_set
    __swig_getmethods__["TotalPositionLimit"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_TotalPositionLimit_get
    if _newclass:
        TotalPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_TotalPositionLimit_get, _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_TotalPositionLimit_set)

	# 多头持仓限额
    __swig_setmethods__["LongPositionLimit"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_LongPositionLimit_set
    __swig_getmethods__["LongPositionLimit"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_LongPositionLimit_get
    if _newclass:
        LongPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_LongPositionLimit_get, _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_LongPositionLimit_set)

	# 单日买入开仓限额
    __swig_setmethods__["TodayBuyOpenLimit"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_TodayBuyOpenLimit_set
    __swig_getmethods__["TodayBuyOpenLimit"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_TodayBuyOpenLimit_get
    if _newclass:
        TodayBuyOpenLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_TodayBuyOpenLimit_get, _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_TodayBuyOpenLimit_set)

	# 单日卖出开仓限额
    __swig_setmethods__["TodaySellOpenLimit"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_TodaySellOpenLimit_set
    __swig_getmethods__["TodaySellOpenLimit"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_TodaySellOpenLimit_get
    if _newclass:
        TodaySellOpenLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_TodaySellOpenLimit_get, _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_TodaySellOpenLimit_set)

	# 单日备兑开仓限额
    __swig_setmethods__["TodayCoveredOpenLimit"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_TodayCoveredOpenLimit_set
    __swig_getmethods__["TodayCoveredOpenLimit"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_TodayCoveredOpenLimit_get
    if _newclass:
        TodayCoveredOpenLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_TodayCoveredOpenLimit_get, _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_TodayCoveredOpenLimit_set)

	# 单日开仓限额
    __swig_setmethods__["TodayOpenLimit"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_TodayOpenLimit_set
    __swig_getmethods__["TodayOpenLimit"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_TodayOpenLimit_get
    if _newclass:
        TodayOpenLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_TodayOpenLimit_get, _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_TodayOpenLimit_set)

	# 认购多头持仓限额
    __swig_setmethods__["LongCallPositionLimit"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_LongCallPositionLimit_set
    __swig_getmethods__["LongCallPositionLimit"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_LongCallPositionLimit_get
    if _newclass:
        LongCallPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_LongCallPositionLimit_get, _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_LongCallPositionLimit_set)

	# 认沽多头持仓限额
    __swig_setmethods__["LongPutPositionLimit"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_LongPutPositionLimit_set
    __swig_getmethods__["LongPutPositionLimit"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_LongPutPositionLimit_get
    if _newclass:
        LongPutPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_LongPutPositionLimit_get, _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_LongPutPositionLimit_set)

	# 标的多头持仓限额
    __swig_setmethods__["LongUnderlyingPositionLimit"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_LongUnderlyingPositionLimit_set
    __swig_getmethods__["LongUnderlyingPositionLimit"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_LongUnderlyingPositionLimit_get
    if _newclass:
        LongUnderlyingPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_LongUnderlyingPositionLimit_get, _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_LongUnderlyingPositionLimit_set)

	# 标的空头持仓限额
    __swig_setmethods__["ShortUnderlyingPositionLimit"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_ShortUnderlyingPositionLimit_set
    __swig_getmethods__["ShortUnderlyingPositionLimit"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_ShortUnderlyingPositionLimit_get
    if _newclass:
        ShortUnderlyingPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_ShortUnderlyingPositionLimit_get, _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_ShortUnderlyingPositionLimit_set)

	# 总持仓冻结额度
    __swig_setmethods__["TotalPositionFrozen"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_TotalPositionFrozen_set
    __swig_getmethods__["TotalPositionFrozen"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_TotalPositionFrozen_get
    if _newclass:
        TotalPositionFrozen = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_TotalPositionFrozen_get, _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_TotalPositionFrozen_set)

	# 多头持仓冻结额度
    __swig_setmethods__["LongPositionFrozen"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_LongPositionFrozen_set
    __swig_getmethods__["LongPositionFrozen"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_LongPositionFrozen_get
    if _newclass:
        LongPositionFrozen = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_LongPositionFrozen_get, _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_LongPositionFrozen_set)

	# 单日买入开仓冻结额度
    __swig_setmethods__["TodayBuyOpenFrozen"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_TodayBuyOpenFrozen_set
    __swig_getmethods__["TodayBuyOpenFrozen"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_TodayBuyOpenFrozen_get
    if _newclass:
        TodayBuyOpenFrozen = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_TodayBuyOpenFrozen_get, _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_TodayBuyOpenFrozen_set)

	# 单日卖出开仓冻结额度
    __swig_setmethods__["TodaySellOpenFrozen"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_TodaySellOpenFrozen_set
    __swig_getmethods__["TodaySellOpenFrozen"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_TodaySellOpenFrozen_get
    if _newclass:
        TodaySellOpenFrozen = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_TodaySellOpenFrozen_get, _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_TodaySellOpenFrozen_set)

	# 单日备兑开仓冻结额度
    __swig_setmethods__["TodayCoveredOpenFrozen"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_TodayCoveredOpenFrozen_set
    __swig_getmethods__["TodayCoveredOpenFrozen"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_TodayCoveredOpenFrozen_get
    if _newclass:
        TodayCoveredOpenFrozen = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_TodayCoveredOpenFrozen_get, _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_TodayCoveredOpenFrozen_set)

	# 单日开仓冻结额度
    __swig_setmethods__["TodayOpenFrozen"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_TodayOpenFrozen_set
    __swig_getmethods__["TodayOpenFrozen"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_TodayOpenFrozen_get
    if _newclass:
        TodayOpenFrozen = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_TodayOpenFrozen_get, _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_TodayOpenFrozen_set)

	# 认购多头持仓冻结额度
    __swig_setmethods__["LongCallPositionFrozen"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_LongCallPositionFrozen_set
    __swig_getmethods__["LongCallPositionFrozen"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_LongCallPositionFrozen_get
    if _newclass:
        LongCallPositionFrozen = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_LongCallPositionFrozen_get, _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_LongCallPositionFrozen_set)

	# 认沽多头持仓冻结额度
    __swig_setmethods__["LongPutPositionFrozen"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_LongPutPositionFrozen_set
    __swig_getmethods__["LongPutPositionFrozen"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_LongPutPositionFrozen_get
    if _newclass:
        LongPutPositionFrozen = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_LongPutPositionFrozen_get, _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_LongPutPositionFrozen_set)

	# 标的多头持仓冻结额度
    __swig_setmethods__["LongUnderlyingPositionFrozen"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_LongUnderlyingPositionFrozen_set
    __swig_getmethods__["LongUnderlyingPositionFrozen"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_LongUnderlyingPositionFrozen_get
    if _newclass:
        LongUnderlyingPositionFrozen = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_LongUnderlyingPositionFrozen_get, _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_LongUnderlyingPositionFrozen_set)

	# 标的空头持仓冻结额度
    __swig_setmethods__["ShortUnderlyingPositionFrozen"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_ShortUnderlyingPositionFrozen_set
    __swig_getmethods__["ShortUnderlyingPositionFrozen"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_ShortUnderlyingPositionFrozen_get
    if _newclass:
        ShortUnderlyingPositionFrozen = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_ShortUnderlyingPositionFrozen_get, _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_ShortUnderlyingPositionFrozen_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsInvestorLimitPositionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsInvestorLimitPositionField
    __del__ = lambda self: None
CTORATstpSPReqInsInvestorLimitPositionField_swigregister = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionField_swigregister
CTORATstpSPReqInsInvestorLimitPositionField_swigregister(CTORATstpSPReqInsInvestorLimitPositionField)




#########################################请求更新InvestorLimitPosition############################################
class CTORATstpSPReqUpdInvestorLimitPositionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdInvestorLimitPositionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdInvestorLimitPositionField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_InvestorID_get, _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_InvestorID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_ExchangeID_get, _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_ExchangeID_set)

	# 标的证券代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_SecurityID_get, _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_SecurityID_set)

	# 总持仓限额
    __swig_setmethods__["TotalPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_TotalPositionLimit_set
    __swig_getmethods__["TotalPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_TotalPositionLimit_get
    if _newclass:
        TotalPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_TotalPositionLimit_get, _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_TotalPositionLimit_set)

	# 多头持仓限额
    __swig_setmethods__["LongPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_LongPositionLimit_set
    __swig_getmethods__["LongPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_LongPositionLimit_get
    if _newclass:
        LongPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_LongPositionLimit_get, _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_LongPositionLimit_set)

	# 单日买入开仓限额
    __swig_setmethods__["TodayBuyOpenLimit"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_TodayBuyOpenLimit_set
    __swig_getmethods__["TodayBuyOpenLimit"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_TodayBuyOpenLimit_get
    if _newclass:
        TodayBuyOpenLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_TodayBuyOpenLimit_get, _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_TodayBuyOpenLimit_set)

	# 单日卖出开仓限额
    __swig_setmethods__["TodaySellOpenLimit"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_TodaySellOpenLimit_set
    __swig_getmethods__["TodaySellOpenLimit"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_TodaySellOpenLimit_get
    if _newclass:
        TodaySellOpenLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_TodaySellOpenLimit_get, _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_TodaySellOpenLimit_set)

	# 单日备兑开仓限额
    __swig_setmethods__["TodayCoveredOpenLimit"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_TodayCoveredOpenLimit_set
    __swig_getmethods__["TodayCoveredOpenLimit"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_TodayCoveredOpenLimit_get
    if _newclass:
        TodayCoveredOpenLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_TodayCoveredOpenLimit_get, _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_TodayCoveredOpenLimit_set)

	# 单日开仓限额
    __swig_setmethods__["TodayOpenLimit"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_TodayOpenLimit_set
    __swig_getmethods__["TodayOpenLimit"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_TodayOpenLimit_get
    if _newclass:
        TodayOpenLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_TodayOpenLimit_get, _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_TodayOpenLimit_set)

	# 认购多头持仓限额
    __swig_setmethods__["LongCallPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_LongCallPositionLimit_set
    __swig_getmethods__["LongCallPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_LongCallPositionLimit_get
    if _newclass:
        LongCallPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_LongCallPositionLimit_get, _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_LongCallPositionLimit_set)

	# 认沽多头持仓限额
    __swig_setmethods__["LongPutPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_LongPutPositionLimit_set
    __swig_getmethods__["LongPutPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_LongPutPositionLimit_get
    if _newclass:
        LongPutPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_LongPutPositionLimit_get, _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_LongPutPositionLimit_set)

	# 标的多头持仓限额
    __swig_setmethods__["LongUnderlyingPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_LongUnderlyingPositionLimit_set
    __swig_getmethods__["LongUnderlyingPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_LongUnderlyingPositionLimit_get
    if _newclass:
        LongUnderlyingPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_LongUnderlyingPositionLimit_get, _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_LongUnderlyingPositionLimit_set)

	# 标的空头持仓限额
    __swig_setmethods__["ShortUnderlyingPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_ShortUnderlyingPositionLimit_set
    __swig_getmethods__["ShortUnderlyingPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_ShortUnderlyingPositionLimit_get
    if _newclass:
        ShortUnderlyingPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_ShortUnderlyingPositionLimit_get, _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_ShortUnderlyingPositionLimit_set)

	# 总持仓冻结额度
    __swig_setmethods__["TotalPositionFrozen"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_TotalPositionFrozen_set
    __swig_getmethods__["TotalPositionFrozen"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_TotalPositionFrozen_get
    if _newclass:
        TotalPositionFrozen = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_TotalPositionFrozen_get, _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_TotalPositionFrozen_set)

	# 多头持仓冻结额度
    __swig_setmethods__["LongPositionFrozen"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_LongPositionFrozen_set
    __swig_getmethods__["LongPositionFrozen"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_LongPositionFrozen_get
    if _newclass:
        LongPositionFrozen = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_LongPositionFrozen_get, _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_LongPositionFrozen_set)

	# 单日买入开仓冻结额度
    __swig_setmethods__["TodayBuyOpenFrozen"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_TodayBuyOpenFrozen_set
    __swig_getmethods__["TodayBuyOpenFrozen"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_TodayBuyOpenFrozen_get
    if _newclass:
        TodayBuyOpenFrozen = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_TodayBuyOpenFrozen_get, _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_TodayBuyOpenFrozen_set)

	# 单日卖出开仓冻结额度
    __swig_setmethods__["TodaySellOpenFrozen"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_TodaySellOpenFrozen_set
    __swig_getmethods__["TodaySellOpenFrozen"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_TodaySellOpenFrozen_get
    if _newclass:
        TodaySellOpenFrozen = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_TodaySellOpenFrozen_get, _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_TodaySellOpenFrozen_set)

	# 单日备兑开仓冻结额度
    __swig_setmethods__["TodayCoveredOpenFrozen"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_TodayCoveredOpenFrozen_set
    __swig_getmethods__["TodayCoveredOpenFrozen"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_TodayCoveredOpenFrozen_get
    if _newclass:
        TodayCoveredOpenFrozen = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_TodayCoveredOpenFrozen_get, _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_TodayCoveredOpenFrozen_set)

	# 单日开仓冻结额度
    __swig_setmethods__["TodayOpenFrozen"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_TodayOpenFrozen_set
    __swig_getmethods__["TodayOpenFrozen"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_TodayOpenFrozen_get
    if _newclass:
        TodayOpenFrozen = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_TodayOpenFrozen_get, _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_TodayOpenFrozen_set)

	# 认购多头持仓冻结额度
    __swig_setmethods__["LongCallPositionFrozen"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_LongCallPositionFrozen_set
    __swig_getmethods__["LongCallPositionFrozen"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_LongCallPositionFrozen_get
    if _newclass:
        LongCallPositionFrozen = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_LongCallPositionFrozen_get, _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_LongCallPositionFrozen_set)

	# 认沽多头持仓冻结额度
    __swig_setmethods__["LongPutPositionFrozen"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_LongPutPositionFrozen_set
    __swig_getmethods__["LongPutPositionFrozen"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_LongPutPositionFrozen_get
    if _newclass:
        LongPutPositionFrozen = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_LongPutPositionFrozen_get, _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_LongPutPositionFrozen_set)

	# 标的多头持仓冻结额度
    __swig_setmethods__["LongUnderlyingPositionFrozen"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_LongUnderlyingPositionFrozen_set
    __swig_getmethods__["LongUnderlyingPositionFrozen"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_LongUnderlyingPositionFrozen_get
    if _newclass:
        LongUnderlyingPositionFrozen = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_LongUnderlyingPositionFrozen_get, _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_LongUnderlyingPositionFrozen_set)

	# 标的空头持仓冻结额度
    __swig_setmethods__["ShortUnderlyingPositionFrozen"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_ShortUnderlyingPositionFrozen_set
    __swig_getmethods__["ShortUnderlyingPositionFrozen"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_ShortUnderlyingPositionFrozen_get
    if _newclass:
        ShortUnderlyingPositionFrozen = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_ShortUnderlyingPositionFrozen_get, _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_ShortUnderlyingPositionFrozen_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdInvestorLimitPositionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdInvestorLimitPositionField
    __del__ = lambda self: None
CTORATstpSPReqUpdInvestorLimitPositionField_swigregister = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionField_swigregister
CTORATstpSPReqUpdInvestorLimitPositionField_swigregister(CTORATstpSPReqUpdInvestorLimitPositionField)




#########################################请求删除InvestorLimitPosition############################################
class CTORATstpSPReqDelInvestorLimitPositionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelInvestorLimitPositionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelInvestorLimitPositionField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelInvestorLimitPositionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelInvestorLimitPositionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqDelInvestorLimitPositionField_ExchangeID_get, _sptraderapi.CTORATstpSPReqDelInvestorLimitPositionField_ExchangeID_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqDelInvestorLimitPositionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqDelInvestorLimitPositionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqDelInvestorLimitPositionField_InvestorID_get, _sptraderapi.CTORATstpSPReqDelInvestorLimitPositionField_InvestorID_set)

	# 标的证券代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqDelInvestorLimitPositionField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqDelInvestorLimitPositionField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqDelInvestorLimitPositionField_SecurityID_get, _sptraderapi.CTORATstpSPReqDelInvestorLimitPositionField_SecurityID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelInvestorLimitPositionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelInvestorLimitPositionField
    __del__ = lambda self: None
CTORATstpSPReqDelInvestorLimitPositionField_swigregister = _sptraderapi.CTORATstpSPReqDelInvestorLimitPositionField_swigregister
CTORATstpSPReqDelInvestorLimitPositionField_swigregister(CTORATstpSPReqDelInvestorLimitPositionField)




#########################################请求插入InvestorLimitPositionParam############################################
class CTORATstpSPReqInsInvestorLimitPositionParamField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsInvestorLimitPositionParamField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsInvestorLimitPositionParamField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_InvestorID_get, _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_InvestorID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_ExchangeID_get, _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_ExchangeID_set)

	# 证券市场中的具体品种，如上海股票
    __swig_setmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_ProductID_set
    __swig_getmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_ProductID_get, _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_ProductID_set)

	# 标的证券代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_SecurityID_get, _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_SecurityID_set)

	# 总持仓限额
    __swig_setmethods__["TotalPositionLimit"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_TotalPositionLimit_set
    __swig_getmethods__["TotalPositionLimit"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_TotalPositionLimit_get
    if _newclass:
        TotalPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_TotalPositionLimit_get, _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_TotalPositionLimit_set)

	# 多头持仓限额
    __swig_setmethods__["LongPositionLimit"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_LongPositionLimit_set
    __swig_getmethods__["LongPositionLimit"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_LongPositionLimit_get
    if _newclass:
        LongPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_LongPositionLimit_get, _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_LongPositionLimit_set)

	# 单日买入开仓限额
    __swig_setmethods__["TodayBuyOpenLimit"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_TodayBuyOpenLimit_set
    __swig_getmethods__["TodayBuyOpenLimit"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_TodayBuyOpenLimit_get
    if _newclass:
        TodayBuyOpenLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_TodayBuyOpenLimit_get, _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_TodayBuyOpenLimit_set)

	# 单日卖出开仓限额
    __swig_setmethods__["TodaySellOpenLimit"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_TodaySellOpenLimit_set
    __swig_getmethods__["TodaySellOpenLimit"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_TodaySellOpenLimit_get
    if _newclass:
        TodaySellOpenLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_TodaySellOpenLimit_get, _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_TodaySellOpenLimit_set)

	# 单日备兑开仓限额
    __swig_setmethods__["TodayCoveredOpenLimit"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_TodayCoveredOpenLimit_set
    __swig_getmethods__["TodayCoveredOpenLimit"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_TodayCoveredOpenLimit_get
    if _newclass:
        TodayCoveredOpenLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_TodayCoveredOpenLimit_get, _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_TodayCoveredOpenLimit_set)

	# 单日开仓限额
    __swig_setmethods__["TodayOpenLimit"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_TodayOpenLimit_set
    __swig_getmethods__["TodayOpenLimit"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_TodayOpenLimit_get
    if _newclass:
        TodayOpenLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_TodayOpenLimit_get, _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_TodayOpenLimit_set)

	# 认购多头持仓限额
    __swig_setmethods__["LongCallPositionLimit"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_LongCallPositionLimit_set
    __swig_getmethods__["LongCallPositionLimit"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_LongCallPositionLimit_get
    if _newclass:
        LongCallPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_LongCallPositionLimit_get, _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_LongCallPositionLimit_set)

	# 认沽多头持仓限额
    __swig_setmethods__["LongPutPositionLimit"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_LongPutPositionLimit_set
    __swig_getmethods__["LongPutPositionLimit"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_LongPutPositionLimit_get
    if _newclass:
        LongPutPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_LongPutPositionLimit_get, _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_LongPutPositionLimit_set)

	# 标的多头持仓限额
    __swig_setmethods__["LongUnderlyingPositionLimit"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_LongUnderlyingPositionLimit_set
    __swig_getmethods__["LongUnderlyingPositionLimit"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_LongUnderlyingPositionLimit_get
    if _newclass:
        LongUnderlyingPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_LongUnderlyingPositionLimit_get, _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_LongUnderlyingPositionLimit_set)

	# 标的空头持仓限额
    __swig_setmethods__["ShortUnderlyingPositionLimit"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_ShortUnderlyingPositionLimit_set
    __swig_getmethods__["ShortUnderlyingPositionLimit"] = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_ShortUnderlyingPositionLimit_get
    if _newclass:
        ShortUnderlyingPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_ShortUnderlyingPositionLimit_get, _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_ShortUnderlyingPositionLimit_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsInvestorLimitPositionParamField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsInvestorLimitPositionParamField
    __del__ = lambda self: None
CTORATstpSPReqInsInvestorLimitPositionParamField_swigregister = _sptraderapi.CTORATstpSPReqInsInvestorLimitPositionParamField_swigregister
CTORATstpSPReqInsInvestorLimitPositionParamField_swigregister(CTORATstpSPReqInsInvestorLimitPositionParamField)




#########################################请求更新InvestorLimitPositionParam############################################
class CTORATstpSPReqUpdInvestorLimitPositionParamField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdInvestorLimitPositionParamField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdInvestorLimitPositionParamField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_InvestorID_get, _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_InvestorID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_ExchangeID_get, _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_ExchangeID_set)

	# 证券市场中的具体品种，如上海股票
    __swig_setmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_ProductID_set
    __swig_getmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_ProductID_get, _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_ProductID_set)

	# 标的证券代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_SecurityID_get, _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_SecurityID_set)

	# 总持仓限额
    __swig_setmethods__["TotalPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_TotalPositionLimit_set
    __swig_getmethods__["TotalPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_TotalPositionLimit_get
    if _newclass:
        TotalPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_TotalPositionLimit_get, _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_TotalPositionLimit_set)

	# 多头持仓限额
    __swig_setmethods__["LongPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_LongPositionLimit_set
    __swig_getmethods__["LongPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_LongPositionLimit_get
    if _newclass:
        LongPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_LongPositionLimit_get, _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_LongPositionLimit_set)

	# 单日买入开仓限额
    __swig_setmethods__["TodayBuyOpenLimit"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_TodayBuyOpenLimit_set
    __swig_getmethods__["TodayBuyOpenLimit"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_TodayBuyOpenLimit_get
    if _newclass:
        TodayBuyOpenLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_TodayBuyOpenLimit_get, _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_TodayBuyOpenLimit_set)

	# 单日卖出开仓限额
    __swig_setmethods__["TodaySellOpenLimit"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_TodaySellOpenLimit_set
    __swig_getmethods__["TodaySellOpenLimit"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_TodaySellOpenLimit_get
    if _newclass:
        TodaySellOpenLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_TodaySellOpenLimit_get, _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_TodaySellOpenLimit_set)

	# 单日备兑开仓限额
    __swig_setmethods__["TodayCoveredOpenLimit"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_TodayCoveredOpenLimit_set
    __swig_getmethods__["TodayCoveredOpenLimit"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_TodayCoveredOpenLimit_get
    if _newclass:
        TodayCoveredOpenLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_TodayCoveredOpenLimit_get, _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_TodayCoveredOpenLimit_set)

	# 单日开仓限额
    __swig_setmethods__["TodayOpenLimit"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_TodayOpenLimit_set
    __swig_getmethods__["TodayOpenLimit"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_TodayOpenLimit_get
    if _newclass:
        TodayOpenLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_TodayOpenLimit_get, _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_TodayOpenLimit_set)

	# 认购多头持仓限额
    __swig_setmethods__["LongCallPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_LongCallPositionLimit_set
    __swig_getmethods__["LongCallPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_LongCallPositionLimit_get
    if _newclass:
        LongCallPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_LongCallPositionLimit_get, _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_LongCallPositionLimit_set)

	# 认沽多头持仓限额
    __swig_setmethods__["LongPutPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_LongPutPositionLimit_set
    __swig_getmethods__["LongPutPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_LongPutPositionLimit_get
    if _newclass:
        LongPutPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_LongPutPositionLimit_get, _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_LongPutPositionLimit_set)

	# 标的多头持仓限额
    __swig_setmethods__["LongUnderlyingPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_LongUnderlyingPositionLimit_set
    __swig_getmethods__["LongUnderlyingPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_LongUnderlyingPositionLimit_get
    if _newclass:
        LongUnderlyingPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_LongUnderlyingPositionLimit_get, _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_LongUnderlyingPositionLimit_set)

	# 标的空头持仓限额
    __swig_setmethods__["ShortUnderlyingPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_ShortUnderlyingPositionLimit_set
    __swig_getmethods__["ShortUnderlyingPositionLimit"] = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_ShortUnderlyingPositionLimit_get
    if _newclass:
        ShortUnderlyingPositionLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_ShortUnderlyingPositionLimit_get, _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_ShortUnderlyingPositionLimit_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdInvestorLimitPositionParamField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdInvestorLimitPositionParamField
    __del__ = lambda self: None
CTORATstpSPReqUpdInvestorLimitPositionParamField_swigregister = _sptraderapi.CTORATstpSPReqUpdInvestorLimitPositionParamField_swigregister
CTORATstpSPReqUpdInvestorLimitPositionParamField_swigregister(CTORATstpSPReqUpdInvestorLimitPositionParamField)




#########################################请求删除InvestorLimitPositionParam############################################
class CTORATstpSPReqDelInvestorLimitPositionParamField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelInvestorLimitPositionParamField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelInvestorLimitPositionParamField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelInvestorLimitPositionParamField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelInvestorLimitPositionParamField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqDelInvestorLimitPositionParamField_ExchangeID_get, _sptraderapi.CTORATstpSPReqDelInvestorLimitPositionParamField_ExchangeID_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqDelInvestorLimitPositionParamField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqDelInvestorLimitPositionParamField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqDelInvestorLimitPositionParamField_InvestorID_get, _sptraderapi.CTORATstpSPReqDelInvestorLimitPositionParamField_InvestorID_set)

	# 证券市场中的具体品种，如上海股票
    __swig_setmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqDelInvestorLimitPositionParamField_ProductID_set
    __swig_getmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqDelInvestorLimitPositionParamField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_sptraderapi.CTORATstpSPReqDelInvestorLimitPositionParamField_ProductID_get, _sptraderapi.CTORATstpSPReqDelInvestorLimitPositionParamField_ProductID_set)

	# 标的证券代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqDelInvestorLimitPositionParamField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqDelInvestorLimitPositionParamField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqDelInvestorLimitPositionParamField_SecurityID_get, _sptraderapi.CTORATstpSPReqDelInvestorLimitPositionParamField_SecurityID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelInvestorLimitPositionParamField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelInvestorLimitPositionParamField
    __del__ = lambda self: None
CTORATstpSPReqDelInvestorLimitPositionParamField_swigregister = _sptraderapi.CTORATstpSPReqDelInvestorLimitPositionParamField_swigregister
CTORATstpSPReqDelInvestorLimitPositionParamField_swigregister(CTORATstpSPReqDelInvestorLimitPositionParamField)




#########################################请求插入InvestorMarginFee############################################
class CTORATstpSPReqInsInvestorMarginFeeField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsInvestorMarginFeeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsInvestorMarginFeeField, name)
    __repr__ = _swig_repr

	# 经纪公司部门代码
    __swig_setmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_DepartmentID_set
    __swig_getmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_DepartmentID_get
    if _newclass:
        DepartmentID = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_DepartmentID_get, _sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_DepartmentID_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_InvestorID_get, _sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_InvestorID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_ExchangeID_get, _sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_ExchangeID_set)

	# 产品代码
    __swig_setmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_ProductID_set
    __swig_getmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_ProductID_get, _sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_ProductID_set)

	# 证券类别代码
    __swig_setmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_SecurityType_set
    __swig_getmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_SecurityType_get
    if _newclass:
        SecurityType = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_SecurityType_get, _sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_SecurityType_set)

	# 合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_SecurityID_get, _sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_SecurityID_set)

	# 业务类别
    __swig_setmethods__["BusinessClass"] = _sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_BusinessClass_set
    __swig_getmethods__["BusinessClass"] = _sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_BusinessClass_get
    if _newclass:
        BusinessClass = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_BusinessClass_get, _sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_BusinessClass_set)

	# 保证金按数量收取金额
    __swig_setmethods__["FeeByVolume"] = _sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_FeeByVolume_set
    __swig_getmethods__["FeeByVolume"] = _sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_FeeByVolume_get
    if _newclass:
        FeeByVolume = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_FeeByVolume_get, _sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_FeeByVolume_set)

	# 合约标的价格调整系数
    __swig_setmethods__["PriceAdjustRatio"] = _sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_PriceAdjustRatio_set
    __swig_getmethods__["PriceAdjustRatio"] = _sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_PriceAdjustRatio_get
    if _newclass:
        PriceAdjustRatio = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_PriceAdjustRatio_get, _sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_PriceAdjustRatio_set)

	# 虚值期权优惠比率
    __swig_setmethods__["OTMPreferRatio"] = _sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_OTMPreferRatio_set
    __swig_getmethods__["OTMPreferRatio"] = _sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_OTMPreferRatio_get
    if _newclass:
        OTMPreferRatio = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_OTMPreferRatio_get, _sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_OTMPreferRatio_set)

	# 合约标的价格调整保障系数
    __swig_setmethods__["PriceAdjustGuardRatio"] = _sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_PriceAdjustGuardRatio_set
    __swig_getmethods__["PriceAdjustGuardRatio"] = _sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_PriceAdjustGuardRatio_get
    if _newclass:
        PriceAdjustGuardRatio = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_PriceAdjustGuardRatio_get, _sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_PriceAdjustGuardRatio_set)

	# 上浮比率
    __swig_setmethods__["UpperRatio"] = _sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_UpperRatio_set
    __swig_getmethods__["UpperRatio"] = _sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_UpperRatio_get
    if _newclass:
        UpperRatio = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_UpperRatio_get, _sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_UpperRatio_set)

	# 保证金模式
    __swig_setmethods__["RangeMode"] = _sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_RangeMode_set
    __swig_getmethods__["RangeMode"] = _sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_RangeMode_get
    if _newclass:
        RangeMode = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_RangeMode_get, _sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_RangeMode_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsInvestorMarginFeeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsInvestorMarginFeeField
    __del__ = lambda self: None
CTORATstpSPReqInsInvestorMarginFeeField_swigregister = _sptraderapi.CTORATstpSPReqInsInvestorMarginFeeField_swigregister
CTORATstpSPReqInsInvestorMarginFeeField_swigregister(CTORATstpSPReqInsInvestorMarginFeeField)




#########################################请求更新InvestorMarginFee############################################
class CTORATstpSPReqUpdInvestorMarginFeeField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdInvestorMarginFeeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdInvestorMarginFeeField, name)
    __repr__ = _swig_repr

	# 经纪公司部门代码
    __swig_setmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_DepartmentID_set
    __swig_getmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_DepartmentID_get
    if _newclass:
        DepartmentID = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_DepartmentID_get, _sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_DepartmentID_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_InvestorID_get, _sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_InvestorID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_ExchangeID_get, _sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_ExchangeID_set)

	# 产品代码
    __swig_setmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_ProductID_set
    __swig_getmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_ProductID_get, _sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_ProductID_set)

	# 证券类别代码
    __swig_setmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_SecurityType_set
    __swig_getmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_SecurityType_get
    if _newclass:
        SecurityType = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_SecurityType_get, _sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_SecurityType_set)

	# 合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_SecurityID_get, _sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_SecurityID_set)

	# 业务类别
    __swig_setmethods__["BusinessClass"] = _sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_BusinessClass_set
    __swig_getmethods__["BusinessClass"] = _sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_BusinessClass_get
    if _newclass:
        BusinessClass = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_BusinessClass_get, _sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_BusinessClass_set)

	# 保证金按数量收取金额
    __swig_setmethods__["FeeByVolume"] = _sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_FeeByVolume_set
    __swig_getmethods__["FeeByVolume"] = _sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_FeeByVolume_get
    if _newclass:
        FeeByVolume = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_FeeByVolume_get, _sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_FeeByVolume_set)

	# 合约标的价格调整系数
    __swig_setmethods__["PriceAdjustRatio"] = _sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_PriceAdjustRatio_set
    __swig_getmethods__["PriceAdjustRatio"] = _sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_PriceAdjustRatio_get
    if _newclass:
        PriceAdjustRatio = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_PriceAdjustRatio_get, _sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_PriceAdjustRatio_set)

	# 虚值期权优惠比率
    __swig_setmethods__["OTMPreferRatio"] = _sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_OTMPreferRatio_set
    __swig_getmethods__["OTMPreferRatio"] = _sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_OTMPreferRatio_get
    if _newclass:
        OTMPreferRatio = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_OTMPreferRatio_get, _sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_OTMPreferRatio_set)

	# 合约标的价格调整保障系数
    __swig_setmethods__["PriceAdjustGuardRatio"] = _sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_PriceAdjustGuardRatio_set
    __swig_getmethods__["PriceAdjustGuardRatio"] = _sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_PriceAdjustGuardRatio_get
    if _newclass:
        PriceAdjustGuardRatio = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_PriceAdjustGuardRatio_get, _sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_PriceAdjustGuardRatio_set)

	# 上浮比率
    __swig_setmethods__["UpperRatio"] = _sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_UpperRatio_set
    __swig_getmethods__["UpperRatio"] = _sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_UpperRatio_get
    if _newclass:
        UpperRatio = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_UpperRatio_get, _sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_UpperRatio_set)

	# 保证金模式
    __swig_setmethods__["RangeMode"] = _sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_RangeMode_set
    __swig_getmethods__["RangeMode"] = _sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_RangeMode_get
    if _newclass:
        RangeMode = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_RangeMode_get, _sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_RangeMode_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdInvestorMarginFeeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdInvestorMarginFeeField
    __del__ = lambda self: None
CTORATstpSPReqUpdInvestorMarginFeeField_swigregister = _sptraderapi.CTORATstpSPReqUpdInvestorMarginFeeField_swigregister
CTORATstpSPReqUpdInvestorMarginFeeField_swigregister(CTORATstpSPReqUpdInvestorMarginFeeField)




#########################################请求删除InvestorMarginFee############################################
class CTORATstpSPReqDelInvestorMarginFeeField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelInvestorMarginFeeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelInvestorMarginFeeField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelInvestorMarginFeeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelInvestorMarginFeeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqDelInvestorMarginFeeField_ExchangeID_get, _sptraderapi.CTORATstpSPReqDelInvestorMarginFeeField_ExchangeID_set)

	# 经纪公司部门代码
    __swig_setmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPReqDelInvestorMarginFeeField_DepartmentID_set
    __swig_getmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPReqDelInvestorMarginFeeField_DepartmentID_get
    if _newclass:
        DepartmentID = _swig_property(_sptraderapi.CTORATstpSPReqDelInvestorMarginFeeField_DepartmentID_get, _sptraderapi.CTORATstpSPReqDelInvestorMarginFeeField_DepartmentID_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqDelInvestorMarginFeeField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqDelInvestorMarginFeeField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqDelInvestorMarginFeeField_InvestorID_get, _sptraderapi.CTORATstpSPReqDelInvestorMarginFeeField_InvestorID_set)

	# 产品代码
    __swig_setmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqDelInvestorMarginFeeField_ProductID_set
    __swig_getmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqDelInvestorMarginFeeField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_sptraderapi.CTORATstpSPReqDelInvestorMarginFeeField_ProductID_get, _sptraderapi.CTORATstpSPReqDelInvestorMarginFeeField_ProductID_set)

	# 证券类别代码
    __swig_setmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqDelInvestorMarginFeeField_SecurityType_set
    __swig_getmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqDelInvestorMarginFeeField_SecurityType_get
    if _newclass:
        SecurityType = _swig_property(_sptraderapi.CTORATstpSPReqDelInvestorMarginFeeField_SecurityType_get, _sptraderapi.CTORATstpSPReqDelInvestorMarginFeeField_SecurityType_set)

	# 合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqDelInvestorMarginFeeField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqDelInvestorMarginFeeField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqDelInvestorMarginFeeField_SecurityID_get, _sptraderapi.CTORATstpSPReqDelInvestorMarginFeeField_SecurityID_set)

	# 业务类别
    __swig_setmethods__["BusinessClass"] = _sptraderapi.CTORATstpSPReqDelInvestorMarginFeeField_BusinessClass_set
    __swig_getmethods__["BusinessClass"] = _sptraderapi.CTORATstpSPReqDelInvestorMarginFeeField_BusinessClass_get
    if _newclass:
        BusinessClass = _swig_property(_sptraderapi.CTORATstpSPReqDelInvestorMarginFeeField_BusinessClass_get, _sptraderapi.CTORATstpSPReqDelInvestorMarginFeeField_BusinessClass_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelInvestorMarginFeeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelInvestorMarginFeeField
    __del__ = lambda self: None
CTORATstpSPReqDelInvestorMarginFeeField_swigregister = _sptraderapi.CTORATstpSPReqDelInvestorMarginFeeField_swigregister
CTORATstpSPReqDelInvestorMarginFeeField_swigregister(CTORATstpSPReqDelInvestorMarginFeeField)




#########################################请求插入InvestorTradingFee############################################
class CTORATstpSPReqInsInvestorTradingFeeField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsInvestorTradingFeeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsInvestorTradingFeeField, name)
    __repr__ = _swig_repr

	# 经纪公司部门代码
    __swig_setmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_DepartmentID_set
    __swig_getmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_DepartmentID_get
    if _newclass:
        DepartmentID = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_DepartmentID_get, _sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_DepartmentID_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_InvestorID_get, _sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_InvestorID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_ExchangeID_get, _sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_ExchangeID_set)

	# 产品代码
    __swig_setmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_ProductID_set
    __swig_getmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_ProductID_get, _sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_ProductID_set)

	# 证券类别代码
    __swig_setmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_SecurityType_set
    __swig_getmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_SecurityType_get
    if _newclass:
        SecurityType = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_SecurityType_get, _sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_SecurityType_set)

	# 合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_SecurityID_get, _sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_SecurityID_set)

	# 业务类别
    __swig_setmethods__["BusinessClass"] = _sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_BusinessClass_set
    __swig_getmethods__["BusinessClass"] = _sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_BusinessClass_get
    if _newclass:
        BusinessClass = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_BusinessClass_get, _sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_BusinessClass_set)

	# 佣金类型
    __swig_setmethods__["BrokerageType"] = _sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_BrokerageType_set
    __swig_getmethods__["BrokerageType"] = _sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_BrokerageType_get
    if _newclass:
        BrokerageType = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_BrokerageType_get, _sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_BrokerageType_set)

	# 佣金按金额收取比例
    __swig_setmethods__["RatioByAmt"] = _sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_RatioByAmt_set
    __swig_getmethods__["RatioByAmt"] = _sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_RatioByAmt_get
    if _newclass:
        RatioByAmt = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_RatioByAmt_get, _sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_RatioByAmt_set)

	# 佣金按面值收取比例
    __swig_setmethods__["RatioByPar"] = _sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_RatioByPar_set
    __swig_getmethods__["RatioByPar"] = _sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_RatioByPar_get
    if _newclass:
        RatioByPar = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_RatioByPar_get, _sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_RatioByPar_set)

	# 佣金按笔收取金额
    __swig_setmethods__["FeePerOrder"] = _sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_FeePerOrder_set
    __swig_getmethods__["FeePerOrder"] = _sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_FeePerOrder_get
    if _newclass:
        FeePerOrder = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_FeePerOrder_get, _sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_FeePerOrder_set)

	# 佣金最低收取金额
    __swig_setmethods__["FeeMin"] = _sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_FeeMin_set
    __swig_getmethods__["FeeMin"] = _sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_FeeMin_get
    if _newclass:
        FeeMin = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_FeeMin_get, _sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_FeeMin_set)

	# 佣金最高收取金额
    __swig_setmethods__["FeeMax"] = _sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_FeeMax_set
    __swig_getmethods__["FeeMax"] = _sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_FeeMax_get
    if _newclass:
        FeeMax = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_FeeMax_get, _sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_FeeMax_set)

	# 佣金按数量收取金额
    __swig_setmethods__["FeeByVolume"] = _sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_FeeByVolume_set
    __swig_getmethods__["FeeByVolume"] = _sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_FeeByVolume_get
    if _newclass:
        FeeByVolume = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_FeeByVolume_get, _sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_FeeByVolume_set)

	# 佣金模式
    __swig_setmethods__["RangeMode"] = _sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_RangeMode_set
    __swig_getmethods__["RangeMode"] = _sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_RangeMode_get
    if _newclass:
        RangeMode = _swig_property(_sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_RangeMode_get, _sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_RangeMode_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsInvestorTradingFeeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsInvestorTradingFeeField
    __del__ = lambda self: None
CTORATstpSPReqInsInvestorTradingFeeField_swigregister = _sptraderapi.CTORATstpSPReqInsInvestorTradingFeeField_swigregister
CTORATstpSPReqInsInvestorTradingFeeField_swigregister(CTORATstpSPReqInsInvestorTradingFeeField)




#########################################请求更新InvestorTradingFee############################################
class CTORATstpSPReqUpdInvestorTradingFeeField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdInvestorTradingFeeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdInvestorTradingFeeField, name)
    __repr__ = _swig_repr

	# 经纪公司部门代码
    __swig_setmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_DepartmentID_set
    __swig_getmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_DepartmentID_get
    if _newclass:
        DepartmentID = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_DepartmentID_get, _sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_DepartmentID_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_InvestorID_get, _sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_InvestorID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_ExchangeID_get, _sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_ExchangeID_set)

	# 产品代码
    __swig_setmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_ProductID_set
    __swig_getmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_ProductID_get, _sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_ProductID_set)

	# 证券类别代码
    __swig_setmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_SecurityType_set
    __swig_getmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_SecurityType_get
    if _newclass:
        SecurityType = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_SecurityType_get, _sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_SecurityType_set)

	# 合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_SecurityID_get, _sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_SecurityID_set)

	# 业务类别
    __swig_setmethods__["BusinessClass"] = _sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_BusinessClass_set
    __swig_getmethods__["BusinessClass"] = _sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_BusinessClass_get
    if _newclass:
        BusinessClass = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_BusinessClass_get, _sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_BusinessClass_set)

	# 佣金类型
    __swig_setmethods__["BrokerageType"] = _sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_BrokerageType_set
    __swig_getmethods__["BrokerageType"] = _sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_BrokerageType_get
    if _newclass:
        BrokerageType = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_BrokerageType_get, _sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_BrokerageType_set)

	# 佣金按金额收取比例
    __swig_setmethods__["RatioByAmt"] = _sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_RatioByAmt_set
    __swig_getmethods__["RatioByAmt"] = _sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_RatioByAmt_get
    if _newclass:
        RatioByAmt = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_RatioByAmt_get, _sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_RatioByAmt_set)

	# 佣金按面值收取比例
    __swig_setmethods__["RatioByPar"] = _sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_RatioByPar_set
    __swig_getmethods__["RatioByPar"] = _sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_RatioByPar_get
    if _newclass:
        RatioByPar = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_RatioByPar_get, _sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_RatioByPar_set)

	# 佣金按笔收取金额
    __swig_setmethods__["FeePerOrder"] = _sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_FeePerOrder_set
    __swig_getmethods__["FeePerOrder"] = _sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_FeePerOrder_get
    if _newclass:
        FeePerOrder = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_FeePerOrder_get, _sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_FeePerOrder_set)

	# 佣金最低收取金额
    __swig_setmethods__["FeeMin"] = _sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_FeeMin_set
    __swig_getmethods__["FeeMin"] = _sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_FeeMin_get
    if _newclass:
        FeeMin = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_FeeMin_get, _sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_FeeMin_set)

	# 佣金最高收取金额
    __swig_setmethods__["FeeMax"] = _sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_FeeMax_set
    __swig_getmethods__["FeeMax"] = _sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_FeeMax_get
    if _newclass:
        FeeMax = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_FeeMax_get, _sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_FeeMax_set)

	# 佣金按数量收取金额
    __swig_setmethods__["FeeByVolume"] = _sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_FeeByVolume_set
    __swig_getmethods__["FeeByVolume"] = _sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_FeeByVolume_get
    if _newclass:
        FeeByVolume = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_FeeByVolume_get, _sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_FeeByVolume_set)

	# 佣金模式
    __swig_setmethods__["RangeMode"] = _sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_RangeMode_set
    __swig_getmethods__["RangeMode"] = _sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_RangeMode_get
    if _newclass:
        RangeMode = _swig_property(_sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_RangeMode_get, _sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_RangeMode_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdInvestorTradingFeeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdInvestorTradingFeeField
    __del__ = lambda self: None
CTORATstpSPReqUpdInvestorTradingFeeField_swigregister = _sptraderapi.CTORATstpSPReqUpdInvestorTradingFeeField_swigregister
CTORATstpSPReqUpdInvestorTradingFeeField_swigregister(CTORATstpSPReqUpdInvestorTradingFeeField)




#########################################请求删除InvestorTradingFee############################################
class CTORATstpSPReqDelInvestorTradingFeeField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelInvestorTradingFeeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelInvestorTradingFeeField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelInvestorTradingFeeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelInvestorTradingFeeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqDelInvestorTradingFeeField_ExchangeID_get, _sptraderapi.CTORATstpSPReqDelInvestorTradingFeeField_ExchangeID_set)

	# 经纪公司部门代码
    __swig_setmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPReqDelInvestorTradingFeeField_DepartmentID_set
    __swig_getmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPReqDelInvestorTradingFeeField_DepartmentID_get
    if _newclass:
        DepartmentID = _swig_property(_sptraderapi.CTORATstpSPReqDelInvestorTradingFeeField_DepartmentID_get, _sptraderapi.CTORATstpSPReqDelInvestorTradingFeeField_DepartmentID_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqDelInvestorTradingFeeField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqDelInvestorTradingFeeField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqDelInvestorTradingFeeField_InvestorID_get, _sptraderapi.CTORATstpSPReqDelInvestorTradingFeeField_InvestorID_set)

	# 产品代码
    __swig_setmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqDelInvestorTradingFeeField_ProductID_set
    __swig_getmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqDelInvestorTradingFeeField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_sptraderapi.CTORATstpSPReqDelInvestorTradingFeeField_ProductID_get, _sptraderapi.CTORATstpSPReqDelInvestorTradingFeeField_ProductID_set)

	# 证券类别代码
    __swig_setmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqDelInvestorTradingFeeField_SecurityType_set
    __swig_getmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqDelInvestorTradingFeeField_SecurityType_get
    if _newclass:
        SecurityType = _swig_property(_sptraderapi.CTORATstpSPReqDelInvestorTradingFeeField_SecurityType_get, _sptraderapi.CTORATstpSPReqDelInvestorTradingFeeField_SecurityType_set)

	# 合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqDelInvestorTradingFeeField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqDelInvestorTradingFeeField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqDelInvestorTradingFeeField_SecurityID_get, _sptraderapi.CTORATstpSPReqDelInvestorTradingFeeField_SecurityID_set)

	# 业务类别
    __swig_setmethods__["BusinessClass"] = _sptraderapi.CTORATstpSPReqDelInvestorTradingFeeField_BusinessClass_set
    __swig_getmethods__["BusinessClass"] = _sptraderapi.CTORATstpSPReqDelInvestorTradingFeeField_BusinessClass_get
    if _newclass:
        BusinessClass = _swig_property(_sptraderapi.CTORATstpSPReqDelInvestorTradingFeeField_BusinessClass_get, _sptraderapi.CTORATstpSPReqDelInvestorTradingFeeField_BusinessClass_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelInvestorTradingFeeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelInvestorTradingFeeField
    __del__ = lambda self: None
CTORATstpSPReqDelInvestorTradingFeeField_swigregister = _sptraderapi.CTORATstpSPReqDelInvestorTradingFeeField_swigregister
CTORATstpSPReqDelInvestorTradingFeeField_swigregister(CTORATstpSPReqDelInvestorTradingFeeField)




#########################################请求插入MarginFeeTemplate############################################
class CTORATstpSPReqInsMarginFeeTemplateField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsMarginFeeTemplateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsMarginFeeTemplateField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsMarginFeeTemplateField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsMarginFeeTemplateField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqInsMarginFeeTemplateField_ExchangeID_get, _sptraderapi.CTORATstpSPReqInsMarginFeeTemplateField_ExchangeID_set)

	# 保证金费模板代码
    __swig_setmethods__["MarginFeeTemplateID"] = _sptraderapi.CTORATstpSPReqInsMarginFeeTemplateField_MarginFeeTemplateID_set
    __swig_getmethods__["MarginFeeTemplateID"] = _sptraderapi.CTORATstpSPReqInsMarginFeeTemplateField_MarginFeeTemplateID_get
    if _newclass:
        MarginFeeTemplateID = _swig_property(_sptraderapi.CTORATstpSPReqInsMarginFeeTemplateField_MarginFeeTemplateID_get, _sptraderapi.CTORATstpSPReqInsMarginFeeTemplateField_MarginFeeTemplateID_set)

	# 产品代码
    __swig_setmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqInsMarginFeeTemplateField_ProductID_set
    __swig_getmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqInsMarginFeeTemplateField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_sptraderapi.CTORATstpSPReqInsMarginFeeTemplateField_ProductID_get, _sptraderapi.CTORATstpSPReqInsMarginFeeTemplateField_ProductID_set)

	# 证券类别代码
    __swig_setmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqInsMarginFeeTemplateField_SecurityType_set
    __swig_getmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqInsMarginFeeTemplateField_SecurityType_get
    if _newclass:
        SecurityType = _swig_property(_sptraderapi.CTORATstpSPReqInsMarginFeeTemplateField_SecurityType_get, _sptraderapi.CTORATstpSPReqInsMarginFeeTemplateField_SecurityType_set)

	# 合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqInsMarginFeeTemplateField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqInsMarginFeeTemplateField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqInsMarginFeeTemplateField_SecurityID_get, _sptraderapi.CTORATstpSPReqInsMarginFeeTemplateField_SecurityID_set)

	# 业务类别
    __swig_setmethods__["BusinessClass"] = _sptraderapi.CTORATstpSPReqInsMarginFeeTemplateField_BusinessClass_set
    __swig_getmethods__["BusinessClass"] = _sptraderapi.CTORATstpSPReqInsMarginFeeTemplateField_BusinessClass_get
    if _newclass:
        BusinessClass = _swig_property(_sptraderapi.CTORATstpSPReqInsMarginFeeTemplateField_BusinessClass_get, _sptraderapi.CTORATstpSPReqInsMarginFeeTemplateField_BusinessClass_set)

	# 保证金按数量收取金额
    __swig_setmethods__["FeeByVolume"] = _sptraderapi.CTORATstpSPReqInsMarginFeeTemplateField_FeeByVolume_set
    __swig_getmethods__["FeeByVolume"] = _sptraderapi.CTORATstpSPReqInsMarginFeeTemplateField_FeeByVolume_get
    if _newclass:
        FeeByVolume = _swig_property(_sptraderapi.CTORATstpSPReqInsMarginFeeTemplateField_FeeByVolume_get, _sptraderapi.CTORATstpSPReqInsMarginFeeTemplateField_FeeByVolume_set)

	# 合约标的价格调整系数
    __swig_setmethods__["PriceAdjustRatio"] = _sptraderapi.CTORATstpSPReqInsMarginFeeTemplateField_PriceAdjustRatio_set
    __swig_getmethods__["PriceAdjustRatio"] = _sptraderapi.CTORATstpSPReqInsMarginFeeTemplateField_PriceAdjustRatio_get
    if _newclass:
        PriceAdjustRatio = _swig_property(_sptraderapi.CTORATstpSPReqInsMarginFeeTemplateField_PriceAdjustRatio_get, _sptraderapi.CTORATstpSPReqInsMarginFeeTemplateField_PriceAdjustRatio_set)

	# 虚值期权优惠比率
    __swig_setmethods__["OTMPreferRatio"] = _sptraderapi.CTORATstpSPReqInsMarginFeeTemplateField_OTMPreferRatio_set
    __swig_getmethods__["OTMPreferRatio"] = _sptraderapi.CTORATstpSPReqInsMarginFeeTemplateField_OTMPreferRatio_get
    if _newclass:
        OTMPreferRatio = _swig_property(_sptraderapi.CTORATstpSPReqInsMarginFeeTemplateField_OTMPreferRatio_get, _sptraderapi.CTORATstpSPReqInsMarginFeeTemplateField_OTMPreferRatio_set)

	# 合约标的价格调整保障系数
    __swig_setmethods__["PriceAdjustGuardRatio"] = _sptraderapi.CTORATstpSPReqInsMarginFeeTemplateField_PriceAdjustGuardRatio_set
    __swig_getmethods__["PriceAdjustGuardRatio"] = _sptraderapi.CTORATstpSPReqInsMarginFeeTemplateField_PriceAdjustGuardRatio_get
    if _newclass:
        PriceAdjustGuardRatio = _swig_property(_sptraderapi.CTORATstpSPReqInsMarginFeeTemplateField_PriceAdjustGuardRatio_get, _sptraderapi.CTORATstpSPReqInsMarginFeeTemplateField_PriceAdjustGuardRatio_set)

	# 上浮比率
    __swig_setmethods__["UpperRatio"] = _sptraderapi.CTORATstpSPReqInsMarginFeeTemplateField_UpperRatio_set
    __swig_getmethods__["UpperRatio"] = _sptraderapi.CTORATstpSPReqInsMarginFeeTemplateField_UpperRatio_get
    if _newclass:
        UpperRatio = _swig_property(_sptraderapi.CTORATstpSPReqInsMarginFeeTemplateField_UpperRatio_get, _sptraderapi.CTORATstpSPReqInsMarginFeeTemplateField_UpperRatio_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsMarginFeeTemplateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsMarginFeeTemplateField
    __del__ = lambda self: None
CTORATstpSPReqInsMarginFeeTemplateField_swigregister = _sptraderapi.CTORATstpSPReqInsMarginFeeTemplateField_swigregister
CTORATstpSPReqInsMarginFeeTemplateField_swigregister(CTORATstpSPReqInsMarginFeeTemplateField)




#########################################请求更新MarginFeeTemplate############################################
class CTORATstpSPReqUpdMarginFeeTemplateField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdMarginFeeTemplateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdMarginFeeTemplateField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdMarginFeeTemplateField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdMarginFeeTemplateField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarginFeeTemplateField_ExchangeID_get, _sptraderapi.CTORATstpSPReqUpdMarginFeeTemplateField_ExchangeID_set)

	# 保证金费模板代码
    __swig_setmethods__["MarginFeeTemplateID"] = _sptraderapi.CTORATstpSPReqUpdMarginFeeTemplateField_MarginFeeTemplateID_set
    __swig_getmethods__["MarginFeeTemplateID"] = _sptraderapi.CTORATstpSPReqUpdMarginFeeTemplateField_MarginFeeTemplateID_get
    if _newclass:
        MarginFeeTemplateID = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarginFeeTemplateField_MarginFeeTemplateID_get, _sptraderapi.CTORATstpSPReqUpdMarginFeeTemplateField_MarginFeeTemplateID_set)

	# 产品代码
    __swig_setmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqUpdMarginFeeTemplateField_ProductID_set
    __swig_getmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqUpdMarginFeeTemplateField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarginFeeTemplateField_ProductID_get, _sptraderapi.CTORATstpSPReqUpdMarginFeeTemplateField_ProductID_set)

	# 证券类别代码
    __swig_setmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqUpdMarginFeeTemplateField_SecurityType_set
    __swig_getmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqUpdMarginFeeTemplateField_SecurityType_get
    if _newclass:
        SecurityType = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarginFeeTemplateField_SecurityType_get, _sptraderapi.CTORATstpSPReqUpdMarginFeeTemplateField_SecurityType_set)

	# 合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqUpdMarginFeeTemplateField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqUpdMarginFeeTemplateField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarginFeeTemplateField_SecurityID_get, _sptraderapi.CTORATstpSPReqUpdMarginFeeTemplateField_SecurityID_set)

	# 业务类别
    __swig_setmethods__["BusinessClass"] = _sptraderapi.CTORATstpSPReqUpdMarginFeeTemplateField_BusinessClass_set
    __swig_getmethods__["BusinessClass"] = _sptraderapi.CTORATstpSPReqUpdMarginFeeTemplateField_BusinessClass_get
    if _newclass:
        BusinessClass = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarginFeeTemplateField_BusinessClass_get, _sptraderapi.CTORATstpSPReqUpdMarginFeeTemplateField_BusinessClass_set)

	# 保证金按数量收取金额
    __swig_setmethods__["FeeByVolume"] = _sptraderapi.CTORATstpSPReqUpdMarginFeeTemplateField_FeeByVolume_set
    __swig_getmethods__["FeeByVolume"] = _sptraderapi.CTORATstpSPReqUpdMarginFeeTemplateField_FeeByVolume_get
    if _newclass:
        FeeByVolume = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarginFeeTemplateField_FeeByVolume_get, _sptraderapi.CTORATstpSPReqUpdMarginFeeTemplateField_FeeByVolume_set)

	# 合约标的价格调整系数
    __swig_setmethods__["PriceAdjustRatio"] = _sptraderapi.CTORATstpSPReqUpdMarginFeeTemplateField_PriceAdjustRatio_set
    __swig_getmethods__["PriceAdjustRatio"] = _sptraderapi.CTORATstpSPReqUpdMarginFeeTemplateField_PriceAdjustRatio_get
    if _newclass:
        PriceAdjustRatio = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarginFeeTemplateField_PriceAdjustRatio_get, _sptraderapi.CTORATstpSPReqUpdMarginFeeTemplateField_PriceAdjustRatio_set)

	# 虚值期权优惠比率
    __swig_setmethods__["OTMPreferRatio"] = _sptraderapi.CTORATstpSPReqUpdMarginFeeTemplateField_OTMPreferRatio_set
    __swig_getmethods__["OTMPreferRatio"] = _sptraderapi.CTORATstpSPReqUpdMarginFeeTemplateField_OTMPreferRatio_get
    if _newclass:
        OTMPreferRatio = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarginFeeTemplateField_OTMPreferRatio_get, _sptraderapi.CTORATstpSPReqUpdMarginFeeTemplateField_OTMPreferRatio_set)

	# 合约标的价格调整保障系数
    __swig_setmethods__["PriceAdjustGuardRatio"] = _sptraderapi.CTORATstpSPReqUpdMarginFeeTemplateField_PriceAdjustGuardRatio_set
    __swig_getmethods__["PriceAdjustGuardRatio"] = _sptraderapi.CTORATstpSPReqUpdMarginFeeTemplateField_PriceAdjustGuardRatio_get
    if _newclass:
        PriceAdjustGuardRatio = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarginFeeTemplateField_PriceAdjustGuardRatio_get, _sptraderapi.CTORATstpSPReqUpdMarginFeeTemplateField_PriceAdjustGuardRatio_set)

	# 上浮比率
    __swig_setmethods__["UpperRatio"] = _sptraderapi.CTORATstpSPReqUpdMarginFeeTemplateField_UpperRatio_set
    __swig_getmethods__["UpperRatio"] = _sptraderapi.CTORATstpSPReqUpdMarginFeeTemplateField_UpperRatio_get
    if _newclass:
        UpperRatio = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarginFeeTemplateField_UpperRatio_get, _sptraderapi.CTORATstpSPReqUpdMarginFeeTemplateField_UpperRatio_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdMarginFeeTemplateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdMarginFeeTemplateField
    __del__ = lambda self: None
CTORATstpSPReqUpdMarginFeeTemplateField_swigregister = _sptraderapi.CTORATstpSPReqUpdMarginFeeTemplateField_swigregister
CTORATstpSPReqUpdMarginFeeTemplateField_swigregister(CTORATstpSPReqUpdMarginFeeTemplateField)




#########################################请求删除MarginFeeTemplate############################################
class CTORATstpSPReqDelMarginFeeTemplateField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelMarginFeeTemplateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelMarginFeeTemplateField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelMarginFeeTemplateField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelMarginFeeTemplateField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqDelMarginFeeTemplateField_ExchangeID_get, _sptraderapi.CTORATstpSPReqDelMarginFeeTemplateField_ExchangeID_set)

	# 保证金费模板代码
    __swig_setmethods__["MarginFeeTemplateID"] = _sptraderapi.CTORATstpSPReqDelMarginFeeTemplateField_MarginFeeTemplateID_set
    __swig_getmethods__["MarginFeeTemplateID"] = _sptraderapi.CTORATstpSPReqDelMarginFeeTemplateField_MarginFeeTemplateID_get
    if _newclass:
        MarginFeeTemplateID = _swig_property(_sptraderapi.CTORATstpSPReqDelMarginFeeTemplateField_MarginFeeTemplateID_get, _sptraderapi.CTORATstpSPReqDelMarginFeeTemplateField_MarginFeeTemplateID_set)

	# 产品代码
    __swig_setmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqDelMarginFeeTemplateField_ProductID_set
    __swig_getmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqDelMarginFeeTemplateField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_sptraderapi.CTORATstpSPReqDelMarginFeeTemplateField_ProductID_get, _sptraderapi.CTORATstpSPReqDelMarginFeeTemplateField_ProductID_set)

	# 证券类别代码
    __swig_setmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqDelMarginFeeTemplateField_SecurityType_set
    __swig_getmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqDelMarginFeeTemplateField_SecurityType_get
    if _newclass:
        SecurityType = _swig_property(_sptraderapi.CTORATstpSPReqDelMarginFeeTemplateField_SecurityType_get, _sptraderapi.CTORATstpSPReqDelMarginFeeTemplateField_SecurityType_set)

	# 合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqDelMarginFeeTemplateField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqDelMarginFeeTemplateField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqDelMarginFeeTemplateField_SecurityID_get, _sptraderapi.CTORATstpSPReqDelMarginFeeTemplateField_SecurityID_set)

	# 业务类别
    __swig_setmethods__["BusinessClass"] = _sptraderapi.CTORATstpSPReqDelMarginFeeTemplateField_BusinessClass_set
    __swig_getmethods__["BusinessClass"] = _sptraderapi.CTORATstpSPReqDelMarginFeeTemplateField_BusinessClass_get
    if _newclass:
        BusinessClass = _swig_property(_sptraderapi.CTORATstpSPReqDelMarginFeeTemplateField_BusinessClass_get, _sptraderapi.CTORATstpSPReqDelMarginFeeTemplateField_BusinessClass_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelMarginFeeTemplateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelMarginFeeTemplateField
    __del__ = lambda self: None
CTORATstpSPReqDelMarginFeeTemplateField_swigregister = _sptraderapi.CTORATstpSPReqDelMarginFeeTemplateField_swigregister
CTORATstpSPReqDelMarginFeeTemplateField_swigregister(CTORATstpSPReqDelMarginFeeTemplateField)




#########################################请求插入MarketData############################################
class CTORATstpSPReqInsMarketDataField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsMarketDataField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsMarketDataField, name)
    __repr__ = _swig_repr

	# 证券代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqInsMarketDataField_SecurityID_get, _sptraderapi.CTORATstpSPReqInsMarketDataField_SecurityID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqInsMarketDataField_ExchangeID_get, _sptraderapi.CTORATstpSPReqInsMarketDataField_ExchangeID_set)

	# 交易日
    __swig_setmethods__["TradingDay"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_sptraderapi.CTORATstpSPReqInsMarketDataField_TradingDay_get, _sptraderapi.CTORATstpSPReqInsMarketDataField_TradingDay_set)

	# 证券名称
    __swig_setmethods__["SecurityName"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_SecurityName_set
    __swig_getmethods__["SecurityName"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_SecurityName_get
    if _newclass:
        SecurityName = _swig_property(_sptraderapi.CTORATstpSPReqInsMarketDataField_SecurityName_get, _sptraderapi.CTORATstpSPReqInsMarketDataField_SecurityName_set)

	# 上一日收盘价
    __swig_setmethods__["PreClosePrice"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_PreClosePrice_set
    __swig_getmethods__["PreClosePrice"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_PreClosePrice_get
    if _newclass:
        PreClosePrice = _swig_property(_sptraderapi.CTORATstpSPReqInsMarketDataField_PreClosePrice_get, _sptraderapi.CTORATstpSPReqInsMarketDataField_PreClosePrice_set)

	# 今日开盘价
    __swig_setmethods__["OpenPrice"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_OpenPrice_set
    __swig_getmethods__["OpenPrice"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_OpenPrice_get
    if _newclass:
        OpenPrice = _swig_property(_sptraderapi.CTORATstpSPReqInsMarketDataField_OpenPrice_get, _sptraderapi.CTORATstpSPReqInsMarketDataField_OpenPrice_set)

	# 涨停价格
    __swig_setmethods__["UpperLimitPrice"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_UpperLimitPrice_set
    __swig_getmethods__["UpperLimitPrice"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_UpperLimitPrice_get
    if _newclass:
        UpperLimitPrice = _swig_property(_sptraderapi.CTORATstpSPReqInsMarketDataField_UpperLimitPrice_get, _sptraderapi.CTORATstpSPReqInsMarketDataField_UpperLimitPrice_set)

	# 跌停价格
    __swig_setmethods__["LowerLimitPrice"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_LowerLimitPrice_set
    __swig_getmethods__["LowerLimitPrice"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_LowerLimitPrice_get
    if _newclass:
        LowerLimitPrice = _swig_property(_sptraderapi.CTORATstpSPReqInsMarketDataField_LowerLimitPrice_get, _sptraderapi.CTORATstpSPReqInsMarketDataField_LowerLimitPrice_set)

	# 该证券在当日的成交数量
    __swig_setmethods__["Volume"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_Volume_set
    __swig_getmethods__["Volume"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_Volume_get
    if _newclass:
        Volume = _swig_property(_sptraderapi.CTORATstpSPReqInsMarketDataField_Volume_get, _sptraderapi.CTORATstpSPReqInsMarketDataField_Volume_set)

	# 该证券在当日的成交金额
    __swig_setmethods__["Turnover"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_Turnover_set
    __swig_getmethods__["Turnover"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_Turnover_get
    if _newclass:
        Turnover = _swig_property(_sptraderapi.CTORATstpSPReqInsMarketDataField_Turnover_get, _sptraderapi.CTORATstpSPReqInsMarketDataField_Turnover_set)

	# 该证券在当日的成交笔数
    __swig_setmethods__["TradingCount"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_TradingCount_set
    __swig_getmethods__["TradingCount"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_TradingCount_get
    if _newclass:
        TradingCount = _swig_property(_sptraderapi.CTORATstpSPReqInsMarketDataField_TradingCount_get, _sptraderapi.CTORATstpSPReqInsMarketDataField_TradingCount_set)

	# 当日该证券交易期间的最新成交价格
    __swig_setmethods__["LastPrice"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_LastPrice_set
    __swig_getmethods__["LastPrice"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_LastPrice_get
    if _newclass:
        LastPrice = _swig_property(_sptraderapi.CTORATstpSPReqInsMarketDataField_LastPrice_get, _sptraderapi.CTORATstpSPReqInsMarketDataField_LastPrice_set)

	# 收盘价格
    __swig_setmethods__["ClosePrice"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_ClosePrice_set
    __swig_getmethods__["ClosePrice"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_ClosePrice_get
    if _newclass:
        ClosePrice = _swig_property(_sptraderapi.CTORATstpSPReqInsMarketDataField_ClosePrice_get, _sptraderapi.CTORATstpSPReqInsMarketDataField_ClosePrice_set)

	# 一定时间内该证券成交价中的最高成交价格
    __swig_setmethods__["HighestPrice"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_HighestPrice_set
    __swig_getmethods__["HighestPrice"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_HighestPrice_get
    if _newclass:
        HighestPrice = _swig_property(_sptraderapi.CTORATstpSPReqInsMarketDataField_HighestPrice_get, _sptraderapi.CTORATstpSPReqInsMarketDataField_HighestPrice_set)

	# 一定时间内该证券成交价中的最低成交价格
    __swig_setmethods__["LowestPrice"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_LowestPrice_set
    __swig_getmethods__["LowestPrice"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_LowestPrice_get
    if _newclass:
        LowestPrice = _swig_property(_sptraderapi.CTORATstpSPReqInsMarketDataField_LowestPrice_get, _sptraderapi.CTORATstpSPReqInsMarketDataField_LowestPrice_set)

	# 指该证券当前的市盈率
    __swig_setmethods__["PERatio1"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_PERatio1_set
    __swig_getmethods__["PERatio1"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_PERatio1_get
    if _newclass:
        PERatio1 = _swig_property(_sptraderapi.CTORATstpSPReqInsMarketDataField_PERatio1_get, _sptraderapi.CTORATstpSPReqInsMarketDataField_PERatio1_set)

	# 指该证券当前的市盈率
    __swig_setmethods__["PERatio2"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_PERatio2_set
    __swig_getmethods__["PERatio2"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_PERatio2_get
    if _newclass:
        PERatio2 = _swig_property(_sptraderapi.CTORATstpSPReqInsMarketDataField_PERatio2_get, _sptraderapi.CTORATstpSPReqInsMarketDataField_PERatio2_set)

	# 最新价-前收盘价格
    __swig_setmethods__["PriceUpDown1"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_PriceUpDown1_set
    __swig_getmethods__["PriceUpDown1"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_PriceUpDown1_get
    if _newclass:
        PriceUpDown1 = _swig_property(_sptraderapi.CTORATstpSPReqInsMarketDataField_PriceUpDown1_get, _sptraderapi.CTORATstpSPReqInsMarketDataField_PriceUpDown1_set)

	# 最新价-上笔成交价格
    __swig_setmethods__["PriceUpDown2"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_PriceUpDown2_set
    __swig_getmethods__["PriceUpDown2"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_PriceUpDown2_get
    if _newclass:
        PriceUpDown2 = _swig_property(_sptraderapi.CTORATstpSPReqInsMarketDataField_PriceUpDown2_get, _sptraderapi.CTORATstpSPReqInsMarketDataField_PriceUpDown2_set)

	# 持仓量
    __swig_setmethods__["OpenInterest"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_OpenInterest_set
    __swig_getmethods__["OpenInterest"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_OpenInterest_get
    if _newclass:
        OpenInterest = _swig_property(_sptraderapi.CTORATstpSPReqInsMarketDataField_OpenInterest_get, _sptraderapi.CTORATstpSPReqInsMarketDataField_OpenInterest_set)

	# 该证券当前最优申买价格
    __swig_setmethods__["BidPrice1"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_BidPrice1_set
    __swig_getmethods__["BidPrice1"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_BidPrice1_get
    if _newclass:
        BidPrice1 = _swig_property(_sptraderapi.CTORATstpSPReqInsMarketDataField_BidPrice1_get, _sptraderapi.CTORATstpSPReqInsMarketDataField_BidPrice1_set)

	# 该证券当前最优申卖价格
    __swig_setmethods__["AskPrice1"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_AskPrice1_set
    __swig_getmethods__["AskPrice1"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_AskPrice1_get
    if _newclass:
        AskPrice1 = _swig_property(_sptraderapi.CTORATstpSPReqInsMarketDataField_AskPrice1_get, _sptraderapi.CTORATstpSPReqInsMarketDataField_AskPrice1_set)

	# 该证券当前最优价位申请买入的数量
    __swig_setmethods__["BidVolume1"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_BidVolume1_set
    __swig_getmethods__["BidVolume1"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_BidVolume1_get
    if _newclass:
        BidVolume1 = _swig_property(_sptraderapi.CTORATstpSPReqInsMarketDataField_BidVolume1_get, _sptraderapi.CTORATstpSPReqInsMarketDataField_BidVolume1_set)

	# 该证券当前最优价位申请卖出的数量
    __swig_setmethods__["AskVolume1"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_AskVolume1_set
    __swig_getmethods__["AskVolume1"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_AskVolume1_get
    if _newclass:
        AskVolume1 = _swig_property(_sptraderapi.CTORATstpSPReqInsMarketDataField_AskVolume1_get, _sptraderapi.CTORATstpSPReqInsMarketDataField_AskVolume1_set)

	# 该证券当前第二优申买价格
    __swig_setmethods__["BidPrice2"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_BidPrice2_set
    __swig_getmethods__["BidPrice2"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_BidPrice2_get
    if _newclass:
        BidPrice2 = _swig_property(_sptraderapi.CTORATstpSPReqInsMarketDataField_BidPrice2_get, _sptraderapi.CTORATstpSPReqInsMarketDataField_BidPrice2_set)

	# 该证券当前第二优价位申请买入的数量
    __swig_setmethods__["BidVolume2"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_BidVolume2_set
    __swig_getmethods__["BidVolume2"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_BidVolume2_get
    if _newclass:
        BidVolume2 = _swig_property(_sptraderapi.CTORATstpSPReqInsMarketDataField_BidVolume2_get, _sptraderapi.CTORATstpSPReqInsMarketDataField_BidVolume2_set)

	# 该证券当前第二优申卖价格
    __swig_setmethods__["AskPrice2"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_AskPrice2_set
    __swig_getmethods__["AskPrice2"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_AskPrice2_get
    if _newclass:
        AskPrice2 = _swig_property(_sptraderapi.CTORATstpSPReqInsMarketDataField_AskPrice2_get, _sptraderapi.CTORATstpSPReqInsMarketDataField_AskPrice2_set)

	# 该证券当前第二优价位申请卖出的数量
    __swig_setmethods__["AskVolume2"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_AskVolume2_set
    __swig_getmethods__["AskVolume2"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_AskVolume2_get
    if _newclass:
        AskVolume2 = _swig_property(_sptraderapi.CTORATstpSPReqInsMarketDataField_AskVolume2_get, _sptraderapi.CTORATstpSPReqInsMarketDataField_AskVolume2_set)

	# 该证券当前第三优申买价格
    __swig_setmethods__["BidPrice3"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_BidPrice3_set
    __swig_getmethods__["BidPrice3"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_BidPrice3_get
    if _newclass:
        BidPrice3 = _swig_property(_sptraderapi.CTORATstpSPReqInsMarketDataField_BidPrice3_get, _sptraderapi.CTORATstpSPReqInsMarketDataField_BidPrice3_set)

	# 该证券当前第三优价位申请买入的数量
    __swig_setmethods__["BidVolume3"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_BidVolume3_set
    __swig_getmethods__["BidVolume3"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_BidVolume3_get
    if _newclass:
        BidVolume3 = _swig_property(_sptraderapi.CTORATstpSPReqInsMarketDataField_BidVolume3_get, _sptraderapi.CTORATstpSPReqInsMarketDataField_BidVolume3_set)

	# 该证券当前第三优申卖价格
    __swig_setmethods__["AskPrice3"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_AskPrice3_set
    __swig_getmethods__["AskPrice3"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_AskPrice3_get
    if _newclass:
        AskPrice3 = _swig_property(_sptraderapi.CTORATstpSPReqInsMarketDataField_AskPrice3_get, _sptraderapi.CTORATstpSPReqInsMarketDataField_AskPrice3_set)

	# 该证券当前第三优价位申请卖出的数量
    __swig_setmethods__["AskVolume3"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_AskVolume3_set
    __swig_getmethods__["AskVolume3"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_AskVolume3_get
    if _newclass:
        AskVolume3 = _swig_property(_sptraderapi.CTORATstpSPReqInsMarketDataField_AskVolume3_get, _sptraderapi.CTORATstpSPReqInsMarketDataField_AskVolume3_set)

	# 该证券当前第四优申买价格
    __swig_setmethods__["BidPrice4"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_BidPrice4_set
    __swig_getmethods__["BidPrice4"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_BidPrice4_get
    if _newclass:
        BidPrice4 = _swig_property(_sptraderapi.CTORATstpSPReqInsMarketDataField_BidPrice4_get, _sptraderapi.CTORATstpSPReqInsMarketDataField_BidPrice4_set)

	# 该证券当前第四优价位申请买入的数量
    __swig_setmethods__["BidVolume4"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_BidVolume4_set
    __swig_getmethods__["BidVolume4"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_BidVolume4_get
    if _newclass:
        BidVolume4 = _swig_property(_sptraderapi.CTORATstpSPReqInsMarketDataField_BidVolume4_get, _sptraderapi.CTORATstpSPReqInsMarketDataField_BidVolume4_set)

	# 该证券当前第四优申卖价格
    __swig_setmethods__["AskPrice4"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_AskPrice4_set
    __swig_getmethods__["AskPrice4"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_AskPrice4_get
    if _newclass:
        AskPrice4 = _swig_property(_sptraderapi.CTORATstpSPReqInsMarketDataField_AskPrice4_get, _sptraderapi.CTORATstpSPReqInsMarketDataField_AskPrice4_set)

	# 该证券当前第四优价位申请卖出的数量
    __swig_setmethods__["AskVolume4"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_AskVolume4_set
    __swig_getmethods__["AskVolume4"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_AskVolume4_get
    if _newclass:
        AskVolume4 = _swig_property(_sptraderapi.CTORATstpSPReqInsMarketDataField_AskVolume4_get, _sptraderapi.CTORATstpSPReqInsMarketDataField_AskVolume4_set)

	# 该证券当前第五优申买价格
    __swig_setmethods__["BidPrice5"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_BidPrice5_set
    __swig_getmethods__["BidPrice5"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_BidPrice5_get
    if _newclass:
        BidPrice5 = _swig_property(_sptraderapi.CTORATstpSPReqInsMarketDataField_BidPrice5_get, _sptraderapi.CTORATstpSPReqInsMarketDataField_BidPrice5_set)

	# 该证券当前第五优价位申请买入的数量
    __swig_setmethods__["BidVolume5"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_BidVolume5_set
    __swig_getmethods__["BidVolume5"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_BidVolume5_get
    if _newclass:
        BidVolume5 = _swig_property(_sptraderapi.CTORATstpSPReqInsMarketDataField_BidVolume5_get, _sptraderapi.CTORATstpSPReqInsMarketDataField_BidVolume5_set)

	# 该证券当前第五优申卖价格
    __swig_setmethods__["AskPrice5"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_AskPrice5_set
    __swig_getmethods__["AskPrice5"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_AskPrice5_get
    if _newclass:
        AskPrice5 = _swig_property(_sptraderapi.CTORATstpSPReqInsMarketDataField_AskPrice5_get, _sptraderapi.CTORATstpSPReqInsMarketDataField_AskPrice5_set)

	# 该证券当前第五优价位申请卖出的数量
    __swig_setmethods__["AskVolume5"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_AskVolume5_set
    __swig_getmethods__["AskVolume5"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_AskVolume5_get
    if _newclass:
        AskVolume5 = _swig_property(_sptraderapi.CTORATstpSPReqInsMarketDataField_AskVolume5_get, _sptraderapi.CTORATstpSPReqInsMarketDataField_AskVolume5_set)

	# 最后修改时间
    __swig_setmethods__["UpdateTime"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_UpdateTime_set
    __swig_getmethods__["UpdateTime"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_UpdateTime_get
    if _newclass:
        UpdateTime = _swig_property(_sptraderapi.CTORATstpSPReqInsMarketDataField_UpdateTime_get, _sptraderapi.CTORATstpSPReqInsMarketDataField_UpdateTime_set)

	# 最后修改毫秒
    __swig_setmethods__["UpdateMillisec"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_UpdateMillisec_set
    __swig_getmethods__["UpdateMillisec"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_UpdateMillisec_get
    if _newclass:
        UpdateMillisec = _swig_property(_sptraderapi.CTORATstpSPReqInsMarketDataField_UpdateMillisec_get, _sptraderapi.CTORATstpSPReqInsMarketDataField_UpdateMillisec_set)

	# 行情产品实时状态
    __swig_setmethods__["MDSecurityStat"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_MDSecurityStat_set
    __swig_getmethods__["MDSecurityStat"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_MDSecurityStat_get
    if _newclass:
        MDSecurityStat = _swig_property(_sptraderapi.CTORATstpSPReqInsMarketDataField_MDSecurityStat_get, _sptraderapi.CTORATstpSPReqInsMarketDataField_MDSecurityStat_set)

	# 合约结算价
    __swig_setmethods__["SettlementPrice"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_SettlementPrice_set
    __swig_getmethods__["SettlementPrice"] = _sptraderapi.CTORATstpSPReqInsMarketDataField_SettlementPrice_get
    if _newclass:
        SettlementPrice = _swig_property(_sptraderapi.CTORATstpSPReqInsMarketDataField_SettlementPrice_get, _sptraderapi.CTORATstpSPReqInsMarketDataField_SettlementPrice_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsMarketDataField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsMarketDataField
    __del__ = lambda self: None
CTORATstpSPReqInsMarketDataField_swigregister = _sptraderapi.CTORATstpSPReqInsMarketDataField_swigregister
CTORATstpSPReqInsMarketDataField_swigregister(CTORATstpSPReqInsMarketDataField)




#########################################请求更新MarketData############################################
class CTORATstpSPReqUpdMarketDataField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdMarketDataField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdMarketDataField, name)
    __repr__ = _swig_repr

	# 证券代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarketDataField_SecurityID_get, _sptraderapi.CTORATstpSPReqUpdMarketDataField_SecurityID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarketDataField_ExchangeID_get, _sptraderapi.CTORATstpSPReqUpdMarketDataField_ExchangeID_set)

	# 交易日
    __swig_setmethods__["TradingDay"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarketDataField_TradingDay_get, _sptraderapi.CTORATstpSPReqUpdMarketDataField_TradingDay_set)

	# 证券名称
    __swig_setmethods__["SecurityName"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_SecurityName_set
    __swig_getmethods__["SecurityName"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_SecurityName_get
    if _newclass:
        SecurityName = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarketDataField_SecurityName_get, _sptraderapi.CTORATstpSPReqUpdMarketDataField_SecurityName_set)

	# 上一日收盘价
    __swig_setmethods__["PreClosePrice"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_PreClosePrice_set
    __swig_getmethods__["PreClosePrice"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_PreClosePrice_get
    if _newclass:
        PreClosePrice = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarketDataField_PreClosePrice_get, _sptraderapi.CTORATstpSPReqUpdMarketDataField_PreClosePrice_set)

	# 今日开盘价
    __swig_setmethods__["OpenPrice"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_OpenPrice_set
    __swig_getmethods__["OpenPrice"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_OpenPrice_get
    if _newclass:
        OpenPrice = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarketDataField_OpenPrice_get, _sptraderapi.CTORATstpSPReqUpdMarketDataField_OpenPrice_set)

	# 涨停价格
    __swig_setmethods__["UpperLimitPrice"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_UpperLimitPrice_set
    __swig_getmethods__["UpperLimitPrice"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_UpperLimitPrice_get
    if _newclass:
        UpperLimitPrice = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarketDataField_UpperLimitPrice_get, _sptraderapi.CTORATstpSPReqUpdMarketDataField_UpperLimitPrice_set)

	# 跌停价格
    __swig_setmethods__["LowerLimitPrice"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_LowerLimitPrice_set
    __swig_getmethods__["LowerLimitPrice"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_LowerLimitPrice_get
    if _newclass:
        LowerLimitPrice = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarketDataField_LowerLimitPrice_get, _sptraderapi.CTORATstpSPReqUpdMarketDataField_LowerLimitPrice_set)

	# 该证券在当日的成交数量
    __swig_setmethods__["Volume"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_Volume_set
    __swig_getmethods__["Volume"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_Volume_get
    if _newclass:
        Volume = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarketDataField_Volume_get, _sptraderapi.CTORATstpSPReqUpdMarketDataField_Volume_set)

	# 该证券在当日的成交金额
    __swig_setmethods__["Turnover"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_Turnover_set
    __swig_getmethods__["Turnover"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_Turnover_get
    if _newclass:
        Turnover = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarketDataField_Turnover_get, _sptraderapi.CTORATstpSPReqUpdMarketDataField_Turnover_set)

	# 该证券在当日的成交笔数
    __swig_setmethods__["TradingCount"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_TradingCount_set
    __swig_getmethods__["TradingCount"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_TradingCount_get
    if _newclass:
        TradingCount = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarketDataField_TradingCount_get, _sptraderapi.CTORATstpSPReqUpdMarketDataField_TradingCount_set)

	# 当日该证券交易期间的最新成交价格
    __swig_setmethods__["LastPrice"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_LastPrice_set
    __swig_getmethods__["LastPrice"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_LastPrice_get
    if _newclass:
        LastPrice = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarketDataField_LastPrice_get, _sptraderapi.CTORATstpSPReqUpdMarketDataField_LastPrice_set)

	# 收盘价格
    __swig_setmethods__["ClosePrice"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_ClosePrice_set
    __swig_getmethods__["ClosePrice"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_ClosePrice_get
    if _newclass:
        ClosePrice = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarketDataField_ClosePrice_get, _sptraderapi.CTORATstpSPReqUpdMarketDataField_ClosePrice_set)

	# 一定时间内该证券成交价中的最高成交价格
    __swig_setmethods__["HighestPrice"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_HighestPrice_set
    __swig_getmethods__["HighestPrice"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_HighestPrice_get
    if _newclass:
        HighestPrice = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarketDataField_HighestPrice_get, _sptraderapi.CTORATstpSPReqUpdMarketDataField_HighestPrice_set)

	# 一定时间内该证券成交价中的最低成交价格
    __swig_setmethods__["LowestPrice"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_LowestPrice_set
    __swig_getmethods__["LowestPrice"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_LowestPrice_get
    if _newclass:
        LowestPrice = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarketDataField_LowestPrice_get, _sptraderapi.CTORATstpSPReqUpdMarketDataField_LowestPrice_set)

	# 指该证券当前的市盈率
    __swig_setmethods__["PERatio1"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_PERatio1_set
    __swig_getmethods__["PERatio1"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_PERatio1_get
    if _newclass:
        PERatio1 = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarketDataField_PERatio1_get, _sptraderapi.CTORATstpSPReqUpdMarketDataField_PERatio1_set)

	# 指该证券当前的市盈率
    __swig_setmethods__["PERatio2"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_PERatio2_set
    __swig_getmethods__["PERatio2"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_PERatio2_get
    if _newclass:
        PERatio2 = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarketDataField_PERatio2_get, _sptraderapi.CTORATstpSPReqUpdMarketDataField_PERatio2_set)

	# 最新价-前收盘价格
    __swig_setmethods__["PriceUpDown1"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_PriceUpDown1_set
    __swig_getmethods__["PriceUpDown1"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_PriceUpDown1_get
    if _newclass:
        PriceUpDown1 = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarketDataField_PriceUpDown1_get, _sptraderapi.CTORATstpSPReqUpdMarketDataField_PriceUpDown1_set)

	# 最新价-上笔成交价格
    __swig_setmethods__["PriceUpDown2"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_PriceUpDown2_set
    __swig_getmethods__["PriceUpDown2"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_PriceUpDown2_get
    if _newclass:
        PriceUpDown2 = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarketDataField_PriceUpDown2_get, _sptraderapi.CTORATstpSPReqUpdMarketDataField_PriceUpDown2_set)

	# 持仓量
    __swig_setmethods__["OpenInterest"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_OpenInterest_set
    __swig_getmethods__["OpenInterest"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_OpenInterest_get
    if _newclass:
        OpenInterest = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarketDataField_OpenInterest_get, _sptraderapi.CTORATstpSPReqUpdMarketDataField_OpenInterest_set)

	# 该证券当前最优申买价格
    __swig_setmethods__["BidPrice1"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_BidPrice1_set
    __swig_getmethods__["BidPrice1"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_BidPrice1_get
    if _newclass:
        BidPrice1 = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarketDataField_BidPrice1_get, _sptraderapi.CTORATstpSPReqUpdMarketDataField_BidPrice1_set)

	# 该证券当前最优申卖价格
    __swig_setmethods__["AskPrice1"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_AskPrice1_set
    __swig_getmethods__["AskPrice1"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_AskPrice1_get
    if _newclass:
        AskPrice1 = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarketDataField_AskPrice1_get, _sptraderapi.CTORATstpSPReqUpdMarketDataField_AskPrice1_set)

	# 该证券当前最优价位申请买入的数量
    __swig_setmethods__["BidVolume1"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_BidVolume1_set
    __swig_getmethods__["BidVolume1"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_BidVolume1_get
    if _newclass:
        BidVolume1 = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarketDataField_BidVolume1_get, _sptraderapi.CTORATstpSPReqUpdMarketDataField_BidVolume1_set)

	# 该证券当前最优价位申请卖出的数量
    __swig_setmethods__["AskVolume1"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_AskVolume1_set
    __swig_getmethods__["AskVolume1"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_AskVolume1_get
    if _newclass:
        AskVolume1 = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarketDataField_AskVolume1_get, _sptraderapi.CTORATstpSPReqUpdMarketDataField_AskVolume1_set)

	# 该证券当前第二优申买价格
    __swig_setmethods__["BidPrice2"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_BidPrice2_set
    __swig_getmethods__["BidPrice2"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_BidPrice2_get
    if _newclass:
        BidPrice2 = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarketDataField_BidPrice2_get, _sptraderapi.CTORATstpSPReqUpdMarketDataField_BidPrice2_set)

	# 该证券当前第二优价位申请买入的数量
    __swig_setmethods__["BidVolume2"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_BidVolume2_set
    __swig_getmethods__["BidVolume2"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_BidVolume2_get
    if _newclass:
        BidVolume2 = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarketDataField_BidVolume2_get, _sptraderapi.CTORATstpSPReqUpdMarketDataField_BidVolume2_set)

	# 该证券当前第二优申卖价格
    __swig_setmethods__["AskPrice2"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_AskPrice2_set
    __swig_getmethods__["AskPrice2"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_AskPrice2_get
    if _newclass:
        AskPrice2 = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarketDataField_AskPrice2_get, _sptraderapi.CTORATstpSPReqUpdMarketDataField_AskPrice2_set)

	# 该证券当前第二优价位申请卖出的数量
    __swig_setmethods__["AskVolume2"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_AskVolume2_set
    __swig_getmethods__["AskVolume2"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_AskVolume2_get
    if _newclass:
        AskVolume2 = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarketDataField_AskVolume2_get, _sptraderapi.CTORATstpSPReqUpdMarketDataField_AskVolume2_set)

	# 该证券当前第三优申买价格
    __swig_setmethods__["BidPrice3"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_BidPrice3_set
    __swig_getmethods__["BidPrice3"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_BidPrice3_get
    if _newclass:
        BidPrice3 = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarketDataField_BidPrice3_get, _sptraderapi.CTORATstpSPReqUpdMarketDataField_BidPrice3_set)

	# 该证券当前第三优价位申请买入的数量
    __swig_setmethods__["BidVolume3"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_BidVolume3_set
    __swig_getmethods__["BidVolume3"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_BidVolume3_get
    if _newclass:
        BidVolume3 = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarketDataField_BidVolume3_get, _sptraderapi.CTORATstpSPReqUpdMarketDataField_BidVolume3_set)

	# 该证券当前第三优申卖价格
    __swig_setmethods__["AskPrice3"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_AskPrice3_set
    __swig_getmethods__["AskPrice3"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_AskPrice3_get
    if _newclass:
        AskPrice3 = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarketDataField_AskPrice3_get, _sptraderapi.CTORATstpSPReqUpdMarketDataField_AskPrice3_set)

	# 该证券当前第三优价位申请卖出的数量
    __swig_setmethods__["AskVolume3"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_AskVolume3_set
    __swig_getmethods__["AskVolume3"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_AskVolume3_get
    if _newclass:
        AskVolume3 = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarketDataField_AskVolume3_get, _sptraderapi.CTORATstpSPReqUpdMarketDataField_AskVolume3_set)

	# 该证券当前第四优申买价格
    __swig_setmethods__["BidPrice4"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_BidPrice4_set
    __swig_getmethods__["BidPrice4"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_BidPrice4_get
    if _newclass:
        BidPrice4 = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarketDataField_BidPrice4_get, _sptraderapi.CTORATstpSPReqUpdMarketDataField_BidPrice4_set)

	# 该证券当前第四优价位申请买入的数量
    __swig_setmethods__["BidVolume4"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_BidVolume4_set
    __swig_getmethods__["BidVolume4"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_BidVolume4_get
    if _newclass:
        BidVolume4 = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarketDataField_BidVolume4_get, _sptraderapi.CTORATstpSPReqUpdMarketDataField_BidVolume4_set)

	# 该证券当前第四优申卖价格
    __swig_setmethods__["AskPrice4"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_AskPrice4_set
    __swig_getmethods__["AskPrice4"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_AskPrice4_get
    if _newclass:
        AskPrice4 = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarketDataField_AskPrice4_get, _sptraderapi.CTORATstpSPReqUpdMarketDataField_AskPrice4_set)

	# 该证券当前第四优价位申请卖出的数量
    __swig_setmethods__["AskVolume4"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_AskVolume4_set
    __swig_getmethods__["AskVolume4"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_AskVolume4_get
    if _newclass:
        AskVolume4 = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarketDataField_AskVolume4_get, _sptraderapi.CTORATstpSPReqUpdMarketDataField_AskVolume4_set)

	# 该证券当前第五优申买价格
    __swig_setmethods__["BidPrice5"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_BidPrice5_set
    __swig_getmethods__["BidPrice5"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_BidPrice5_get
    if _newclass:
        BidPrice5 = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarketDataField_BidPrice5_get, _sptraderapi.CTORATstpSPReqUpdMarketDataField_BidPrice5_set)

	# 该证券当前第五优价位申请买入的数量
    __swig_setmethods__["BidVolume5"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_BidVolume5_set
    __swig_getmethods__["BidVolume5"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_BidVolume5_get
    if _newclass:
        BidVolume5 = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarketDataField_BidVolume5_get, _sptraderapi.CTORATstpSPReqUpdMarketDataField_BidVolume5_set)

	# 该证券当前第五优申卖价格
    __swig_setmethods__["AskPrice5"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_AskPrice5_set
    __swig_getmethods__["AskPrice5"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_AskPrice5_get
    if _newclass:
        AskPrice5 = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarketDataField_AskPrice5_get, _sptraderapi.CTORATstpSPReqUpdMarketDataField_AskPrice5_set)

	# 该证券当前第五优价位申请卖出的数量
    __swig_setmethods__["AskVolume5"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_AskVolume5_set
    __swig_getmethods__["AskVolume5"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_AskVolume5_get
    if _newclass:
        AskVolume5 = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarketDataField_AskVolume5_get, _sptraderapi.CTORATstpSPReqUpdMarketDataField_AskVolume5_set)

	# 最后修改时间
    __swig_setmethods__["UpdateTime"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_UpdateTime_set
    __swig_getmethods__["UpdateTime"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_UpdateTime_get
    if _newclass:
        UpdateTime = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarketDataField_UpdateTime_get, _sptraderapi.CTORATstpSPReqUpdMarketDataField_UpdateTime_set)

	# 最后修改毫秒
    __swig_setmethods__["UpdateMillisec"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_UpdateMillisec_set
    __swig_getmethods__["UpdateMillisec"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_UpdateMillisec_get
    if _newclass:
        UpdateMillisec = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarketDataField_UpdateMillisec_get, _sptraderapi.CTORATstpSPReqUpdMarketDataField_UpdateMillisec_set)

	# 行情产品实时状态
    __swig_setmethods__["MDSecurityStat"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_MDSecurityStat_set
    __swig_getmethods__["MDSecurityStat"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_MDSecurityStat_get
    if _newclass:
        MDSecurityStat = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarketDataField_MDSecurityStat_get, _sptraderapi.CTORATstpSPReqUpdMarketDataField_MDSecurityStat_set)

	# 合约结算价
    __swig_setmethods__["SettlementPrice"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_SettlementPrice_set
    __swig_getmethods__["SettlementPrice"] = _sptraderapi.CTORATstpSPReqUpdMarketDataField_SettlementPrice_get
    if _newclass:
        SettlementPrice = _swig_property(_sptraderapi.CTORATstpSPReqUpdMarketDataField_SettlementPrice_get, _sptraderapi.CTORATstpSPReqUpdMarketDataField_SettlementPrice_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdMarketDataField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdMarketDataField
    __del__ = lambda self: None
CTORATstpSPReqUpdMarketDataField_swigregister = _sptraderapi.CTORATstpSPReqUpdMarketDataField_swigregister
CTORATstpSPReqUpdMarketDataField_swigregister(CTORATstpSPReqUpdMarketDataField)




#########################################请求删除MarketData############################################
class CTORATstpSPReqDelMarketDataField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelMarketDataField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelMarketDataField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelMarketDataField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelMarketDataField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqDelMarketDataField_ExchangeID_get, _sptraderapi.CTORATstpSPReqDelMarketDataField_ExchangeID_set)

	# 证券代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqDelMarketDataField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqDelMarketDataField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqDelMarketDataField_SecurityID_get, _sptraderapi.CTORATstpSPReqDelMarketDataField_SecurityID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelMarketDataField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelMarketDataField
    __del__ = lambda self: None
CTORATstpSPReqDelMarketDataField_swigregister = _sptraderapi.CTORATstpSPReqDelMarketDataField_swigregister
CTORATstpSPReqDelMarketDataField_swigregister(CTORATstpSPReqDelMarketDataField)




#########################################请求插入MdOffer############################################
class CTORATstpSPReqInsMdOfferField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsMdOfferField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsMdOfferField, name)
    __repr__ = _swig_repr

	# 行情服务器编号
    __swig_setmethods__["MdOfferID"] = _sptraderapi.CTORATstpSPReqInsMdOfferField_MdOfferID_set
    __swig_getmethods__["MdOfferID"] = _sptraderapi.CTORATstpSPReqInsMdOfferField_MdOfferID_get
    if _newclass:
        MdOfferID = _swig_property(_sptraderapi.CTORATstpSPReqInsMdOfferField_MdOfferID_get, _sptraderapi.CTORATstpSPReqInsMdOfferField_MdOfferID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsMdOfferField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsMdOfferField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqInsMdOfferField_ExchangeID_get, _sptraderapi.CTORATstpSPReqInsMdOfferField_ExchangeID_set)

	# 连接类型
    __swig_setmethods__["ConnectType"] = _sptraderapi.CTORATstpSPReqInsMdOfferField_ConnectType_set
    __swig_getmethods__["ConnectType"] = _sptraderapi.CTORATstpSPReqInsMdOfferField_ConnectType_get
    if _newclass:
        ConnectType = _swig_property(_sptraderapi.CTORATstpSPReqInsMdOfferField_ConnectType_get, _sptraderapi.CTORATstpSPReqInsMdOfferField_ConnectType_set)

	# 连接字符串
    __swig_setmethods__["ConnectString"] = _sptraderapi.CTORATstpSPReqInsMdOfferField_ConnectString_set
    __swig_getmethods__["ConnectString"] = _sptraderapi.CTORATstpSPReqInsMdOfferField_ConnectString_get
    if _newclass:
        ConnectString = _swig_property(_sptraderapi.CTORATstpSPReqInsMdOfferField_ConnectString_get, _sptraderapi.CTORATstpSPReqInsMdOfferField_ConnectString_set)

	# 用户名
    __swig_setmethods__["UserName"] = _sptraderapi.CTORATstpSPReqInsMdOfferField_UserName_set
    __swig_getmethods__["UserName"] = _sptraderapi.CTORATstpSPReqInsMdOfferField_UserName_get
    if _newclass:
        UserName = _swig_property(_sptraderapi.CTORATstpSPReqInsMdOfferField_UserName_get, _sptraderapi.CTORATstpSPReqInsMdOfferField_UserName_set)

	# 密码
    __swig_setmethods__["UserPassword"] = _sptraderapi.CTORATstpSPReqInsMdOfferField_UserPassword_set
    __swig_getmethods__["UserPassword"] = _sptraderapi.CTORATstpSPReqInsMdOfferField_UserPassword_get
    if _newclass:
        UserPassword = _swig_property(_sptraderapi.CTORATstpSPReqInsMdOfferField_UserPassword_get, _sptraderapi.CTORATstpSPReqInsMdOfferField_UserPassword_set)

	# 通用字段1
    __swig_setmethods__["CommString1"] = _sptraderapi.CTORATstpSPReqInsMdOfferField_CommString1_set
    __swig_getmethods__["CommString1"] = _sptraderapi.CTORATstpSPReqInsMdOfferField_CommString1_get
    if _newclass:
        CommString1 = _swig_property(_sptraderapi.CTORATstpSPReqInsMdOfferField_CommString1_get, _sptraderapi.CTORATstpSPReqInsMdOfferField_CommString1_set)

	# 通用字段2
    __swig_setmethods__["CommString2"] = _sptraderapi.CTORATstpSPReqInsMdOfferField_CommString2_set
    __swig_getmethods__["CommString2"] = _sptraderapi.CTORATstpSPReqInsMdOfferField_CommString2_get
    if _newclass:
        CommString2 = _swig_property(_sptraderapi.CTORATstpSPReqInsMdOfferField_CommString2_get, _sptraderapi.CTORATstpSPReqInsMdOfferField_CommString2_set)

	# 通用字段3
    __swig_setmethods__["CommString3"] = _sptraderapi.CTORATstpSPReqInsMdOfferField_CommString3_set
    __swig_getmethods__["CommString3"] = _sptraderapi.CTORATstpSPReqInsMdOfferField_CommString3_get
    if _newclass:
        CommString3 = _swig_property(_sptraderapi.CTORATstpSPReqInsMdOfferField_CommString3_get, _sptraderapi.CTORATstpSPReqInsMdOfferField_CommString3_set)

	# 应用名称
    __swig_setmethods__["AppName"] = _sptraderapi.CTORATstpSPReqInsMdOfferField_AppName_set
    __swig_getmethods__["AppName"] = _sptraderapi.CTORATstpSPReqInsMdOfferField_AppName_get
    if _newclass:
        AppName = _swig_property(_sptraderapi.CTORATstpSPReqInsMdOfferField_AppName_get, _sptraderapi.CTORATstpSPReqInsMdOfferField_AppName_set)

	# 说明该交易员的报盘程序的编号
    __swig_setmethods__["RunID"] = _sptraderapi.CTORATstpSPReqInsMdOfferField_RunID_set
    __swig_getmethods__["RunID"] = _sptraderapi.CTORATstpSPReqInsMdOfferField_RunID_get
    if _newclass:
        RunID = _swig_property(_sptraderapi.CTORATstpSPReqInsMdOfferField_RunID_get, _sptraderapi.CTORATstpSPReqInsMdOfferField_RunID_set)

	# 前置ID
    __swig_setmethods__["FrontID"] = _sptraderapi.CTORATstpSPReqInsMdOfferField_FrontID_set
    __swig_getmethods__["FrontID"] = _sptraderapi.CTORATstpSPReqInsMdOfferField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_sptraderapi.CTORATstpSPReqInsMdOfferField_FrontID_get, _sptraderapi.CTORATstpSPReqInsMdOfferField_FrontID_set)

	# 会话ID
    __swig_setmethods__["SessionID"] = _sptraderapi.CTORATstpSPReqInsMdOfferField_SessionID_set
    __swig_getmethods__["SessionID"] = _sptraderapi.CTORATstpSPReqInsMdOfferField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_sptraderapi.CTORATstpSPReqInsMdOfferField_SessionID_get, _sptraderapi.CTORATstpSPReqInsMdOfferField_SessionID_set)

	# 交易所交易员连接状态
    __swig_setmethods__["ConnectStatus"] = _sptraderapi.CTORATstpSPReqInsMdOfferField_ConnectStatus_set
    __swig_getmethods__["ConnectStatus"] = _sptraderapi.CTORATstpSPReqInsMdOfferField_ConnectStatus_get
    if _newclass:
        ConnectStatus = _swig_property(_sptraderapi.CTORATstpSPReqInsMdOfferField_ConnectStatus_get, _sptraderapi.CTORATstpSPReqInsMdOfferField_ConnectStatus_set)

	# 发出连接请求的日期
    __swig_setmethods__["ConnectRequestDate"] = _sptraderapi.CTORATstpSPReqInsMdOfferField_ConnectRequestDate_set
    __swig_getmethods__["ConnectRequestDate"] = _sptraderapi.CTORATstpSPReqInsMdOfferField_ConnectRequestDate_get
    if _newclass:
        ConnectRequestDate = _swig_property(_sptraderapi.CTORATstpSPReqInsMdOfferField_ConnectRequestDate_get, _sptraderapi.CTORATstpSPReqInsMdOfferField_ConnectRequestDate_set)

	# 发出连接请求的时间
    __swig_setmethods__["ConnectRequestTime"] = _sptraderapi.CTORATstpSPReqInsMdOfferField_ConnectRequestTime_set
    __swig_getmethods__["ConnectRequestTime"] = _sptraderapi.CTORATstpSPReqInsMdOfferField_ConnectRequestTime_get
    if _newclass:
        ConnectRequestTime = _swig_property(_sptraderapi.CTORATstpSPReqInsMdOfferField_ConnectRequestTime_get, _sptraderapi.CTORATstpSPReqInsMdOfferField_ConnectRequestTime_set)

	# 完成连接日期
    __swig_setmethods__["ConnectDate"] = _sptraderapi.CTORATstpSPReqInsMdOfferField_ConnectDate_set
    __swig_getmethods__["ConnectDate"] = _sptraderapi.CTORATstpSPReqInsMdOfferField_ConnectDate_get
    if _newclass:
        ConnectDate = _swig_property(_sptraderapi.CTORATstpSPReqInsMdOfferField_ConnectDate_get, _sptraderapi.CTORATstpSPReqInsMdOfferField_ConnectDate_set)

	# 完成连接时间
    __swig_setmethods__["ConnectTime"] = _sptraderapi.CTORATstpSPReqInsMdOfferField_ConnectTime_set
    __swig_getmethods__["ConnectTime"] = _sptraderapi.CTORATstpSPReqInsMdOfferField_ConnectTime_get
    if _newclass:
        ConnectTime = _swig_property(_sptraderapi.CTORATstpSPReqInsMdOfferField_ConnectTime_get, _sptraderapi.CTORATstpSPReqInsMdOfferField_ConnectTime_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsMdOfferField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsMdOfferField
    __del__ = lambda self: None
CTORATstpSPReqInsMdOfferField_swigregister = _sptraderapi.CTORATstpSPReqInsMdOfferField_swigregister
CTORATstpSPReqInsMdOfferField_swigregister(CTORATstpSPReqInsMdOfferField)




#########################################请求更新MdOffer############################################
class CTORATstpSPReqUpdMdOfferField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdMdOfferField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdMdOfferField, name)
    __repr__ = _swig_repr

	# 行情服务器编号
    __swig_setmethods__["MdOfferID"] = _sptraderapi.CTORATstpSPReqUpdMdOfferField_MdOfferID_set
    __swig_getmethods__["MdOfferID"] = _sptraderapi.CTORATstpSPReqUpdMdOfferField_MdOfferID_get
    if _newclass:
        MdOfferID = _swig_property(_sptraderapi.CTORATstpSPReqUpdMdOfferField_MdOfferID_get, _sptraderapi.CTORATstpSPReqUpdMdOfferField_MdOfferID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdMdOfferField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdMdOfferField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqUpdMdOfferField_ExchangeID_get, _sptraderapi.CTORATstpSPReqUpdMdOfferField_ExchangeID_set)

	# 连接类型
    __swig_setmethods__["ConnectType"] = _sptraderapi.CTORATstpSPReqUpdMdOfferField_ConnectType_set
    __swig_getmethods__["ConnectType"] = _sptraderapi.CTORATstpSPReqUpdMdOfferField_ConnectType_get
    if _newclass:
        ConnectType = _swig_property(_sptraderapi.CTORATstpSPReqUpdMdOfferField_ConnectType_get, _sptraderapi.CTORATstpSPReqUpdMdOfferField_ConnectType_set)

	# 连接字符串
    __swig_setmethods__["ConnectString"] = _sptraderapi.CTORATstpSPReqUpdMdOfferField_ConnectString_set
    __swig_getmethods__["ConnectString"] = _sptraderapi.CTORATstpSPReqUpdMdOfferField_ConnectString_get
    if _newclass:
        ConnectString = _swig_property(_sptraderapi.CTORATstpSPReqUpdMdOfferField_ConnectString_get, _sptraderapi.CTORATstpSPReqUpdMdOfferField_ConnectString_set)

	# 用户名
    __swig_setmethods__["UserName"] = _sptraderapi.CTORATstpSPReqUpdMdOfferField_UserName_set
    __swig_getmethods__["UserName"] = _sptraderapi.CTORATstpSPReqUpdMdOfferField_UserName_get
    if _newclass:
        UserName = _swig_property(_sptraderapi.CTORATstpSPReqUpdMdOfferField_UserName_get, _sptraderapi.CTORATstpSPReqUpdMdOfferField_UserName_set)

	# 密码
    __swig_setmethods__["UserPassword"] = _sptraderapi.CTORATstpSPReqUpdMdOfferField_UserPassword_set
    __swig_getmethods__["UserPassword"] = _sptraderapi.CTORATstpSPReqUpdMdOfferField_UserPassword_get
    if _newclass:
        UserPassword = _swig_property(_sptraderapi.CTORATstpSPReqUpdMdOfferField_UserPassword_get, _sptraderapi.CTORATstpSPReqUpdMdOfferField_UserPassword_set)

	# 通用字段1
    __swig_setmethods__["CommString1"] = _sptraderapi.CTORATstpSPReqUpdMdOfferField_CommString1_set
    __swig_getmethods__["CommString1"] = _sptraderapi.CTORATstpSPReqUpdMdOfferField_CommString1_get
    if _newclass:
        CommString1 = _swig_property(_sptraderapi.CTORATstpSPReqUpdMdOfferField_CommString1_get, _sptraderapi.CTORATstpSPReqUpdMdOfferField_CommString1_set)

	# 通用字段2
    __swig_setmethods__["CommString2"] = _sptraderapi.CTORATstpSPReqUpdMdOfferField_CommString2_set
    __swig_getmethods__["CommString2"] = _sptraderapi.CTORATstpSPReqUpdMdOfferField_CommString2_get
    if _newclass:
        CommString2 = _swig_property(_sptraderapi.CTORATstpSPReqUpdMdOfferField_CommString2_get, _sptraderapi.CTORATstpSPReqUpdMdOfferField_CommString2_set)

	# 通用字段3
    __swig_setmethods__["CommString3"] = _sptraderapi.CTORATstpSPReqUpdMdOfferField_CommString3_set
    __swig_getmethods__["CommString3"] = _sptraderapi.CTORATstpSPReqUpdMdOfferField_CommString3_get
    if _newclass:
        CommString3 = _swig_property(_sptraderapi.CTORATstpSPReqUpdMdOfferField_CommString3_get, _sptraderapi.CTORATstpSPReqUpdMdOfferField_CommString3_set)

	# 应用名称
    __swig_setmethods__["AppName"] = _sptraderapi.CTORATstpSPReqUpdMdOfferField_AppName_set
    __swig_getmethods__["AppName"] = _sptraderapi.CTORATstpSPReqUpdMdOfferField_AppName_get
    if _newclass:
        AppName = _swig_property(_sptraderapi.CTORATstpSPReqUpdMdOfferField_AppName_get, _sptraderapi.CTORATstpSPReqUpdMdOfferField_AppName_set)

	# 说明该交易员的报盘程序的编号
    __swig_setmethods__["RunID"] = _sptraderapi.CTORATstpSPReqUpdMdOfferField_RunID_set
    __swig_getmethods__["RunID"] = _sptraderapi.CTORATstpSPReqUpdMdOfferField_RunID_get
    if _newclass:
        RunID = _swig_property(_sptraderapi.CTORATstpSPReqUpdMdOfferField_RunID_get, _sptraderapi.CTORATstpSPReqUpdMdOfferField_RunID_set)

	# 前置ID
    __swig_setmethods__["FrontID"] = _sptraderapi.CTORATstpSPReqUpdMdOfferField_FrontID_set
    __swig_getmethods__["FrontID"] = _sptraderapi.CTORATstpSPReqUpdMdOfferField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_sptraderapi.CTORATstpSPReqUpdMdOfferField_FrontID_get, _sptraderapi.CTORATstpSPReqUpdMdOfferField_FrontID_set)

	# 会话ID
    __swig_setmethods__["SessionID"] = _sptraderapi.CTORATstpSPReqUpdMdOfferField_SessionID_set
    __swig_getmethods__["SessionID"] = _sptraderapi.CTORATstpSPReqUpdMdOfferField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_sptraderapi.CTORATstpSPReqUpdMdOfferField_SessionID_get, _sptraderapi.CTORATstpSPReqUpdMdOfferField_SessionID_set)

	# 交易所交易员连接状态
    __swig_setmethods__["ConnectStatus"] = _sptraderapi.CTORATstpSPReqUpdMdOfferField_ConnectStatus_set
    __swig_getmethods__["ConnectStatus"] = _sptraderapi.CTORATstpSPReqUpdMdOfferField_ConnectStatus_get
    if _newclass:
        ConnectStatus = _swig_property(_sptraderapi.CTORATstpSPReqUpdMdOfferField_ConnectStatus_get, _sptraderapi.CTORATstpSPReqUpdMdOfferField_ConnectStatus_set)

	# 发出连接请求的日期
    __swig_setmethods__["ConnectRequestDate"] = _sptraderapi.CTORATstpSPReqUpdMdOfferField_ConnectRequestDate_set
    __swig_getmethods__["ConnectRequestDate"] = _sptraderapi.CTORATstpSPReqUpdMdOfferField_ConnectRequestDate_get
    if _newclass:
        ConnectRequestDate = _swig_property(_sptraderapi.CTORATstpSPReqUpdMdOfferField_ConnectRequestDate_get, _sptraderapi.CTORATstpSPReqUpdMdOfferField_ConnectRequestDate_set)

	# 发出连接请求的时间
    __swig_setmethods__["ConnectRequestTime"] = _sptraderapi.CTORATstpSPReqUpdMdOfferField_ConnectRequestTime_set
    __swig_getmethods__["ConnectRequestTime"] = _sptraderapi.CTORATstpSPReqUpdMdOfferField_ConnectRequestTime_get
    if _newclass:
        ConnectRequestTime = _swig_property(_sptraderapi.CTORATstpSPReqUpdMdOfferField_ConnectRequestTime_get, _sptraderapi.CTORATstpSPReqUpdMdOfferField_ConnectRequestTime_set)

	# 完成连接日期
    __swig_setmethods__["ConnectDate"] = _sptraderapi.CTORATstpSPReqUpdMdOfferField_ConnectDate_set
    __swig_getmethods__["ConnectDate"] = _sptraderapi.CTORATstpSPReqUpdMdOfferField_ConnectDate_get
    if _newclass:
        ConnectDate = _swig_property(_sptraderapi.CTORATstpSPReqUpdMdOfferField_ConnectDate_get, _sptraderapi.CTORATstpSPReqUpdMdOfferField_ConnectDate_set)

	# 完成连接时间
    __swig_setmethods__["ConnectTime"] = _sptraderapi.CTORATstpSPReqUpdMdOfferField_ConnectTime_set
    __swig_getmethods__["ConnectTime"] = _sptraderapi.CTORATstpSPReqUpdMdOfferField_ConnectTime_get
    if _newclass:
        ConnectTime = _swig_property(_sptraderapi.CTORATstpSPReqUpdMdOfferField_ConnectTime_get, _sptraderapi.CTORATstpSPReqUpdMdOfferField_ConnectTime_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdMdOfferField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdMdOfferField
    __del__ = lambda self: None
CTORATstpSPReqUpdMdOfferField_swigregister = _sptraderapi.CTORATstpSPReqUpdMdOfferField_swigregister
CTORATstpSPReqUpdMdOfferField_swigregister(CTORATstpSPReqUpdMdOfferField)




#########################################请求删除MdOffer############################################
class CTORATstpSPReqDelMdOfferField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelMdOfferField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelMdOfferField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelMdOfferField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelMdOfferField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqDelMdOfferField_ExchangeID_get, _sptraderapi.CTORATstpSPReqDelMdOfferField_ExchangeID_set)

	# 行情服务器编号
    __swig_setmethods__["MdOfferID"] = _sptraderapi.CTORATstpSPReqDelMdOfferField_MdOfferID_set
    __swig_getmethods__["MdOfferID"] = _sptraderapi.CTORATstpSPReqDelMdOfferField_MdOfferID_get
    if _newclass:
        MdOfferID = _swig_property(_sptraderapi.CTORATstpSPReqDelMdOfferField_MdOfferID_get, _sptraderapi.CTORATstpSPReqDelMdOfferField_MdOfferID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelMdOfferField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelMdOfferField
    __del__ = lambda self: None
CTORATstpSPReqDelMdOfferField_swigregister = _sptraderapi.CTORATstpSPReqDelMdOfferField_swigregister
CTORATstpSPReqDelMdOfferField_swigregister(CTORATstpSPReqDelMdOfferField)




#########################################请求插入PBU############################################
class CTORATstpSPReqInsPBUField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsPBUField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsPBUField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsPBUField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsPBUField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqInsPBUField_ExchangeID_get, _sptraderapi.CTORATstpSPReqInsPBUField_ExchangeID_set)

	# 交易单元代码
    __swig_setmethods__["PbuID"] = _sptraderapi.CTORATstpSPReqInsPBUField_PbuID_set
    __swig_getmethods__["PbuID"] = _sptraderapi.CTORATstpSPReqInsPBUField_PbuID_get
    if _newclass:
        PbuID = _swig_property(_sptraderapi.CTORATstpSPReqInsPBUField_PbuID_get, _sptraderapi.CTORATstpSPReqInsPBUField_PbuID_set)

	# 交易单元名称
    __swig_setmethods__["PbuName"] = _sptraderapi.CTORATstpSPReqInsPBUField_PbuName_set
    __swig_getmethods__["PbuName"] = _sptraderapi.CTORATstpSPReqInsPBUField_PbuName_get
    if _newclass:
        PbuName = _swig_property(_sptraderapi.CTORATstpSPReqInsPBUField_PbuName_get, _sptraderapi.CTORATstpSPReqInsPBUField_PbuName_set)

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqInsPBUField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqInsPBUField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPReqInsPBUField_MarketID_get, _sptraderapi.CTORATstpSPReqInsPBUField_MarketID_set)

	# 分经纪公司进行编号，从1开始递增，报单编号时会使用该信息，如001
    __swig_setmethods__["PbuInstallID"] = _sptraderapi.CTORATstpSPReqInsPBUField_PbuInstallID_set
    __swig_getmethods__["PbuInstallID"] = _sptraderapi.CTORATstpSPReqInsPBUField_PbuInstallID_get
    if _newclass:
        PbuInstallID = _swig_property(_sptraderapi.CTORATstpSPReqInsPBUField_PbuInstallID_get, _sptraderapi.CTORATstpSPReqInsPBUField_PbuInstallID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsPBUField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsPBUField
    __del__ = lambda self: None
CTORATstpSPReqInsPBUField_swigregister = _sptraderapi.CTORATstpSPReqInsPBUField_swigregister
CTORATstpSPReqInsPBUField_swigregister(CTORATstpSPReqInsPBUField)




#########################################请求更新PBU############################################
class CTORATstpSPReqUpdPBUField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdPBUField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdPBUField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdPBUField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdPBUField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqUpdPBUField_ExchangeID_get, _sptraderapi.CTORATstpSPReqUpdPBUField_ExchangeID_set)

	# 交易单元代码
    __swig_setmethods__["PbuID"] = _sptraderapi.CTORATstpSPReqUpdPBUField_PbuID_set
    __swig_getmethods__["PbuID"] = _sptraderapi.CTORATstpSPReqUpdPBUField_PbuID_get
    if _newclass:
        PbuID = _swig_property(_sptraderapi.CTORATstpSPReqUpdPBUField_PbuID_get, _sptraderapi.CTORATstpSPReqUpdPBUField_PbuID_set)

	# 交易单元名称
    __swig_setmethods__["PbuName"] = _sptraderapi.CTORATstpSPReqUpdPBUField_PbuName_set
    __swig_getmethods__["PbuName"] = _sptraderapi.CTORATstpSPReqUpdPBUField_PbuName_get
    if _newclass:
        PbuName = _swig_property(_sptraderapi.CTORATstpSPReqUpdPBUField_PbuName_get, _sptraderapi.CTORATstpSPReqUpdPBUField_PbuName_set)

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqUpdPBUField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqUpdPBUField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPReqUpdPBUField_MarketID_get, _sptraderapi.CTORATstpSPReqUpdPBUField_MarketID_set)

	# 分经纪公司进行编号，从1开始递增，报单编号时会使用该信息，如001
    __swig_setmethods__["PbuInstallID"] = _sptraderapi.CTORATstpSPReqUpdPBUField_PbuInstallID_set
    __swig_getmethods__["PbuInstallID"] = _sptraderapi.CTORATstpSPReqUpdPBUField_PbuInstallID_get
    if _newclass:
        PbuInstallID = _swig_property(_sptraderapi.CTORATstpSPReqUpdPBUField_PbuInstallID_get, _sptraderapi.CTORATstpSPReqUpdPBUField_PbuInstallID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdPBUField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdPBUField
    __del__ = lambda self: None
CTORATstpSPReqUpdPBUField_swigregister = _sptraderapi.CTORATstpSPReqUpdPBUField_swigregister
CTORATstpSPReqUpdPBUField_swigregister(CTORATstpSPReqUpdPBUField)




#########################################请求删除PBU############################################
class CTORATstpSPReqDelPBUField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelPBUField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelPBUField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelPBUField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelPBUField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqDelPBUField_ExchangeID_get, _sptraderapi.CTORATstpSPReqDelPBUField_ExchangeID_set)

	# 交易单元代码
    __swig_setmethods__["PbuID"] = _sptraderapi.CTORATstpSPReqDelPBUField_PbuID_set
    __swig_getmethods__["PbuID"] = _sptraderapi.CTORATstpSPReqDelPBUField_PbuID_get
    if _newclass:
        PbuID = _swig_property(_sptraderapi.CTORATstpSPReqDelPBUField_PbuID_get, _sptraderapi.CTORATstpSPReqDelPBUField_PbuID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelPBUField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelPBUField
    __del__ = lambda self: None
CTORATstpSPReqDelPBUField_swigregister = _sptraderapi.CTORATstpSPReqDelPBUField_swigregister
CTORATstpSPReqDelPBUField_swigregister(CTORATstpSPReqDelPBUField)




#########################################请求插入PlatformStatus############################################
class CTORATstpSPReqInsPlatformStatusField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsPlatformStatusField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsPlatformStatusField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsPlatformStatusField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsPlatformStatusField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqInsPlatformStatusField_ExchangeID_get, _sptraderapi.CTORATstpSPReqInsPlatformStatusField_ExchangeID_set)

	# 平台类型
    __swig_setmethods__["PlatformType"] = _sptraderapi.CTORATstpSPReqInsPlatformStatusField_PlatformType_set
    __swig_getmethods__["PlatformType"] = _sptraderapi.CTORATstpSPReqInsPlatformStatusField_PlatformType_get
    if _newclass:
        PlatformType = _swig_property(_sptraderapi.CTORATstpSPReqInsPlatformStatusField_PlatformType_get, _sptraderapi.CTORATstpSPReqInsPlatformStatusField_PlatformType_set)

	# 平台状态
    __swig_setmethods__["PlatformStatus"] = _sptraderapi.CTORATstpSPReqInsPlatformStatusField_PlatformStatus_set
    __swig_getmethods__["PlatformStatus"] = _sptraderapi.CTORATstpSPReqInsPlatformStatusField_PlatformStatus_get
    if _newclass:
        PlatformStatus = _swig_property(_sptraderapi.CTORATstpSPReqInsPlatformStatusField_PlatformStatus_get, _sptraderapi.CTORATstpSPReqInsPlatformStatusField_PlatformStatus_set)

	# 交易报盘编号
    __swig_setmethods__["TraderOfferID"] = _sptraderapi.CTORATstpSPReqInsPlatformStatusField_TraderOfferID_set
    __swig_getmethods__["TraderOfferID"] = _sptraderapi.CTORATstpSPReqInsPlatformStatusField_TraderOfferID_get
    if _newclass:
        TraderOfferID = _swig_property(_sptraderapi.CTORATstpSPReqInsPlatformStatusField_TraderOfferID_get, _sptraderapi.CTORATstpSPReqInsPlatformStatusField_TraderOfferID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsPlatformStatusField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsPlatformStatusField
    __del__ = lambda self: None
CTORATstpSPReqInsPlatformStatusField_swigregister = _sptraderapi.CTORATstpSPReqInsPlatformStatusField_swigregister
CTORATstpSPReqInsPlatformStatusField_swigregister(CTORATstpSPReqInsPlatformStatusField)




#########################################请求更新PlatformStatus############################################
class CTORATstpSPReqUpdPlatformStatusField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdPlatformStatusField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdPlatformStatusField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdPlatformStatusField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdPlatformStatusField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqUpdPlatformStatusField_ExchangeID_get, _sptraderapi.CTORATstpSPReqUpdPlatformStatusField_ExchangeID_set)

	# 平台类型
    __swig_setmethods__["PlatformType"] = _sptraderapi.CTORATstpSPReqUpdPlatformStatusField_PlatformType_set
    __swig_getmethods__["PlatformType"] = _sptraderapi.CTORATstpSPReqUpdPlatformStatusField_PlatformType_get
    if _newclass:
        PlatformType = _swig_property(_sptraderapi.CTORATstpSPReqUpdPlatformStatusField_PlatformType_get, _sptraderapi.CTORATstpSPReqUpdPlatformStatusField_PlatformType_set)

	# 平台状态
    __swig_setmethods__["PlatformStatus"] = _sptraderapi.CTORATstpSPReqUpdPlatformStatusField_PlatformStatus_set
    __swig_getmethods__["PlatformStatus"] = _sptraderapi.CTORATstpSPReqUpdPlatformStatusField_PlatformStatus_get
    if _newclass:
        PlatformStatus = _swig_property(_sptraderapi.CTORATstpSPReqUpdPlatformStatusField_PlatformStatus_get, _sptraderapi.CTORATstpSPReqUpdPlatformStatusField_PlatformStatus_set)

	# 交易报盘编号
    __swig_setmethods__["TraderOfferID"] = _sptraderapi.CTORATstpSPReqUpdPlatformStatusField_TraderOfferID_set
    __swig_getmethods__["TraderOfferID"] = _sptraderapi.CTORATstpSPReqUpdPlatformStatusField_TraderOfferID_get
    if _newclass:
        TraderOfferID = _swig_property(_sptraderapi.CTORATstpSPReqUpdPlatformStatusField_TraderOfferID_get, _sptraderapi.CTORATstpSPReqUpdPlatformStatusField_TraderOfferID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdPlatformStatusField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdPlatformStatusField
    __del__ = lambda self: None
CTORATstpSPReqUpdPlatformStatusField_swigregister = _sptraderapi.CTORATstpSPReqUpdPlatformStatusField_swigregister
CTORATstpSPReqUpdPlatformStatusField_swigregister(CTORATstpSPReqUpdPlatformStatusField)




#########################################请求删除PlatformStatus############################################
class CTORATstpSPReqDelPlatformStatusField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelPlatformStatusField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelPlatformStatusField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelPlatformStatusField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelPlatformStatusField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqDelPlatformStatusField_ExchangeID_get, _sptraderapi.CTORATstpSPReqDelPlatformStatusField_ExchangeID_set)

	# 交易报盘编号
    __swig_setmethods__["TraderOfferID"] = _sptraderapi.CTORATstpSPReqDelPlatformStatusField_TraderOfferID_set
    __swig_getmethods__["TraderOfferID"] = _sptraderapi.CTORATstpSPReqDelPlatformStatusField_TraderOfferID_get
    if _newclass:
        TraderOfferID = _swig_property(_sptraderapi.CTORATstpSPReqDelPlatformStatusField_TraderOfferID_get, _sptraderapi.CTORATstpSPReqDelPlatformStatusField_TraderOfferID_set)

	# 平台类型
    __swig_setmethods__["PlatformType"] = _sptraderapi.CTORATstpSPReqDelPlatformStatusField_PlatformType_set
    __swig_getmethods__["PlatformType"] = _sptraderapi.CTORATstpSPReqDelPlatformStatusField_PlatformType_get
    if _newclass:
        PlatformType = _swig_property(_sptraderapi.CTORATstpSPReqDelPlatformStatusField_PlatformType_get, _sptraderapi.CTORATstpSPReqDelPlatformStatusField_PlatformType_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelPlatformStatusField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelPlatformStatusField
    __del__ = lambda self: None
CTORATstpSPReqDelPlatformStatusField_swigregister = _sptraderapi.CTORATstpSPReqDelPlatformStatusField_swigregister
CTORATstpSPReqDelPlatformStatusField_swigregister(CTORATstpSPReqDelPlatformStatusField)




#########################################请求插入Security############################################
class CTORATstpSPReqInsSecurityField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsSecurityField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsSecurityField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsSecurityField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsSecurityField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityField_ExchangeID_get, _sptraderapi.CTORATstpSPReqInsSecurityField_ExchangeID_set)

	# 合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqInsSecurityField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqInsSecurityField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityField_SecurityID_get, _sptraderapi.CTORATstpSPReqInsSecurityField_SecurityID_set)

	# 交易所合约代码
    __swig_setmethods__["ExchSecurityID"] = _sptraderapi.CTORATstpSPReqInsSecurityField_ExchSecurityID_set
    __swig_getmethods__["ExchSecurityID"] = _sptraderapi.CTORATstpSPReqInsSecurityField_ExchSecurityID_get
    if _newclass:
        ExchSecurityID = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityField_ExchSecurityID_get, _sptraderapi.CTORATstpSPReqInsSecurityField_ExchSecurityID_set)

	# 证券名称
    __swig_setmethods__["SecurityName"] = _sptraderapi.CTORATstpSPReqInsSecurityField_SecurityName_set
    __swig_getmethods__["SecurityName"] = _sptraderapi.CTORATstpSPReqInsSecurityField_SecurityName_get
    if _newclass:
        SecurityName = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityField_SecurityName_get, _sptraderapi.CTORATstpSPReqInsSecurityField_SecurityName_set)

	# 基础证券代码
    __swig_setmethods__["UnderlyingSecurityID"] = _sptraderapi.CTORATstpSPReqInsSecurityField_UnderlyingSecurityID_set
    __swig_getmethods__["UnderlyingSecurityID"] = _sptraderapi.CTORATstpSPReqInsSecurityField_UnderlyingSecurityID_get
    if _newclass:
        UnderlyingSecurityID = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityField_UnderlyingSecurityID_get, _sptraderapi.CTORATstpSPReqInsSecurityField_UnderlyingSecurityID_set)

	# 基础证券名称
    __swig_setmethods__["UnderlyingSecurityName"] = _sptraderapi.CTORATstpSPReqInsSecurityField_UnderlyingSecurityName_set
    __swig_getmethods__["UnderlyingSecurityName"] = _sptraderapi.CTORATstpSPReqInsSecurityField_UnderlyingSecurityName_get
    if _newclass:
        UnderlyingSecurityName = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityField_UnderlyingSecurityName_get, _sptraderapi.CTORATstpSPReqInsSecurityField_UnderlyingSecurityName_set)

	# 合约单位，品种的每手交易的规定数量，针对基础的商品
    __swig_setmethods__["UnderlyingMultiple"] = _sptraderapi.CTORATstpSPReqInsSecurityField_UnderlyingMultiple_set
    __swig_getmethods__["UnderlyingMultiple"] = _sptraderapi.CTORATstpSPReqInsSecurityField_UnderlyingMultiple_get
    if _newclass:
        UnderlyingMultiple = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityField_UnderlyingMultiple_get, _sptraderapi.CTORATstpSPReqInsSecurityField_UnderlyingMultiple_set)

	# 期权执行方式，0：欧式， 1：美式
    __swig_setmethods__["StrikeMode"] = _sptraderapi.CTORATstpSPReqInsSecurityField_StrikeMode_set
    __swig_getmethods__["StrikeMode"] = _sptraderapi.CTORATstpSPReqInsSecurityField_StrikeMode_get
    if _newclass:
        StrikeMode = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityField_StrikeMode_get, _sptraderapi.CTORATstpSPReqInsSecurityField_StrikeMode_set)

	# 看涨、看跌
    __swig_setmethods__["OptionsType"] = _sptraderapi.CTORATstpSPReqInsSecurityField_OptionsType_set
    __swig_getmethods__["OptionsType"] = _sptraderapi.CTORATstpSPReqInsSecurityField_OptionsType_get
    if _newclass:
        OptionsType = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityField_OptionsType_get, _sptraderapi.CTORATstpSPReqInsSecurityField_OptionsType_set)

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqInsSecurityField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqInsSecurityField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityField_MarketID_get, _sptraderapi.CTORATstpSPReqInsSecurityField_MarketID_set)

	# 证券市场中的具体品种，如上海股票
    __swig_setmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqInsSecurityField_ProductID_set
    __swig_getmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqInsSecurityField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityField_ProductID_get, _sptraderapi.CTORATstpSPReqInsSecurityField_ProductID_set)

	# 证券品种中的具体类别，如上海A股
    __swig_setmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqInsSecurityField_SecurityType_set
    __swig_getmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqInsSecurityField_SecurityType_get
    if _newclass:
        SecurityType = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityField_SecurityType_get, _sptraderapi.CTORATstpSPReqInsSecurityField_SecurityType_set)

	# 币种
    __swig_setmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPReqInsSecurityField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPReqInsSecurityField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityField_CurrencyID_get, _sptraderapi.CTORATstpSPReqInsSecurityField_CurrencyID_set)

	# 记录申报时使用的单位。手、股、份、张等
    __swig_setmethods__["OrderUnit"] = _sptraderapi.CTORATstpSPReqInsSecurityField_OrderUnit_set
    __swig_getmethods__["OrderUnit"] = _sptraderapi.CTORATstpSPReqInsSecurityField_OrderUnit_get
    if _newclass:
        OrderUnit = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityField_OrderUnit_get, _sptraderapi.CTORATstpSPReqInsSecurityField_OrderUnit_set)

	# 每次可以买入的最小交易单位（以申报单位计），每次买入必须是买入交易单位的整数倍
    __swig_setmethods__["BuyTradingUnit"] = _sptraderapi.CTORATstpSPReqInsSecurityField_BuyTradingUnit_set
    __swig_getmethods__["BuyTradingUnit"] = _sptraderapi.CTORATstpSPReqInsSecurityField_BuyTradingUnit_get
    if _newclass:
        BuyTradingUnit = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityField_BuyTradingUnit_get, _sptraderapi.CTORATstpSPReqInsSecurityField_BuyTradingUnit_set)

	# 每次可以卖出的最小交易单位（以申报单位计），每次卖出必须是卖出交易单位的整数倍
    __swig_setmethods__["SellTradingUnit"] = _sptraderapi.CTORATstpSPReqInsSecurityField_SellTradingUnit_set
    __swig_getmethods__["SellTradingUnit"] = _sptraderapi.CTORATstpSPReqInsSecurityField_SellTradingUnit_get
    if _newclass:
        SellTradingUnit = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityField_SellTradingUnit_get, _sptraderapi.CTORATstpSPReqInsSecurityField_SellTradingUnit_set)

	# 单笔可以买入的最大数量（以申报单位计）
    __swig_setmethods__["MaxMarketOrderBuyVolume"] = _sptraderapi.CTORATstpSPReqInsSecurityField_MaxMarketOrderBuyVolume_set
    __swig_getmethods__["MaxMarketOrderBuyVolume"] = _sptraderapi.CTORATstpSPReqInsSecurityField_MaxMarketOrderBuyVolume_get
    if _newclass:
        MaxMarketOrderBuyVolume = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityField_MaxMarketOrderBuyVolume_get, _sptraderapi.CTORATstpSPReqInsSecurityField_MaxMarketOrderBuyVolume_set)

	# 单笔可以买入的最小数量（以申报单位计）
    __swig_setmethods__["MinMarketOrderBuyVolume"] = _sptraderapi.CTORATstpSPReqInsSecurityField_MinMarketOrderBuyVolume_set
    __swig_getmethods__["MinMarketOrderBuyVolume"] = _sptraderapi.CTORATstpSPReqInsSecurityField_MinMarketOrderBuyVolume_get
    if _newclass:
        MinMarketOrderBuyVolume = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityField_MinMarketOrderBuyVolume_get, _sptraderapi.CTORATstpSPReqInsSecurityField_MinMarketOrderBuyVolume_set)

	# 单笔可以买入的最大数量（以申报单位计）
    __swig_setmethods__["MaxLimitOrderBuyVolume"] = _sptraderapi.CTORATstpSPReqInsSecurityField_MaxLimitOrderBuyVolume_set
    __swig_getmethods__["MaxLimitOrderBuyVolume"] = _sptraderapi.CTORATstpSPReqInsSecurityField_MaxLimitOrderBuyVolume_get
    if _newclass:
        MaxLimitOrderBuyVolume = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityField_MaxLimitOrderBuyVolume_get, _sptraderapi.CTORATstpSPReqInsSecurityField_MaxLimitOrderBuyVolume_set)

	# 单笔可以买入的最小数量（以申报单位计）
    __swig_setmethods__["MinLimitOrderBuyVolume"] = _sptraderapi.CTORATstpSPReqInsSecurityField_MinLimitOrderBuyVolume_set
    __swig_getmethods__["MinLimitOrderBuyVolume"] = _sptraderapi.CTORATstpSPReqInsSecurityField_MinLimitOrderBuyVolume_get
    if _newclass:
        MinLimitOrderBuyVolume = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityField_MinLimitOrderBuyVolume_get, _sptraderapi.CTORATstpSPReqInsSecurityField_MinLimitOrderBuyVolume_set)

	# 单笔可以卖入的最大数量（以申报单位计）
    __swig_setmethods__["MaxMarketOrderSellVolume"] = _sptraderapi.CTORATstpSPReqInsSecurityField_MaxMarketOrderSellVolume_set
    __swig_getmethods__["MaxMarketOrderSellVolume"] = _sptraderapi.CTORATstpSPReqInsSecurityField_MaxMarketOrderSellVolume_get
    if _newclass:
        MaxMarketOrderSellVolume = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityField_MaxMarketOrderSellVolume_get, _sptraderapi.CTORATstpSPReqInsSecurityField_MaxMarketOrderSellVolume_set)

	# 单笔可以卖入的最小数量（以申报单位计）
    __swig_setmethods__["MinMarketOrderSellVolume"] = _sptraderapi.CTORATstpSPReqInsSecurityField_MinMarketOrderSellVolume_set
    __swig_getmethods__["MinMarketOrderSellVolume"] = _sptraderapi.CTORATstpSPReqInsSecurityField_MinMarketOrderSellVolume_get
    if _newclass:
        MinMarketOrderSellVolume = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityField_MinMarketOrderSellVolume_get, _sptraderapi.CTORATstpSPReqInsSecurityField_MinMarketOrderSellVolume_set)

	# 单笔可以卖入的最大数量（以申报单位计）
    __swig_setmethods__["MaxLimitOrderSellVolume"] = _sptraderapi.CTORATstpSPReqInsSecurityField_MaxLimitOrderSellVolume_set
    __swig_getmethods__["MaxLimitOrderSellVolume"] = _sptraderapi.CTORATstpSPReqInsSecurityField_MaxLimitOrderSellVolume_get
    if _newclass:
        MaxLimitOrderSellVolume = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityField_MaxLimitOrderSellVolume_get, _sptraderapi.CTORATstpSPReqInsSecurityField_MaxLimitOrderSellVolume_set)

	# 单笔可以卖入的最小数量（以申报单位计）
    __swig_setmethods__["MinLimitOrderSellVolume"] = _sptraderapi.CTORATstpSPReqInsSecurityField_MinLimitOrderSellVolume_set
    __swig_getmethods__["MinLimitOrderSellVolume"] = _sptraderapi.CTORATstpSPReqInsSecurityField_MinLimitOrderSellVolume_get
    if _newclass:
        MinLimitOrderSellVolume = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityField_MinLimitOrderSellVolume_get, _sptraderapi.CTORATstpSPReqInsSecurityField_MinLimitOrderSellVolume_set)

	# 申报单位与报价金额单位的比值
    __swig_setmethods__["VolumeMultiple"] = _sptraderapi.CTORATstpSPReqInsSecurityField_VolumeMultiple_set
    __swig_getmethods__["VolumeMultiple"] = _sptraderapi.CTORATstpSPReqInsSecurityField_VolumeMultiple_get
    if _newclass:
        VolumeMultiple = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityField_VolumeMultiple_get, _sptraderapi.CTORATstpSPReqInsSecurityField_VolumeMultiple_set)

	# 证券的单位价格涨跌变化的最小值
    __swig_setmethods__["PriceTick"] = _sptraderapi.CTORATstpSPReqInsSecurityField_PriceTick_set
    __swig_getmethods__["PriceTick"] = _sptraderapi.CTORATstpSPReqInsSecurityField_PriceTick_get
    if _newclass:
        PriceTick = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityField_PriceTick_get, _sptraderapi.CTORATstpSPReqInsSecurityField_PriceTick_set)

	# 净持仓、综合持仓
    __swig_setmethods__["PositionType"] = _sptraderapi.CTORATstpSPReqInsSecurityField_PositionType_set
    __swig_getmethods__["PositionType"] = _sptraderapi.CTORATstpSPReqInsSecurityField_PositionType_get
    if _newclass:
        PositionType = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityField_PositionType_get, _sptraderapi.CTORATstpSPReqInsSecurityField_PositionType_set)

	# 证券状态,可能是0个或多个状态的叠加，用整型bit位表示，每一位代表一种状态，0x00000001停牌,0x00000002长期停牌，0x00000040熔断,0x00000080限制买入开仓,0x00000100限制卖出开仓,0x00000200限制备兑开仓,0x00000400波动性中断,0x00000800临时停牌,0x00001000连续停牌,0x00002000限制行权,0x00004000限制做市商报价
    __swig_setmethods__["SecurityStatus"] = _sptraderapi.CTORATstpSPReqInsSecurityField_SecurityStatus_set
    __swig_getmethods__["SecurityStatus"] = _sptraderapi.CTORATstpSPReqInsSecurityField_SecurityStatus_get
    if _newclass:
        SecurityStatus = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityField_SecurityStatus_get, _sptraderapi.CTORATstpSPReqInsSecurityField_SecurityStatus_set)

	# 期权专用
    __swig_setmethods__["StrikePrice"] = _sptraderapi.CTORATstpSPReqInsSecurityField_StrikePrice_set
    __swig_getmethods__["StrikePrice"] = _sptraderapi.CTORATstpSPReqInsSecurityField_StrikePrice_get
    if _newclass:
        StrikePrice = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityField_StrikePrice_get, _sptraderapi.CTORATstpSPReqInsSecurityField_StrikePrice_set)

	# 首交易日
    __swig_setmethods__["FirstDate"] = _sptraderapi.CTORATstpSPReqInsSecurityField_FirstDate_set
    __swig_getmethods__["FirstDate"] = _sptraderapi.CTORATstpSPReqInsSecurityField_FirstDate_get
    if _newclass:
        FirstDate = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityField_FirstDate_get, _sptraderapi.CTORATstpSPReqInsSecurityField_FirstDate_set)

	# 最后交易日
    __swig_setmethods__["LastDate"] = _sptraderapi.CTORATstpSPReqInsSecurityField_LastDate_set
    __swig_getmethods__["LastDate"] = _sptraderapi.CTORATstpSPReqInsSecurityField_LastDate_get
    if _newclass:
        LastDate = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityField_LastDate_get, _sptraderapi.CTORATstpSPReqInsSecurityField_LastDate_set)

	# 行权日
    __swig_setmethods__["StrikeDate"] = _sptraderapi.CTORATstpSPReqInsSecurityField_StrikeDate_set
    __swig_getmethods__["StrikeDate"] = _sptraderapi.CTORATstpSPReqInsSecurityField_StrikeDate_get
    if _newclass:
        StrikeDate = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityField_StrikeDate_get, _sptraderapi.CTORATstpSPReqInsSecurityField_StrikeDate_set)

	# 合约到期时间
    __swig_setmethods__["ExpireDate"] = _sptraderapi.CTORATstpSPReqInsSecurityField_ExpireDate_set
    __swig_getmethods__["ExpireDate"] = _sptraderapi.CTORATstpSPReqInsSecurityField_ExpireDate_get
    if _newclass:
        ExpireDate = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityField_ExpireDate_get, _sptraderapi.CTORATstpSPReqInsSecurityField_ExpireDate_set)

	# 了结到期未平仓合约的开始日期
    __swig_setmethods__["DelivDate"] = _sptraderapi.CTORATstpSPReqInsSecurityField_DelivDate_set
    __swig_getmethods__["DelivDate"] = _sptraderapi.CTORATstpSPReqInsSecurityField_DelivDate_get
    if _newclass:
        DelivDate = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityField_DelivDate_get, _sptraderapi.CTORATstpSPReqInsSecurityField_DelivDate_set)

	# 是否有涨跌幅限制
    __swig_setmethods__["IsUpDownLimit"] = _sptraderapi.CTORATstpSPReqInsSecurityField_IsUpDownLimit_set
    __swig_getmethods__["IsUpDownLimit"] = _sptraderapi.CTORATstpSPReqInsSecurityField_IsUpDownLimit_get
    if _newclass:
        IsUpDownLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityField_IsUpDownLimit_get, _sptraderapi.CTORATstpSPReqInsSecurityField_IsUpDownLimit_set)

	# 期权专用
    __swig_setmethods__["MarginUnit"] = _sptraderapi.CTORATstpSPReqInsSecurityField_MarginUnit_set
    __swig_getmethods__["MarginUnit"] = _sptraderapi.CTORATstpSPReqInsSecurityField_MarginUnit_get
    if _newclass:
        MarginUnit = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityField_MarginUnit_get, _sptraderapi.CTORATstpSPReqInsSecurityField_MarginUnit_set)

	# 合约前结算价
    __swig_setmethods__["PreSettlementPrice"] = _sptraderapi.CTORATstpSPReqInsSecurityField_PreSettlementPrice_set
    __swig_getmethods__["PreSettlementPrice"] = _sptraderapi.CTORATstpSPReqInsSecurityField_PreSettlementPrice_get
    if _newclass:
        PreSettlementPrice = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityField_PreSettlementPrice_get, _sptraderapi.CTORATstpSPReqInsSecurityField_PreSettlementPrice_set)

	# 合约前收盘价
    __swig_setmethods__["PreClosePrice"] = _sptraderapi.CTORATstpSPReqInsSecurityField_PreClosePrice_set
    __swig_getmethods__["PreClosePrice"] = _sptraderapi.CTORATstpSPReqInsSecurityField_PreClosePrice_get
    if _newclass:
        PreClosePrice = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityField_PreClosePrice_get, _sptraderapi.CTORATstpSPReqInsSecurityField_PreClosePrice_set)

	# 标的合约前收盘价
    __swig_setmethods__["UnderlyingPreClosePrice"] = _sptraderapi.CTORATstpSPReqInsSecurityField_UnderlyingPreClosePrice_set
    __swig_getmethods__["UnderlyingPreClosePrice"] = _sptraderapi.CTORATstpSPReqInsSecurityField_UnderlyingPreClosePrice_get
    if _newclass:
        UnderlyingPreClosePrice = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityField_UnderlyingPreClosePrice_get, _sptraderapi.CTORATstpSPReqInsSecurityField_UnderlyingPreClosePrice_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsSecurityField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsSecurityField
    __del__ = lambda self: None
CTORATstpSPReqInsSecurityField_swigregister = _sptraderapi.CTORATstpSPReqInsSecurityField_swigregister
CTORATstpSPReqInsSecurityField_swigregister(CTORATstpSPReqInsSecurityField)




#########################################请求更新Security############################################
class CTORATstpSPReqUpdSecurityField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdSecurityField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdSecurityField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityField_ExchangeID_get, _sptraderapi.CTORATstpSPReqUpdSecurityField_ExchangeID_set)

	# 合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityField_SecurityID_get, _sptraderapi.CTORATstpSPReqUpdSecurityField_SecurityID_set)

	# 交易所合约代码
    __swig_setmethods__["ExchSecurityID"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_ExchSecurityID_set
    __swig_getmethods__["ExchSecurityID"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_ExchSecurityID_get
    if _newclass:
        ExchSecurityID = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityField_ExchSecurityID_get, _sptraderapi.CTORATstpSPReqUpdSecurityField_ExchSecurityID_set)

	# 证券名称
    __swig_setmethods__["SecurityName"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_SecurityName_set
    __swig_getmethods__["SecurityName"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_SecurityName_get
    if _newclass:
        SecurityName = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityField_SecurityName_get, _sptraderapi.CTORATstpSPReqUpdSecurityField_SecurityName_set)

	# 基础证券代码
    __swig_setmethods__["UnderlyingSecurityID"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_UnderlyingSecurityID_set
    __swig_getmethods__["UnderlyingSecurityID"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_UnderlyingSecurityID_get
    if _newclass:
        UnderlyingSecurityID = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityField_UnderlyingSecurityID_get, _sptraderapi.CTORATstpSPReqUpdSecurityField_UnderlyingSecurityID_set)

	# 基础证券名称
    __swig_setmethods__["UnderlyingSecurityName"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_UnderlyingSecurityName_set
    __swig_getmethods__["UnderlyingSecurityName"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_UnderlyingSecurityName_get
    if _newclass:
        UnderlyingSecurityName = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityField_UnderlyingSecurityName_get, _sptraderapi.CTORATstpSPReqUpdSecurityField_UnderlyingSecurityName_set)

	# 合约单位，品种的每手交易的规定数量，针对基础的商品
    __swig_setmethods__["UnderlyingMultiple"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_UnderlyingMultiple_set
    __swig_getmethods__["UnderlyingMultiple"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_UnderlyingMultiple_get
    if _newclass:
        UnderlyingMultiple = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityField_UnderlyingMultiple_get, _sptraderapi.CTORATstpSPReqUpdSecurityField_UnderlyingMultiple_set)

	# 期权执行方式，0：欧式， 1：美式
    __swig_setmethods__["StrikeMode"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_StrikeMode_set
    __swig_getmethods__["StrikeMode"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_StrikeMode_get
    if _newclass:
        StrikeMode = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityField_StrikeMode_get, _sptraderapi.CTORATstpSPReqUpdSecurityField_StrikeMode_set)

	# 看涨、看跌
    __swig_setmethods__["OptionsType"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_OptionsType_set
    __swig_getmethods__["OptionsType"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_OptionsType_get
    if _newclass:
        OptionsType = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityField_OptionsType_get, _sptraderapi.CTORATstpSPReqUpdSecurityField_OptionsType_set)

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityField_MarketID_get, _sptraderapi.CTORATstpSPReqUpdSecurityField_MarketID_set)

	# 证券市场中的具体品种，如上海股票
    __swig_setmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_ProductID_set
    __swig_getmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityField_ProductID_get, _sptraderapi.CTORATstpSPReqUpdSecurityField_ProductID_set)

	# 证券品种中的具体类别，如上海A股
    __swig_setmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_SecurityType_set
    __swig_getmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_SecurityType_get
    if _newclass:
        SecurityType = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityField_SecurityType_get, _sptraderapi.CTORATstpSPReqUpdSecurityField_SecurityType_set)

	# 币种
    __swig_setmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityField_CurrencyID_get, _sptraderapi.CTORATstpSPReqUpdSecurityField_CurrencyID_set)

	# 记录申报时使用的单位。手、股、份、张等
    __swig_setmethods__["OrderUnit"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_OrderUnit_set
    __swig_getmethods__["OrderUnit"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_OrderUnit_get
    if _newclass:
        OrderUnit = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityField_OrderUnit_get, _sptraderapi.CTORATstpSPReqUpdSecurityField_OrderUnit_set)

	# 每次可以买入的最小交易单位（以申报单位计），每次买入必须是买入交易单位的整数倍
    __swig_setmethods__["BuyTradingUnit"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_BuyTradingUnit_set
    __swig_getmethods__["BuyTradingUnit"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_BuyTradingUnit_get
    if _newclass:
        BuyTradingUnit = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityField_BuyTradingUnit_get, _sptraderapi.CTORATstpSPReqUpdSecurityField_BuyTradingUnit_set)

	# 每次可以卖出的最小交易单位（以申报单位计），每次卖出必须是卖出交易单位的整数倍
    __swig_setmethods__["SellTradingUnit"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_SellTradingUnit_set
    __swig_getmethods__["SellTradingUnit"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_SellTradingUnit_get
    if _newclass:
        SellTradingUnit = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityField_SellTradingUnit_get, _sptraderapi.CTORATstpSPReqUpdSecurityField_SellTradingUnit_set)

	# 单笔可以买入的最大数量（以申报单位计）
    __swig_setmethods__["MaxMarketOrderBuyVolume"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_MaxMarketOrderBuyVolume_set
    __swig_getmethods__["MaxMarketOrderBuyVolume"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_MaxMarketOrderBuyVolume_get
    if _newclass:
        MaxMarketOrderBuyVolume = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityField_MaxMarketOrderBuyVolume_get, _sptraderapi.CTORATstpSPReqUpdSecurityField_MaxMarketOrderBuyVolume_set)

	# 单笔可以买入的最小数量（以申报单位计）
    __swig_setmethods__["MinMarketOrderBuyVolume"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_MinMarketOrderBuyVolume_set
    __swig_getmethods__["MinMarketOrderBuyVolume"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_MinMarketOrderBuyVolume_get
    if _newclass:
        MinMarketOrderBuyVolume = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityField_MinMarketOrderBuyVolume_get, _sptraderapi.CTORATstpSPReqUpdSecurityField_MinMarketOrderBuyVolume_set)

	# 单笔可以买入的最大数量（以申报单位计）
    __swig_setmethods__["MaxLimitOrderBuyVolume"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_MaxLimitOrderBuyVolume_set
    __swig_getmethods__["MaxLimitOrderBuyVolume"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_MaxLimitOrderBuyVolume_get
    if _newclass:
        MaxLimitOrderBuyVolume = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityField_MaxLimitOrderBuyVolume_get, _sptraderapi.CTORATstpSPReqUpdSecurityField_MaxLimitOrderBuyVolume_set)

	# 单笔可以买入的最小数量（以申报单位计）
    __swig_setmethods__["MinLimitOrderBuyVolume"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_MinLimitOrderBuyVolume_set
    __swig_getmethods__["MinLimitOrderBuyVolume"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_MinLimitOrderBuyVolume_get
    if _newclass:
        MinLimitOrderBuyVolume = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityField_MinLimitOrderBuyVolume_get, _sptraderapi.CTORATstpSPReqUpdSecurityField_MinLimitOrderBuyVolume_set)

	# 单笔可以卖入的最大数量（以申报单位计）
    __swig_setmethods__["MaxMarketOrderSellVolume"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_MaxMarketOrderSellVolume_set
    __swig_getmethods__["MaxMarketOrderSellVolume"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_MaxMarketOrderSellVolume_get
    if _newclass:
        MaxMarketOrderSellVolume = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityField_MaxMarketOrderSellVolume_get, _sptraderapi.CTORATstpSPReqUpdSecurityField_MaxMarketOrderSellVolume_set)

	# 单笔可以卖入的最小数量（以申报单位计）
    __swig_setmethods__["MinMarketOrderSellVolume"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_MinMarketOrderSellVolume_set
    __swig_getmethods__["MinMarketOrderSellVolume"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_MinMarketOrderSellVolume_get
    if _newclass:
        MinMarketOrderSellVolume = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityField_MinMarketOrderSellVolume_get, _sptraderapi.CTORATstpSPReqUpdSecurityField_MinMarketOrderSellVolume_set)

	# 单笔可以卖入的最大数量（以申报单位计）
    __swig_setmethods__["MaxLimitOrderSellVolume"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_MaxLimitOrderSellVolume_set
    __swig_getmethods__["MaxLimitOrderSellVolume"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_MaxLimitOrderSellVolume_get
    if _newclass:
        MaxLimitOrderSellVolume = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityField_MaxLimitOrderSellVolume_get, _sptraderapi.CTORATstpSPReqUpdSecurityField_MaxLimitOrderSellVolume_set)

	# 单笔可以卖入的最小数量（以申报单位计）
    __swig_setmethods__["MinLimitOrderSellVolume"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_MinLimitOrderSellVolume_set
    __swig_getmethods__["MinLimitOrderSellVolume"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_MinLimitOrderSellVolume_get
    if _newclass:
        MinLimitOrderSellVolume = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityField_MinLimitOrderSellVolume_get, _sptraderapi.CTORATstpSPReqUpdSecurityField_MinLimitOrderSellVolume_set)

	# 申报单位与报价金额单位的比值
    __swig_setmethods__["VolumeMultiple"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_VolumeMultiple_set
    __swig_getmethods__["VolumeMultiple"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_VolumeMultiple_get
    if _newclass:
        VolumeMultiple = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityField_VolumeMultiple_get, _sptraderapi.CTORATstpSPReqUpdSecurityField_VolumeMultiple_set)

	# 证券的单位价格涨跌变化的最小值
    __swig_setmethods__["PriceTick"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_PriceTick_set
    __swig_getmethods__["PriceTick"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_PriceTick_get
    if _newclass:
        PriceTick = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityField_PriceTick_get, _sptraderapi.CTORATstpSPReqUpdSecurityField_PriceTick_set)

	# 净持仓、综合持仓
    __swig_setmethods__["PositionType"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_PositionType_set
    __swig_getmethods__["PositionType"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_PositionType_get
    if _newclass:
        PositionType = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityField_PositionType_get, _sptraderapi.CTORATstpSPReqUpdSecurityField_PositionType_set)

	# 证券状态,可能是0个或多个状态的叠加，用整型bit位表示，每一位代表一种状态，0x00000001停牌,0x00000002长期停牌，0x00000040熔断,0x00000080限制买入开仓,0x00000100限制卖出开仓,0x00000200限制备兑开仓,0x00000400波动性中断,0x00000800临时停牌,0x00001000连续停牌,0x00002000限制行权,0x00004000限制做市商报价
    __swig_setmethods__["SecurityStatus"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_SecurityStatus_set
    __swig_getmethods__["SecurityStatus"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_SecurityStatus_get
    if _newclass:
        SecurityStatus = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityField_SecurityStatus_get, _sptraderapi.CTORATstpSPReqUpdSecurityField_SecurityStatus_set)

	# 期权专用
    __swig_setmethods__["StrikePrice"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_StrikePrice_set
    __swig_getmethods__["StrikePrice"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_StrikePrice_get
    if _newclass:
        StrikePrice = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityField_StrikePrice_get, _sptraderapi.CTORATstpSPReqUpdSecurityField_StrikePrice_set)

	# 首交易日
    __swig_setmethods__["FirstDate"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_FirstDate_set
    __swig_getmethods__["FirstDate"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_FirstDate_get
    if _newclass:
        FirstDate = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityField_FirstDate_get, _sptraderapi.CTORATstpSPReqUpdSecurityField_FirstDate_set)

	# 最后交易日
    __swig_setmethods__["LastDate"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_LastDate_set
    __swig_getmethods__["LastDate"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_LastDate_get
    if _newclass:
        LastDate = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityField_LastDate_get, _sptraderapi.CTORATstpSPReqUpdSecurityField_LastDate_set)

	# 行权日
    __swig_setmethods__["StrikeDate"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_StrikeDate_set
    __swig_getmethods__["StrikeDate"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_StrikeDate_get
    if _newclass:
        StrikeDate = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityField_StrikeDate_get, _sptraderapi.CTORATstpSPReqUpdSecurityField_StrikeDate_set)

	# 合约到期时间
    __swig_setmethods__["ExpireDate"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_ExpireDate_set
    __swig_getmethods__["ExpireDate"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_ExpireDate_get
    if _newclass:
        ExpireDate = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityField_ExpireDate_get, _sptraderapi.CTORATstpSPReqUpdSecurityField_ExpireDate_set)

	# 了结到期未平仓合约的开始日期
    __swig_setmethods__["DelivDate"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_DelivDate_set
    __swig_getmethods__["DelivDate"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_DelivDate_get
    if _newclass:
        DelivDate = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityField_DelivDate_get, _sptraderapi.CTORATstpSPReqUpdSecurityField_DelivDate_set)

	# 是否有涨跌幅限制
    __swig_setmethods__["IsUpDownLimit"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_IsUpDownLimit_set
    __swig_getmethods__["IsUpDownLimit"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_IsUpDownLimit_get
    if _newclass:
        IsUpDownLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityField_IsUpDownLimit_get, _sptraderapi.CTORATstpSPReqUpdSecurityField_IsUpDownLimit_set)

	# 期权专用
    __swig_setmethods__["MarginUnit"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_MarginUnit_set
    __swig_getmethods__["MarginUnit"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_MarginUnit_get
    if _newclass:
        MarginUnit = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityField_MarginUnit_get, _sptraderapi.CTORATstpSPReqUpdSecurityField_MarginUnit_set)

	# 合约前结算价
    __swig_setmethods__["PreSettlementPrice"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_PreSettlementPrice_set
    __swig_getmethods__["PreSettlementPrice"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_PreSettlementPrice_get
    if _newclass:
        PreSettlementPrice = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityField_PreSettlementPrice_get, _sptraderapi.CTORATstpSPReqUpdSecurityField_PreSettlementPrice_set)

	# 合约前收盘价
    __swig_setmethods__["PreClosePrice"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_PreClosePrice_set
    __swig_getmethods__["PreClosePrice"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_PreClosePrice_get
    if _newclass:
        PreClosePrice = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityField_PreClosePrice_get, _sptraderapi.CTORATstpSPReqUpdSecurityField_PreClosePrice_set)

	# 标的合约前收盘价
    __swig_setmethods__["UnderlyingPreClosePrice"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_UnderlyingPreClosePrice_set
    __swig_getmethods__["UnderlyingPreClosePrice"] = _sptraderapi.CTORATstpSPReqUpdSecurityField_UnderlyingPreClosePrice_get
    if _newclass:
        UnderlyingPreClosePrice = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityField_UnderlyingPreClosePrice_get, _sptraderapi.CTORATstpSPReqUpdSecurityField_UnderlyingPreClosePrice_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdSecurityField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdSecurityField
    __del__ = lambda self: None
CTORATstpSPReqUpdSecurityField_swigregister = _sptraderapi.CTORATstpSPReqUpdSecurityField_swigregister
CTORATstpSPReqUpdSecurityField_swigregister(CTORATstpSPReqUpdSecurityField)




#########################################请求删除Security############################################
class CTORATstpSPReqDelSecurityField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelSecurityField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelSecurityField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelSecurityField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelSecurityField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqDelSecurityField_ExchangeID_get, _sptraderapi.CTORATstpSPReqDelSecurityField_ExchangeID_set)

	# 合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqDelSecurityField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqDelSecurityField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqDelSecurityField_SecurityID_get, _sptraderapi.CTORATstpSPReqDelSecurityField_SecurityID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelSecurityField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelSecurityField
    __del__ = lambda self: None
CTORATstpSPReqDelSecurityField_swigregister = _sptraderapi.CTORATstpSPReqDelSecurityField_swigregister
CTORATstpSPReqDelSecurityField_swigregister(CTORATstpSPReqDelSecurityField)




#########################################请求插入SecurityBlackList############################################
class CTORATstpSPReqInsSecurityBlackListField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsSecurityBlackListField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsSecurityBlackListField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsSecurityBlackListField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsSecurityBlackListField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityBlackListField_ExchangeID_get, _sptraderapi.CTORATstpSPReqInsSecurityBlackListField_ExchangeID_set)

	# 股东账户代码
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqInsSecurityBlackListField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqInsSecurityBlackListField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityBlackListField_ShareholderID_get, _sptraderapi.CTORATstpSPReqInsSecurityBlackListField_ShareholderID_set)

	# 市场代码
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqInsSecurityBlackListField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqInsSecurityBlackListField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityBlackListField_MarketID_get, _sptraderapi.CTORATstpSPReqInsSecurityBlackListField_MarketID_set)

	# 合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqInsSecurityBlackListField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqInsSecurityBlackListField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityBlackListField_SecurityID_get, _sptraderapi.CTORATstpSPReqInsSecurityBlackListField_SecurityID_set)

	# 按开平方向
    __swig_setmethods__["OffsetFlag"] = _sptraderapi.CTORATstpSPReqInsSecurityBlackListField_OffsetFlag_set
    __swig_getmethods__["OffsetFlag"] = _sptraderapi.CTORATstpSPReqInsSecurityBlackListField_OffsetFlag_get
    if _newclass:
        OffsetFlag = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityBlackListField_OffsetFlag_get, _sptraderapi.CTORATstpSPReqInsSecurityBlackListField_OffsetFlag_set)

	# 报单类别
    __swig_setmethods__["Direction"] = _sptraderapi.CTORATstpSPReqInsSecurityBlackListField_Direction_set
    __swig_getmethods__["Direction"] = _sptraderapi.CTORATstpSPReqInsSecurityBlackListField_Direction_get
    if _newclass:
        Direction = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityBlackListField_Direction_get, _sptraderapi.CTORATstpSPReqInsSecurityBlackListField_Direction_set)

	# 投机套保标志
    __swig_setmethods__["HedgeFlag"] = _sptraderapi.CTORATstpSPReqInsSecurityBlackListField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _sptraderapi.CTORATstpSPReqInsSecurityBlackListField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityBlackListField_HedgeFlag_get, _sptraderapi.CTORATstpSPReqInsSecurityBlackListField_HedgeFlag_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsSecurityBlackListField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsSecurityBlackListField
    __del__ = lambda self: None
CTORATstpSPReqInsSecurityBlackListField_swigregister = _sptraderapi.CTORATstpSPReqInsSecurityBlackListField_swigregister
CTORATstpSPReqInsSecurityBlackListField_swigregister(CTORATstpSPReqInsSecurityBlackListField)




#########################################请求更新SecurityBlackList############################################
class CTORATstpSPReqUpdSecurityBlackListField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdSecurityBlackListField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdSecurityBlackListField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdSecurityBlackListField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdSecurityBlackListField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityBlackListField_ExchangeID_get, _sptraderapi.CTORATstpSPReqUpdSecurityBlackListField_ExchangeID_set)

	# 股东账户代码
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqUpdSecurityBlackListField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqUpdSecurityBlackListField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityBlackListField_ShareholderID_get, _sptraderapi.CTORATstpSPReqUpdSecurityBlackListField_ShareholderID_set)

	# 市场代码
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqUpdSecurityBlackListField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqUpdSecurityBlackListField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityBlackListField_MarketID_get, _sptraderapi.CTORATstpSPReqUpdSecurityBlackListField_MarketID_set)

	# 合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqUpdSecurityBlackListField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqUpdSecurityBlackListField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityBlackListField_SecurityID_get, _sptraderapi.CTORATstpSPReqUpdSecurityBlackListField_SecurityID_set)

	# 按开平方向
    __swig_setmethods__["OffsetFlag"] = _sptraderapi.CTORATstpSPReqUpdSecurityBlackListField_OffsetFlag_set
    __swig_getmethods__["OffsetFlag"] = _sptraderapi.CTORATstpSPReqUpdSecurityBlackListField_OffsetFlag_get
    if _newclass:
        OffsetFlag = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityBlackListField_OffsetFlag_get, _sptraderapi.CTORATstpSPReqUpdSecurityBlackListField_OffsetFlag_set)

	# 报单类别
    __swig_setmethods__["Direction"] = _sptraderapi.CTORATstpSPReqUpdSecurityBlackListField_Direction_set
    __swig_getmethods__["Direction"] = _sptraderapi.CTORATstpSPReqUpdSecurityBlackListField_Direction_get
    if _newclass:
        Direction = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityBlackListField_Direction_get, _sptraderapi.CTORATstpSPReqUpdSecurityBlackListField_Direction_set)

	# 投机套保标志
    __swig_setmethods__["HedgeFlag"] = _sptraderapi.CTORATstpSPReqUpdSecurityBlackListField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _sptraderapi.CTORATstpSPReqUpdSecurityBlackListField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityBlackListField_HedgeFlag_get, _sptraderapi.CTORATstpSPReqUpdSecurityBlackListField_HedgeFlag_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdSecurityBlackListField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdSecurityBlackListField
    __del__ = lambda self: None
CTORATstpSPReqUpdSecurityBlackListField_swigregister = _sptraderapi.CTORATstpSPReqUpdSecurityBlackListField_swigregister
CTORATstpSPReqUpdSecurityBlackListField_swigregister(CTORATstpSPReqUpdSecurityBlackListField)




#########################################请求删除SecurityBlackList############################################
class CTORATstpSPReqDelSecurityBlackListField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelSecurityBlackListField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelSecurityBlackListField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelSecurityBlackListField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelSecurityBlackListField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqDelSecurityBlackListField_ExchangeID_get, _sptraderapi.CTORATstpSPReqDelSecurityBlackListField_ExchangeID_set)

	# 股东账户代码
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqDelSecurityBlackListField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqDelSecurityBlackListField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPReqDelSecurityBlackListField_ShareholderID_get, _sptraderapi.CTORATstpSPReqDelSecurityBlackListField_ShareholderID_set)

	# 市场代码
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqDelSecurityBlackListField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqDelSecurityBlackListField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPReqDelSecurityBlackListField_MarketID_get, _sptraderapi.CTORATstpSPReqDelSecurityBlackListField_MarketID_set)

	# 合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqDelSecurityBlackListField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqDelSecurityBlackListField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqDelSecurityBlackListField_SecurityID_get, _sptraderapi.CTORATstpSPReqDelSecurityBlackListField_SecurityID_set)

	# 按开平方向
    __swig_setmethods__["OffsetFlag"] = _sptraderapi.CTORATstpSPReqDelSecurityBlackListField_OffsetFlag_set
    __swig_getmethods__["OffsetFlag"] = _sptraderapi.CTORATstpSPReqDelSecurityBlackListField_OffsetFlag_get
    if _newclass:
        OffsetFlag = _swig_property(_sptraderapi.CTORATstpSPReqDelSecurityBlackListField_OffsetFlag_get, _sptraderapi.CTORATstpSPReqDelSecurityBlackListField_OffsetFlag_set)

	# 报单类别
    __swig_setmethods__["Direction"] = _sptraderapi.CTORATstpSPReqDelSecurityBlackListField_Direction_set
    __swig_getmethods__["Direction"] = _sptraderapi.CTORATstpSPReqDelSecurityBlackListField_Direction_get
    if _newclass:
        Direction = _swig_property(_sptraderapi.CTORATstpSPReqDelSecurityBlackListField_Direction_get, _sptraderapi.CTORATstpSPReqDelSecurityBlackListField_Direction_set)

	# 投机套保标志
    __swig_setmethods__["HedgeFlag"] = _sptraderapi.CTORATstpSPReqDelSecurityBlackListField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _sptraderapi.CTORATstpSPReqDelSecurityBlackListField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_sptraderapi.CTORATstpSPReqDelSecurityBlackListField_HedgeFlag_get, _sptraderapi.CTORATstpSPReqDelSecurityBlackListField_HedgeFlag_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelSecurityBlackListField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelSecurityBlackListField
    __del__ = lambda self: None
CTORATstpSPReqDelSecurityBlackListField_swigregister = _sptraderapi.CTORATstpSPReqDelSecurityBlackListField_swigregister
CTORATstpSPReqDelSecurityBlackListField_swigregister(CTORATstpSPReqDelSecurityBlackListField)




#########################################请求插入SecurityStrategy############################################
class CTORATstpSPReqInsSecurityStrategyField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsSecurityStrategyField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsSecurityStrategyField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsSecurityStrategyField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsSecurityStrategyField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityStrategyField_ExchangeID_get, _sptraderapi.CTORATstpSPReqInsSecurityStrategyField_ExchangeID_set)

	# 合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqInsSecurityStrategyField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqInsSecurityStrategyField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityStrategyField_SecurityID_get, _sptraderapi.CTORATstpSPReqInsSecurityStrategyField_SecurityID_set)

	# 组合策略
    __swig_setmethods__["CombinationStrategy"] = _sptraderapi.CTORATstpSPReqInsSecurityStrategyField_CombinationStrategy_set
    __swig_getmethods__["CombinationStrategy"] = _sptraderapi.CTORATstpSPReqInsSecurityStrategyField_CombinationStrategy_get
    if _newclass:
        CombinationStrategy = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityStrategyField_CombinationStrategy_get, _sptraderapi.CTORATstpSPReqInsSecurityStrategyField_CombinationStrategy_set)

	# 自动解除日
    __swig_setmethods__["AutoSplitDay"] = _sptraderapi.CTORATstpSPReqInsSecurityStrategyField_AutoSplitDay_set
    __swig_getmethods__["AutoSplitDay"] = _sptraderapi.CTORATstpSPReqInsSecurityStrategyField_AutoSplitDay_get
    if _newclass:
        AutoSplitDay = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityStrategyField_AutoSplitDay_get, _sptraderapi.CTORATstpSPReqInsSecurityStrategyField_AutoSplitDay_set)

	# 是否禁止
    __swig_setmethods__["bForbidden"] = _sptraderapi.CTORATstpSPReqInsSecurityStrategyField_bForbidden_set
    __swig_getmethods__["bForbidden"] = _sptraderapi.CTORATstpSPReqInsSecurityStrategyField_bForbidden_get
    if _newclass:
        bForbidden = _swig_property(_sptraderapi.CTORATstpSPReqInsSecurityStrategyField_bForbidden_get, _sptraderapi.CTORATstpSPReqInsSecurityStrategyField_bForbidden_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsSecurityStrategyField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsSecurityStrategyField
    __del__ = lambda self: None
CTORATstpSPReqInsSecurityStrategyField_swigregister = _sptraderapi.CTORATstpSPReqInsSecurityStrategyField_swigregister
CTORATstpSPReqInsSecurityStrategyField_swigregister(CTORATstpSPReqInsSecurityStrategyField)




#########################################请求更新SecurityStrategy############################################
class CTORATstpSPReqUpdSecurityStrategyField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdSecurityStrategyField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdSecurityStrategyField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdSecurityStrategyField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdSecurityStrategyField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityStrategyField_ExchangeID_get, _sptraderapi.CTORATstpSPReqUpdSecurityStrategyField_ExchangeID_set)

	# 合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqUpdSecurityStrategyField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqUpdSecurityStrategyField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityStrategyField_SecurityID_get, _sptraderapi.CTORATstpSPReqUpdSecurityStrategyField_SecurityID_set)

	# 组合策略
    __swig_setmethods__["CombinationStrategy"] = _sptraderapi.CTORATstpSPReqUpdSecurityStrategyField_CombinationStrategy_set
    __swig_getmethods__["CombinationStrategy"] = _sptraderapi.CTORATstpSPReqUpdSecurityStrategyField_CombinationStrategy_get
    if _newclass:
        CombinationStrategy = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityStrategyField_CombinationStrategy_get, _sptraderapi.CTORATstpSPReqUpdSecurityStrategyField_CombinationStrategy_set)

	# 自动解除日
    __swig_setmethods__["AutoSplitDay"] = _sptraderapi.CTORATstpSPReqUpdSecurityStrategyField_AutoSplitDay_set
    __swig_getmethods__["AutoSplitDay"] = _sptraderapi.CTORATstpSPReqUpdSecurityStrategyField_AutoSplitDay_get
    if _newclass:
        AutoSplitDay = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityStrategyField_AutoSplitDay_get, _sptraderapi.CTORATstpSPReqUpdSecurityStrategyField_AutoSplitDay_set)

	# 是否禁止
    __swig_setmethods__["bForbidden"] = _sptraderapi.CTORATstpSPReqUpdSecurityStrategyField_bForbidden_set
    __swig_getmethods__["bForbidden"] = _sptraderapi.CTORATstpSPReqUpdSecurityStrategyField_bForbidden_get
    if _newclass:
        bForbidden = _swig_property(_sptraderapi.CTORATstpSPReqUpdSecurityStrategyField_bForbidden_get, _sptraderapi.CTORATstpSPReqUpdSecurityStrategyField_bForbidden_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdSecurityStrategyField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdSecurityStrategyField
    __del__ = lambda self: None
CTORATstpSPReqUpdSecurityStrategyField_swigregister = _sptraderapi.CTORATstpSPReqUpdSecurityStrategyField_swigregister
CTORATstpSPReqUpdSecurityStrategyField_swigregister(CTORATstpSPReqUpdSecurityStrategyField)




#########################################请求删除SecurityStrategy############################################
class CTORATstpSPReqDelSecurityStrategyField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelSecurityStrategyField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelSecurityStrategyField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelSecurityStrategyField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelSecurityStrategyField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqDelSecurityStrategyField_ExchangeID_get, _sptraderapi.CTORATstpSPReqDelSecurityStrategyField_ExchangeID_set)

	# 合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqDelSecurityStrategyField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqDelSecurityStrategyField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqDelSecurityStrategyField_SecurityID_get, _sptraderapi.CTORATstpSPReqDelSecurityStrategyField_SecurityID_set)

	# 组合策略
    __swig_setmethods__["CombinationStrategy"] = _sptraderapi.CTORATstpSPReqDelSecurityStrategyField_CombinationStrategy_set
    __swig_getmethods__["CombinationStrategy"] = _sptraderapi.CTORATstpSPReqDelSecurityStrategyField_CombinationStrategy_get
    if _newclass:
        CombinationStrategy = _swig_property(_sptraderapi.CTORATstpSPReqDelSecurityStrategyField_CombinationStrategy_get, _sptraderapi.CTORATstpSPReqDelSecurityStrategyField_CombinationStrategy_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelSecurityStrategyField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelSecurityStrategyField
    __del__ = lambda self: None
CTORATstpSPReqDelSecurityStrategyField_swigregister = _sptraderapi.CTORATstpSPReqDelSecurityStrategyField_swigregister
CTORATstpSPReqDelSecurityStrategyField_swigregister(CTORATstpSPReqDelSecurityStrategyField)




#########################################请求插入ShareholderAccount############################################
class CTORATstpSPReqInsShareholderAccountField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsShareholderAccountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsShareholderAccountField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsShareholderAccountField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsShareholderAccountField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqInsShareholderAccountField_ExchangeID_get, _sptraderapi.CTORATstpSPReqInsShareholderAccountField_ExchangeID_set)

	# 目前该字段存放的是上证所和深圳的股东代码。
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqInsShareholderAccountField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqInsShareholderAccountField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPReqInsShareholderAccountField_ShareholderID_get, _sptraderapi.CTORATstpSPReqInsShareholderAccountField_ShareholderID_set)

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqInsShareholderAccountField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqInsShareholderAccountField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPReqInsShareholderAccountField_MarketID_get, _sptraderapi.CTORATstpSPReqInsShareholderAccountField_MarketID_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqInsShareholderAccountField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqInsShareholderAccountField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqInsShareholderAccountField_InvestorID_get, _sptraderapi.CTORATstpSPReqInsShareholderAccountField_InvestorID_set)

	# 普通，信用，衍生品等
    __swig_setmethods__["ShareholderIDType"] = _sptraderapi.CTORATstpSPReqInsShareholderAccountField_ShareholderIDType_set
    __swig_getmethods__["ShareholderIDType"] = _sptraderapi.CTORATstpSPReqInsShareholderAccountField_ShareholderIDType_get
    if _newclass:
        ShareholderIDType = _swig_property(_sptraderapi.CTORATstpSPReqInsShareholderAccountField_ShareholderIDType_get, _sptraderapi.CTORATstpSPReqInsShareholderAccountField_ShareholderIDType_set)

	# 交易单元代码
    __swig_setmethods__["PbuID"] = _sptraderapi.CTORATstpSPReqInsShareholderAccountField_PbuID_set
    __swig_getmethods__["PbuID"] = _sptraderapi.CTORATstpSPReqInsShareholderAccountField_PbuID_get
    if _newclass:
        PbuID = _swig_property(_sptraderapi.CTORATstpSPReqInsShareholderAccountField_PbuID_get, _sptraderapi.CTORATstpSPReqInsShareholderAccountField_PbuID_set)

	# 交易所营业部编码
    __swig_setmethods__["BranchID"] = _sptraderapi.CTORATstpSPReqInsShareholderAccountField_BranchID_set
    __swig_getmethods__["BranchID"] = _sptraderapi.CTORATstpSPReqInsShareholderAccountField_BranchID_get
    if _newclass:
        BranchID = _swig_property(_sptraderapi.CTORATstpSPReqInsShareholderAccountField_BranchID_get, _sptraderapi.CTORATstpSPReqInsShareholderAccountField_BranchID_set)

	# 交易权限模板
    __swig_setmethods__["TradingRightTemplateID"] = _sptraderapi.CTORATstpSPReqInsShareholderAccountField_TradingRightTemplateID_set
    __swig_getmethods__["TradingRightTemplateID"] = _sptraderapi.CTORATstpSPReqInsShareholderAccountField_TradingRightTemplateID_get
    if _newclass:
        TradingRightTemplateID = _swig_property(_sptraderapi.CTORATstpSPReqInsShareholderAccountField_TradingRightTemplateID_get, _sptraderapi.CTORATstpSPReqInsShareholderAccountField_TradingRightTemplateID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsShareholderAccountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsShareholderAccountField
    __del__ = lambda self: None
CTORATstpSPReqInsShareholderAccountField_swigregister = _sptraderapi.CTORATstpSPReqInsShareholderAccountField_swigregister
CTORATstpSPReqInsShareholderAccountField_swigregister(CTORATstpSPReqInsShareholderAccountField)




#########################################请求更新ShareholderAccount############################################
class CTORATstpSPReqUpdShareholderAccountField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdShareholderAccountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdShareholderAccountField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdShareholderAccountField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdShareholderAccountField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqUpdShareholderAccountField_ExchangeID_get, _sptraderapi.CTORATstpSPReqUpdShareholderAccountField_ExchangeID_set)

	# 目前该字段存放的是上证所和深圳的股东代码。
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqUpdShareholderAccountField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqUpdShareholderAccountField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPReqUpdShareholderAccountField_ShareholderID_get, _sptraderapi.CTORATstpSPReqUpdShareholderAccountField_ShareholderID_set)

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqUpdShareholderAccountField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqUpdShareholderAccountField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPReqUpdShareholderAccountField_MarketID_get, _sptraderapi.CTORATstpSPReqUpdShareholderAccountField_MarketID_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqUpdShareholderAccountField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqUpdShareholderAccountField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqUpdShareholderAccountField_InvestorID_get, _sptraderapi.CTORATstpSPReqUpdShareholderAccountField_InvestorID_set)

	# 普通，信用，衍生品等
    __swig_setmethods__["ShareholderIDType"] = _sptraderapi.CTORATstpSPReqUpdShareholderAccountField_ShareholderIDType_set
    __swig_getmethods__["ShareholderIDType"] = _sptraderapi.CTORATstpSPReqUpdShareholderAccountField_ShareholderIDType_get
    if _newclass:
        ShareholderIDType = _swig_property(_sptraderapi.CTORATstpSPReqUpdShareholderAccountField_ShareholderIDType_get, _sptraderapi.CTORATstpSPReqUpdShareholderAccountField_ShareholderIDType_set)

	# 交易单元代码
    __swig_setmethods__["PbuID"] = _sptraderapi.CTORATstpSPReqUpdShareholderAccountField_PbuID_set
    __swig_getmethods__["PbuID"] = _sptraderapi.CTORATstpSPReqUpdShareholderAccountField_PbuID_get
    if _newclass:
        PbuID = _swig_property(_sptraderapi.CTORATstpSPReqUpdShareholderAccountField_PbuID_get, _sptraderapi.CTORATstpSPReqUpdShareholderAccountField_PbuID_set)

	# 交易所营业部编码
    __swig_setmethods__["BranchID"] = _sptraderapi.CTORATstpSPReqUpdShareholderAccountField_BranchID_set
    __swig_getmethods__["BranchID"] = _sptraderapi.CTORATstpSPReqUpdShareholderAccountField_BranchID_get
    if _newclass:
        BranchID = _swig_property(_sptraderapi.CTORATstpSPReqUpdShareholderAccountField_BranchID_get, _sptraderapi.CTORATstpSPReqUpdShareholderAccountField_BranchID_set)

	# 交易权限模板
    __swig_setmethods__["TradingRightTemplateID"] = _sptraderapi.CTORATstpSPReqUpdShareholderAccountField_TradingRightTemplateID_set
    __swig_getmethods__["TradingRightTemplateID"] = _sptraderapi.CTORATstpSPReqUpdShareholderAccountField_TradingRightTemplateID_get
    if _newclass:
        TradingRightTemplateID = _swig_property(_sptraderapi.CTORATstpSPReqUpdShareholderAccountField_TradingRightTemplateID_get, _sptraderapi.CTORATstpSPReqUpdShareholderAccountField_TradingRightTemplateID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdShareholderAccountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdShareholderAccountField
    __del__ = lambda self: None
CTORATstpSPReqUpdShareholderAccountField_swigregister = _sptraderapi.CTORATstpSPReqUpdShareholderAccountField_swigregister
CTORATstpSPReqUpdShareholderAccountField_swigregister(CTORATstpSPReqUpdShareholderAccountField)




#########################################请求删除ShareholderAccount############################################
class CTORATstpSPReqDelShareholderAccountField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelShareholderAccountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelShareholderAccountField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelShareholderAccountField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelShareholderAccountField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqDelShareholderAccountField_ExchangeID_get, _sptraderapi.CTORATstpSPReqDelShareholderAccountField_ExchangeID_set)

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqDelShareholderAccountField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqDelShareholderAccountField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPReqDelShareholderAccountField_MarketID_get, _sptraderapi.CTORATstpSPReqDelShareholderAccountField_MarketID_set)

	# 目前该字段存放的是上证所和深圳的股东代码。
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqDelShareholderAccountField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqDelShareholderAccountField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPReqDelShareholderAccountField_ShareholderID_get, _sptraderapi.CTORATstpSPReqDelShareholderAccountField_ShareholderID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelShareholderAccountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelShareholderAccountField
    __del__ = lambda self: None
CTORATstpSPReqDelShareholderAccountField_swigregister = _sptraderapi.CTORATstpSPReqDelShareholderAccountField_swigregister
CTORATstpSPReqDelShareholderAccountField_swigregister(CTORATstpSPReqDelShareholderAccountField)




#########################################请求插入ShareholderSystemRelation############################################
class CTORATstpSPReqInsShareholderSystemRelationField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsShareholderSystemRelationField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsShareholderSystemRelationField, name)
    __repr__ = _swig_repr

	# 个股市场的编号
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqInsShareholderSystemRelationField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqInsShareholderSystemRelationField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPReqInsShareholderSystemRelationField_MarketID_get, _sptraderapi.CTORATstpSPReqInsShareholderSystemRelationField_MarketID_set)

	# 个股股东代码
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqInsShareholderSystemRelationField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqInsShareholderSystemRelationField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPReqInsShareholderSystemRelationField_ShareholderID_get, _sptraderapi.CTORATstpSPReqInsShareholderSystemRelationField_ShareholderID_set)

	# 个股投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqInsShareholderSystemRelationField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqInsShareholderSystemRelationField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqInsShareholderSystemRelationField_InvestorID_get, _sptraderapi.CTORATstpSPReqInsShareholderSystemRelationField_InvestorID_set)

	# 个股投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPReqInsShareholderSystemRelationField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPReqInsShareholderSystemRelationField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPReqInsShareholderSystemRelationField_BusinessUnitID_get, _sptraderapi.CTORATstpSPReqInsShareholderSystemRelationField_BusinessUnitID_set)

	# 现货市场编号
    __swig_setmethods__["OuterMarketID"] = _sptraderapi.CTORATstpSPReqInsShareholderSystemRelationField_OuterMarketID_set
    __swig_getmethods__["OuterMarketID"] = _sptraderapi.CTORATstpSPReqInsShareholderSystemRelationField_OuterMarketID_get
    if _newclass:
        OuterMarketID = _swig_property(_sptraderapi.CTORATstpSPReqInsShareholderSystemRelationField_OuterMarketID_get, _sptraderapi.CTORATstpSPReqInsShareholderSystemRelationField_OuterMarketID_set)

	# 现货股东代码
    __swig_setmethods__["OuterShareholderID"] = _sptraderapi.CTORATstpSPReqInsShareholderSystemRelationField_OuterShareholderID_set
    __swig_getmethods__["OuterShareholderID"] = _sptraderapi.CTORATstpSPReqInsShareholderSystemRelationField_OuterShareholderID_get
    if _newclass:
        OuterShareholderID = _swig_property(_sptraderapi.CTORATstpSPReqInsShareholderSystemRelationField_OuterShareholderID_get, _sptraderapi.CTORATstpSPReqInsShareholderSystemRelationField_OuterShareholderID_set)

	# 现货投资者代码
    __swig_setmethods__["OuterInvestorID"] = _sptraderapi.CTORATstpSPReqInsShareholderSystemRelationField_OuterInvestorID_set
    __swig_getmethods__["OuterInvestorID"] = _sptraderapi.CTORATstpSPReqInsShareholderSystemRelationField_OuterInvestorID_get
    if _newclass:
        OuterInvestorID = _swig_property(_sptraderapi.CTORATstpSPReqInsShareholderSystemRelationField_OuterInvestorID_get, _sptraderapi.CTORATstpSPReqInsShareholderSystemRelationField_OuterInvestorID_set)

	# 现货投资单元代码
    __swig_setmethods__["OuterBusinessUnitID"] = _sptraderapi.CTORATstpSPReqInsShareholderSystemRelationField_OuterBusinessUnitID_set
    __swig_getmethods__["OuterBusinessUnitID"] = _sptraderapi.CTORATstpSPReqInsShareholderSystemRelationField_OuterBusinessUnitID_get
    if _newclass:
        OuterBusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPReqInsShareholderSystemRelationField_OuterBusinessUnitID_get, _sptraderapi.CTORATstpSPReqInsShareholderSystemRelationField_OuterBusinessUnitID_set)

	# 一个交易所的编号
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsShareholderSystemRelationField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsShareholderSystemRelationField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqInsShareholderSystemRelationField_ExchangeID_get, _sptraderapi.CTORATstpSPReqInsShareholderSystemRelationField_ExchangeID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsShareholderSystemRelationField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsShareholderSystemRelationField
    __del__ = lambda self: None
CTORATstpSPReqInsShareholderSystemRelationField_swigregister = _sptraderapi.CTORATstpSPReqInsShareholderSystemRelationField_swigregister
CTORATstpSPReqInsShareholderSystemRelationField_swigregister(CTORATstpSPReqInsShareholderSystemRelationField)




#########################################请求更新ShareholderSystemRelation############################################
class CTORATstpSPReqUpdShareholderSystemRelationField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdShareholderSystemRelationField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdShareholderSystemRelationField, name)
    __repr__ = _swig_repr

	# 个股市场的编号
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqUpdShareholderSystemRelationField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqUpdShareholderSystemRelationField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPReqUpdShareholderSystemRelationField_MarketID_get, _sptraderapi.CTORATstpSPReqUpdShareholderSystemRelationField_MarketID_set)

	# 个股股东代码
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqUpdShareholderSystemRelationField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqUpdShareholderSystemRelationField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPReqUpdShareholderSystemRelationField_ShareholderID_get, _sptraderapi.CTORATstpSPReqUpdShareholderSystemRelationField_ShareholderID_set)

	# 个股投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqUpdShareholderSystemRelationField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqUpdShareholderSystemRelationField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqUpdShareholderSystemRelationField_InvestorID_get, _sptraderapi.CTORATstpSPReqUpdShareholderSystemRelationField_InvestorID_set)

	# 个股投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPReqUpdShareholderSystemRelationField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPReqUpdShareholderSystemRelationField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPReqUpdShareholderSystemRelationField_BusinessUnitID_get, _sptraderapi.CTORATstpSPReqUpdShareholderSystemRelationField_BusinessUnitID_set)

	# 现货市场编号
    __swig_setmethods__["OuterMarketID"] = _sptraderapi.CTORATstpSPReqUpdShareholderSystemRelationField_OuterMarketID_set
    __swig_getmethods__["OuterMarketID"] = _sptraderapi.CTORATstpSPReqUpdShareholderSystemRelationField_OuterMarketID_get
    if _newclass:
        OuterMarketID = _swig_property(_sptraderapi.CTORATstpSPReqUpdShareholderSystemRelationField_OuterMarketID_get, _sptraderapi.CTORATstpSPReqUpdShareholderSystemRelationField_OuterMarketID_set)

	# 现货股东代码
    __swig_setmethods__["OuterShareholderID"] = _sptraderapi.CTORATstpSPReqUpdShareholderSystemRelationField_OuterShareholderID_set
    __swig_getmethods__["OuterShareholderID"] = _sptraderapi.CTORATstpSPReqUpdShareholderSystemRelationField_OuterShareholderID_get
    if _newclass:
        OuterShareholderID = _swig_property(_sptraderapi.CTORATstpSPReqUpdShareholderSystemRelationField_OuterShareholderID_get, _sptraderapi.CTORATstpSPReqUpdShareholderSystemRelationField_OuterShareholderID_set)

	# 现货投资者代码
    __swig_setmethods__["OuterInvestorID"] = _sptraderapi.CTORATstpSPReqUpdShareholderSystemRelationField_OuterInvestorID_set
    __swig_getmethods__["OuterInvestorID"] = _sptraderapi.CTORATstpSPReqUpdShareholderSystemRelationField_OuterInvestorID_get
    if _newclass:
        OuterInvestorID = _swig_property(_sptraderapi.CTORATstpSPReqUpdShareholderSystemRelationField_OuterInvestorID_get, _sptraderapi.CTORATstpSPReqUpdShareholderSystemRelationField_OuterInvestorID_set)

	# 现货投资单元代码
    __swig_setmethods__["OuterBusinessUnitID"] = _sptraderapi.CTORATstpSPReqUpdShareholderSystemRelationField_OuterBusinessUnitID_set
    __swig_getmethods__["OuterBusinessUnitID"] = _sptraderapi.CTORATstpSPReqUpdShareholderSystemRelationField_OuterBusinessUnitID_get
    if _newclass:
        OuterBusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPReqUpdShareholderSystemRelationField_OuterBusinessUnitID_get, _sptraderapi.CTORATstpSPReqUpdShareholderSystemRelationField_OuterBusinessUnitID_set)

	# 一个交易所的编号
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdShareholderSystemRelationField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdShareholderSystemRelationField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqUpdShareholderSystemRelationField_ExchangeID_get, _sptraderapi.CTORATstpSPReqUpdShareholderSystemRelationField_ExchangeID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdShareholderSystemRelationField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdShareholderSystemRelationField
    __del__ = lambda self: None
CTORATstpSPReqUpdShareholderSystemRelationField_swigregister = _sptraderapi.CTORATstpSPReqUpdShareholderSystemRelationField_swigregister
CTORATstpSPReqUpdShareholderSystemRelationField_swigregister(CTORATstpSPReqUpdShareholderSystemRelationField)




#########################################请求删除ShareholderSystemRelation############################################
class CTORATstpSPReqDelShareholderSystemRelationField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelShareholderSystemRelationField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelShareholderSystemRelationField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelShareholderSystemRelationField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelShareholderSystemRelationField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqDelShareholderSystemRelationField_ExchangeID_get, _sptraderapi.CTORATstpSPReqDelShareholderSystemRelationField_ExchangeID_set)

	# 个股市场的编号
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqDelShareholderSystemRelationField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqDelShareholderSystemRelationField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPReqDelShareholderSystemRelationField_MarketID_get, _sptraderapi.CTORATstpSPReqDelShareholderSystemRelationField_MarketID_set)

	# 个股股东代码
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqDelShareholderSystemRelationField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqDelShareholderSystemRelationField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPReqDelShareholderSystemRelationField_ShareholderID_get, _sptraderapi.CTORATstpSPReqDelShareholderSystemRelationField_ShareholderID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelShareholderSystemRelationField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelShareholderSystemRelationField
    __del__ = lambda self: None
CTORATstpSPReqDelShareholderSystemRelationField_swigregister = _sptraderapi.CTORATstpSPReqDelShareholderSystemRelationField_swigregister
CTORATstpSPReqDelShareholderSystemRelationField_swigregister(CTORATstpSPReqDelShareholderSystemRelationField)




#########################################请求插入ShareholderTradingRight############################################
class CTORATstpSPReqInsShareholderTradingRightField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsShareholderTradingRightField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsShareholderTradingRightField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsShareholderTradingRightField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsShareholderTradingRightField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqInsShareholderTradingRightField_ExchangeID_get, _sptraderapi.CTORATstpSPReqInsShareholderTradingRightField_ExchangeID_set)

	# 股东账户代码
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqInsShareholderTradingRightField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqInsShareholderTradingRightField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPReqInsShareholderTradingRightField_ShareholderID_get, _sptraderapi.CTORATstpSPReqInsShareholderTradingRightField_ShareholderID_set)

	# 市场代码
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqInsShareholderTradingRightField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqInsShareholderTradingRightField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPReqInsShareholderTradingRightField_MarketID_get, _sptraderapi.CTORATstpSPReqInsShareholderTradingRightField_MarketID_set)

	# 证券品种代码
    __swig_setmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqInsShareholderTradingRightField_ProductID_set
    __swig_getmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqInsShareholderTradingRightField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_sptraderapi.CTORATstpSPReqInsShareholderTradingRightField_ProductID_get, _sptraderapi.CTORATstpSPReqInsShareholderTradingRightField_ProductID_set)

	# 证券类别代码
    __swig_setmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqInsShareholderTradingRightField_SecurityType_set
    __swig_getmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqInsShareholderTradingRightField_SecurityType_get
    if _newclass:
        SecurityType = _swig_property(_sptraderapi.CTORATstpSPReqInsShareholderTradingRightField_SecurityType_get, _sptraderapi.CTORATstpSPReqInsShareholderTradingRightField_SecurityType_set)

	# 按开平方向
    __swig_setmethods__["OffsetFlag"] = _sptraderapi.CTORATstpSPReqInsShareholderTradingRightField_OffsetFlag_set
    __swig_getmethods__["OffsetFlag"] = _sptraderapi.CTORATstpSPReqInsShareholderTradingRightField_OffsetFlag_get
    if _newclass:
        OffsetFlag = _swig_property(_sptraderapi.CTORATstpSPReqInsShareholderTradingRightField_OffsetFlag_get, _sptraderapi.CTORATstpSPReqInsShareholderTradingRightField_OffsetFlag_set)

	# 报单类别
    __swig_setmethods__["Direction"] = _sptraderapi.CTORATstpSPReqInsShareholderTradingRightField_Direction_set
    __swig_getmethods__["Direction"] = _sptraderapi.CTORATstpSPReqInsShareholderTradingRightField_Direction_get
    if _newclass:
        Direction = _swig_property(_sptraderapi.CTORATstpSPReqInsShareholderTradingRightField_Direction_get, _sptraderapi.CTORATstpSPReqInsShareholderTradingRightField_Direction_set)

	# 投机套保标志
    __swig_setmethods__["HedgeFlag"] = _sptraderapi.CTORATstpSPReqInsShareholderTradingRightField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _sptraderapi.CTORATstpSPReqInsShareholderTradingRightField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_sptraderapi.CTORATstpSPReqInsShareholderTradingRightField_HedgeFlag_get, _sptraderapi.CTORATstpSPReqInsShareholderTradingRightField_HedgeFlag_set)

	# 是否禁止
    __swig_setmethods__["bForbidden"] = _sptraderapi.CTORATstpSPReqInsShareholderTradingRightField_bForbidden_set
    __swig_getmethods__["bForbidden"] = _sptraderapi.CTORATstpSPReqInsShareholderTradingRightField_bForbidden_get
    if _newclass:
        bForbidden = _swig_property(_sptraderapi.CTORATstpSPReqInsShareholderTradingRightField_bForbidden_get, _sptraderapi.CTORATstpSPReqInsShareholderTradingRightField_bForbidden_set)

	# 交易权限模式
    __swig_setmethods__["RangeMode"] = _sptraderapi.CTORATstpSPReqInsShareholderTradingRightField_RangeMode_set
    __swig_getmethods__["RangeMode"] = _sptraderapi.CTORATstpSPReqInsShareholderTradingRightField_RangeMode_get
    if _newclass:
        RangeMode = _swig_property(_sptraderapi.CTORATstpSPReqInsShareholderTradingRightField_RangeMode_get, _sptraderapi.CTORATstpSPReqInsShareholderTradingRightField_RangeMode_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsShareholderTradingRightField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsShareholderTradingRightField
    __del__ = lambda self: None
CTORATstpSPReqInsShareholderTradingRightField_swigregister = _sptraderapi.CTORATstpSPReqInsShareholderTradingRightField_swigregister
CTORATstpSPReqInsShareholderTradingRightField_swigregister(CTORATstpSPReqInsShareholderTradingRightField)




#########################################请求更新ShareholderTradingRight############################################
class CTORATstpSPReqUpdShareholderTradingRightField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdShareholderTradingRightField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdShareholderTradingRightField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdShareholderTradingRightField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdShareholderTradingRightField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqUpdShareholderTradingRightField_ExchangeID_get, _sptraderapi.CTORATstpSPReqUpdShareholderTradingRightField_ExchangeID_set)

	# 股东账户代码
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqUpdShareholderTradingRightField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqUpdShareholderTradingRightField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPReqUpdShareholderTradingRightField_ShareholderID_get, _sptraderapi.CTORATstpSPReqUpdShareholderTradingRightField_ShareholderID_set)

	# 市场代码
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqUpdShareholderTradingRightField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqUpdShareholderTradingRightField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPReqUpdShareholderTradingRightField_MarketID_get, _sptraderapi.CTORATstpSPReqUpdShareholderTradingRightField_MarketID_set)

	# 证券品种代码
    __swig_setmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqUpdShareholderTradingRightField_ProductID_set
    __swig_getmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqUpdShareholderTradingRightField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_sptraderapi.CTORATstpSPReqUpdShareholderTradingRightField_ProductID_get, _sptraderapi.CTORATstpSPReqUpdShareholderTradingRightField_ProductID_set)

	# 证券类别代码
    __swig_setmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqUpdShareholderTradingRightField_SecurityType_set
    __swig_getmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqUpdShareholderTradingRightField_SecurityType_get
    if _newclass:
        SecurityType = _swig_property(_sptraderapi.CTORATstpSPReqUpdShareholderTradingRightField_SecurityType_get, _sptraderapi.CTORATstpSPReqUpdShareholderTradingRightField_SecurityType_set)

	# 按开平方向
    __swig_setmethods__["OffsetFlag"] = _sptraderapi.CTORATstpSPReqUpdShareholderTradingRightField_OffsetFlag_set
    __swig_getmethods__["OffsetFlag"] = _sptraderapi.CTORATstpSPReqUpdShareholderTradingRightField_OffsetFlag_get
    if _newclass:
        OffsetFlag = _swig_property(_sptraderapi.CTORATstpSPReqUpdShareholderTradingRightField_OffsetFlag_get, _sptraderapi.CTORATstpSPReqUpdShareholderTradingRightField_OffsetFlag_set)

	# 报单类别
    __swig_setmethods__["Direction"] = _sptraderapi.CTORATstpSPReqUpdShareholderTradingRightField_Direction_set
    __swig_getmethods__["Direction"] = _sptraderapi.CTORATstpSPReqUpdShareholderTradingRightField_Direction_get
    if _newclass:
        Direction = _swig_property(_sptraderapi.CTORATstpSPReqUpdShareholderTradingRightField_Direction_get, _sptraderapi.CTORATstpSPReqUpdShareholderTradingRightField_Direction_set)

	# 投机套保标志
    __swig_setmethods__["HedgeFlag"] = _sptraderapi.CTORATstpSPReqUpdShareholderTradingRightField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _sptraderapi.CTORATstpSPReqUpdShareholderTradingRightField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_sptraderapi.CTORATstpSPReqUpdShareholderTradingRightField_HedgeFlag_get, _sptraderapi.CTORATstpSPReqUpdShareholderTradingRightField_HedgeFlag_set)

	# 是否禁止
    __swig_setmethods__["bForbidden"] = _sptraderapi.CTORATstpSPReqUpdShareholderTradingRightField_bForbidden_set
    __swig_getmethods__["bForbidden"] = _sptraderapi.CTORATstpSPReqUpdShareholderTradingRightField_bForbidden_get
    if _newclass:
        bForbidden = _swig_property(_sptraderapi.CTORATstpSPReqUpdShareholderTradingRightField_bForbidden_get, _sptraderapi.CTORATstpSPReqUpdShareholderTradingRightField_bForbidden_set)

	# 交易权限模式
    __swig_setmethods__["RangeMode"] = _sptraderapi.CTORATstpSPReqUpdShareholderTradingRightField_RangeMode_set
    __swig_getmethods__["RangeMode"] = _sptraderapi.CTORATstpSPReqUpdShareholderTradingRightField_RangeMode_get
    if _newclass:
        RangeMode = _swig_property(_sptraderapi.CTORATstpSPReqUpdShareholderTradingRightField_RangeMode_get, _sptraderapi.CTORATstpSPReqUpdShareholderTradingRightField_RangeMode_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdShareholderTradingRightField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdShareholderTradingRightField
    __del__ = lambda self: None
CTORATstpSPReqUpdShareholderTradingRightField_swigregister = _sptraderapi.CTORATstpSPReqUpdShareholderTradingRightField_swigregister
CTORATstpSPReqUpdShareholderTradingRightField_swigregister(CTORATstpSPReqUpdShareholderTradingRightField)




#########################################请求删除ShareholderTradingRight############################################
class CTORATstpSPReqDelShareholderTradingRightField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelShareholderTradingRightField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelShareholderTradingRightField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelShareholderTradingRightField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelShareholderTradingRightField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqDelShareholderTradingRightField_ExchangeID_get, _sptraderapi.CTORATstpSPReqDelShareholderTradingRightField_ExchangeID_set)

	# 市场代码
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqDelShareholderTradingRightField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqDelShareholderTradingRightField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPReqDelShareholderTradingRightField_MarketID_get, _sptraderapi.CTORATstpSPReqDelShareholderTradingRightField_MarketID_set)

	# 股东账户代码
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqDelShareholderTradingRightField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqDelShareholderTradingRightField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPReqDelShareholderTradingRightField_ShareholderID_get, _sptraderapi.CTORATstpSPReqDelShareholderTradingRightField_ShareholderID_set)

	# 证券品种代码
    __swig_setmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqDelShareholderTradingRightField_ProductID_set
    __swig_getmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqDelShareholderTradingRightField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_sptraderapi.CTORATstpSPReqDelShareholderTradingRightField_ProductID_get, _sptraderapi.CTORATstpSPReqDelShareholderTradingRightField_ProductID_set)

	# 证券类别代码
    __swig_setmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqDelShareholderTradingRightField_SecurityType_set
    __swig_getmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqDelShareholderTradingRightField_SecurityType_get
    if _newclass:
        SecurityType = _swig_property(_sptraderapi.CTORATstpSPReqDelShareholderTradingRightField_SecurityType_get, _sptraderapi.CTORATstpSPReqDelShareholderTradingRightField_SecurityType_set)

	# 按开平方向
    __swig_setmethods__["OffsetFlag"] = _sptraderapi.CTORATstpSPReqDelShareholderTradingRightField_OffsetFlag_set
    __swig_getmethods__["OffsetFlag"] = _sptraderapi.CTORATstpSPReqDelShareholderTradingRightField_OffsetFlag_get
    if _newclass:
        OffsetFlag = _swig_property(_sptraderapi.CTORATstpSPReqDelShareholderTradingRightField_OffsetFlag_get, _sptraderapi.CTORATstpSPReqDelShareholderTradingRightField_OffsetFlag_set)

	# 报单类别
    __swig_setmethods__["Direction"] = _sptraderapi.CTORATstpSPReqDelShareholderTradingRightField_Direction_set
    __swig_getmethods__["Direction"] = _sptraderapi.CTORATstpSPReqDelShareholderTradingRightField_Direction_get
    if _newclass:
        Direction = _swig_property(_sptraderapi.CTORATstpSPReqDelShareholderTradingRightField_Direction_get, _sptraderapi.CTORATstpSPReqDelShareholderTradingRightField_Direction_set)

	# 投机套保标志
    __swig_setmethods__["HedgeFlag"] = _sptraderapi.CTORATstpSPReqDelShareholderTradingRightField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _sptraderapi.CTORATstpSPReqDelShareholderTradingRightField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_sptraderapi.CTORATstpSPReqDelShareholderTradingRightField_HedgeFlag_get, _sptraderapi.CTORATstpSPReqDelShareholderTradingRightField_HedgeFlag_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelShareholderTradingRightField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelShareholderTradingRightField
    __del__ = lambda self: None
CTORATstpSPReqDelShareholderTradingRightField_swigregister = _sptraderapi.CTORATstpSPReqDelShareholderTradingRightField_swigregister
CTORATstpSPReqDelShareholderTradingRightField_swigregister(CTORATstpSPReqDelShareholderTradingRightField)




#########################################请求插入StockPosition############################################
class CTORATstpSPReqInsStockPositionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsStockPositionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsStockPositionField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqInsStockPositionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqInsStockPositionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqInsStockPositionField_InvestorID_get, _sptraderapi.CTORATstpSPReqInsStockPositionField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPReqInsStockPositionField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPReqInsStockPositionField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPReqInsStockPositionField_BusinessUnitID_get, _sptraderapi.CTORATstpSPReqInsStockPositionField_BusinessUnitID_set)

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqInsStockPositionField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqInsStockPositionField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPReqInsStockPositionField_MarketID_get, _sptraderapi.CTORATstpSPReqInsStockPositionField_MarketID_set)

	# 交易账户代码
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqInsStockPositionField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqInsStockPositionField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPReqInsStockPositionField_ShareholderID_get, _sptraderapi.CTORATstpSPReqInsStockPositionField_ShareholderID_set)

	# 交易日期
    __swig_setmethods__["TradingDay"] = _sptraderapi.CTORATstpSPReqInsStockPositionField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _sptraderapi.CTORATstpSPReqInsStockPositionField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_sptraderapi.CTORATstpSPReqInsStockPositionField_TradingDay_get, _sptraderapi.CTORATstpSPReqInsStockPositionField_TradingDay_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsStockPositionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsStockPositionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqInsStockPositionField_ExchangeID_get, _sptraderapi.CTORATstpSPReqInsStockPositionField_ExchangeID_set)

	# 证券代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqInsStockPositionField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqInsStockPositionField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqInsStockPositionField_SecurityID_get, _sptraderapi.CTORATstpSPReqInsStockPositionField_SecurityID_set)

	# 昨日持仓（包含昨日持仓冻结数量）
    __swig_setmethods__["HistoryPos"] = _sptraderapi.CTORATstpSPReqInsStockPositionField_HistoryPos_set
    __swig_getmethods__["HistoryPos"] = _sptraderapi.CTORATstpSPReqInsStockPositionField_HistoryPos_get
    if _newclass:
        HistoryPos = _swig_property(_sptraderapi.CTORATstpSPReqInsStockPositionField_HistoryPos_get, _sptraderapi.CTORATstpSPReqInsStockPositionField_HistoryPos_set)

	# 昨日持仓冻结
    __swig_setmethods__["HistoryPosFrozen"] = _sptraderapi.CTORATstpSPReqInsStockPositionField_HistoryPosFrozen_set
    __swig_getmethods__["HistoryPosFrozen"] = _sptraderapi.CTORATstpSPReqInsStockPositionField_HistoryPosFrozen_get
    if _newclass:
        HistoryPosFrozen = _swig_property(_sptraderapi.CTORATstpSPReqInsStockPositionField_HistoryPosFrozen_get, _sptraderapi.CTORATstpSPReqInsStockPositionField_HistoryPosFrozen_set)

	# 今日买卖持仓（包含今日买卖持仓冻结数量）
    __swig_setmethods__["TodayBSPos"] = _sptraderapi.CTORATstpSPReqInsStockPositionField_TodayBSPos_set
    __swig_getmethods__["TodayBSPos"] = _sptraderapi.CTORATstpSPReqInsStockPositionField_TodayBSPos_get
    if _newclass:
        TodayBSPos = _swig_property(_sptraderapi.CTORATstpSPReqInsStockPositionField_TodayBSPos_get, _sptraderapi.CTORATstpSPReqInsStockPositionField_TodayBSPos_set)

	# 今日买卖持仓冻结
    __swig_setmethods__["TodayBSPosFrozen"] = _sptraderapi.CTORATstpSPReqInsStockPositionField_TodayBSPosFrozen_set
    __swig_getmethods__["TodayBSPosFrozen"] = _sptraderapi.CTORATstpSPReqInsStockPositionField_TodayBSPosFrozen_get
    if _newclass:
        TodayBSPosFrozen = _swig_property(_sptraderapi.CTORATstpSPReqInsStockPositionField_TodayBSPosFrozen_get, _sptraderapi.CTORATstpSPReqInsStockPositionField_TodayBSPosFrozen_set)

	# 今日申赎持仓（包含今日申赎持仓冻结数量）
    __swig_setmethods__["TodayPRPos"] = _sptraderapi.CTORATstpSPReqInsStockPositionField_TodayPRPos_set
    __swig_getmethods__["TodayPRPos"] = _sptraderapi.CTORATstpSPReqInsStockPositionField_TodayPRPos_get
    if _newclass:
        TodayPRPos = _swig_property(_sptraderapi.CTORATstpSPReqInsStockPositionField_TodayPRPos_get, _sptraderapi.CTORATstpSPReqInsStockPositionField_TodayPRPos_set)

	# 今日申赎持仓冻结
    __swig_setmethods__["TodayPRPosFrozen"] = _sptraderapi.CTORATstpSPReqInsStockPositionField_TodayPRPosFrozen_set
    __swig_getmethods__["TodayPRPosFrozen"] = _sptraderapi.CTORATstpSPReqInsStockPositionField_TodayPRPosFrozen_get
    if _newclass:
        TodayPRPosFrozen = _swig_property(_sptraderapi.CTORATstpSPReqInsStockPositionField_TodayPRPosFrozen_get, _sptraderapi.CTORATstpSPReqInsStockPositionField_TodayPRPosFrozen_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsStockPositionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsStockPositionField
    __del__ = lambda self: None
CTORATstpSPReqInsStockPositionField_swigregister = _sptraderapi.CTORATstpSPReqInsStockPositionField_swigregister
CTORATstpSPReqInsStockPositionField_swigregister(CTORATstpSPReqInsStockPositionField)




#########################################请求更新StockPosition############################################
class CTORATstpSPReqUpdStockPositionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdStockPositionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdStockPositionField, name)
    __repr__ = _swig_repr

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqUpdStockPositionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqUpdStockPositionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqUpdStockPositionField_InvestorID_get, _sptraderapi.CTORATstpSPReqUpdStockPositionField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPReqUpdStockPositionField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPReqUpdStockPositionField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPReqUpdStockPositionField_BusinessUnitID_get, _sptraderapi.CTORATstpSPReqUpdStockPositionField_BusinessUnitID_set)

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqUpdStockPositionField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqUpdStockPositionField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPReqUpdStockPositionField_MarketID_get, _sptraderapi.CTORATstpSPReqUpdStockPositionField_MarketID_set)

	# 交易账户代码
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqUpdStockPositionField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqUpdStockPositionField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPReqUpdStockPositionField_ShareholderID_get, _sptraderapi.CTORATstpSPReqUpdStockPositionField_ShareholderID_set)

	# 交易日期
    __swig_setmethods__["TradingDay"] = _sptraderapi.CTORATstpSPReqUpdStockPositionField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _sptraderapi.CTORATstpSPReqUpdStockPositionField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_sptraderapi.CTORATstpSPReqUpdStockPositionField_TradingDay_get, _sptraderapi.CTORATstpSPReqUpdStockPositionField_TradingDay_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdStockPositionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdStockPositionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqUpdStockPositionField_ExchangeID_get, _sptraderapi.CTORATstpSPReqUpdStockPositionField_ExchangeID_set)

	# 证券代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqUpdStockPositionField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqUpdStockPositionField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqUpdStockPositionField_SecurityID_get, _sptraderapi.CTORATstpSPReqUpdStockPositionField_SecurityID_set)

	# 昨日持仓（包含昨日持仓冻结数量）
    __swig_setmethods__["HistoryPos"] = _sptraderapi.CTORATstpSPReqUpdStockPositionField_HistoryPos_set
    __swig_getmethods__["HistoryPos"] = _sptraderapi.CTORATstpSPReqUpdStockPositionField_HistoryPos_get
    if _newclass:
        HistoryPos = _swig_property(_sptraderapi.CTORATstpSPReqUpdStockPositionField_HistoryPos_get, _sptraderapi.CTORATstpSPReqUpdStockPositionField_HistoryPos_set)

	# 昨日持仓冻结
    __swig_setmethods__["HistoryPosFrozen"] = _sptraderapi.CTORATstpSPReqUpdStockPositionField_HistoryPosFrozen_set
    __swig_getmethods__["HistoryPosFrozen"] = _sptraderapi.CTORATstpSPReqUpdStockPositionField_HistoryPosFrozen_get
    if _newclass:
        HistoryPosFrozen = _swig_property(_sptraderapi.CTORATstpSPReqUpdStockPositionField_HistoryPosFrozen_get, _sptraderapi.CTORATstpSPReqUpdStockPositionField_HistoryPosFrozen_set)

	# 今日买卖持仓（包含今日买卖持仓冻结数量）
    __swig_setmethods__["TodayBSPos"] = _sptraderapi.CTORATstpSPReqUpdStockPositionField_TodayBSPos_set
    __swig_getmethods__["TodayBSPos"] = _sptraderapi.CTORATstpSPReqUpdStockPositionField_TodayBSPos_get
    if _newclass:
        TodayBSPos = _swig_property(_sptraderapi.CTORATstpSPReqUpdStockPositionField_TodayBSPos_get, _sptraderapi.CTORATstpSPReqUpdStockPositionField_TodayBSPos_set)

	# 今日买卖持仓冻结
    __swig_setmethods__["TodayBSPosFrozen"] = _sptraderapi.CTORATstpSPReqUpdStockPositionField_TodayBSPosFrozen_set
    __swig_getmethods__["TodayBSPosFrozen"] = _sptraderapi.CTORATstpSPReqUpdStockPositionField_TodayBSPosFrozen_get
    if _newclass:
        TodayBSPosFrozen = _swig_property(_sptraderapi.CTORATstpSPReqUpdStockPositionField_TodayBSPosFrozen_get, _sptraderapi.CTORATstpSPReqUpdStockPositionField_TodayBSPosFrozen_set)

	# 今日申赎持仓（包含今日申赎持仓冻结数量）
    __swig_setmethods__["TodayPRPos"] = _sptraderapi.CTORATstpSPReqUpdStockPositionField_TodayPRPos_set
    __swig_getmethods__["TodayPRPos"] = _sptraderapi.CTORATstpSPReqUpdStockPositionField_TodayPRPos_get
    if _newclass:
        TodayPRPos = _swig_property(_sptraderapi.CTORATstpSPReqUpdStockPositionField_TodayPRPos_get, _sptraderapi.CTORATstpSPReqUpdStockPositionField_TodayPRPos_set)

	# 今日申赎持仓冻结
    __swig_setmethods__["TodayPRPosFrozen"] = _sptraderapi.CTORATstpSPReqUpdStockPositionField_TodayPRPosFrozen_set
    __swig_getmethods__["TodayPRPosFrozen"] = _sptraderapi.CTORATstpSPReqUpdStockPositionField_TodayPRPosFrozen_get
    if _newclass:
        TodayPRPosFrozen = _swig_property(_sptraderapi.CTORATstpSPReqUpdStockPositionField_TodayPRPosFrozen_get, _sptraderapi.CTORATstpSPReqUpdStockPositionField_TodayPRPosFrozen_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdStockPositionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdStockPositionField
    __del__ = lambda self: None
CTORATstpSPReqUpdStockPositionField_swigregister = _sptraderapi.CTORATstpSPReqUpdStockPositionField_swigregister
CTORATstpSPReqUpdStockPositionField_swigregister(CTORATstpSPReqUpdStockPositionField)




#########################################请求删除StockPosition############################################
class CTORATstpSPReqDelStockPositionField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelStockPositionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelStockPositionField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelStockPositionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelStockPositionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqDelStockPositionField_ExchangeID_get, _sptraderapi.CTORATstpSPReqDelStockPositionField_ExchangeID_set)

	# 投资者代码
    __swig_setmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqDelStockPositionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _sptraderapi.CTORATstpSPReqDelStockPositionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_sptraderapi.CTORATstpSPReqDelStockPositionField_InvestorID_get, _sptraderapi.CTORATstpSPReqDelStockPositionField_InvestorID_set)

	# 投资单元代码
    __swig_setmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPReqDelStockPositionField_BusinessUnitID_set
    __swig_getmethods__["BusinessUnitID"] = _sptraderapi.CTORATstpSPReqDelStockPositionField_BusinessUnitID_get
    if _newclass:
        BusinessUnitID = _swig_property(_sptraderapi.CTORATstpSPReqDelStockPositionField_BusinessUnitID_get, _sptraderapi.CTORATstpSPReqDelStockPositionField_BusinessUnitID_set)

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqDelStockPositionField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqDelStockPositionField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPReqDelStockPositionField_MarketID_get, _sptraderapi.CTORATstpSPReqDelStockPositionField_MarketID_set)

	# 交易账户代码
    __swig_setmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqDelStockPositionField_ShareholderID_set
    __swig_getmethods__["ShareholderID"] = _sptraderapi.CTORATstpSPReqDelStockPositionField_ShareholderID_get
    if _newclass:
        ShareholderID = _swig_property(_sptraderapi.CTORATstpSPReqDelStockPositionField_ShareholderID_get, _sptraderapi.CTORATstpSPReqDelStockPositionField_ShareholderID_set)

	# 交易日期
    __swig_setmethods__["TradingDay"] = _sptraderapi.CTORATstpSPReqDelStockPositionField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _sptraderapi.CTORATstpSPReqDelStockPositionField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_sptraderapi.CTORATstpSPReqDelStockPositionField_TradingDay_get, _sptraderapi.CTORATstpSPReqDelStockPositionField_TradingDay_set)

	# 证券代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqDelStockPositionField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqDelStockPositionField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqDelStockPositionField_SecurityID_get, _sptraderapi.CTORATstpSPReqDelStockPositionField_SecurityID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelStockPositionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelStockPositionField
    __del__ = lambda self: None
CTORATstpSPReqDelStockPositionField_swigregister = _sptraderapi.CTORATstpSPReqDelStockPositionField_swigregister
CTORATstpSPReqDelStockPositionField_swigregister(CTORATstpSPReqDelStockPositionField)




#########################################请求插入StockSecurity############################################
class CTORATstpSPReqInsStockSecurityField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsStockSecurityField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsStockSecurityField, name)
    __repr__ = _swig_repr

	# 证券代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqInsStockSecurityField_SecurityID_get, _sptraderapi.CTORATstpSPReqInsStockSecurityField_SecurityID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqInsStockSecurityField_ExchangeID_get, _sptraderapi.CTORATstpSPReqInsStockSecurityField_ExchangeID_set)

	# 证券名称
    __swig_setmethods__["SecurityName"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_SecurityName_set
    __swig_getmethods__["SecurityName"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_SecurityName_get
    if _newclass:
        SecurityName = _swig_property(_sptraderapi.CTORATstpSPReqInsStockSecurityField_SecurityName_get, _sptraderapi.CTORATstpSPReqInsStockSecurityField_SecurityName_set)

	# 基础证券代码
    __swig_setmethods__["UnderlyingSecurityID"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_UnderlyingSecurityID_set
    __swig_getmethods__["UnderlyingSecurityID"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_UnderlyingSecurityID_get
    if _newclass:
        UnderlyingSecurityID = _swig_property(_sptraderapi.CTORATstpSPReqInsStockSecurityField_UnderlyingSecurityID_get, _sptraderapi.CTORATstpSPReqInsStockSecurityField_UnderlyingSecurityID_set)

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPReqInsStockSecurityField_MarketID_get, _sptraderapi.CTORATstpSPReqInsStockSecurityField_MarketID_set)

	# 证券市场中的具体品种，如上海股票
    __swig_setmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_ProductID_set
    __swig_getmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_sptraderapi.CTORATstpSPReqInsStockSecurityField_ProductID_get, _sptraderapi.CTORATstpSPReqInsStockSecurityField_ProductID_set)

	# 证券品种中的具体类别，如上海A股
    __swig_setmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_SecurityType_set
    __swig_getmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_SecurityType_get
    if _newclass:
        SecurityType = _swig_property(_sptraderapi.CTORATstpSPReqInsStockSecurityField_SecurityType_get, _sptraderapi.CTORATstpSPReqInsStockSecurityField_SecurityType_set)

	# 币种
    __swig_setmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_sptraderapi.CTORATstpSPReqInsStockSecurityField_CurrencyID_get, _sptraderapi.CTORATstpSPReqInsStockSecurityField_CurrencyID_set)

	# 记录申报时使用的单位。手、股、份、张等
    __swig_setmethods__["OrderUnit"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_OrderUnit_set
    __swig_getmethods__["OrderUnit"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_OrderUnit_get
    if _newclass:
        OrderUnit = _swig_property(_sptraderapi.CTORATstpSPReqInsStockSecurityField_OrderUnit_get, _sptraderapi.CTORATstpSPReqInsStockSecurityField_OrderUnit_set)

	# 每次可以买入的最小交易单位（以申报单位计），每次买入必须是买入交易单位的整数倍
    __swig_setmethods__["BuyTradingUnit"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_BuyTradingUnit_set
    __swig_getmethods__["BuyTradingUnit"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_BuyTradingUnit_get
    if _newclass:
        BuyTradingUnit = _swig_property(_sptraderapi.CTORATstpSPReqInsStockSecurityField_BuyTradingUnit_get, _sptraderapi.CTORATstpSPReqInsStockSecurityField_BuyTradingUnit_set)

	# 每次可以卖出的最小交易单位（以申报单位计），每次卖出必须是卖出交易单位的整数倍
    __swig_setmethods__["SellTradingUnit"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_SellTradingUnit_set
    __swig_getmethods__["SellTradingUnit"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_SellTradingUnit_get
    if _newclass:
        SellTradingUnit = _swig_property(_sptraderapi.CTORATstpSPReqInsStockSecurityField_SellTradingUnit_get, _sptraderapi.CTORATstpSPReqInsStockSecurityField_SellTradingUnit_set)

	# 单笔可以买入的最大数量（以申报单位计）
    __swig_setmethods__["MaxMarketOrderBuyVolume"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_MaxMarketOrderBuyVolume_set
    __swig_getmethods__["MaxMarketOrderBuyVolume"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_MaxMarketOrderBuyVolume_get
    if _newclass:
        MaxMarketOrderBuyVolume = _swig_property(_sptraderapi.CTORATstpSPReqInsStockSecurityField_MaxMarketOrderBuyVolume_get, _sptraderapi.CTORATstpSPReqInsStockSecurityField_MaxMarketOrderBuyVolume_set)

	# 单笔可以买入的最小数量（以申报单位计）
    __swig_setmethods__["MinMarketOrderBuyVolume"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_MinMarketOrderBuyVolume_set
    __swig_getmethods__["MinMarketOrderBuyVolume"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_MinMarketOrderBuyVolume_get
    if _newclass:
        MinMarketOrderBuyVolume = _swig_property(_sptraderapi.CTORATstpSPReqInsStockSecurityField_MinMarketOrderBuyVolume_get, _sptraderapi.CTORATstpSPReqInsStockSecurityField_MinMarketOrderBuyVolume_set)

	# 单笔可以买入的最大数量（以申报单位计）
    __swig_setmethods__["MaxLimitOrderBuyVolume"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_MaxLimitOrderBuyVolume_set
    __swig_getmethods__["MaxLimitOrderBuyVolume"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_MaxLimitOrderBuyVolume_get
    if _newclass:
        MaxLimitOrderBuyVolume = _swig_property(_sptraderapi.CTORATstpSPReqInsStockSecurityField_MaxLimitOrderBuyVolume_get, _sptraderapi.CTORATstpSPReqInsStockSecurityField_MaxLimitOrderBuyVolume_set)

	# 单笔可以买入的最小数量（以申报单位计）
    __swig_setmethods__["MinLimitOrderBuyVolume"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_MinLimitOrderBuyVolume_set
    __swig_getmethods__["MinLimitOrderBuyVolume"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_MinLimitOrderBuyVolume_get
    if _newclass:
        MinLimitOrderBuyVolume = _swig_property(_sptraderapi.CTORATstpSPReqInsStockSecurityField_MinLimitOrderBuyVolume_get, _sptraderapi.CTORATstpSPReqInsStockSecurityField_MinLimitOrderBuyVolume_set)

	# 单笔可以卖入的最大数量（以申报单位计）
    __swig_setmethods__["MaxMarketOrderSellVolume"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_MaxMarketOrderSellVolume_set
    __swig_getmethods__["MaxMarketOrderSellVolume"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_MaxMarketOrderSellVolume_get
    if _newclass:
        MaxMarketOrderSellVolume = _swig_property(_sptraderapi.CTORATstpSPReqInsStockSecurityField_MaxMarketOrderSellVolume_get, _sptraderapi.CTORATstpSPReqInsStockSecurityField_MaxMarketOrderSellVolume_set)

	# 单笔可以卖入的最小数量（以申报单位计）
    __swig_setmethods__["MinMarketOrderSellVolume"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_MinMarketOrderSellVolume_set
    __swig_getmethods__["MinMarketOrderSellVolume"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_MinMarketOrderSellVolume_get
    if _newclass:
        MinMarketOrderSellVolume = _swig_property(_sptraderapi.CTORATstpSPReqInsStockSecurityField_MinMarketOrderSellVolume_get, _sptraderapi.CTORATstpSPReqInsStockSecurityField_MinMarketOrderSellVolume_set)

	# 单笔可以卖入的最大数量（以申报单位计）
    __swig_setmethods__["MaxLimitOrderSellVolume"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_MaxLimitOrderSellVolume_set
    __swig_getmethods__["MaxLimitOrderSellVolume"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_MaxLimitOrderSellVolume_get
    if _newclass:
        MaxLimitOrderSellVolume = _swig_property(_sptraderapi.CTORATstpSPReqInsStockSecurityField_MaxLimitOrderSellVolume_get, _sptraderapi.CTORATstpSPReqInsStockSecurityField_MaxLimitOrderSellVolume_set)

	# 单笔可以卖入的最小数量（以申报单位计）
    __swig_setmethods__["MinLimitOrderSellVolume"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_MinLimitOrderSellVolume_set
    __swig_getmethods__["MinLimitOrderSellVolume"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_MinLimitOrderSellVolume_get
    if _newclass:
        MinLimitOrderSellVolume = _swig_property(_sptraderapi.CTORATstpSPReqInsStockSecurityField_MinLimitOrderSellVolume_get, _sptraderapi.CTORATstpSPReqInsStockSecurityField_MinLimitOrderSellVolume_set)

	# 申报单位与报价金额单位的比值
    __swig_setmethods__["VolumeMultiple"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_VolumeMultiple_set
    __swig_getmethods__["VolumeMultiple"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_VolumeMultiple_get
    if _newclass:
        VolumeMultiple = _swig_property(_sptraderapi.CTORATstpSPReqInsStockSecurityField_VolumeMultiple_get, _sptraderapi.CTORATstpSPReqInsStockSecurityField_VolumeMultiple_set)

	# 证券的单位价格涨跌变化的最小值
    __swig_setmethods__["PriceTick"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_PriceTick_set
    __swig_getmethods__["PriceTick"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_PriceTick_get
    if _newclass:
        PriceTick = _swig_property(_sptraderapi.CTORATstpSPReqInsStockSecurityField_PriceTick_get, _sptraderapi.CTORATstpSPReqInsStockSecurityField_PriceTick_set)

	# 上市日
    __swig_setmethods__["OpenDate"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_OpenDate_set
    __swig_getmethods__["OpenDate"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_OpenDate_get
    if _newclass:
        OpenDate = _swig_property(_sptraderapi.CTORATstpSPReqInsStockSecurityField_OpenDate_get, _sptraderapi.CTORATstpSPReqInsStockSecurityField_OpenDate_set)

	# 债券，到期日
    __swig_setmethods__["CloseDate"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_CloseDate_set
    __swig_getmethods__["CloseDate"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_CloseDate_get
    if _newclass:
        CloseDate = _swig_property(_sptraderapi.CTORATstpSPReqInsStockSecurityField_CloseDate_get, _sptraderapi.CTORATstpSPReqInsStockSecurityField_CloseDate_set)

	# 证券的面值
    __swig_setmethods__["ParValue"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_ParValue_set
    __swig_getmethods__["ParValue"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_ParValue_get
    if _newclass:
        ParValue = _swig_property(_sptraderapi.CTORATstpSPReqInsStockSecurityField_ParValue_get, _sptraderapi.CTORATstpSPReqInsStockSecurityField_ParValue_set)

	# 债券应计利息
    __swig_setmethods__["BondInterest"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_BondInterest_set
    __swig_getmethods__["BondInterest"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_BondInterest_get
    if _newclass:
        BondInterest = _swig_property(_sptraderapi.CTORATstpSPReqInsStockSecurityField_BondInterest_get, _sptraderapi.CTORATstpSPReqInsStockSecurityField_BondInterest_set)

	# 折算率
    __swig_setmethods__["ConversionRate"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_ConversionRate_set
    __swig_getmethods__["ConversionRate"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_ConversionRate_get
    if _newclass:
        ConversionRate = _swig_property(_sptraderapi.CTORATstpSPReqInsStockSecurityField_ConversionRate_get, _sptraderapi.CTORATstpSPReqInsStockSecurityField_ConversionRate_set)

	# 总股本
    __swig_setmethods__["TotalEquity"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_TotalEquity_set
    __swig_getmethods__["TotalEquity"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_TotalEquity_get
    if _newclass:
        TotalEquity = _swig_property(_sptraderapi.CTORATstpSPReqInsStockSecurityField_TotalEquity_get, _sptraderapi.CTORATstpSPReqInsStockSecurityField_TotalEquity_set)

	# 流通股本
    __swig_setmethods__["CirculationEquity"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_CirculationEquity_set
    __swig_getmethods__["CirculationEquity"] = _sptraderapi.CTORATstpSPReqInsStockSecurityField_CirculationEquity_get
    if _newclass:
        CirculationEquity = _swig_property(_sptraderapi.CTORATstpSPReqInsStockSecurityField_CirculationEquity_get, _sptraderapi.CTORATstpSPReqInsStockSecurityField_CirculationEquity_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsStockSecurityField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsStockSecurityField
    __del__ = lambda self: None
CTORATstpSPReqInsStockSecurityField_swigregister = _sptraderapi.CTORATstpSPReqInsStockSecurityField_swigregister
CTORATstpSPReqInsStockSecurityField_swigregister(CTORATstpSPReqInsStockSecurityField)




#########################################请求更新StockSecurity############################################
class CTORATstpSPReqUpdStockSecurityField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdStockSecurityField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdStockSecurityField, name)
    __repr__ = _swig_repr

	# 证券代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqUpdStockSecurityField_SecurityID_get, _sptraderapi.CTORATstpSPReqUpdStockSecurityField_SecurityID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqUpdStockSecurityField_ExchangeID_get, _sptraderapi.CTORATstpSPReqUpdStockSecurityField_ExchangeID_set)

	# 证券名称
    __swig_setmethods__["SecurityName"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_SecurityName_set
    __swig_getmethods__["SecurityName"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_SecurityName_get
    if _newclass:
        SecurityName = _swig_property(_sptraderapi.CTORATstpSPReqUpdStockSecurityField_SecurityName_get, _sptraderapi.CTORATstpSPReqUpdStockSecurityField_SecurityName_set)

	# 基础证券代码
    __swig_setmethods__["UnderlyingSecurityID"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_UnderlyingSecurityID_set
    __swig_getmethods__["UnderlyingSecurityID"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_UnderlyingSecurityID_get
    if _newclass:
        UnderlyingSecurityID = _swig_property(_sptraderapi.CTORATstpSPReqUpdStockSecurityField_UnderlyingSecurityID_get, _sptraderapi.CTORATstpSPReqUpdStockSecurityField_UnderlyingSecurityID_set)

	# 交易所下的交易市场，如沪A、沪B市场
    __swig_setmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_MarketID_set
    __swig_getmethods__["MarketID"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_MarketID_get
    if _newclass:
        MarketID = _swig_property(_sptraderapi.CTORATstpSPReqUpdStockSecurityField_MarketID_get, _sptraderapi.CTORATstpSPReqUpdStockSecurityField_MarketID_set)

	# 证券市场中的具体品种，如上海股票
    __swig_setmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_ProductID_set
    __swig_getmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_sptraderapi.CTORATstpSPReqUpdStockSecurityField_ProductID_get, _sptraderapi.CTORATstpSPReqUpdStockSecurityField_ProductID_set)

	# 证券品种中的具体类别，如上海A股
    __swig_setmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_SecurityType_set
    __swig_getmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_SecurityType_get
    if _newclass:
        SecurityType = _swig_property(_sptraderapi.CTORATstpSPReqUpdStockSecurityField_SecurityType_get, _sptraderapi.CTORATstpSPReqUpdStockSecurityField_SecurityType_set)

	# 币种
    __swig_setmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_sptraderapi.CTORATstpSPReqUpdStockSecurityField_CurrencyID_get, _sptraderapi.CTORATstpSPReqUpdStockSecurityField_CurrencyID_set)

	# 记录申报时使用的单位。手、股、份、张等
    __swig_setmethods__["OrderUnit"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_OrderUnit_set
    __swig_getmethods__["OrderUnit"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_OrderUnit_get
    if _newclass:
        OrderUnit = _swig_property(_sptraderapi.CTORATstpSPReqUpdStockSecurityField_OrderUnit_get, _sptraderapi.CTORATstpSPReqUpdStockSecurityField_OrderUnit_set)

	# 每次可以买入的最小交易单位（以申报单位计），每次买入必须是买入交易单位的整数倍
    __swig_setmethods__["BuyTradingUnit"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_BuyTradingUnit_set
    __swig_getmethods__["BuyTradingUnit"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_BuyTradingUnit_get
    if _newclass:
        BuyTradingUnit = _swig_property(_sptraderapi.CTORATstpSPReqUpdStockSecurityField_BuyTradingUnit_get, _sptraderapi.CTORATstpSPReqUpdStockSecurityField_BuyTradingUnit_set)

	# 每次可以卖出的最小交易单位（以申报单位计），每次卖出必须是卖出交易单位的整数倍
    __swig_setmethods__["SellTradingUnit"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_SellTradingUnit_set
    __swig_getmethods__["SellTradingUnit"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_SellTradingUnit_get
    if _newclass:
        SellTradingUnit = _swig_property(_sptraderapi.CTORATstpSPReqUpdStockSecurityField_SellTradingUnit_get, _sptraderapi.CTORATstpSPReqUpdStockSecurityField_SellTradingUnit_set)

	# 单笔可以买入的最大数量（以申报单位计）
    __swig_setmethods__["MaxMarketOrderBuyVolume"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_MaxMarketOrderBuyVolume_set
    __swig_getmethods__["MaxMarketOrderBuyVolume"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_MaxMarketOrderBuyVolume_get
    if _newclass:
        MaxMarketOrderBuyVolume = _swig_property(_sptraderapi.CTORATstpSPReqUpdStockSecurityField_MaxMarketOrderBuyVolume_get, _sptraderapi.CTORATstpSPReqUpdStockSecurityField_MaxMarketOrderBuyVolume_set)

	# 单笔可以买入的最小数量（以申报单位计）
    __swig_setmethods__["MinMarketOrderBuyVolume"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_MinMarketOrderBuyVolume_set
    __swig_getmethods__["MinMarketOrderBuyVolume"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_MinMarketOrderBuyVolume_get
    if _newclass:
        MinMarketOrderBuyVolume = _swig_property(_sptraderapi.CTORATstpSPReqUpdStockSecurityField_MinMarketOrderBuyVolume_get, _sptraderapi.CTORATstpSPReqUpdStockSecurityField_MinMarketOrderBuyVolume_set)

	# 单笔可以买入的最大数量（以申报单位计）
    __swig_setmethods__["MaxLimitOrderBuyVolume"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_MaxLimitOrderBuyVolume_set
    __swig_getmethods__["MaxLimitOrderBuyVolume"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_MaxLimitOrderBuyVolume_get
    if _newclass:
        MaxLimitOrderBuyVolume = _swig_property(_sptraderapi.CTORATstpSPReqUpdStockSecurityField_MaxLimitOrderBuyVolume_get, _sptraderapi.CTORATstpSPReqUpdStockSecurityField_MaxLimitOrderBuyVolume_set)

	# 单笔可以买入的最小数量（以申报单位计）
    __swig_setmethods__["MinLimitOrderBuyVolume"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_MinLimitOrderBuyVolume_set
    __swig_getmethods__["MinLimitOrderBuyVolume"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_MinLimitOrderBuyVolume_get
    if _newclass:
        MinLimitOrderBuyVolume = _swig_property(_sptraderapi.CTORATstpSPReqUpdStockSecurityField_MinLimitOrderBuyVolume_get, _sptraderapi.CTORATstpSPReqUpdStockSecurityField_MinLimitOrderBuyVolume_set)

	# 单笔可以卖入的最大数量（以申报单位计）
    __swig_setmethods__["MaxMarketOrderSellVolume"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_MaxMarketOrderSellVolume_set
    __swig_getmethods__["MaxMarketOrderSellVolume"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_MaxMarketOrderSellVolume_get
    if _newclass:
        MaxMarketOrderSellVolume = _swig_property(_sptraderapi.CTORATstpSPReqUpdStockSecurityField_MaxMarketOrderSellVolume_get, _sptraderapi.CTORATstpSPReqUpdStockSecurityField_MaxMarketOrderSellVolume_set)

	# 单笔可以卖入的最小数量（以申报单位计）
    __swig_setmethods__["MinMarketOrderSellVolume"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_MinMarketOrderSellVolume_set
    __swig_getmethods__["MinMarketOrderSellVolume"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_MinMarketOrderSellVolume_get
    if _newclass:
        MinMarketOrderSellVolume = _swig_property(_sptraderapi.CTORATstpSPReqUpdStockSecurityField_MinMarketOrderSellVolume_get, _sptraderapi.CTORATstpSPReqUpdStockSecurityField_MinMarketOrderSellVolume_set)

	# 单笔可以卖入的最大数量（以申报单位计）
    __swig_setmethods__["MaxLimitOrderSellVolume"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_MaxLimitOrderSellVolume_set
    __swig_getmethods__["MaxLimitOrderSellVolume"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_MaxLimitOrderSellVolume_get
    if _newclass:
        MaxLimitOrderSellVolume = _swig_property(_sptraderapi.CTORATstpSPReqUpdStockSecurityField_MaxLimitOrderSellVolume_get, _sptraderapi.CTORATstpSPReqUpdStockSecurityField_MaxLimitOrderSellVolume_set)

	# 单笔可以卖入的最小数量（以申报单位计）
    __swig_setmethods__["MinLimitOrderSellVolume"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_MinLimitOrderSellVolume_set
    __swig_getmethods__["MinLimitOrderSellVolume"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_MinLimitOrderSellVolume_get
    if _newclass:
        MinLimitOrderSellVolume = _swig_property(_sptraderapi.CTORATstpSPReqUpdStockSecurityField_MinLimitOrderSellVolume_get, _sptraderapi.CTORATstpSPReqUpdStockSecurityField_MinLimitOrderSellVolume_set)

	# 申报单位与报价金额单位的比值
    __swig_setmethods__["VolumeMultiple"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_VolumeMultiple_set
    __swig_getmethods__["VolumeMultiple"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_VolumeMultiple_get
    if _newclass:
        VolumeMultiple = _swig_property(_sptraderapi.CTORATstpSPReqUpdStockSecurityField_VolumeMultiple_get, _sptraderapi.CTORATstpSPReqUpdStockSecurityField_VolumeMultiple_set)

	# 证券的单位价格涨跌变化的最小值
    __swig_setmethods__["PriceTick"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_PriceTick_set
    __swig_getmethods__["PriceTick"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_PriceTick_get
    if _newclass:
        PriceTick = _swig_property(_sptraderapi.CTORATstpSPReqUpdStockSecurityField_PriceTick_get, _sptraderapi.CTORATstpSPReqUpdStockSecurityField_PriceTick_set)

	# 上市日
    __swig_setmethods__["OpenDate"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_OpenDate_set
    __swig_getmethods__["OpenDate"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_OpenDate_get
    if _newclass:
        OpenDate = _swig_property(_sptraderapi.CTORATstpSPReqUpdStockSecurityField_OpenDate_get, _sptraderapi.CTORATstpSPReqUpdStockSecurityField_OpenDate_set)

	# 债券，到期日
    __swig_setmethods__["CloseDate"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_CloseDate_set
    __swig_getmethods__["CloseDate"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_CloseDate_get
    if _newclass:
        CloseDate = _swig_property(_sptraderapi.CTORATstpSPReqUpdStockSecurityField_CloseDate_get, _sptraderapi.CTORATstpSPReqUpdStockSecurityField_CloseDate_set)

	# 证券的面值
    __swig_setmethods__["ParValue"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_ParValue_set
    __swig_getmethods__["ParValue"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_ParValue_get
    if _newclass:
        ParValue = _swig_property(_sptraderapi.CTORATstpSPReqUpdStockSecurityField_ParValue_get, _sptraderapi.CTORATstpSPReqUpdStockSecurityField_ParValue_set)

	# 债券应计利息
    __swig_setmethods__["BondInterest"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_BondInterest_set
    __swig_getmethods__["BondInterest"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_BondInterest_get
    if _newclass:
        BondInterest = _swig_property(_sptraderapi.CTORATstpSPReqUpdStockSecurityField_BondInterest_get, _sptraderapi.CTORATstpSPReqUpdStockSecurityField_BondInterest_set)

	# 折算率
    __swig_setmethods__["ConversionRate"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_ConversionRate_set
    __swig_getmethods__["ConversionRate"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_ConversionRate_get
    if _newclass:
        ConversionRate = _swig_property(_sptraderapi.CTORATstpSPReqUpdStockSecurityField_ConversionRate_get, _sptraderapi.CTORATstpSPReqUpdStockSecurityField_ConversionRate_set)

	# 总股本
    __swig_setmethods__["TotalEquity"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_TotalEquity_set
    __swig_getmethods__["TotalEquity"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_TotalEquity_get
    if _newclass:
        TotalEquity = _swig_property(_sptraderapi.CTORATstpSPReqUpdStockSecurityField_TotalEquity_get, _sptraderapi.CTORATstpSPReqUpdStockSecurityField_TotalEquity_set)

	# 流通股本
    __swig_setmethods__["CirculationEquity"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_CirculationEquity_set
    __swig_getmethods__["CirculationEquity"] = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_CirculationEquity_get
    if _newclass:
        CirculationEquity = _swig_property(_sptraderapi.CTORATstpSPReqUpdStockSecurityField_CirculationEquity_get, _sptraderapi.CTORATstpSPReqUpdStockSecurityField_CirculationEquity_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdStockSecurityField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdStockSecurityField
    __del__ = lambda self: None
CTORATstpSPReqUpdStockSecurityField_swigregister = _sptraderapi.CTORATstpSPReqUpdStockSecurityField_swigregister
CTORATstpSPReqUpdStockSecurityField_swigregister(CTORATstpSPReqUpdStockSecurityField)




#########################################请求删除StockSecurity############################################
class CTORATstpSPReqDelStockSecurityField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelStockSecurityField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelStockSecurityField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelStockSecurityField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelStockSecurityField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqDelStockSecurityField_ExchangeID_get, _sptraderapi.CTORATstpSPReqDelStockSecurityField_ExchangeID_set)

	# 证券代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqDelStockSecurityField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqDelStockSecurityField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqDelStockSecurityField_SecurityID_get, _sptraderapi.CTORATstpSPReqDelStockSecurityField_SecurityID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelStockSecurityField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelStockSecurityField
    __del__ = lambda self: None
CTORATstpSPReqDelStockSecurityField_swigregister = _sptraderapi.CTORATstpSPReqDelStockSecurityField_swigregister
CTORATstpSPReqDelStockSecurityField_swigregister(CTORATstpSPReqDelStockSecurityField)




#########################################请求插入Trader############################################
class CTORATstpSPReqInsTraderField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsTraderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsTraderField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsTraderField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsTraderField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqInsTraderField_ExchangeID_get, _sptraderapi.CTORATstpSPReqInsTraderField_ExchangeID_set)

	# 交易单元代码
    __swig_setmethods__["PbuID"] = _sptraderapi.CTORATstpSPReqInsTraderField_PbuID_set
    __swig_getmethods__["PbuID"] = _sptraderapi.CTORATstpSPReqInsTraderField_PbuID_get
    if _newclass:
        PbuID = _swig_property(_sptraderapi.CTORATstpSPReqInsTraderField_PbuID_get, _sptraderapi.CTORATstpSPReqInsTraderField_PbuID_set)

	# 平台类型
    __swig_setmethods__["PlatformType"] = _sptraderapi.CTORATstpSPReqInsTraderField_PlatformType_set
    __swig_getmethods__["PlatformType"] = _sptraderapi.CTORATstpSPReqInsTraderField_PlatformType_get
    if _newclass:
        PlatformType = _swig_property(_sptraderapi.CTORATstpSPReqInsTraderField_PlatformType_get, _sptraderapi.CTORATstpSPReqInsTraderField_PlatformType_set)

	# 交易报盘编号
    __swig_setmethods__["TraderOfferID"] = _sptraderapi.CTORATstpSPReqInsTraderField_TraderOfferID_set
    __swig_getmethods__["TraderOfferID"] = _sptraderapi.CTORATstpSPReqInsTraderField_TraderOfferID_get
    if _newclass:
        TraderOfferID = _swig_property(_sptraderapi.CTORATstpSPReqInsTraderField_TraderOfferID_get, _sptraderapi.CTORATstpSPReqInsTraderField_TraderOfferID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsTraderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsTraderField
    __del__ = lambda self: None
CTORATstpSPReqInsTraderField_swigregister = _sptraderapi.CTORATstpSPReqInsTraderField_swigregister
CTORATstpSPReqInsTraderField_swigregister(CTORATstpSPReqInsTraderField)




#########################################请求更新Trader############################################
class CTORATstpSPReqUpdTraderField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdTraderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdTraderField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdTraderField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdTraderField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqUpdTraderField_ExchangeID_get, _sptraderapi.CTORATstpSPReqUpdTraderField_ExchangeID_set)

	# 交易单元代码
    __swig_setmethods__["PbuID"] = _sptraderapi.CTORATstpSPReqUpdTraderField_PbuID_set
    __swig_getmethods__["PbuID"] = _sptraderapi.CTORATstpSPReqUpdTraderField_PbuID_get
    if _newclass:
        PbuID = _swig_property(_sptraderapi.CTORATstpSPReqUpdTraderField_PbuID_get, _sptraderapi.CTORATstpSPReqUpdTraderField_PbuID_set)

	# 平台类型
    __swig_setmethods__["PlatformType"] = _sptraderapi.CTORATstpSPReqUpdTraderField_PlatformType_set
    __swig_getmethods__["PlatformType"] = _sptraderapi.CTORATstpSPReqUpdTraderField_PlatformType_get
    if _newclass:
        PlatformType = _swig_property(_sptraderapi.CTORATstpSPReqUpdTraderField_PlatformType_get, _sptraderapi.CTORATstpSPReqUpdTraderField_PlatformType_set)

	# 交易报盘编号
    __swig_setmethods__["TraderOfferID"] = _sptraderapi.CTORATstpSPReqUpdTraderField_TraderOfferID_set
    __swig_getmethods__["TraderOfferID"] = _sptraderapi.CTORATstpSPReqUpdTraderField_TraderOfferID_get
    if _newclass:
        TraderOfferID = _swig_property(_sptraderapi.CTORATstpSPReqUpdTraderField_TraderOfferID_get, _sptraderapi.CTORATstpSPReqUpdTraderField_TraderOfferID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdTraderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdTraderField
    __del__ = lambda self: None
CTORATstpSPReqUpdTraderField_swigregister = _sptraderapi.CTORATstpSPReqUpdTraderField_swigregister
CTORATstpSPReqUpdTraderField_swigregister(CTORATstpSPReqUpdTraderField)




#########################################请求删除Trader############################################
class CTORATstpSPReqDelTraderField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelTraderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelTraderField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelTraderField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelTraderField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqDelTraderField_ExchangeID_get, _sptraderapi.CTORATstpSPReqDelTraderField_ExchangeID_set)

	# 交易单元代码
    __swig_setmethods__["PbuID"] = _sptraderapi.CTORATstpSPReqDelTraderField_PbuID_set
    __swig_getmethods__["PbuID"] = _sptraderapi.CTORATstpSPReqDelTraderField_PbuID_get
    if _newclass:
        PbuID = _swig_property(_sptraderapi.CTORATstpSPReqDelTraderField_PbuID_get, _sptraderapi.CTORATstpSPReqDelTraderField_PbuID_set)

	# 平台类型
    __swig_setmethods__["PlatformType"] = _sptraderapi.CTORATstpSPReqDelTraderField_PlatformType_set
    __swig_getmethods__["PlatformType"] = _sptraderapi.CTORATstpSPReqDelTraderField_PlatformType_get
    if _newclass:
        PlatformType = _swig_property(_sptraderapi.CTORATstpSPReqDelTraderField_PlatformType_get, _sptraderapi.CTORATstpSPReqDelTraderField_PlatformType_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelTraderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelTraderField
    __del__ = lambda self: None
CTORATstpSPReqDelTraderField_swigregister = _sptraderapi.CTORATstpSPReqDelTraderField_swigregister
CTORATstpSPReqDelTraderField_swigregister(CTORATstpSPReqDelTraderField)




#########################################请求插入TraderOffer############################################
class CTORATstpSPReqInsTraderOfferField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsTraderOfferField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsTraderOfferField, name)
    __repr__ = _swig_repr

	# 交易报盘编号
    __swig_setmethods__["TraderOfferID"] = _sptraderapi.CTORATstpSPReqInsTraderOfferField_TraderOfferID_set
    __swig_getmethods__["TraderOfferID"] = _sptraderapi.CTORATstpSPReqInsTraderOfferField_TraderOfferID_get
    if _newclass:
        TraderOfferID = _swig_property(_sptraderapi.CTORATstpSPReqInsTraderOfferField_TraderOfferID_get, _sptraderapi.CTORATstpSPReqInsTraderOfferField_TraderOfferID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsTraderOfferField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsTraderOfferField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqInsTraderOfferField_ExchangeID_get, _sptraderapi.CTORATstpSPReqInsTraderOfferField_ExchangeID_set)

	# 连接类型
    __swig_setmethods__["ConnectType"] = _sptraderapi.CTORATstpSPReqInsTraderOfferField_ConnectType_set
    __swig_getmethods__["ConnectType"] = _sptraderapi.CTORATstpSPReqInsTraderOfferField_ConnectType_get
    if _newclass:
        ConnectType = _swig_property(_sptraderapi.CTORATstpSPReqInsTraderOfferField_ConnectType_get, _sptraderapi.CTORATstpSPReqInsTraderOfferField_ConnectType_set)

	# 连接字符串
    __swig_setmethods__["ConnectString"] = _sptraderapi.CTORATstpSPReqInsTraderOfferField_ConnectString_set
    __swig_getmethods__["ConnectString"] = _sptraderapi.CTORATstpSPReqInsTraderOfferField_ConnectString_get
    if _newclass:
        ConnectString = _swig_property(_sptraderapi.CTORATstpSPReqInsTraderOfferField_ConnectString_get, _sptraderapi.CTORATstpSPReqInsTraderOfferField_ConnectString_set)

	# 用户名
    __swig_setmethods__["UserName"] = _sptraderapi.CTORATstpSPReqInsTraderOfferField_UserName_set
    __swig_getmethods__["UserName"] = _sptraderapi.CTORATstpSPReqInsTraderOfferField_UserName_get
    if _newclass:
        UserName = _swig_property(_sptraderapi.CTORATstpSPReqInsTraderOfferField_UserName_get, _sptraderapi.CTORATstpSPReqInsTraderOfferField_UserName_set)

	# 密码
    __swig_setmethods__["UserPassword"] = _sptraderapi.CTORATstpSPReqInsTraderOfferField_UserPassword_set
    __swig_getmethods__["UserPassword"] = _sptraderapi.CTORATstpSPReqInsTraderOfferField_UserPassword_get
    if _newclass:
        UserPassword = _swig_property(_sptraderapi.CTORATstpSPReqInsTraderOfferField_UserPassword_get, _sptraderapi.CTORATstpSPReqInsTraderOfferField_UserPassword_set)

	# 通用字段1
    __swig_setmethods__["CommString1"] = _sptraderapi.CTORATstpSPReqInsTraderOfferField_CommString1_set
    __swig_getmethods__["CommString1"] = _sptraderapi.CTORATstpSPReqInsTraderOfferField_CommString1_get
    if _newclass:
        CommString1 = _swig_property(_sptraderapi.CTORATstpSPReqInsTraderOfferField_CommString1_get, _sptraderapi.CTORATstpSPReqInsTraderOfferField_CommString1_set)

	# 通用字段2
    __swig_setmethods__["CommString2"] = _sptraderapi.CTORATstpSPReqInsTraderOfferField_CommString2_set
    __swig_getmethods__["CommString2"] = _sptraderapi.CTORATstpSPReqInsTraderOfferField_CommString2_get
    if _newclass:
        CommString2 = _swig_property(_sptraderapi.CTORATstpSPReqInsTraderOfferField_CommString2_get, _sptraderapi.CTORATstpSPReqInsTraderOfferField_CommString2_set)

	# 通用字段3
    __swig_setmethods__["CommString3"] = _sptraderapi.CTORATstpSPReqInsTraderOfferField_CommString3_set
    __swig_getmethods__["CommString3"] = _sptraderapi.CTORATstpSPReqInsTraderOfferField_CommString3_get
    if _newclass:
        CommString3 = _swig_property(_sptraderapi.CTORATstpSPReqInsTraderOfferField_CommString3_get, _sptraderapi.CTORATstpSPReqInsTraderOfferField_CommString3_set)

	# 应用名称
    __swig_setmethods__["AppName"] = _sptraderapi.CTORATstpSPReqInsTraderOfferField_AppName_set
    __swig_getmethods__["AppName"] = _sptraderapi.CTORATstpSPReqInsTraderOfferField_AppName_get
    if _newclass:
        AppName = _swig_property(_sptraderapi.CTORATstpSPReqInsTraderOfferField_AppName_get, _sptraderapi.CTORATstpSPReqInsTraderOfferField_AppName_set)

	# 说明该交易员的报盘程序的编号
    __swig_setmethods__["RunID"] = _sptraderapi.CTORATstpSPReqInsTraderOfferField_RunID_set
    __swig_getmethods__["RunID"] = _sptraderapi.CTORATstpSPReqInsTraderOfferField_RunID_get
    if _newclass:
        RunID = _swig_property(_sptraderapi.CTORATstpSPReqInsTraderOfferField_RunID_get, _sptraderapi.CTORATstpSPReqInsTraderOfferField_RunID_set)

	# 前置ID
    __swig_setmethods__["FrontID"] = _sptraderapi.CTORATstpSPReqInsTraderOfferField_FrontID_set
    __swig_getmethods__["FrontID"] = _sptraderapi.CTORATstpSPReqInsTraderOfferField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_sptraderapi.CTORATstpSPReqInsTraderOfferField_FrontID_get, _sptraderapi.CTORATstpSPReqInsTraderOfferField_FrontID_set)

	# 会话ID
    __swig_setmethods__["SessionID"] = _sptraderapi.CTORATstpSPReqInsTraderOfferField_SessionID_set
    __swig_getmethods__["SessionID"] = _sptraderapi.CTORATstpSPReqInsTraderOfferField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_sptraderapi.CTORATstpSPReqInsTraderOfferField_SessionID_get, _sptraderapi.CTORATstpSPReqInsTraderOfferField_SessionID_set)

	# 交易所交易员连接状态
    __swig_setmethods__["ConnectStatus"] = _sptraderapi.CTORATstpSPReqInsTraderOfferField_ConnectStatus_set
    __swig_getmethods__["ConnectStatus"] = _sptraderapi.CTORATstpSPReqInsTraderOfferField_ConnectStatus_get
    if _newclass:
        ConnectStatus = _swig_property(_sptraderapi.CTORATstpSPReqInsTraderOfferField_ConnectStatus_get, _sptraderapi.CTORATstpSPReqInsTraderOfferField_ConnectStatus_set)

	# 发出连接请求的日期
    __swig_setmethods__["ConnectRequestDate"] = _sptraderapi.CTORATstpSPReqInsTraderOfferField_ConnectRequestDate_set
    __swig_getmethods__["ConnectRequestDate"] = _sptraderapi.CTORATstpSPReqInsTraderOfferField_ConnectRequestDate_get
    if _newclass:
        ConnectRequestDate = _swig_property(_sptraderapi.CTORATstpSPReqInsTraderOfferField_ConnectRequestDate_get, _sptraderapi.CTORATstpSPReqInsTraderOfferField_ConnectRequestDate_set)

	# 发出连接请求的时间
    __swig_setmethods__["ConnectRequestTime"] = _sptraderapi.CTORATstpSPReqInsTraderOfferField_ConnectRequestTime_set
    __swig_getmethods__["ConnectRequestTime"] = _sptraderapi.CTORATstpSPReqInsTraderOfferField_ConnectRequestTime_get
    if _newclass:
        ConnectRequestTime = _swig_property(_sptraderapi.CTORATstpSPReqInsTraderOfferField_ConnectRequestTime_get, _sptraderapi.CTORATstpSPReqInsTraderOfferField_ConnectRequestTime_set)

	# 完成连接日期
    __swig_setmethods__["ConnectDate"] = _sptraderapi.CTORATstpSPReqInsTraderOfferField_ConnectDate_set
    __swig_getmethods__["ConnectDate"] = _sptraderapi.CTORATstpSPReqInsTraderOfferField_ConnectDate_get
    if _newclass:
        ConnectDate = _swig_property(_sptraderapi.CTORATstpSPReqInsTraderOfferField_ConnectDate_get, _sptraderapi.CTORATstpSPReqInsTraderOfferField_ConnectDate_set)

	# 完成连接时间
    __swig_setmethods__["ConnectTime"] = _sptraderapi.CTORATstpSPReqInsTraderOfferField_ConnectTime_set
    __swig_getmethods__["ConnectTime"] = _sptraderapi.CTORATstpSPReqInsTraderOfferField_ConnectTime_get
    if _newclass:
        ConnectTime = _swig_property(_sptraderapi.CTORATstpSPReqInsTraderOfferField_ConnectTime_get, _sptraderapi.CTORATstpSPReqInsTraderOfferField_ConnectTime_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsTraderOfferField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsTraderOfferField
    __del__ = lambda self: None
CTORATstpSPReqInsTraderOfferField_swigregister = _sptraderapi.CTORATstpSPReqInsTraderOfferField_swigregister
CTORATstpSPReqInsTraderOfferField_swigregister(CTORATstpSPReqInsTraderOfferField)




#########################################请求更新TraderOffer############################################
class CTORATstpSPReqUpdTraderOfferField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdTraderOfferField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdTraderOfferField, name)
    __repr__ = _swig_repr

	# 交易报盘编号
    __swig_setmethods__["TraderOfferID"] = _sptraderapi.CTORATstpSPReqUpdTraderOfferField_TraderOfferID_set
    __swig_getmethods__["TraderOfferID"] = _sptraderapi.CTORATstpSPReqUpdTraderOfferField_TraderOfferID_get
    if _newclass:
        TraderOfferID = _swig_property(_sptraderapi.CTORATstpSPReqUpdTraderOfferField_TraderOfferID_get, _sptraderapi.CTORATstpSPReqUpdTraderOfferField_TraderOfferID_set)

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdTraderOfferField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdTraderOfferField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqUpdTraderOfferField_ExchangeID_get, _sptraderapi.CTORATstpSPReqUpdTraderOfferField_ExchangeID_set)

	# 连接类型
    __swig_setmethods__["ConnectType"] = _sptraderapi.CTORATstpSPReqUpdTraderOfferField_ConnectType_set
    __swig_getmethods__["ConnectType"] = _sptraderapi.CTORATstpSPReqUpdTraderOfferField_ConnectType_get
    if _newclass:
        ConnectType = _swig_property(_sptraderapi.CTORATstpSPReqUpdTraderOfferField_ConnectType_get, _sptraderapi.CTORATstpSPReqUpdTraderOfferField_ConnectType_set)

	# 连接字符串
    __swig_setmethods__["ConnectString"] = _sptraderapi.CTORATstpSPReqUpdTraderOfferField_ConnectString_set
    __swig_getmethods__["ConnectString"] = _sptraderapi.CTORATstpSPReqUpdTraderOfferField_ConnectString_get
    if _newclass:
        ConnectString = _swig_property(_sptraderapi.CTORATstpSPReqUpdTraderOfferField_ConnectString_get, _sptraderapi.CTORATstpSPReqUpdTraderOfferField_ConnectString_set)

	# 用户名
    __swig_setmethods__["UserName"] = _sptraderapi.CTORATstpSPReqUpdTraderOfferField_UserName_set
    __swig_getmethods__["UserName"] = _sptraderapi.CTORATstpSPReqUpdTraderOfferField_UserName_get
    if _newclass:
        UserName = _swig_property(_sptraderapi.CTORATstpSPReqUpdTraderOfferField_UserName_get, _sptraderapi.CTORATstpSPReqUpdTraderOfferField_UserName_set)

	# 密码
    __swig_setmethods__["UserPassword"] = _sptraderapi.CTORATstpSPReqUpdTraderOfferField_UserPassword_set
    __swig_getmethods__["UserPassword"] = _sptraderapi.CTORATstpSPReqUpdTraderOfferField_UserPassword_get
    if _newclass:
        UserPassword = _swig_property(_sptraderapi.CTORATstpSPReqUpdTraderOfferField_UserPassword_get, _sptraderapi.CTORATstpSPReqUpdTraderOfferField_UserPassword_set)

	# 通用字段1
    __swig_setmethods__["CommString1"] = _sptraderapi.CTORATstpSPReqUpdTraderOfferField_CommString1_set
    __swig_getmethods__["CommString1"] = _sptraderapi.CTORATstpSPReqUpdTraderOfferField_CommString1_get
    if _newclass:
        CommString1 = _swig_property(_sptraderapi.CTORATstpSPReqUpdTraderOfferField_CommString1_get, _sptraderapi.CTORATstpSPReqUpdTraderOfferField_CommString1_set)

	# 通用字段2
    __swig_setmethods__["CommString2"] = _sptraderapi.CTORATstpSPReqUpdTraderOfferField_CommString2_set
    __swig_getmethods__["CommString2"] = _sptraderapi.CTORATstpSPReqUpdTraderOfferField_CommString2_get
    if _newclass:
        CommString2 = _swig_property(_sptraderapi.CTORATstpSPReqUpdTraderOfferField_CommString2_get, _sptraderapi.CTORATstpSPReqUpdTraderOfferField_CommString2_set)

	# 通用字段3
    __swig_setmethods__["CommString3"] = _sptraderapi.CTORATstpSPReqUpdTraderOfferField_CommString3_set
    __swig_getmethods__["CommString3"] = _sptraderapi.CTORATstpSPReqUpdTraderOfferField_CommString3_get
    if _newclass:
        CommString3 = _swig_property(_sptraderapi.CTORATstpSPReqUpdTraderOfferField_CommString3_get, _sptraderapi.CTORATstpSPReqUpdTraderOfferField_CommString3_set)

	# 应用名称
    __swig_setmethods__["AppName"] = _sptraderapi.CTORATstpSPReqUpdTraderOfferField_AppName_set
    __swig_getmethods__["AppName"] = _sptraderapi.CTORATstpSPReqUpdTraderOfferField_AppName_get
    if _newclass:
        AppName = _swig_property(_sptraderapi.CTORATstpSPReqUpdTraderOfferField_AppName_get, _sptraderapi.CTORATstpSPReqUpdTraderOfferField_AppName_set)

	# 说明该交易员的报盘程序的编号
    __swig_setmethods__["RunID"] = _sptraderapi.CTORATstpSPReqUpdTraderOfferField_RunID_set
    __swig_getmethods__["RunID"] = _sptraderapi.CTORATstpSPReqUpdTraderOfferField_RunID_get
    if _newclass:
        RunID = _swig_property(_sptraderapi.CTORATstpSPReqUpdTraderOfferField_RunID_get, _sptraderapi.CTORATstpSPReqUpdTraderOfferField_RunID_set)

	# 前置ID
    __swig_setmethods__["FrontID"] = _sptraderapi.CTORATstpSPReqUpdTraderOfferField_FrontID_set
    __swig_getmethods__["FrontID"] = _sptraderapi.CTORATstpSPReqUpdTraderOfferField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_sptraderapi.CTORATstpSPReqUpdTraderOfferField_FrontID_get, _sptraderapi.CTORATstpSPReqUpdTraderOfferField_FrontID_set)

	# 会话ID
    __swig_setmethods__["SessionID"] = _sptraderapi.CTORATstpSPReqUpdTraderOfferField_SessionID_set
    __swig_getmethods__["SessionID"] = _sptraderapi.CTORATstpSPReqUpdTraderOfferField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_sptraderapi.CTORATstpSPReqUpdTraderOfferField_SessionID_get, _sptraderapi.CTORATstpSPReqUpdTraderOfferField_SessionID_set)

	# 交易所交易员连接状态
    __swig_setmethods__["ConnectStatus"] = _sptraderapi.CTORATstpSPReqUpdTraderOfferField_ConnectStatus_set
    __swig_getmethods__["ConnectStatus"] = _sptraderapi.CTORATstpSPReqUpdTraderOfferField_ConnectStatus_get
    if _newclass:
        ConnectStatus = _swig_property(_sptraderapi.CTORATstpSPReqUpdTraderOfferField_ConnectStatus_get, _sptraderapi.CTORATstpSPReqUpdTraderOfferField_ConnectStatus_set)

	# 发出连接请求的日期
    __swig_setmethods__["ConnectRequestDate"] = _sptraderapi.CTORATstpSPReqUpdTraderOfferField_ConnectRequestDate_set
    __swig_getmethods__["ConnectRequestDate"] = _sptraderapi.CTORATstpSPReqUpdTraderOfferField_ConnectRequestDate_get
    if _newclass:
        ConnectRequestDate = _swig_property(_sptraderapi.CTORATstpSPReqUpdTraderOfferField_ConnectRequestDate_get, _sptraderapi.CTORATstpSPReqUpdTraderOfferField_ConnectRequestDate_set)

	# 发出连接请求的时间
    __swig_setmethods__["ConnectRequestTime"] = _sptraderapi.CTORATstpSPReqUpdTraderOfferField_ConnectRequestTime_set
    __swig_getmethods__["ConnectRequestTime"] = _sptraderapi.CTORATstpSPReqUpdTraderOfferField_ConnectRequestTime_get
    if _newclass:
        ConnectRequestTime = _swig_property(_sptraderapi.CTORATstpSPReqUpdTraderOfferField_ConnectRequestTime_get, _sptraderapi.CTORATstpSPReqUpdTraderOfferField_ConnectRequestTime_set)

	# 完成连接日期
    __swig_setmethods__["ConnectDate"] = _sptraderapi.CTORATstpSPReqUpdTraderOfferField_ConnectDate_set
    __swig_getmethods__["ConnectDate"] = _sptraderapi.CTORATstpSPReqUpdTraderOfferField_ConnectDate_get
    if _newclass:
        ConnectDate = _swig_property(_sptraderapi.CTORATstpSPReqUpdTraderOfferField_ConnectDate_get, _sptraderapi.CTORATstpSPReqUpdTraderOfferField_ConnectDate_set)

	# 完成连接时间
    __swig_setmethods__["ConnectTime"] = _sptraderapi.CTORATstpSPReqUpdTraderOfferField_ConnectTime_set
    __swig_getmethods__["ConnectTime"] = _sptraderapi.CTORATstpSPReqUpdTraderOfferField_ConnectTime_get
    if _newclass:
        ConnectTime = _swig_property(_sptraderapi.CTORATstpSPReqUpdTraderOfferField_ConnectTime_get, _sptraderapi.CTORATstpSPReqUpdTraderOfferField_ConnectTime_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdTraderOfferField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdTraderOfferField
    __del__ = lambda self: None
CTORATstpSPReqUpdTraderOfferField_swigregister = _sptraderapi.CTORATstpSPReqUpdTraderOfferField_swigregister
CTORATstpSPReqUpdTraderOfferField_swigregister(CTORATstpSPReqUpdTraderOfferField)




#########################################请求删除TraderOffer############################################
class CTORATstpSPReqDelTraderOfferField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelTraderOfferField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelTraderOfferField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelTraderOfferField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelTraderOfferField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqDelTraderOfferField_ExchangeID_get, _sptraderapi.CTORATstpSPReqDelTraderOfferField_ExchangeID_set)

	# 交易报盘编号
    __swig_setmethods__["TraderOfferID"] = _sptraderapi.CTORATstpSPReqDelTraderOfferField_TraderOfferID_set
    __swig_getmethods__["TraderOfferID"] = _sptraderapi.CTORATstpSPReqDelTraderOfferField_TraderOfferID_get
    if _newclass:
        TraderOfferID = _swig_property(_sptraderapi.CTORATstpSPReqDelTraderOfferField_TraderOfferID_get, _sptraderapi.CTORATstpSPReqDelTraderOfferField_TraderOfferID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelTraderOfferField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelTraderOfferField
    __del__ = lambda self: None
CTORATstpSPReqDelTraderOfferField_swigregister = _sptraderapi.CTORATstpSPReqDelTraderOfferField_swigregister
CTORATstpSPReqDelTraderOfferField_swigregister(CTORATstpSPReqDelTraderOfferField)




#########################################请求插入TradingFee############################################
class CTORATstpSPReqInsTradingFeeField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsTradingFeeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsTradingFeeField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeField_ExchangeID_get, _sptraderapi.CTORATstpSPReqInsTradingFeeField_ExchangeID_set)

	# 证券品种代码
    __swig_setmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_ProductID_set
    __swig_getmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeField_ProductID_get, _sptraderapi.CTORATstpSPReqInsTradingFeeField_ProductID_set)

	# 证券类别代码
    __swig_setmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_SecurityType_set
    __swig_getmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_SecurityType_get
    if _newclass:
        SecurityType = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeField_SecurityType_get, _sptraderapi.CTORATstpSPReqInsTradingFeeField_SecurityType_set)

	# 证券代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeField_SecurityID_get, _sptraderapi.CTORATstpSPReqInsTradingFeeField_SecurityID_set)

	# 业务类别
    __swig_setmethods__["BusinessClass"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_BusinessClass_set
    __swig_getmethods__["BusinessClass"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_BusinessClass_get
    if _newclass:
        BusinessClass = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeField_BusinessClass_get, _sptraderapi.CTORATstpSPReqInsTradingFeeField_BusinessClass_set)

	# 系统标识
    __swig_setmethods__["SystemFlag"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_SystemFlag_set
    __swig_getmethods__["SystemFlag"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_SystemFlag_get
    if _newclass:
        SystemFlag = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeField_SystemFlag_get, _sptraderapi.CTORATstpSPReqInsTradingFeeField_SystemFlag_set)

	# 印花税按金额收取比例
    __swig_setmethods__["StampTaxRatioByAmt"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_StampTaxRatioByAmt_set
    __swig_getmethods__["StampTaxRatioByAmt"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_StampTaxRatioByAmt_get
    if _newclass:
        StampTaxRatioByAmt = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeField_StampTaxRatioByAmt_get, _sptraderapi.CTORATstpSPReqInsTradingFeeField_StampTaxRatioByAmt_set)

	# 印花税按面值收取比例
    __swig_setmethods__["StampTaxRatioByPar"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_StampTaxRatioByPar_set
    __swig_getmethods__["StampTaxRatioByPar"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_StampTaxRatioByPar_get
    if _newclass:
        StampTaxRatioByPar = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeField_StampTaxRatioByPar_get, _sptraderapi.CTORATstpSPReqInsTradingFeeField_StampTaxRatioByPar_set)

	# 印花税按笔收取金额
    __swig_setmethods__["StampTaxFeePerOrder"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_StampTaxFeePerOrder_set
    __swig_getmethods__["StampTaxFeePerOrder"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_StampTaxFeePerOrder_get
    if _newclass:
        StampTaxFeePerOrder = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeField_StampTaxFeePerOrder_get, _sptraderapi.CTORATstpSPReqInsTradingFeeField_StampTaxFeePerOrder_set)

	# 印花税按数量收取金额
    __swig_setmethods__["StampTaxFeeByVolume"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_StampTaxFeeByVolume_set
    __swig_getmethods__["StampTaxFeeByVolume"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_StampTaxFeeByVolume_get
    if _newclass:
        StampTaxFeeByVolume = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeField_StampTaxFeeByVolume_get, _sptraderapi.CTORATstpSPReqInsTradingFeeField_StampTaxFeeByVolume_set)

	# 印花税最低收取金额
    __swig_setmethods__["StampTaxFeeMin"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_StampTaxFeeMin_set
    __swig_getmethods__["StampTaxFeeMin"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_StampTaxFeeMin_get
    if _newclass:
        StampTaxFeeMin = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeField_StampTaxFeeMin_get, _sptraderapi.CTORATstpSPReqInsTradingFeeField_StampTaxFeeMin_set)

	# 印花税最高收取金额
    __swig_setmethods__["StampTaxFeeMax"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_StampTaxFeeMax_set
    __swig_getmethods__["StampTaxFeeMax"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_StampTaxFeeMax_get
    if _newclass:
        StampTaxFeeMax = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeField_StampTaxFeeMax_get, _sptraderapi.CTORATstpSPReqInsTradingFeeField_StampTaxFeeMax_set)

	# 过户费按金额收取比例
    __swig_setmethods__["TransferRatioByAmt"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_TransferRatioByAmt_set
    __swig_getmethods__["TransferRatioByAmt"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_TransferRatioByAmt_get
    if _newclass:
        TransferRatioByAmt = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeField_TransferRatioByAmt_get, _sptraderapi.CTORATstpSPReqInsTradingFeeField_TransferRatioByAmt_set)

	# 过户费按面值收取比例
    __swig_setmethods__["TransferRatioByPar"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_TransferRatioByPar_set
    __swig_getmethods__["TransferRatioByPar"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_TransferRatioByPar_get
    if _newclass:
        TransferRatioByPar = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeField_TransferRatioByPar_get, _sptraderapi.CTORATstpSPReqInsTradingFeeField_TransferRatioByPar_set)

	# 过户费按笔收取金额
    __swig_setmethods__["TransferFeePerOrder"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_TransferFeePerOrder_set
    __swig_getmethods__["TransferFeePerOrder"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_TransferFeePerOrder_get
    if _newclass:
        TransferFeePerOrder = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeField_TransferFeePerOrder_get, _sptraderapi.CTORATstpSPReqInsTradingFeeField_TransferFeePerOrder_set)

	# 过户费按数量收取金额
    __swig_setmethods__["TransferFeeByVolume"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_TransferFeeByVolume_set
    __swig_getmethods__["TransferFeeByVolume"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_TransferFeeByVolume_get
    if _newclass:
        TransferFeeByVolume = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeField_TransferFeeByVolume_get, _sptraderapi.CTORATstpSPReqInsTradingFeeField_TransferFeeByVolume_set)

	# 过户费最低收取金额
    __swig_setmethods__["TransferFeeMin"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_TransferFeeMin_set
    __swig_getmethods__["TransferFeeMin"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_TransferFeeMin_get
    if _newclass:
        TransferFeeMin = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeField_TransferFeeMin_get, _sptraderapi.CTORATstpSPReqInsTradingFeeField_TransferFeeMin_set)

	# 过户费最高收取金额
    __swig_setmethods__["TransferFeeMax"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_TransferFeeMax_set
    __swig_getmethods__["TransferFeeMax"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_TransferFeeMax_get
    if _newclass:
        TransferFeeMax = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeField_TransferFeeMax_get, _sptraderapi.CTORATstpSPReqInsTradingFeeField_TransferFeeMax_set)

	# 经手费按金额收取比例
    __swig_setmethods__["HandlingRatioByAmt"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_HandlingRatioByAmt_set
    __swig_getmethods__["HandlingRatioByAmt"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_HandlingRatioByAmt_get
    if _newclass:
        HandlingRatioByAmt = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeField_HandlingRatioByAmt_get, _sptraderapi.CTORATstpSPReqInsTradingFeeField_HandlingRatioByAmt_set)

	# 经手费按面值收取比例
    __swig_setmethods__["HandlingRatioByPar"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_HandlingRatioByPar_set
    __swig_getmethods__["HandlingRatioByPar"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_HandlingRatioByPar_get
    if _newclass:
        HandlingRatioByPar = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeField_HandlingRatioByPar_get, _sptraderapi.CTORATstpSPReqInsTradingFeeField_HandlingRatioByPar_set)

	# 经手费按笔收取金额
    __swig_setmethods__["HandlingFeePerOrder"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_HandlingFeePerOrder_set
    __swig_getmethods__["HandlingFeePerOrder"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_HandlingFeePerOrder_get
    if _newclass:
        HandlingFeePerOrder = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeField_HandlingFeePerOrder_get, _sptraderapi.CTORATstpSPReqInsTradingFeeField_HandlingFeePerOrder_set)

	# 经手费按数量收取金额
    __swig_setmethods__["HandlingFeeByVolume"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_HandlingFeeByVolume_set
    __swig_getmethods__["HandlingFeeByVolume"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_HandlingFeeByVolume_get
    if _newclass:
        HandlingFeeByVolume = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeField_HandlingFeeByVolume_get, _sptraderapi.CTORATstpSPReqInsTradingFeeField_HandlingFeeByVolume_set)

	# 经手费最低收取金额
    __swig_setmethods__["HandlingFeeMin"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_HandlingFeeMin_set
    __swig_getmethods__["HandlingFeeMin"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_HandlingFeeMin_get
    if _newclass:
        HandlingFeeMin = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeField_HandlingFeeMin_get, _sptraderapi.CTORATstpSPReqInsTradingFeeField_HandlingFeeMin_set)

	# 经手费最高收取金额
    __swig_setmethods__["HandlingFeeMax"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_HandlingFeeMax_set
    __swig_getmethods__["HandlingFeeMax"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_HandlingFeeMax_get
    if _newclass:
        HandlingFeeMax = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeField_HandlingFeeMax_get, _sptraderapi.CTORATstpSPReqInsTradingFeeField_HandlingFeeMax_set)

	# 证管费按金额收取比例
    __swig_setmethods__["RegulateRatioByAmt"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_RegulateRatioByAmt_set
    __swig_getmethods__["RegulateRatioByAmt"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_RegulateRatioByAmt_get
    if _newclass:
        RegulateRatioByAmt = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeField_RegulateRatioByAmt_get, _sptraderapi.CTORATstpSPReqInsTradingFeeField_RegulateRatioByAmt_set)

	# 证管费按面值收取比例
    __swig_setmethods__["RegulateRatioByPar"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_RegulateRatioByPar_set
    __swig_getmethods__["RegulateRatioByPar"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_RegulateRatioByPar_get
    if _newclass:
        RegulateRatioByPar = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeField_RegulateRatioByPar_get, _sptraderapi.CTORATstpSPReqInsTradingFeeField_RegulateRatioByPar_set)

	# 证管费按笔收取金额
    __swig_setmethods__["RegulateFeePerOrder"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_RegulateFeePerOrder_set
    __swig_getmethods__["RegulateFeePerOrder"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_RegulateFeePerOrder_get
    if _newclass:
        RegulateFeePerOrder = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeField_RegulateFeePerOrder_get, _sptraderapi.CTORATstpSPReqInsTradingFeeField_RegulateFeePerOrder_set)

	# 证管费按数量收取金额
    __swig_setmethods__["RegulateFeeByVolume"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_RegulateFeeByVolume_set
    __swig_getmethods__["RegulateFeeByVolume"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_RegulateFeeByVolume_get
    if _newclass:
        RegulateFeeByVolume = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeField_RegulateFeeByVolume_get, _sptraderapi.CTORATstpSPReqInsTradingFeeField_RegulateFeeByVolume_set)

	# 证管费最低收取金额
    __swig_setmethods__["RegulateFeeMin"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_RegulateFeeMin_set
    __swig_getmethods__["RegulateFeeMin"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_RegulateFeeMin_get
    if _newclass:
        RegulateFeeMin = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeField_RegulateFeeMin_get, _sptraderapi.CTORATstpSPReqInsTradingFeeField_RegulateFeeMin_set)

	# 证管费最高收取金额
    __swig_setmethods__["RegulateFeeMax"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_RegulateFeeMax_set
    __swig_getmethods__["RegulateFeeMax"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_RegulateFeeMax_get
    if _newclass:
        RegulateFeeMax = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeField_RegulateFeeMax_get, _sptraderapi.CTORATstpSPReqInsTradingFeeField_RegulateFeeMax_set)

	# 结算费按金额收取比例
    __swig_setmethods__["SettlementRatioByAmt"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_SettlementRatioByAmt_set
    __swig_getmethods__["SettlementRatioByAmt"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_SettlementRatioByAmt_get
    if _newclass:
        SettlementRatioByAmt = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeField_SettlementRatioByAmt_get, _sptraderapi.CTORATstpSPReqInsTradingFeeField_SettlementRatioByAmt_set)

	# 结算费按面值收取比例
    __swig_setmethods__["SettlementRatioByPar"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_SettlementRatioByPar_set
    __swig_getmethods__["SettlementRatioByPar"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_SettlementRatioByPar_get
    if _newclass:
        SettlementRatioByPar = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeField_SettlementRatioByPar_get, _sptraderapi.CTORATstpSPReqInsTradingFeeField_SettlementRatioByPar_set)

	# 结算费按笔收取金额
    __swig_setmethods__["SettlementFeePerOrder"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_SettlementFeePerOrder_set
    __swig_getmethods__["SettlementFeePerOrder"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_SettlementFeePerOrder_get
    if _newclass:
        SettlementFeePerOrder = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeField_SettlementFeePerOrder_get, _sptraderapi.CTORATstpSPReqInsTradingFeeField_SettlementFeePerOrder_set)

	# 结算费按数量收取金额
    __swig_setmethods__["SettlementFeeByVolume"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_SettlementFeeByVolume_set
    __swig_getmethods__["SettlementFeeByVolume"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_SettlementFeeByVolume_get
    if _newclass:
        SettlementFeeByVolume = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeField_SettlementFeeByVolume_get, _sptraderapi.CTORATstpSPReqInsTradingFeeField_SettlementFeeByVolume_set)

	# 结算费最低收取金额
    __swig_setmethods__["SettlementFeeMin"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_SettlementFeeMin_set
    __swig_getmethods__["SettlementFeeMin"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_SettlementFeeMin_get
    if _newclass:
        SettlementFeeMin = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeField_SettlementFeeMin_get, _sptraderapi.CTORATstpSPReqInsTradingFeeField_SettlementFeeMin_set)

	# 结算费最高收取金额
    __swig_setmethods__["SettlementFeeMax"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_SettlementFeeMax_set
    __swig_getmethods__["SettlementFeeMax"] = _sptraderapi.CTORATstpSPReqInsTradingFeeField_SettlementFeeMax_get
    if _newclass:
        SettlementFeeMax = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeField_SettlementFeeMax_get, _sptraderapi.CTORATstpSPReqInsTradingFeeField_SettlementFeeMax_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsTradingFeeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsTradingFeeField
    __del__ = lambda self: None
CTORATstpSPReqInsTradingFeeField_swigregister = _sptraderapi.CTORATstpSPReqInsTradingFeeField_swigregister
CTORATstpSPReqInsTradingFeeField_swigregister(CTORATstpSPReqInsTradingFeeField)




#########################################请求更新TradingFee############################################
class CTORATstpSPReqUpdTradingFeeField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdTradingFeeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdTradingFeeField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeField_ExchangeID_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeField_ExchangeID_set)

	# 证券品种代码
    __swig_setmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_ProductID_set
    __swig_getmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeField_ProductID_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeField_ProductID_set)

	# 证券类别代码
    __swig_setmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_SecurityType_set
    __swig_getmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_SecurityType_get
    if _newclass:
        SecurityType = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeField_SecurityType_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeField_SecurityType_set)

	# 证券代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeField_SecurityID_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeField_SecurityID_set)

	# 业务类别
    __swig_setmethods__["BusinessClass"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_BusinessClass_set
    __swig_getmethods__["BusinessClass"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_BusinessClass_get
    if _newclass:
        BusinessClass = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeField_BusinessClass_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeField_BusinessClass_set)

	# 系统标识
    __swig_setmethods__["SystemFlag"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_SystemFlag_set
    __swig_getmethods__["SystemFlag"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_SystemFlag_get
    if _newclass:
        SystemFlag = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeField_SystemFlag_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeField_SystemFlag_set)

	# 印花税按金额收取比例
    __swig_setmethods__["StampTaxRatioByAmt"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_StampTaxRatioByAmt_set
    __swig_getmethods__["StampTaxRatioByAmt"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_StampTaxRatioByAmt_get
    if _newclass:
        StampTaxRatioByAmt = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeField_StampTaxRatioByAmt_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeField_StampTaxRatioByAmt_set)

	# 印花税按面值收取比例
    __swig_setmethods__["StampTaxRatioByPar"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_StampTaxRatioByPar_set
    __swig_getmethods__["StampTaxRatioByPar"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_StampTaxRatioByPar_get
    if _newclass:
        StampTaxRatioByPar = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeField_StampTaxRatioByPar_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeField_StampTaxRatioByPar_set)

	# 印花税按笔收取金额
    __swig_setmethods__["StampTaxFeePerOrder"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_StampTaxFeePerOrder_set
    __swig_getmethods__["StampTaxFeePerOrder"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_StampTaxFeePerOrder_get
    if _newclass:
        StampTaxFeePerOrder = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeField_StampTaxFeePerOrder_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeField_StampTaxFeePerOrder_set)

	# 印花税按数量收取金额
    __swig_setmethods__["StampTaxFeeByVolume"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_StampTaxFeeByVolume_set
    __swig_getmethods__["StampTaxFeeByVolume"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_StampTaxFeeByVolume_get
    if _newclass:
        StampTaxFeeByVolume = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeField_StampTaxFeeByVolume_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeField_StampTaxFeeByVolume_set)

	# 印花税最低收取金额
    __swig_setmethods__["StampTaxFeeMin"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_StampTaxFeeMin_set
    __swig_getmethods__["StampTaxFeeMin"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_StampTaxFeeMin_get
    if _newclass:
        StampTaxFeeMin = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeField_StampTaxFeeMin_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeField_StampTaxFeeMin_set)

	# 印花税最高收取金额
    __swig_setmethods__["StampTaxFeeMax"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_StampTaxFeeMax_set
    __swig_getmethods__["StampTaxFeeMax"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_StampTaxFeeMax_get
    if _newclass:
        StampTaxFeeMax = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeField_StampTaxFeeMax_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeField_StampTaxFeeMax_set)

	# 过户费按金额收取比例
    __swig_setmethods__["TransferRatioByAmt"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_TransferRatioByAmt_set
    __swig_getmethods__["TransferRatioByAmt"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_TransferRatioByAmt_get
    if _newclass:
        TransferRatioByAmt = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeField_TransferRatioByAmt_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeField_TransferRatioByAmt_set)

	# 过户费按面值收取比例
    __swig_setmethods__["TransferRatioByPar"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_TransferRatioByPar_set
    __swig_getmethods__["TransferRatioByPar"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_TransferRatioByPar_get
    if _newclass:
        TransferRatioByPar = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeField_TransferRatioByPar_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeField_TransferRatioByPar_set)

	# 过户费按笔收取金额
    __swig_setmethods__["TransferFeePerOrder"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_TransferFeePerOrder_set
    __swig_getmethods__["TransferFeePerOrder"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_TransferFeePerOrder_get
    if _newclass:
        TransferFeePerOrder = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeField_TransferFeePerOrder_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeField_TransferFeePerOrder_set)

	# 过户费按数量收取金额
    __swig_setmethods__["TransferFeeByVolume"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_TransferFeeByVolume_set
    __swig_getmethods__["TransferFeeByVolume"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_TransferFeeByVolume_get
    if _newclass:
        TransferFeeByVolume = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeField_TransferFeeByVolume_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeField_TransferFeeByVolume_set)

	# 过户费最低收取金额
    __swig_setmethods__["TransferFeeMin"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_TransferFeeMin_set
    __swig_getmethods__["TransferFeeMin"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_TransferFeeMin_get
    if _newclass:
        TransferFeeMin = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeField_TransferFeeMin_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeField_TransferFeeMin_set)

	# 过户费最高收取金额
    __swig_setmethods__["TransferFeeMax"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_TransferFeeMax_set
    __swig_getmethods__["TransferFeeMax"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_TransferFeeMax_get
    if _newclass:
        TransferFeeMax = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeField_TransferFeeMax_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeField_TransferFeeMax_set)

	# 经手费按金额收取比例
    __swig_setmethods__["HandlingRatioByAmt"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_HandlingRatioByAmt_set
    __swig_getmethods__["HandlingRatioByAmt"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_HandlingRatioByAmt_get
    if _newclass:
        HandlingRatioByAmt = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeField_HandlingRatioByAmt_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeField_HandlingRatioByAmt_set)

	# 经手费按面值收取比例
    __swig_setmethods__["HandlingRatioByPar"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_HandlingRatioByPar_set
    __swig_getmethods__["HandlingRatioByPar"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_HandlingRatioByPar_get
    if _newclass:
        HandlingRatioByPar = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeField_HandlingRatioByPar_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeField_HandlingRatioByPar_set)

	# 经手费按笔收取金额
    __swig_setmethods__["HandlingFeePerOrder"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_HandlingFeePerOrder_set
    __swig_getmethods__["HandlingFeePerOrder"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_HandlingFeePerOrder_get
    if _newclass:
        HandlingFeePerOrder = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeField_HandlingFeePerOrder_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeField_HandlingFeePerOrder_set)

	# 经手费按数量收取金额
    __swig_setmethods__["HandlingFeeByVolume"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_HandlingFeeByVolume_set
    __swig_getmethods__["HandlingFeeByVolume"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_HandlingFeeByVolume_get
    if _newclass:
        HandlingFeeByVolume = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeField_HandlingFeeByVolume_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeField_HandlingFeeByVolume_set)

	# 经手费最低收取金额
    __swig_setmethods__["HandlingFeeMin"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_HandlingFeeMin_set
    __swig_getmethods__["HandlingFeeMin"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_HandlingFeeMin_get
    if _newclass:
        HandlingFeeMin = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeField_HandlingFeeMin_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeField_HandlingFeeMin_set)

	# 经手费最高收取金额
    __swig_setmethods__["HandlingFeeMax"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_HandlingFeeMax_set
    __swig_getmethods__["HandlingFeeMax"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_HandlingFeeMax_get
    if _newclass:
        HandlingFeeMax = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeField_HandlingFeeMax_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeField_HandlingFeeMax_set)

	# 证管费按金额收取比例
    __swig_setmethods__["RegulateRatioByAmt"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_RegulateRatioByAmt_set
    __swig_getmethods__["RegulateRatioByAmt"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_RegulateRatioByAmt_get
    if _newclass:
        RegulateRatioByAmt = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeField_RegulateRatioByAmt_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeField_RegulateRatioByAmt_set)

	# 证管费按面值收取比例
    __swig_setmethods__["RegulateRatioByPar"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_RegulateRatioByPar_set
    __swig_getmethods__["RegulateRatioByPar"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_RegulateRatioByPar_get
    if _newclass:
        RegulateRatioByPar = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeField_RegulateRatioByPar_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeField_RegulateRatioByPar_set)

	# 证管费按笔收取金额
    __swig_setmethods__["RegulateFeePerOrder"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_RegulateFeePerOrder_set
    __swig_getmethods__["RegulateFeePerOrder"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_RegulateFeePerOrder_get
    if _newclass:
        RegulateFeePerOrder = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeField_RegulateFeePerOrder_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeField_RegulateFeePerOrder_set)

	# 证管费按数量收取金额
    __swig_setmethods__["RegulateFeeByVolume"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_RegulateFeeByVolume_set
    __swig_getmethods__["RegulateFeeByVolume"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_RegulateFeeByVolume_get
    if _newclass:
        RegulateFeeByVolume = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeField_RegulateFeeByVolume_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeField_RegulateFeeByVolume_set)

	# 证管费最低收取金额
    __swig_setmethods__["RegulateFeeMin"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_RegulateFeeMin_set
    __swig_getmethods__["RegulateFeeMin"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_RegulateFeeMin_get
    if _newclass:
        RegulateFeeMin = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeField_RegulateFeeMin_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeField_RegulateFeeMin_set)

	# 证管费最高收取金额
    __swig_setmethods__["RegulateFeeMax"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_RegulateFeeMax_set
    __swig_getmethods__["RegulateFeeMax"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_RegulateFeeMax_get
    if _newclass:
        RegulateFeeMax = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeField_RegulateFeeMax_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeField_RegulateFeeMax_set)

	# 结算费按金额收取比例
    __swig_setmethods__["SettlementRatioByAmt"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_SettlementRatioByAmt_set
    __swig_getmethods__["SettlementRatioByAmt"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_SettlementRatioByAmt_get
    if _newclass:
        SettlementRatioByAmt = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeField_SettlementRatioByAmt_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeField_SettlementRatioByAmt_set)

	# 结算费按面值收取比例
    __swig_setmethods__["SettlementRatioByPar"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_SettlementRatioByPar_set
    __swig_getmethods__["SettlementRatioByPar"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_SettlementRatioByPar_get
    if _newclass:
        SettlementRatioByPar = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeField_SettlementRatioByPar_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeField_SettlementRatioByPar_set)

	# 结算费按笔收取金额
    __swig_setmethods__["SettlementFeePerOrder"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_SettlementFeePerOrder_set
    __swig_getmethods__["SettlementFeePerOrder"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_SettlementFeePerOrder_get
    if _newclass:
        SettlementFeePerOrder = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeField_SettlementFeePerOrder_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeField_SettlementFeePerOrder_set)

	# 结算费按数量收取金额
    __swig_setmethods__["SettlementFeeByVolume"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_SettlementFeeByVolume_set
    __swig_getmethods__["SettlementFeeByVolume"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_SettlementFeeByVolume_get
    if _newclass:
        SettlementFeeByVolume = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeField_SettlementFeeByVolume_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeField_SettlementFeeByVolume_set)

	# 结算费最低收取金额
    __swig_setmethods__["SettlementFeeMin"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_SettlementFeeMin_set
    __swig_getmethods__["SettlementFeeMin"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_SettlementFeeMin_get
    if _newclass:
        SettlementFeeMin = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeField_SettlementFeeMin_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeField_SettlementFeeMin_set)

	# 结算费最高收取金额
    __swig_setmethods__["SettlementFeeMax"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_SettlementFeeMax_set
    __swig_getmethods__["SettlementFeeMax"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_SettlementFeeMax_get
    if _newclass:
        SettlementFeeMax = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeField_SettlementFeeMax_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeField_SettlementFeeMax_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdTradingFeeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdTradingFeeField
    __del__ = lambda self: None
CTORATstpSPReqUpdTradingFeeField_swigregister = _sptraderapi.CTORATstpSPReqUpdTradingFeeField_swigregister
CTORATstpSPReqUpdTradingFeeField_swigregister(CTORATstpSPReqUpdTradingFeeField)




#########################################请求删除TradingFee############################################
class CTORATstpSPReqDelTradingFeeField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelTradingFeeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelTradingFeeField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelTradingFeeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelTradingFeeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqDelTradingFeeField_ExchangeID_get, _sptraderapi.CTORATstpSPReqDelTradingFeeField_ExchangeID_set)

	# 证券品种代码
    __swig_setmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqDelTradingFeeField_ProductID_set
    __swig_getmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqDelTradingFeeField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_sptraderapi.CTORATstpSPReqDelTradingFeeField_ProductID_get, _sptraderapi.CTORATstpSPReqDelTradingFeeField_ProductID_set)

	# 证券类别代码
    __swig_setmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqDelTradingFeeField_SecurityType_set
    __swig_getmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqDelTradingFeeField_SecurityType_get
    if _newclass:
        SecurityType = _swig_property(_sptraderapi.CTORATstpSPReqDelTradingFeeField_SecurityType_get, _sptraderapi.CTORATstpSPReqDelTradingFeeField_SecurityType_set)

	# 证券代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqDelTradingFeeField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqDelTradingFeeField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqDelTradingFeeField_SecurityID_get, _sptraderapi.CTORATstpSPReqDelTradingFeeField_SecurityID_set)

	# 业务类别
    __swig_setmethods__["BusinessClass"] = _sptraderapi.CTORATstpSPReqDelTradingFeeField_BusinessClass_set
    __swig_getmethods__["BusinessClass"] = _sptraderapi.CTORATstpSPReqDelTradingFeeField_BusinessClass_get
    if _newclass:
        BusinessClass = _swig_property(_sptraderapi.CTORATstpSPReqDelTradingFeeField_BusinessClass_get, _sptraderapi.CTORATstpSPReqDelTradingFeeField_BusinessClass_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelTradingFeeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelTradingFeeField
    __del__ = lambda self: None
CTORATstpSPReqDelTradingFeeField_swigregister = _sptraderapi.CTORATstpSPReqDelTradingFeeField_swigregister
CTORATstpSPReqDelTradingFeeField_swigregister(CTORATstpSPReqDelTradingFeeField)




#########################################请求插入TradingFeeTemplate############################################
class CTORATstpSPReqInsTradingFeeTemplateField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsTradingFeeTemplateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsTradingFeeTemplateField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_ExchangeID_get, _sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_ExchangeID_set)

	# 佣金模板代码
    __swig_setmethods__["TradingFeeTemplateID"] = _sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_TradingFeeTemplateID_set
    __swig_getmethods__["TradingFeeTemplateID"] = _sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_TradingFeeTemplateID_get
    if _newclass:
        TradingFeeTemplateID = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_TradingFeeTemplateID_get, _sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_TradingFeeTemplateID_set)

	# 产品代码
    __swig_setmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_ProductID_set
    __swig_getmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_ProductID_get, _sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_ProductID_set)

	# 证券类别代码
    __swig_setmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_SecurityType_set
    __swig_getmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_SecurityType_get
    if _newclass:
        SecurityType = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_SecurityType_get, _sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_SecurityType_set)

	# 合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_SecurityID_get, _sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_SecurityID_set)

	# 业务类别
    __swig_setmethods__["BusinessClass"] = _sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_BusinessClass_set
    __swig_getmethods__["BusinessClass"] = _sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_BusinessClass_get
    if _newclass:
        BusinessClass = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_BusinessClass_get, _sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_BusinessClass_set)

	# 佣金类型
    __swig_setmethods__["BrokerageType"] = _sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_BrokerageType_set
    __swig_getmethods__["BrokerageType"] = _sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_BrokerageType_get
    if _newclass:
        BrokerageType = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_BrokerageType_get, _sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_BrokerageType_set)

	# 佣金按金额收取比例
    __swig_setmethods__["RatioByAmt"] = _sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_RatioByAmt_set
    __swig_getmethods__["RatioByAmt"] = _sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_RatioByAmt_get
    if _newclass:
        RatioByAmt = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_RatioByAmt_get, _sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_RatioByAmt_set)

	# 佣金按面值收取比例
    __swig_setmethods__["RatioByPar"] = _sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_RatioByPar_set
    __swig_getmethods__["RatioByPar"] = _sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_RatioByPar_get
    if _newclass:
        RatioByPar = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_RatioByPar_get, _sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_RatioByPar_set)

	# 佣金按笔收取金额
    __swig_setmethods__["FeePerOrder"] = _sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_FeePerOrder_set
    __swig_getmethods__["FeePerOrder"] = _sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_FeePerOrder_get
    if _newclass:
        FeePerOrder = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_FeePerOrder_get, _sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_FeePerOrder_set)

	# 佣金最低收取金额
    __swig_setmethods__["FeeMin"] = _sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_FeeMin_set
    __swig_getmethods__["FeeMin"] = _sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_FeeMin_get
    if _newclass:
        FeeMin = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_FeeMin_get, _sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_FeeMin_set)

	# 佣金最高收取金额
    __swig_setmethods__["FeeMax"] = _sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_FeeMax_set
    __swig_getmethods__["FeeMax"] = _sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_FeeMax_get
    if _newclass:
        FeeMax = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_FeeMax_get, _sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_FeeMax_set)

	# 佣金按数量收取金额
    __swig_setmethods__["FeeByVolume"] = _sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_FeeByVolume_set
    __swig_getmethods__["FeeByVolume"] = _sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_FeeByVolume_get
    if _newclass:
        FeeByVolume = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_FeeByVolume_get, _sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_FeeByVolume_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsTradingFeeTemplateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsTradingFeeTemplateField
    __del__ = lambda self: None
CTORATstpSPReqInsTradingFeeTemplateField_swigregister = _sptraderapi.CTORATstpSPReqInsTradingFeeTemplateField_swigregister
CTORATstpSPReqInsTradingFeeTemplateField_swigregister(CTORATstpSPReqInsTradingFeeTemplateField)




#########################################请求更新TradingFeeTemplate############################################
class CTORATstpSPReqUpdTradingFeeTemplateField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdTradingFeeTemplateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdTradingFeeTemplateField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_ExchangeID_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_ExchangeID_set)

	# 佣金模板代码
    __swig_setmethods__["TradingFeeTemplateID"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_TradingFeeTemplateID_set
    __swig_getmethods__["TradingFeeTemplateID"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_TradingFeeTemplateID_get
    if _newclass:
        TradingFeeTemplateID = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_TradingFeeTemplateID_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_TradingFeeTemplateID_set)

	# 产品代码
    __swig_setmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_ProductID_set
    __swig_getmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_ProductID_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_ProductID_set)

	# 证券类别代码
    __swig_setmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_SecurityType_set
    __swig_getmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_SecurityType_get
    if _newclass:
        SecurityType = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_SecurityType_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_SecurityType_set)

	# 合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_SecurityID_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_SecurityID_set)

	# 业务类别
    __swig_setmethods__["BusinessClass"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_BusinessClass_set
    __swig_getmethods__["BusinessClass"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_BusinessClass_get
    if _newclass:
        BusinessClass = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_BusinessClass_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_BusinessClass_set)

	# 佣金类型
    __swig_setmethods__["BrokerageType"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_BrokerageType_set
    __swig_getmethods__["BrokerageType"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_BrokerageType_get
    if _newclass:
        BrokerageType = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_BrokerageType_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_BrokerageType_set)

	# 佣金按金额收取比例
    __swig_setmethods__["RatioByAmt"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_RatioByAmt_set
    __swig_getmethods__["RatioByAmt"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_RatioByAmt_get
    if _newclass:
        RatioByAmt = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_RatioByAmt_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_RatioByAmt_set)

	# 佣金按面值收取比例
    __swig_setmethods__["RatioByPar"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_RatioByPar_set
    __swig_getmethods__["RatioByPar"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_RatioByPar_get
    if _newclass:
        RatioByPar = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_RatioByPar_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_RatioByPar_set)

	# 佣金按笔收取金额
    __swig_setmethods__["FeePerOrder"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_FeePerOrder_set
    __swig_getmethods__["FeePerOrder"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_FeePerOrder_get
    if _newclass:
        FeePerOrder = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_FeePerOrder_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_FeePerOrder_set)

	# 佣金最低收取金额
    __swig_setmethods__["FeeMin"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_FeeMin_set
    __swig_getmethods__["FeeMin"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_FeeMin_get
    if _newclass:
        FeeMin = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_FeeMin_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_FeeMin_set)

	# 佣金最高收取金额
    __swig_setmethods__["FeeMax"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_FeeMax_set
    __swig_getmethods__["FeeMax"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_FeeMax_get
    if _newclass:
        FeeMax = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_FeeMax_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_FeeMax_set)

	# 佣金按数量收取金额
    __swig_setmethods__["FeeByVolume"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_FeeByVolume_set
    __swig_getmethods__["FeeByVolume"] = _sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_FeeByVolume_get
    if _newclass:
        FeeByVolume = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_FeeByVolume_get, _sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_FeeByVolume_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdTradingFeeTemplateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdTradingFeeTemplateField
    __del__ = lambda self: None
CTORATstpSPReqUpdTradingFeeTemplateField_swigregister = _sptraderapi.CTORATstpSPReqUpdTradingFeeTemplateField_swigregister
CTORATstpSPReqUpdTradingFeeTemplateField_swigregister(CTORATstpSPReqUpdTradingFeeTemplateField)




#########################################请求删除TradingFeeTemplate############################################
class CTORATstpSPReqDelTradingFeeTemplateField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelTradingFeeTemplateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelTradingFeeTemplateField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelTradingFeeTemplateField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelTradingFeeTemplateField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqDelTradingFeeTemplateField_ExchangeID_get, _sptraderapi.CTORATstpSPReqDelTradingFeeTemplateField_ExchangeID_set)

	# 佣金模板代码
    __swig_setmethods__["TradingFeeTemplateID"] = _sptraderapi.CTORATstpSPReqDelTradingFeeTemplateField_TradingFeeTemplateID_set
    __swig_getmethods__["TradingFeeTemplateID"] = _sptraderapi.CTORATstpSPReqDelTradingFeeTemplateField_TradingFeeTemplateID_get
    if _newclass:
        TradingFeeTemplateID = _swig_property(_sptraderapi.CTORATstpSPReqDelTradingFeeTemplateField_TradingFeeTemplateID_get, _sptraderapi.CTORATstpSPReqDelTradingFeeTemplateField_TradingFeeTemplateID_set)

	# 产品代码
    __swig_setmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqDelTradingFeeTemplateField_ProductID_set
    __swig_getmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqDelTradingFeeTemplateField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_sptraderapi.CTORATstpSPReqDelTradingFeeTemplateField_ProductID_get, _sptraderapi.CTORATstpSPReqDelTradingFeeTemplateField_ProductID_set)

	# 证券类别代码
    __swig_setmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqDelTradingFeeTemplateField_SecurityType_set
    __swig_getmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqDelTradingFeeTemplateField_SecurityType_get
    if _newclass:
        SecurityType = _swig_property(_sptraderapi.CTORATstpSPReqDelTradingFeeTemplateField_SecurityType_get, _sptraderapi.CTORATstpSPReqDelTradingFeeTemplateField_SecurityType_set)

	# 合约代码
    __swig_setmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqDelTradingFeeTemplateField_SecurityID_set
    __swig_getmethods__["SecurityID"] = _sptraderapi.CTORATstpSPReqDelTradingFeeTemplateField_SecurityID_get
    if _newclass:
        SecurityID = _swig_property(_sptraderapi.CTORATstpSPReqDelTradingFeeTemplateField_SecurityID_get, _sptraderapi.CTORATstpSPReqDelTradingFeeTemplateField_SecurityID_set)

	# 业务类别
    __swig_setmethods__["BusinessClass"] = _sptraderapi.CTORATstpSPReqDelTradingFeeTemplateField_BusinessClass_set
    __swig_getmethods__["BusinessClass"] = _sptraderapi.CTORATstpSPReqDelTradingFeeTemplateField_BusinessClass_get
    if _newclass:
        BusinessClass = _swig_property(_sptraderapi.CTORATstpSPReqDelTradingFeeTemplateField_BusinessClass_get, _sptraderapi.CTORATstpSPReqDelTradingFeeTemplateField_BusinessClass_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelTradingFeeTemplateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelTradingFeeTemplateField
    __del__ = lambda self: None
CTORATstpSPReqDelTradingFeeTemplateField_swigregister = _sptraderapi.CTORATstpSPReqDelTradingFeeTemplateField_swigregister
CTORATstpSPReqDelTradingFeeTemplateField_swigregister(CTORATstpSPReqDelTradingFeeTemplateField)




#########################################请求插入TradingRightTemplate############################################
class CTORATstpSPReqInsTradingRightTemplateField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsTradingRightTemplateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsTradingRightTemplateField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsTradingRightTemplateField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqInsTradingRightTemplateField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingRightTemplateField_ExchangeID_get, _sptraderapi.CTORATstpSPReqInsTradingRightTemplateField_ExchangeID_set)

	# 权限模板代码
    __swig_setmethods__["TradingRightTemplateID"] = _sptraderapi.CTORATstpSPReqInsTradingRightTemplateField_TradingRightTemplateID_set
    __swig_getmethods__["TradingRightTemplateID"] = _sptraderapi.CTORATstpSPReqInsTradingRightTemplateField_TradingRightTemplateID_get
    if _newclass:
        TradingRightTemplateID = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingRightTemplateField_TradingRightTemplateID_get, _sptraderapi.CTORATstpSPReqInsTradingRightTemplateField_TradingRightTemplateID_set)

	# 证券品种代码
    __swig_setmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqInsTradingRightTemplateField_ProductID_set
    __swig_getmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqInsTradingRightTemplateField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingRightTemplateField_ProductID_get, _sptraderapi.CTORATstpSPReqInsTradingRightTemplateField_ProductID_set)

	# 证券类别代码
    __swig_setmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqInsTradingRightTemplateField_SecurityType_set
    __swig_getmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqInsTradingRightTemplateField_SecurityType_get
    if _newclass:
        SecurityType = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingRightTemplateField_SecurityType_get, _sptraderapi.CTORATstpSPReqInsTradingRightTemplateField_SecurityType_set)

	# 按开平方向
    __swig_setmethods__["OffsetFlag"] = _sptraderapi.CTORATstpSPReqInsTradingRightTemplateField_OffsetFlag_set
    __swig_getmethods__["OffsetFlag"] = _sptraderapi.CTORATstpSPReqInsTradingRightTemplateField_OffsetFlag_get
    if _newclass:
        OffsetFlag = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingRightTemplateField_OffsetFlag_get, _sptraderapi.CTORATstpSPReqInsTradingRightTemplateField_OffsetFlag_set)

	# 报单类别
    __swig_setmethods__["Direction"] = _sptraderapi.CTORATstpSPReqInsTradingRightTemplateField_Direction_set
    __swig_getmethods__["Direction"] = _sptraderapi.CTORATstpSPReqInsTradingRightTemplateField_Direction_get
    if _newclass:
        Direction = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingRightTemplateField_Direction_get, _sptraderapi.CTORATstpSPReqInsTradingRightTemplateField_Direction_set)

	# 投机套保标志
    __swig_setmethods__["HedgeFlag"] = _sptraderapi.CTORATstpSPReqInsTradingRightTemplateField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _sptraderapi.CTORATstpSPReqInsTradingRightTemplateField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingRightTemplateField_HedgeFlag_get, _sptraderapi.CTORATstpSPReqInsTradingRightTemplateField_HedgeFlag_set)

	# 是否禁止
    __swig_setmethods__["bForbidden"] = _sptraderapi.CTORATstpSPReqInsTradingRightTemplateField_bForbidden_set
    __swig_getmethods__["bForbidden"] = _sptraderapi.CTORATstpSPReqInsTradingRightTemplateField_bForbidden_get
    if _newclass:
        bForbidden = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingRightTemplateField_bForbidden_get, _sptraderapi.CTORATstpSPReqInsTradingRightTemplateField_bForbidden_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsTradingRightTemplateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsTradingRightTemplateField
    __del__ = lambda self: None
CTORATstpSPReqInsTradingRightTemplateField_swigregister = _sptraderapi.CTORATstpSPReqInsTradingRightTemplateField_swigregister
CTORATstpSPReqInsTradingRightTemplateField_swigregister(CTORATstpSPReqInsTradingRightTemplateField)




#########################################请求更新TradingRightTemplate############################################
class CTORATstpSPReqUpdTradingRightTemplateField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdTradingRightTemplateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdTradingRightTemplateField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdTradingRightTemplateField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqUpdTradingRightTemplateField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingRightTemplateField_ExchangeID_get, _sptraderapi.CTORATstpSPReqUpdTradingRightTemplateField_ExchangeID_set)

	# 权限模板代码
    __swig_setmethods__["TradingRightTemplateID"] = _sptraderapi.CTORATstpSPReqUpdTradingRightTemplateField_TradingRightTemplateID_set
    __swig_getmethods__["TradingRightTemplateID"] = _sptraderapi.CTORATstpSPReqUpdTradingRightTemplateField_TradingRightTemplateID_get
    if _newclass:
        TradingRightTemplateID = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingRightTemplateField_TradingRightTemplateID_get, _sptraderapi.CTORATstpSPReqUpdTradingRightTemplateField_TradingRightTemplateID_set)

	# 证券品种代码
    __swig_setmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqUpdTradingRightTemplateField_ProductID_set
    __swig_getmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqUpdTradingRightTemplateField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingRightTemplateField_ProductID_get, _sptraderapi.CTORATstpSPReqUpdTradingRightTemplateField_ProductID_set)

	# 证券类别代码
    __swig_setmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqUpdTradingRightTemplateField_SecurityType_set
    __swig_getmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqUpdTradingRightTemplateField_SecurityType_get
    if _newclass:
        SecurityType = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingRightTemplateField_SecurityType_get, _sptraderapi.CTORATstpSPReqUpdTradingRightTemplateField_SecurityType_set)

	# 按开平方向
    __swig_setmethods__["OffsetFlag"] = _sptraderapi.CTORATstpSPReqUpdTradingRightTemplateField_OffsetFlag_set
    __swig_getmethods__["OffsetFlag"] = _sptraderapi.CTORATstpSPReqUpdTradingRightTemplateField_OffsetFlag_get
    if _newclass:
        OffsetFlag = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingRightTemplateField_OffsetFlag_get, _sptraderapi.CTORATstpSPReqUpdTradingRightTemplateField_OffsetFlag_set)

	# 报单类别
    __swig_setmethods__["Direction"] = _sptraderapi.CTORATstpSPReqUpdTradingRightTemplateField_Direction_set
    __swig_getmethods__["Direction"] = _sptraderapi.CTORATstpSPReqUpdTradingRightTemplateField_Direction_get
    if _newclass:
        Direction = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingRightTemplateField_Direction_get, _sptraderapi.CTORATstpSPReqUpdTradingRightTemplateField_Direction_set)

	# 投机套保标志
    __swig_setmethods__["HedgeFlag"] = _sptraderapi.CTORATstpSPReqUpdTradingRightTemplateField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _sptraderapi.CTORATstpSPReqUpdTradingRightTemplateField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingRightTemplateField_HedgeFlag_get, _sptraderapi.CTORATstpSPReqUpdTradingRightTemplateField_HedgeFlag_set)

	# 是否禁止
    __swig_setmethods__["bForbidden"] = _sptraderapi.CTORATstpSPReqUpdTradingRightTemplateField_bForbidden_set
    __swig_getmethods__["bForbidden"] = _sptraderapi.CTORATstpSPReqUpdTradingRightTemplateField_bForbidden_get
    if _newclass:
        bForbidden = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingRightTemplateField_bForbidden_get, _sptraderapi.CTORATstpSPReqUpdTradingRightTemplateField_bForbidden_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdTradingRightTemplateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdTradingRightTemplateField
    __del__ = lambda self: None
CTORATstpSPReqUpdTradingRightTemplateField_swigregister = _sptraderapi.CTORATstpSPReqUpdTradingRightTemplateField_swigregister
CTORATstpSPReqUpdTradingRightTemplateField_swigregister(CTORATstpSPReqUpdTradingRightTemplateField)




#########################################请求删除TradingRightTemplate############################################
class CTORATstpSPReqDelTradingRightTemplateField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelTradingRightTemplateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelTradingRightTemplateField, name)
    __repr__ = _swig_repr

	# 交易所代码
    __swig_setmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelTradingRightTemplateField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _sptraderapi.CTORATstpSPReqDelTradingRightTemplateField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_sptraderapi.CTORATstpSPReqDelTradingRightTemplateField_ExchangeID_get, _sptraderapi.CTORATstpSPReqDelTradingRightTemplateField_ExchangeID_set)

	# 权限模板代码
    __swig_setmethods__["TradingRightTemplateID"] = _sptraderapi.CTORATstpSPReqDelTradingRightTemplateField_TradingRightTemplateID_set
    __swig_getmethods__["TradingRightTemplateID"] = _sptraderapi.CTORATstpSPReqDelTradingRightTemplateField_TradingRightTemplateID_get
    if _newclass:
        TradingRightTemplateID = _swig_property(_sptraderapi.CTORATstpSPReqDelTradingRightTemplateField_TradingRightTemplateID_get, _sptraderapi.CTORATstpSPReqDelTradingRightTemplateField_TradingRightTemplateID_set)

	# 证券品种代码
    __swig_setmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqDelTradingRightTemplateField_ProductID_set
    __swig_getmethods__["ProductID"] = _sptraderapi.CTORATstpSPReqDelTradingRightTemplateField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_sptraderapi.CTORATstpSPReqDelTradingRightTemplateField_ProductID_get, _sptraderapi.CTORATstpSPReqDelTradingRightTemplateField_ProductID_set)

	# 证券类别代码
    __swig_setmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqDelTradingRightTemplateField_SecurityType_set
    __swig_getmethods__["SecurityType"] = _sptraderapi.CTORATstpSPReqDelTradingRightTemplateField_SecurityType_get
    if _newclass:
        SecurityType = _swig_property(_sptraderapi.CTORATstpSPReqDelTradingRightTemplateField_SecurityType_get, _sptraderapi.CTORATstpSPReqDelTradingRightTemplateField_SecurityType_set)

	# 按开平方向
    __swig_setmethods__["OffsetFlag"] = _sptraderapi.CTORATstpSPReqDelTradingRightTemplateField_OffsetFlag_set
    __swig_getmethods__["OffsetFlag"] = _sptraderapi.CTORATstpSPReqDelTradingRightTemplateField_OffsetFlag_get
    if _newclass:
        OffsetFlag = _swig_property(_sptraderapi.CTORATstpSPReqDelTradingRightTemplateField_OffsetFlag_get, _sptraderapi.CTORATstpSPReqDelTradingRightTemplateField_OffsetFlag_set)

	# 报单类别
    __swig_setmethods__["Direction"] = _sptraderapi.CTORATstpSPReqDelTradingRightTemplateField_Direction_set
    __swig_getmethods__["Direction"] = _sptraderapi.CTORATstpSPReqDelTradingRightTemplateField_Direction_get
    if _newclass:
        Direction = _swig_property(_sptraderapi.CTORATstpSPReqDelTradingRightTemplateField_Direction_get, _sptraderapi.CTORATstpSPReqDelTradingRightTemplateField_Direction_set)

	# 投机套保标志
    __swig_setmethods__["HedgeFlag"] = _sptraderapi.CTORATstpSPReqDelTradingRightTemplateField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _sptraderapi.CTORATstpSPReqDelTradingRightTemplateField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_sptraderapi.CTORATstpSPReqDelTradingRightTemplateField_HedgeFlag_get, _sptraderapi.CTORATstpSPReqDelTradingRightTemplateField_HedgeFlag_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelTradingRightTemplateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelTradingRightTemplateField
    __del__ = lambda self: None
CTORATstpSPReqDelTradingRightTemplateField_swigregister = _sptraderapi.CTORATstpSPReqDelTradingRightTemplateField_swigregister
CTORATstpSPReqDelTradingRightTemplateField_swigregister(CTORATstpSPReqDelTradingRightTemplateField)




#########################################请求插入TradingAccount############################################
class CTORATstpSPReqInsTradingAccountField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsTradingAccountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsTradingAccountField, name)
    __repr__ = _swig_repr

	# 经纪公司部门代码
    __swig_setmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPReqInsTradingAccountField_DepartmentID_set
    __swig_getmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPReqInsTradingAccountField_DepartmentID_get
    if _newclass:
        DepartmentID = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingAccountField_DepartmentID_get, _sptraderapi.CTORATstpSPReqInsTradingAccountField_DepartmentID_set)

	# 资金账户
    __swig_setmethods__["AccountID"] = _sptraderapi.CTORATstpSPReqInsTradingAccountField_AccountID_set
    __swig_getmethods__["AccountID"] = _sptraderapi.CTORATstpSPReqInsTradingAccountField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingAccountField_AccountID_get, _sptraderapi.CTORATstpSPReqInsTradingAccountField_AccountID_set)

	# 币种
    __swig_setmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPReqInsTradingAccountField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPReqInsTradingAccountField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingAccountField_CurrencyID_get, _sptraderapi.CTORATstpSPReqInsTradingAccountField_CurrencyID_set)

	# 普通、信用、衍生品等
    __swig_setmethods__["AccountType"] = _sptraderapi.CTORATstpSPReqInsTradingAccountField_AccountType_set
    __swig_getmethods__["AccountType"] = _sptraderapi.CTORATstpSPReqInsTradingAccountField_AccountType_get
    if _newclass:
        AccountType = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingAccountField_AccountType_get, _sptraderapi.CTORATstpSPReqInsTradingAccountField_AccountType_set)

	# 上日结存
    __swig_setmethods__["PreDeposit"] = _sptraderapi.CTORATstpSPReqInsTradingAccountField_PreDeposit_set
    __swig_getmethods__["PreDeposit"] = _sptraderapi.CTORATstpSPReqInsTradingAccountField_PreDeposit_get
    if _newclass:
        PreDeposit = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingAccountField_PreDeposit_get, _sptraderapi.CTORATstpSPReqInsTradingAccountField_PreDeposit_set)

	# 昨行权待交收冻结资金
    __swig_setmethods__["PreFrozenCash"] = _sptraderapi.CTORATstpSPReqInsTradingAccountField_PreFrozenCash_set
    __swig_getmethods__["PreFrozenCash"] = _sptraderapi.CTORATstpSPReqInsTradingAccountField_PreFrozenCash_get
    if _newclass:
        PreFrozenCash = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingAccountField_PreFrozenCash_get, _sptraderapi.CTORATstpSPReqInsTradingAccountField_PreFrozenCash_set)

	# 可用金额
    __swig_setmethods__["UsefulMoney"] = _sptraderapi.CTORATstpSPReqInsTradingAccountField_UsefulMoney_set
    __swig_getmethods__["UsefulMoney"] = _sptraderapi.CTORATstpSPReqInsTradingAccountField_UsefulMoney_get
    if _newclass:
        UsefulMoney = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingAccountField_UsefulMoney_get, _sptraderapi.CTORATstpSPReqInsTradingAccountField_UsefulMoney_set)

	# 可取额度
    __swig_setmethods__["FetchLimit"] = _sptraderapi.CTORATstpSPReqInsTradingAccountField_FetchLimit_set
    __swig_getmethods__["FetchLimit"] = _sptraderapi.CTORATstpSPReqInsTradingAccountField_FetchLimit_get
    if _newclass:
        FetchLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingAccountField_FetchLimit_get, _sptraderapi.CTORATstpSPReqInsTradingAccountField_FetchLimit_set)

	# 当日入金的总额
    __swig_setmethods__["Deposit"] = _sptraderapi.CTORATstpSPReqInsTradingAccountField_Deposit_set
    __swig_getmethods__["Deposit"] = _sptraderapi.CTORATstpSPReqInsTradingAccountField_Deposit_get
    if _newclass:
        Deposit = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingAccountField_Deposit_get, _sptraderapi.CTORATstpSPReqInsTradingAccountField_Deposit_set)

	# 当日出金的总额
    __swig_setmethods__["Withdraw"] = _sptraderapi.CTORATstpSPReqInsTradingAccountField_Withdraw_set
    __swig_getmethods__["Withdraw"] = _sptraderapi.CTORATstpSPReqInsTradingAccountField_Withdraw_get
    if _newclass:
        Withdraw = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingAccountField_Withdraw_get, _sptraderapi.CTORATstpSPReqInsTradingAccountField_Withdraw_set)

	# 因为下单而冻结的保证金
    __swig_setmethods__["FrozenMargin"] = _sptraderapi.CTORATstpSPReqInsTradingAccountField_FrozenMargin_set
    __swig_getmethods__["FrozenMargin"] = _sptraderapi.CTORATstpSPReqInsTradingAccountField_FrozenMargin_get
    if _newclass:
        FrozenMargin = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingAccountField_FrozenMargin_get, _sptraderapi.CTORATstpSPReqInsTradingAccountField_FrozenMargin_set)

	# 因为下单而冻结的资金，包括买入现货的资金和买入期权的权利金
    __swig_setmethods__["FrozenCash"] = _sptraderapi.CTORATstpSPReqInsTradingAccountField_FrozenCash_set
    __swig_getmethods__["FrozenCash"] = _sptraderapi.CTORATstpSPReqInsTradingAccountField_FrozenCash_get
    if _newclass:
        FrozenCash = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingAccountField_FrozenCash_get, _sptraderapi.CTORATstpSPReqInsTradingAccountField_FrozenCash_set)

	# 因为下单而冻结的手续费
    __swig_setmethods__["FrozenCommission"] = _sptraderapi.CTORATstpSPReqInsTradingAccountField_FrozenCommission_set
    __swig_getmethods__["FrozenCommission"] = _sptraderapi.CTORATstpSPReqInsTradingAccountField_FrozenCommission_get
    if _newclass:
        FrozenCommission = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingAccountField_FrozenCommission_get, _sptraderapi.CTORATstpSPReqInsTradingAccountField_FrozenCommission_set)

	# 当前所有持仓所需要占用的保证金
    __swig_setmethods__["CurrMargin"] = _sptraderapi.CTORATstpSPReqInsTradingAccountField_CurrMargin_set
    __swig_getmethods__["CurrMargin"] = _sptraderapi.CTORATstpSPReqInsTradingAccountField_CurrMargin_get
    if _newclass:
        CurrMargin = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingAccountField_CurrMargin_get, _sptraderapi.CTORATstpSPReqInsTradingAccountField_CurrMargin_set)

	# 成交单产生的手续费
    __swig_setmethods__["Commission"] = _sptraderapi.CTORATstpSPReqInsTradingAccountField_Commission_set
    __swig_getmethods__["Commission"] = _sptraderapi.CTORATstpSPReqInsTradingAccountField_Commission_get
    if _newclass:
        Commission = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingAccountField_Commission_get, _sptraderapi.CTORATstpSPReqInsTradingAccountField_Commission_set)

	# 该资金账户当日已成交的总权利金收入
    __swig_setmethods__["RoyaltyIn"] = _sptraderapi.CTORATstpSPReqInsTradingAccountField_RoyaltyIn_set
    __swig_getmethods__["RoyaltyIn"] = _sptraderapi.CTORATstpSPReqInsTradingAccountField_RoyaltyIn_get
    if _newclass:
        RoyaltyIn = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingAccountField_RoyaltyIn_get, _sptraderapi.CTORATstpSPReqInsTradingAccountField_RoyaltyIn_set)

	# 该资金账户当日已成交的总权利金支出
    __swig_setmethods__["RoyaltyOut"] = _sptraderapi.CTORATstpSPReqInsTradingAccountField_RoyaltyOut_set
    __swig_getmethods__["RoyaltyOut"] = _sptraderapi.CTORATstpSPReqInsTradingAccountField_RoyaltyOut_get
    if _newclass:
        RoyaltyOut = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingAccountField_RoyaltyOut_get, _sptraderapi.CTORATstpSPReqInsTradingAccountField_RoyaltyOut_set)

	# 签约银行账户
    __swig_setmethods__["BankAccountID"] = _sptraderapi.CTORATstpSPReqInsTradingAccountField_BankAccountID_set
    __swig_getmethods__["BankAccountID"] = _sptraderapi.CTORATstpSPReqInsTradingAccountField_BankAccountID_get
    if _newclass:
        BankAccountID = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingAccountField_BankAccountID_get, _sptraderapi.CTORATstpSPReqInsTradingAccountField_BankAccountID_set)

	# 银行代码
    __swig_setmethods__["BankID"] = _sptraderapi.CTORATstpSPReqInsTradingAccountField_BankID_set
    __swig_getmethods__["BankID"] = _sptraderapi.CTORATstpSPReqInsTradingAccountField_BankID_get
    if _newclass:
        BankID = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingAccountField_BankID_get, _sptraderapi.CTORATstpSPReqInsTradingAccountField_BankID_set)

	# 资金账户所属投资者代码
    __swig_setmethods__["AccountOwner"] = _sptraderapi.CTORATstpSPReqInsTradingAccountField_AccountOwner_set
    __swig_getmethods__["AccountOwner"] = _sptraderapi.CTORATstpSPReqInsTradingAccountField_AccountOwner_get
    if _newclass:
        AccountOwner = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingAccountField_AccountOwner_get, _sptraderapi.CTORATstpSPReqInsTradingAccountField_AccountOwner_set)

	# 当日行权待交收冻结资金
    __swig_setmethods__["ExcerciseFrozen"] = _sptraderapi.CTORATstpSPReqInsTradingAccountField_ExcerciseFrozen_set
    __swig_getmethods__["ExcerciseFrozen"] = _sptraderapi.CTORATstpSPReqInsTradingAccountField_ExcerciseFrozen_get
    if _newclass:
        ExcerciseFrozen = _swig_property(_sptraderapi.CTORATstpSPReqInsTradingAccountField_ExcerciseFrozen_get, _sptraderapi.CTORATstpSPReqInsTradingAccountField_ExcerciseFrozen_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsTradingAccountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsTradingAccountField
    __del__ = lambda self: None
CTORATstpSPReqInsTradingAccountField_swigregister = _sptraderapi.CTORATstpSPReqInsTradingAccountField_swigregister
CTORATstpSPReqInsTradingAccountField_swigregister(CTORATstpSPReqInsTradingAccountField)




#########################################请求更新TradingAccount############################################
class CTORATstpSPReqUpdTradingAccountField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdTradingAccountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdTradingAccountField, name)
    __repr__ = _swig_repr

	# 经纪公司部门代码
    __swig_setmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPReqUpdTradingAccountField_DepartmentID_set
    __swig_getmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPReqUpdTradingAccountField_DepartmentID_get
    if _newclass:
        DepartmentID = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingAccountField_DepartmentID_get, _sptraderapi.CTORATstpSPReqUpdTradingAccountField_DepartmentID_set)

	# 资金账户
    __swig_setmethods__["AccountID"] = _sptraderapi.CTORATstpSPReqUpdTradingAccountField_AccountID_set
    __swig_getmethods__["AccountID"] = _sptraderapi.CTORATstpSPReqUpdTradingAccountField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingAccountField_AccountID_get, _sptraderapi.CTORATstpSPReqUpdTradingAccountField_AccountID_set)

	# 币种
    __swig_setmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPReqUpdTradingAccountField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPReqUpdTradingAccountField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingAccountField_CurrencyID_get, _sptraderapi.CTORATstpSPReqUpdTradingAccountField_CurrencyID_set)

	# 普通、信用、衍生品等
    __swig_setmethods__["AccountType"] = _sptraderapi.CTORATstpSPReqUpdTradingAccountField_AccountType_set
    __swig_getmethods__["AccountType"] = _sptraderapi.CTORATstpSPReqUpdTradingAccountField_AccountType_get
    if _newclass:
        AccountType = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingAccountField_AccountType_get, _sptraderapi.CTORATstpSPReqUpdTradingAccountField_AccountType_set)

	# 上日结存
    __swig_setmethods__["PreDeposit"] = _sptraderapi.CTORATstpSPReqUpdTradingAccountField_PreDeposit_set
    __swig_getmethods__["PreDeposit"] = _sptraderapi.CTORATstpSPReqUpdTradingAccountField_PreDeposit_get
    if _newclass:
        PreDeposit = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingAccountField_PreDeposit_get, _sptraderapi.CTORATstpSPReqUpdTradingAccountField_PreDeposit_set)

	# 昨行权待交收冻结资金
    __swig_setmethods__["PreFrozenCash"] = _sptraderapi.CTORATstpSPReqUpdTradingAccountField_PreFrozenCash_set
    __swig_getmethods__["PreFrozenCash"] = _sptraderapi.CTORATstpSPReqUpdTradingAccountField_PreFrozenCash_get
    if _newclass:
        PreFrozenCash = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingAccountField_PreFrozenCash_get, _sptraderapi.CTORATstpSPReqUpdTradingAccountField_PreFrozenCash_set)

	# 可用金额
    __swig_setmethods__["UsefulMoney"] = _sptraderapi.CTORATstpSPReqUpdTradingAccountField_UsefulMoney_set
    __swig_getmethods__["UsefulMoney"] = _sptraderapi.CTORATstpSPReqUpdTradingAccountField_UsefulMoney_get
    if _newclass:
        UsefulMoney = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingAccountField_UsefulMoney_get, _sptraderapi.CTORATstpSPReqUpdTradingAccountField_UsefulMoney_set)

	# 可取额度
    __swig_setmethods__["FetchLimit"] = _sptraderapi.CTORATstpSPReqUpdTradingAccountField_FetchLimit_set
    __swig_getmethods__["FetchLimit"] = _sptraderapi.CTORATstpSPReqUpdTradingAccountField_FetchLimit_get
    if _newclass:
        FetchLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingAccountField_FetchLimit_get, _sptraderapi.CTORATstpSPReqUpdTradingAccountField_FetchLimit_set)

	# 当日入金的总额
    __swig_setmethods__["Deposit"] = _sptraderapi.CTORATstpSPReqUpdTradingAccountField_Deposit_set
    __swig_getmethods__["Deposit"] = _sptraderapi.CTORATstpSPReqUpdTradingAccountField_Deposit_get
    if _newclass:
        Deposit = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingAccountField_Deposit_get, _sptraderapi.CTORATstpSPReqUpdTradingAccountField_Deposit_set)

	# 当日出金的总额
    __swig_setmethods__["Withdraw"] = _sptraderapi.CTORATstpSPReqUpdTradingAccountField_Withdraw_set
    __swig_getmethods__["Withdraw"] = _sptraderapi.CTORATstpSPReqUpdTradingAccountField_Withdraw_get
    if _newclass:
        Withdraw = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingAccountField_Withdraw_get, _sptraderapi.CTORATstpSPReqUpdTradingAccountField_Withdraw_set)

	# 因为下单而冻结的保证金
    __swig_setmethods__["FrozenMargin"] = _sptraderapi.CTORATstpSPReqUpdTradingAccountField_FrozenMargin_set
    __swig_getmethods__["FrozenMargin"] = _sptraderapi.CTORATstpSPReqUpdTradingAccountField_FrozenMargin_get
    if _newclass:
        FrozenMargin = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingAccountField_FrozenMargin_get, _sptraderapi.CTORATstpSPReqUpdTradingAccountField_FrozenMargin_set)

	# 因为下单而冻结的资金，包括买入现货的资金和买入期权的权利金
    __swig_setmethods__["FrozenCash"] = _sptraderapi.CTORATstpSPReqUpdTradingAccountField_FrozenCash_set
    __swig_getmethods__["FrozenCash"] = _sptraderapi.CTORATstpSPReqUpdTradingAccountField_FrozenCash_get
    if _newclass:
        FrozenCash = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingAccountField_FrozenCash_get, _sptraderapi.CTORATstpSPReqUpdTradingAccountField_FrozenCash_set)

	# 因为下单而冻结的手续费
    __swig_setmethods__["FrozenCommission"] = _sptraderapi.CTORATstpSPReqUpdTradingAccountField_FrozenCommission_set
    __swig_getmethods__["FrozenCommission"] = _sptraderapi.CTORATstpSPReqUpdTradingAccountField_FrozenCommission_get
    if _newclass:
        FrozenCommission = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingAccountField_FrozenCommission_get, _sptraderapi.CTORATstpSPReqUpdTradingAccountField_FrozenCommission_set)

	# 当前所有持仓所需要占用的保证金
    __swig_setmethods__["CurrMargin"] = _sptraderapi.CTORATstpSPReqUpdTradingAccountField_CurrMargin_set
    __swig_getmethods__["CurrMargin"] = _sptraderapi.CTORATstpSPReqUpdTradingAccountField_CurrMargin_get
    if _newclass:
        CurrMargin = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingAccountField_CurrMargin_get, _sptraderapi.CTORATstpSPReqUpdTradingAccountField_CurrMargin_set)

	# 成交单产生的手续费
    __swig_setmethods__["Commission"] = _sptraderapi.CTORATstpSPReqUpdTradingAccountField_Commission_set
    __swig_getmethods__["Commission"] = _sptraderapi.CTORATstpSPReqUpdTradingAccountField_Commission_get
    if _newclass:
        Commission = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingAccountField_Commission_get, _sptraderapi.CTORATstpSPReqUpdTradingAccountField_Commission_set)

	# 该资金账户当日已成交的总权利金收入
    __swig_setmethods__["RoyaltyIn"] = _sptraderapi.CTORATstpSPReqUpdTradingAccountField_RoyaltyIn_set
    __swig_getmethods__["RoyaltyIn"] = _sptraderapi.CTORATstpSPReqUpdTradingAccountField_RoyaltyIn_get
    if _newclass:
        RoyaltyIn = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingAccountField_RoyaltyIn_get, _sptraderapi.CTORATstpSPReqUpdTradingAccountField_RoyaltyIn_set)

	# 该资金账户当日已成交的总权利金支出
    __swig_setmethods__["RoyaltyOut"] = _sptraderapi.CTORATstpSPReqUpdTradingAccountField_RoyaltyOut_set
    __swig_getmethods__["RoyaltyOut"] = _sptraderapi.CTORATstpSPReqUpdTradingAccountField_RoyaltyOut_get
    if _newclass:
        RoyaltyOut = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingAccountField_RoyaltyOut_get, _sptraderapi.CTORATstpSPReqUpdTradingAccountField_RoyaltyOut_set)

	# 签约银行账户
    __swig_setmethods__["BankAccountID"] = _sptraderapi.CTORATstpSPReqUpdTradingAccountField_BankAccountID_set
    __swig_getmethods__["BankAccountID"] = _sptraderapi.CTORATstpSPReqUpdTradingAccountField_BankAccountID_get
    if _newclass:
        BankAccountID = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingAccountField_BankAccountID_get, _sptraderapi.CTORATstpSPReqUpdTradingAccountField_BankAccountID_set)

	# 银行代码
    __swig_setmethods__["BankID"] = _sptraderapi.CTORATstpSPReqUpdTradingAccountField_BankID_set
    __swig_getmethods__["BankID"] = _sptraderapi.CTORATstpSPReqUpdTradingAccountField_BankID_get
    if _newclass:
        BankID = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingAccountField_BankID_get, _sptraderapi.CTORATstpSPReqUpdTradingAccountField_BankID_set)

	# 资金账户所属投资者代码
    __swig_setmethods__["AccountOwner"] = _sptraderapi.CTORATstpSPReqUpdTradingAccountField_AccountOwner_set
    __swig_getmethods__["AccountOwner"] = _sptraderapi.CTORATstpSPReqUpdTradingAccountField_AccountOwner_get
    if _newclass:
        AccountOwner = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingAccountField_AccountOwner_get, _sptraderapi.CTORATstpSPReqUpdTradingAccountField_AccountOwner_set)

	# 当日行权待交收冻结资金
    __swig_setmethods__["ExcerciseFrozen"] = _sptraderapi.CTORATstpSPReqUpdTradingAccountField_ExcerciseFrozen_set
    __swig_getmethods__["ExcerciseFrozen"] = _sptraderapi.CTORATstpSPReqUpdTradingAccountField_ExcerciseFrozen_get
    if _newclass:
        ExcerciseFrozen = _swig_property(_sptraderapi.CTORATstpSPReqUpdTradingAccountField_ExcerciseFrozen_get, _sptraderapi.CTORATstpSPReqUpdTradingAccountField_ExcerciseFrozen_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdTradingAccountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdTradingAccountField
    __del__ = lambda self: None
CTORATstpSPReqUpdTradingAccountField_swigregister = _sptraderapi.CTORATstpSPReqUpdTradingAccountField_swigregister
CTORATstpSPReqUpdTradingAccountField_swigregister(CTORATstpSPReqUpdTradingAccountField)




#########################################请求删除TradingAccount############################################
class CTORATstpSPReqDelTradingAccountField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelTradingAccountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelTradingAccountField, name)
    __repr__ = _swig_repr

	# 经纪公司部门代码
    __swig_setmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPReqDelTradingAccountField_DepartmentID_set
    __swig_getmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPReqDelTradingAccountField_DepartmentID_get
    if _newclass:
        DepartmentID = _swig_property(_sptraderapi.CTORATstpSPReqDelTradingAccountField_DepartmentID_get, _sptraderapi.CTORATstpSPReqDelTradingAccountField_DepartmentID_set)

	# 资金账户
    __swig_setmethods__["AccountID"] = _sptraderapi.CTORATstpSPReqDelTradingAccountField_AccountID_set
    __swig_getmethods__["AccountID"] = _sptraderapi.CTORATstpSPReqDelTradingAccountField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_sptraderapi.CTORATstpSPReqDelTradingAccountField_AccountID_get, _sptraderapi.CTORATstpSPReqDelTradingAccountField_AccountID_set)

	# 币种
    __swig_setmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPReqDelTradingAccountField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _sptraderapi.CTORATstpSPReqDelTradingAccountField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_sptraderapi.CTORATstpSPReqDelTradingAccountField_CurrencyID_get, _sptraderapi.CTORATstpSPReqDelTradingAccountField_CurrencyID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelTradingAccountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelTradingAccountField
    __del__ = lambda self: None
CTORATstpSPReqDelTradingAccountField_swigregister = _sptraderapi.CTORATstpSPReqDelTradingAccountField_swigregister
CTORATstpSPReqDelTradingAccountField_swigregister(CTORATstpSPReqDelTradingAccountField)




#########################################请求插入User############################################
class CTORATstpSPReqInsUserField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsUserField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsUserField, name)
    __repr__ = _swig_repr

	# 用户代码
    __swig_setmethods__["UserID"] = _sptraderapi.CTORATstpSPReqInsUserField_UserID_set
    __swig_getmethods__["UserID"] = _sptraderapi.CTORATstpSPReqInsUserField_UserID_get
    if _newclass:
        UserID = _swig_property(_sptraderapi.CTORATstpSPReqInsUserField_UserID_get, _sptraderapi.CTORATstpSPReqInsUserField_UserID_set)

	# 用户名称
    __swig_setmethods__["UserName"] = _sptraderapi.CTORATstpSPReqInsUserField_UserName_set
    __swig_getmethods__["UserName"] = _sptraderapi.CTORATstpSPReqInsUserField_UserName_get
    if _newclass:
        UserName = _swig_property(_sptraderapi.CTORATstpSPReqInsUserField_UserName_get, _sptraderapi.CTORATstpSPReqInsUserField_UserName_set)

	# 用户类型
    __swig_setmethods__["UserType"] = _sptraderapi.CTORATstpSPReqInsUserField_UserType_set
    __swig_getmethods__["UserType"] = _sptraderapi.CTORATstpSPReqInsUserField_UserType_get
    if _newclass:
        UserType = _swig_property(_sptraderapi.CTORATstpSPReqInsUserField_UserType_get, _sptraderapi.CTORATstpSPReqInsUserField_UserType_set)

	# 经纪公司部门代码
    __swig_setmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPReqInsUserField_DepartmentID_set
    __swig_getmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPReqInsUserField_DepartmentID_get
    if _newclass:
        DepartmentID = _swig_property(_sptraderapi.CTORATstpSPReqInsUserField_DepartmentID_get, _sptraderapi.CTORATstpSPReqInsUserField_DepartmentID_set)

	# 密码
    __swig_setmethods__["UserPassword"] = _sptraderapi.CTORATstpSPReqInsUserField_UserPassword_set
    __swig_getmethods__["UserPassword"] = _sptraderapi.CTORATstpSPReqInsUserField_UserPassword_get
    if _newclass:
        UserPassword = _swig_property(_sptraderapi.CTORATstpSPReqInsUserField_UserPassword_get, _sptraderapi.CTORATstpSPReqInsUserField_UserPassword_set)

	# 限制用户同时可在几个会话中登录，投资者用户默认为1
    __swig_setmethods__["LoginLimit"] = _sptraderapi.CTORATstpSPReqInsUserField_LoginLimit_set
    __swig_getmethods__["LoginLimit"] = _sptraderapi.CTORATstpSPReqInsUserField_LoginLimit_get
    if _newclass:
        LoginLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsUserField_LoginLimit_get, _sptraderapi.CTORATstpSPReqInsUserField_LoginLimit_set)

	# 限制用户最多能输错几次密码, -1表示不限制
    __swig_setmethods__["PasswordFailLimit"] = _sptraderapi.CTORATstpSPReqInsUserField_PasswordFailLimit_set
    __swig_getmethods__["PasswordFailLimit"] = _sptraderapi.CTORATstpSPReqInsUserField_PasswordFailLimit_get
    if _newclass:
        PasswordFailLimit = _swig_property(_sptraderapi.CTORATstpSPReqInsUserField_PasswordFailLimit_get, _sptraderapi.CTORATstpSPReqInsUserField_PasswordFailLimit_set)

	# 初始、启用、禁用、激活等
    __swig_setmethods__["Status"] = _sptraderapi.CTORATstpSPReqInsUserField_Status_set
    __swig_getmethods__["Status"] = _sptraderapi.CTORATstpSPReqInsUserField_Status_get
    if _newclass:
        Status = _swig_property(_sptraderapi.CTORATstpSPReqInsUserField_Status_get, _sptraderapi.CTORATstpSPReqInsUserField_Status_set)

	# 联系人
    __swig_setmethods__["Contacter"] = _sptraderapi.CTORATstpSPReqInsUserField_Contacter_set
    __swig_getmethods__["Contacter"] = _sptraderapi.CTORATstpSPReqInsUserField_Contacter_get
    if _newclass:
        Contacter = _swig_property(_sptraderapi.CTORATstpSPReqInsUserField_Contacter_get, _sptraderapi.CTORATstpSPReqInsUserField_Contacter_set)

	# 传真
    __swig_setmethods__["Fax"] = _sptraderapi.CTORATstpSPReqInsUserField_Fax_set
    __swig_getmethods__["Fax"] = _sptraderapi.CTORATstpSPReqInsUserField_Fax_get
    if _newclass:
        Fax = _swig_property(_sptraderapi.CTORATstpSPReqInsUserField_Fax_get, _sptraderapi.CTORATstpSPReqInsUserField_Fax_set)

	# 联系电话
    __swig_setmethods__["Telephone"] = _sptraderapi.CTORATstpSPReqInsUserField_Telephone_set
    __swig_getmethods__["Telephone"] = _sptraderapi.CTORATstpSPReqInsUserField_Telephone_get
    if _newclass:
        Telephone = _swig_property(_sptraderapi.CTORATstpSPReqInsUserField_Telephone_get, _sptraderapi.CTORATstpSPReqInsUserField_Telephone_set)

	# 电子邮件
    __swig_setmethods__["Email"] = _sptraderapi.CTORATstpSPReqInsUserField_Email_set
    __swig_getmethods__["Email"] = _sptraderapi.CTORATstpSPReqInsUserField_Email_get
    if _newclass:
        Email = _swig_property(_sptraderapi.CTORATstpSPReqInsUserField_Email_get, _sptraderapi.CTORATstpSPReqInsUserField_Email_set)

	# 通讯地址
    __swig_setmethods__["Address"] = _sptraderapi.CTORATstpSPReqInsUserField_Address_set
    __swig_getmethods__["Address"] = _sptraderapi.CTORATstpSPReqInsUserField_Address_get
    if _newclass:
        Address = _swig_property(_sptraderapi.CTORATstpSPReqInsUserField_Address_get, _sptraderapi.CTORATstpSPReqInsUserField_Address_set)

	# 邮政编码
    __swig_setmethods__["ZipCode"] = _sptraderapi.CTORATstpSPReqInsUserField_ZipCode_set
    __swig_getmethods__["ZipCode"] = _sptraderapi.CTORATstpSPReqInsUserField_ZipCode_get
    if _newclass:
        ZipCode = _swig_property(_sptraderapi.CTORATstpSPReqInsUserField_ZipCode_get, _sptraderapi.CTORATstpSPReqInsUserField_ZipCode_set)

	# 开户日期
    __swig_setmethods__["OpenDate"] = _sptraderapi.CTORATstpSPReqInsUserField_OpenDate_set
    __swig_getmethods__["OpenDate"] = _sptraderapi.CTORATstpSPReqInsUserField_OpenDate_get
    if _newclass:
        OpenDate = _swig_property(_sptraderapi.CTORATstpSPReqInsUserField_OpenDate_get, _sptraderapi.CTORATstpSPReqInsUserField_OpenDate_set)

	# 销户日期
    __swig_setmethods__["CloseDate"] = _sptraderapi.CTORATstpSPReqInsUserField_CloseDate_set
    __swig_getmethods__["CloseDate"] = _sptraderapi.CTORATstpSPReqInsUserField_CloseDate_get
    if _newclass:
        CloseDate = _swig_property(_sptraderapi.CTORATstpSPReqInsUserField_CloseDate_get, _sptraderapi.CTORATstpSPReqInsUserField_CloseDate_set)

	# 通讯流量
    __swig_setmethods__["OrderInsertCommFlux"] = _sptraderapi.CTORATstpSPReqInsUserField_OrderInsertCommFlux_set
    __swig_getmethods__["OrderInsertCommFlux"] = _sptraderapi.CTORATstpSPReqInsUserField_OrderInsertCommFlux_get
    if _newclass:
        OrderInsertCommFlux = _swig_property(_sptraderapi.CTORATstpSPReqInsUserField_OrderInsertCommFlux_get, _sptraderapi.CTORATstpSPReqInsUserField_OrderInsertCommFlux_set)

	# 撤单流控
    __swig_setmethods__["OrderActionCommFlux"] = _sptraderapi.CTORATstpSPReqInsUserField_OrderActionCommFlux_set
    __swig_getmethods__["OrderActionCommFlux"] = _sptraderapi.CTORATstpSPReqInsUserField_OrderActionCommFlux_get
    if _newclass:
        OrderActionCommFlux = _swig_property(_sptraderapi.CTORATstpSPReqInsUserField_OrderActionCommFlux_get, _sptraderapi.CTORATstpSPReqInsUserField_OrderActionCommFlux_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsUserField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsUserField
    __del__ = lambda self: None
CTORATstpSPReqInsUserField_swigregister = _sptraderapi.CTORATstpSPReqInsUserField_swigregister
CTORATstpSPReqInsUserField_swigregister(CTORATstpSPReqInsUserField)




#########################################请求更新User############################################
class CTORATstpSPReqUpdUserField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdUserField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdUserField, name)
    __repr__ = _swig_repr

	# 用户代码
    __swig_setmethods__["UserID"] = _sptraderapi.CTORATstpSPReqUpdUserField_UserID_set
    __swig_getmethods__["UserID"] = _sptraderapi.CTORATstpSPReqUpdUserField_UserID_get
    if _newclass:
        UserID = _swig_property(_sptraderapi.CTORATstpSPReqUpdUserField_UserID_get, _sptraderapi.CTORATstpSPReqUpdUserField_UserID_set)

	# 用户名称
    __swig_setmethods__["UserName"] = _sptraderapi.CTORATstpSPReqUpdUserField_UserName_set
    __swig_getmethods__["UserName"] = _sptraderapi.CTORATstpSPReqUpdUserField_UserName_get
    if _newclass:
        UserName = _swig_property(_sptraderapi.CTORATstpSPReqUpdUserField_UserName_get, _sptraderapi.CTORATstpSPReqUpdUserField_UserName_set)

	# 用户类型
    __swig_setmethods__["UserType"] = _sptraderapi.CTORATstpSPReqUpdUserField_UserType_set
    __swig_getmethods__["UserType"] = _sptraderapi.CTORATstpSPReqUpdUserField_UserType_get
    if _newclass:
        UserType = _swig_property(_sptraderapi.CTORATstpSPReqUpdUserField_UserType_get, _sptraderapi.CTORATstpSPReqUpdUserField_UserType_set)

	# 经纪公司部门代码
    __swig_setmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPReqUpdUserField_DepartmentID_set
    __swig_getmethods__["DepartmentID"] = _sptraderapi.CTORATstpSPReqUpdUserField_DepartmentID_get
    if _newclass:
        DepartmentID = _swig_property(_sptraderapi.CTORATstpSPReqUpdUserField_DepartmentID_get, _sptraderapi.CTORATstpSPReqUpdUserField_DepartmentID_set)

	# 密码
    __swig_setmethods__["UserPassword"] = _sptraderapi.CTORATstpSPReqUpdUserField_UserPassword_set
    __swig_getmethods__["UserPassword"] = _sptraderapi.CTORATstpSPReqUpdUserField_UserPassword_get
    if _newclass:
        UserPassword = _swig_property(_sptraderapi.CTORATstpSPReqUpdUserField_UserPassword_get, _sptraderapi.CTORATstpSPReqUpdUserField_UserPassword_set)

	# 限制用户同时可在几个会话中登录，投资者用户默认为1
    __swig_setmethods__["LoginLimit"] = _sptraderapi.CTORATstpSPReqUpdUserField_LoginLimit_set
    __swig_getmethods__["LoginLimit"] = _sptraderapi.CTORATstpSPReqUpdUserField_LoginLimit_get
    if _newclass:
        LoginLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdUserField_LoginLimit_get, _sptraderapi.CTORATstpSPReqUpdUserField_LoginLimit_set)

	# 限制用户最多能输错几次密码, -1表示不限制
    __swig_setmethods__["PasswordFailLimit"] = _sptraderapi.CTORATstpSPReqUpdUserField_PasswordFailLimit_set
    __swig_getmethods__["PasswordFailLimit"] = _sptraderapi.CTORATstpSPReqUpdUserField_PasswordFailLimit_get
    if _newclass:
        PasswordFailLimit = _swig_property(_sptraderapi.CTORATstpSPReqUpdUserField_PasswordFailLimit_get, _sptraderapi.CTORATstpSPReqUpdUserField_PasswordFailLimit_set)

	# 初始、启用、禁用、激活等
    __swig_setmethods__["Status"] = _sptraderapi.CTORATstpSPReqUpdUserField_Status_set
    __swig_getmethods__["Status"] = _sptraderapi.CTORATstpSPReqUpdUserField_Status_get
    if _newclass:
        Status = _swig_property(_sptraderapi.CTORATstpSPReqUpdUserField_Status_get, _sptraderapi.CTORATstpSPReqUpdUserField_Status_set)

	# 联系人
    __swig_setmethods__["Contacter"] = _sptraderapi.CTORATstpSPReqUpdUserField_Contacter_set
    __swig_getmethods__["Contacter"] = _sptraderapi.CTORATstpSPReqUpdUserField_Contacter_get
    if _newclass:
        Contacter = _swig_property(_sptraderapi.CTORATstpSPReqUpdUserField_Contacter_get, _sptraderapi.CTORATstpSPReqUpdUserField_Contacter_set)

	# 传真
    __swig_setmethods__["Fax"] = _sptraderapi.CTORATstpSPReqUpdUserField_Fax_set
    __swig_getmethods__["Fax"] = _sptraderapi.CTORATstpSPReqUpdUserField_Fax_get
    if _newclass:
        Fax = _swig_property(_sptraderapi.CTORATstpSPReqUpdUserField_Fax_get, _sptraderapi.CTORATstpSPReqUpdUserField_Fax_set)

	# 联系电话
    __swig_setmethods__["Telephone"] = _sptraderapi.CTORATstpSPReqUpdUserField_Telephone_set
    __swig_getmethods__["Telephone"] = _sptraderapi.CTORATstpSPReqUpdUserField_Telephone_get
    if _newclass:
        Telephone = _swig_property(_sptraderapi.CTORATstpSPReqUpdUserField_Telephone_get, _sptraderapi.CTORATstpSPReqUpdUserField_Telephone_set)

	# 电子邮件
    __swig_setmethods__["Email"] = _sptraderapi.CTORATstpSPReqUpdUserField_Email_set
    __swig_getmethods__["Email"] = _sptraderapi.CTORATstpSPReqUpdUserField_Email_get
    if _newclass:
        Email = _swig_property(_sptraderapi.CTORATstpSPReqUpdUserField_Email_get, _sptraderapi.CTORATstpSPReqUpdUserField_Email_set)

	# 通讯地址
    __swig_setmethods__["Address"] = _sptraderapi.CTORATstpSPReqUpdUserField_Address_set
    __swig_getmethods__["Address"] = _sptraderapi.CTORATstpSPReqUpdUserField_Address_get
    if _newclass:
        Address = _swig_property(_sptraderapi.CTORATstpSPReqUpdUserField_Address_get, _sptraderapi.CTORATstpSPReqUpdUserField_Address_set)

	# 邮政编码
    __swig_setmethods__["ZipCode"] = _sptraderapi.CTORATstpSPReqUpdUserField_ZipCode_set
    __swig_getmethods__["ZipCode"] = _sptraderapi.CTORATstpSPReqUpdUserField_ZipCode_get
    if _newclass:
        ZipCode = _swig_property(_sptraderapi.CTORATstpSPReqUpdUserField_ZipCode_get, _sptraderapi.CTORATstpSPReqUpdUserField_ZipCode_set)

	# 开户日期
    __swig_setmethods__["OpenDate"] = _sptraderapi.CTORATstpSPReqUpdUserField_OpenDate_set
    __swig_getmethods__["OpenDate"] = _sptraderapi.CTORATstpSPReqUpdUserField_OpenDate_get
    if _newclass:
        OpenDate = _swig_property(_sptraderapi.CTORATstpSPReqUpdUserField_OpenDate_get, _sptraderapi.CTORATstpSPReqUpdUserField_OpenDate_set)

	# 销户日期
    __swig_setmethods__["CloseDate"] = _sptraderapi.CTORATstpSPReqUpdUserField_CloseDate_set
    __swig_getmethods__["CloseDate"] = _sptraderapi.CTORATstpSPReqUpdUserField_CloseDate_get
    if _newclass:
        CloseDate = _swig_property(_sptraderapi.CTORATstpSPReqUpdUserField_CloseDate_get, _sptraderapi.CTORATstpSPReqUpdUserField_CloseDate_set)

	# 通讯流量
    __swig_setmethods__["OrderInsertCommFlux"] = _sptraderapi.CTORATstpSPReqUpdUserField_OrderInsertCommFlux_set
    __swig_getmethods__["OrderInsertCommFlux"] = _sptraderapi.CTORATstpSPReqUpdUserField_OrderInsertCommFlux_get
    if _newclass:
        OrderInsertCommFlux = _swig_property(_sptraderapi.CTORATstpSPReqUpdUserField_OrderInsertCommFlux_get, _sptraderapi.CTORATstpSPReqUpdUserField_OrderInsertCommFlux_set)

	# 撤单流控
    __swig_setmethods__["OrderActionCommFlux"] = _sptraderapi.CTORATstpSPReqUpdUserField_OrderActionCommFlux_set
    __swig_getmethods__["OrderActionCommFlux"] = _sptraderapi.CTORATstpSPReqUpdUserField_OrderActionCommFlux_get
    if _newclass:
        OrderActionCommFlux = _swig_property(_sptraderapi.CTORATstpSPReqUpdUserField_OrderActionCommFlux_get, _sptraderapi.CTORATstpSPReqUpdUserField_OrderActionCommFlux_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdUserField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdUserField
    __del__ = lambda self: None
CTORATstpSPReqUpdUserField_swigregister = _sptraderapi.CTORATstpSPReqUpdUserField_swigregister
CTORATstpSPReqUpdUserField_swigregister(CTORATstpSPReqUpdUserField)




#########################################请求删除User############################################
class CTORATstpSPReqDelUserField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelUserField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelUserField, name)
    __repr__ = _swig_repr

	# 用户代码
    __swig_setmethods__["UserID"] = _sptraderapi.CTORATstpSPReqDelUserField_UserID_set
    __swig_getmethods__["UserID"] = _sptraderapi.CTORATstpSPReqDelUserField_UserID_get
    if _newclass:
        UserID = _swig_property(_sptraderapi.CTORATstpSPReqDelUserField_UserID_get, _sptraderapi.CTORATstpSPReqDelUserField_UserID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelUserField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelUserField
    __del__ = lambda self: None
CTORATstpSPReqDelUserField_swigregister = _sptraderapi.CTORATstpSPReqDelUserField_swigregister
CTORATstpSPReqDelUserField_swigregister(CTORATstpSPReqDelUserField)




#########################################请求插入UserIPLimit############################################
class CTORATstpSPReqInsUserIPLimitField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsUserIPLimitField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsUserIPLimitField, name)
    __repr__ = _swig_repr

	# 交易用户代码
    __swig_setmethods__["UserID"] = _sptraderapi.CTORATstpSPReqInsUserIPLimitField_UserID_set
    __swig_getmethods__["UserID"] = _sptraderapi.CTORATstpSPReqInsUserIPLimitField_UserID_get
    if _newclass:
        UserID = _swig_property(_sptraderapi.CTORATstpSPReqInsUserIPLimitField_UserID_get, _sptraderapi.CTORATstpSPReqInsUserIPLimitField_UserID_set)

	# IP地址
    __swig_setmethods__["IPAddress"] = _sptraderapi.CTORATstpSPReqInsUserIPLimitField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _sptraderapi.CTORATstpSPReqInsUserIPLimitField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_sptraderapi.CTORATstpSPReqInsUserIPLimitField_IPAddress_get, _sptraderapi.CTORATstpSPReqInsUserIPLimitField_IPAddress_set)

	# IP地址掩码
    __swig_setmethods__["IPMask"] = _sptraderapi.CTORATstpSPReqInsUserIPLimitField_IPMask_set
    __swig_getmethods__["IPMask"] = _sptraderapi.CTORATstpSPReqInsUserIPLimitField_IPMask_get
    if _newclass:
        IPMask = _swig_property(_sptraderapi.CTORATstpSPReqInsUserIPLimitField_IPMask_get, _sptraderapi.CTORATstpSPReqInsUserIPLimitField_IPMask_set)

	# Mac地址
    __swig_setmethods__["MacAddress"] = _sptraderapi.CTORATstpSPReqInsUserIPLimitField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _sptraderapi.CTORATstpSPReqInsUserIPLimitField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_sptraderapi.CTORATstpSPReqInsUserIPLimitField_MacAddress_get, _sptraderapi.CTORATstpSPReqInsUserIPLimitField_MacAddress_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsUserIPLimitField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsUserIPLimitField
    __del__ = lambda self: None
CTORATstpSPReqInsUserIPLimitField_swigregister = _sptraderapi.CTORATstpSPReqInsUserIPLimitField_swigregister
CTORATstpSPReqInsUserIPLimitField_swigregister(CTORATstpSPReqInsUserIPLimitField)




#########################################请求更新UserIPLimit############################################
class CTORATstpSPReqUpdUserIPLimitField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdUserIPLimitField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdUserIPLimitField, name)
    __repr__ = _swig_repr

	# 交易用户代码
    __swig_setmethods__["UserID"] = _sptraderapi.CTORATstpSPReqUpdUserIPLimitField_UserID_set
    __swig_getmethods__["UserID"] = _sptraderapi.CTORATstpSPReqUpdUserIPLimitField_UserID_get
    if _newclass:
        UserID = _swig_property(_sptraderapi.CTORATstpSPReqUpdUserIPLimitField_UserID_get, _sptraderapi.CTORATstpSPReqUpdUserIPLimitField_UserID_set)

	# IP地址
    __swig_setmethods__["IPAddress"] = _sptraderapi.CTORATstpSPReqUpdUserIPLimitField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _sptraderapi.CTORATstpSPReqUpdUserIPLimitField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_sptraderapi.CTORATstpSPReqUpdUserIPLimitField_IPAddress_get, _sptraderapi.CTORATstpSPReqUpdUserIPLimitField_IPAddress_set)

	# IP地址掩码
    __swig_setmethods__["IPMask"] = _sptraderapi.CTORATstpSPReqUpdUserIPLimitField_IPMask_set
    __swig_getmethods__["IPMask"] = _sptraderapi.CTORATstpSPReqUpdUserIPLimitField_IPMask_get
    if _newclass:
        IPMask = _swig_property(_sptraderapi.CTORATstpSPReqUpdUserIPLimitField_IPMask_get, _sptraderapi.CTORATstpSPReqUpdUserIPLimitField_IPMask_set)

	# Mac地址
    __swig_setmethods__["MacAddress"] = _sptraderapi.CTORATstpSPReqUpdUserIPLimitField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _sptraderapi.CTORATstpSPReqUpdUserIPLimitField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_sptraderapi.CTORATstpSPReqUpdUserIPLimitField_MacAddress_get, _sptraderapi.CTORATstpSPReqUpdUserIPLimitField_MacAddress_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdUserIPLimitField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdUserIPLimitField
    __del__ = lambda self: None
CTORATstpSPReqUpdUserIPLimitField_swigregister = _sptraderapi.CTORATstpSPReqUpdUserIPLimitField_swigregister
CTORATstpSPReqUpdUserIPLimitField_swigregister(CTORATstpSPReqUpdUserIPLimitField)




#########################################请求删除UserIPLimit############################################
class CTORATstpSPReqDelUserIPLimitField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelUserIPLimitField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelUserIPLimitField, name)
    __repr__ = _swig_repr

	# 交易用户代码
    __swig_setmethods__["UserID"] = _sptraderapi.CTORATstpSPReqDelUserIPLimitField_UserID_set
    __swig_getmethods__["UserID"] = _sptraderapi.CTORATstpSPReqDelUserIPLimitField_UserID_get
    if _newclass:
        UserID = _swig_property(_sptraderapi.CTORATstpSPReqDelUserIPLimitField_UserID_get, _sptraderapi.CTORATstpSPReqDelUserIPLimitField_UserID_set)

	# IP地址
    __swig_setmethods__["IPAddress"] = _sptraderapi.CTORATstpSPReqDelUserIPLimitField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _sptraderapi.CTORATstpSPReqDelUserIPLimitField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_sptraderapi.CTORATstpSPReqDelUserIPLimitField_IPAddress_get, _sptraderapi.CTORATstpSPReqDelUserIPLimitField_IPAddress_set)

	# IP地址掩码
    __swig_setmethods__["IPMask"] = _sptraderapi.CTORATstpSPReqDelUserIPLimitField_IPMask_set
    __swig_getmethods__["IPMask"] = _sptraderapi.CTORATstpSPReqDelUserIPLimitField_IPMask_get
    if _newclass:
        IPMask = _swig_property(_sptraderapi.CTORATstpSPReqDelUserIPLimitField_IPMask_get, _sptraderapi.CTORATstpSPReqDelUserIPLimitField_IPMask_set)

	# Mac地址
    __swig_setmethods__["MacAddress"] = _sptraderapi.CTORATstpSPReqDelUserIPLimitField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _sptraderapi.CTORATstpSPReqDelUserIPLimitField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_sptraderapi.CTORATstpSPReqDelUserIPLimitField_MacAddress_get, _sptraderapi.CTORATstpSPReqDelUserIPLimitField_MacAddress_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelUserIPLimitField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelUserIPLimitField
    __del__ = lambda self: None
CTORATstpSPReqDelUserIPLimitField_swigregister = _sptraderapi.CTORATstpSPReqDelUserIPLimitField_swigregister
CTORATstpSPReqDelUserIPLimitField_swigregister(CTORATstpSPReqDelUserIPLimitField)




#########################################请求插入SystemParam############################################
class CTORATstpSPReqInsSystemParamField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsSystemParamField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsSystemParamField, name)
    __repr__ = _swig_repr

	# 参数类别
    __swig_setmethods__["PrmType"] = _sptraderapi.CTORATstpSPReqInsSystemParamField_PrmType_set
    __swig_getmethods__["PrmType"] = _sptraderapi.CTORATstpSPReqInsSystemParamField_PrmType_get
    if _newclass:
        PrmType = _swig_property(_sptraderapi.CTORATstpSPReqInsSystemParamField_PrmType_get, _sptraderapi.CTORATstpSPReqInsSystemParamField_PrmType_set)

	# 参数值
    __swig_setmethods__["PrmCharVal"] = _sptraderapi.CTORATstpSPReqInsSystemParamField_PrmCharVal_set
    __swig_getmethods__["PrmCharVal"] = _sptraderapi.CTORATstpSPReqInsSystemParamField_PrmCharVal_get
    if _newclass:
        PrmCharVal = _swig_property(_sptraderapi.CTORATstpSPReqInsSystemParamField_PrmCharVal_get, _sptraderapi.CTORATstpSPReqInsSystemParamField_PrmCharVal_set)

	# 参数说明
    __swig_setmethods__["PrmRmk"] = _sptraderapi.CTORATstpSPReqInsSystemParamField_PrmRmk_set
    __swig_getmethods__["PrmRmk"] = _sptraderapi.CTORATstpSPReqInsSystemParamField_PrmRmk_get
    if _newclass:
        PrmRmk = _swig_property(_sptraderapi.CTORATstpSPReqInsSystemParamField_PrmRmk_get, _sptraderapi.CTORATstpSPReqInsSystemParamField_PrmRmk_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsSystemParamField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsSystemParamField
    __del__ = lambda self: None
CTORATstpSPReqInsSystemParamField_swigregister = _sptraderapi.CTORATstpSPReqInsSystemParamField_swigregister
CTORATstpSPReqInsSystemParamField_swigregister(CTORATstpSPReqInsSystemParamField)




#########################################请求更新SystemParam############################################
class CTORATstpSPReqUpdSystemParamField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdSystemParamField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdSystemParamField, name)
    __repr__ = _swig_repr

	# 参数类别
    __swig_setmethods__["PrmType"] = _sptraderapi.CTORATstpSPReqUpdSystemParamField_PrmType_set
    __swig_getmethods__["PrmType"] = _sptraderapi.CTORATstpSPReqUpdSystemParamField_PrmType_get
    if _newclass:
        PrmType = _swig_property(_sptraderapi.CTORATstpSPReqUpdSystemParamField_PrmType_get, _sptraderapi.CTORATstpSPReqUpdSystemParamField_PrmType_set)

	# 参数值
    __swig_setmethods__["PrmCharVal"] = _sptraderapi.CTORATstpSPReqUpdSystemParamField_PrmCharVal_set
    __swig_getmethods__["PrmCharVal"] = _sptraderapi.CTORATstpSPReqUpdSystemParamField_PrmCharVal_get
    if _newclass:
        PrmCharVal = _swig_property(_sptraderapi.CTORATstpSPReqUpdSystemParamField_PrmCharVal_get, _sptraderapi.CTORATstpSPReqUpdSystemParamField_PrmCharVal_set)

	# 参数说明
    __swig_setmethods__["PrmRmk"] = _sptraderapi.CTORATstpSPReqUpdSystemParamField_PrmRmk_set
    __swig_getmethods__["PrmRmk"] = _sptraderapi.CTORATstpSPReqUpdSystemParamField_PrmRmk_get
    if _newclass:
        PrmRmk = _swig_property(_sptraderapi.CTORATstpSPReqUpdSystemParamField_PrmRmk_get, _sptraderapi.CTORATstpSPReqUpdSystemParamField_PrmRmk_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdSystemParamField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdSystemParamField
    __del__ = lambda self: None
CTORATstpSPReqUpdSystemParamField_swigregister = _sptraderapi.CTORATstpSPReqUpdSystemParamField_swigregister
CTORATstpSPReqUpdSystemParamField_swigregister(CTORATstpSPReqUpdSystemParamField)




#########################################请求删除SystemParam############################################
class CTORATstpSPReqDelSystemParamField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelSystemParamField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelSystemParamField, name)
    __repr__ = _swig_repr

	# 参数类别
    __swig_setmethods__["PrmType"] = _sptraderapi.CTORATstpSPReqDelSystemParamField_PrmType_set
    __swig_getmethods__["PrmType"] = _sptraderapi.CTORATstpSPReqDelSystemParamField_PrmType_get
    if _newclass:
        PrmType = _swig_property(_sptraderapi.CTORATstpSPReqDelSystemParamField_PrmType_get, _sptraderapi.CTORATstpSPReqDelSystemParamField_PrmType_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelSystemParamField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelSystemParamField
    __del__ = lambda self: None
CTORATstpSPReqDelSystemParamField_swigregister = _sptraderapi.CTORATstpSPReqDelSystemParamField_swigregister
CTORATstpSPReqDelSystemParamField_swigregister(CTORATstpSPReqDelSystemParamField)




#########################################请求插入UserLoginFailNum############################################
class CTORATstpSPReqInsUserLoginFailNumField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqInsUserLoginFailNumField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqInsUserLoginFailNumField, name)
    __repr__ = _swig_repr

	# 用户代码
    __swig_setmethods__["UserID"] = _sptraderapi.CTORATstpSPReqInsUserLoginFailNumField_UserID_set
    __swig_getmethods__["UserID"] = _sptraderapi.CTORATstpSPReqInsUserLoginFailNumField_UserID_get
    if _newclass:
        UserID = _swig_property(_sptraderapi.CTORATstpSPReqInsUserLoginFailNumField_UserID_get, _sptraderapi.CTORATstpSPReqInsUserLoginFailNumField_UserID_set)

	# 密码连续输入错误次数
    __swig_setmethods__["FailNum"] = _sptraderapi.CTORATstpSPReqInsUserLoginFailNumField_FailNum_set
    __swig_getmethods__["FailNum"] = _sptraderapi.CTORATstpSPReqInsUserLoginFailNumField_FailNum_get
    if _newclass:
        FailNum = _swig_property(_sptraderapi.CTORATstpSPReqInsUserLoginFailNumField_FailNum_get, _sptraderapi.CTORATstpSPReqInsUserLoginFailNumField_FailNum_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqInsUserLoginFailNumField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqInsUserLoginFailNumField
    __del__ = lambda self: None
CTORATstpSPReqInsUserLoginFailNumField_swigregister = _sptraderapi.CTORATstpSPReqInsUserLoginFailNumField_swigregister
CTORATstpSPReqInsUserLoginFailNumField_swigregister(CTORATstpSPReqInsUserLoginFailNumField)




#########################################请求更新UserLoginFailNum############################################
class CTORATstpSPReqUpdUserLoginFailNumField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqUpdUserLoginFailNumField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqUpdUserLoginFailNumField, name)
    __repr__ = _swig_repr

	# 用户代码
    __swig_setmethods__["UserID"] = _sptraderapi.CTORATstpSPReqUpdUserLoginFailNumField_UserID_set
    __swig_getmethods__["UserID"] = _sptraderapi.CTORATstpSPReqUpdUserLoginFailNumField_UserID_get
    if _newclass:
        UserID = _swig_property(_sptraderapi.CTORATstpSPReqUpdUserLoginFailNumField_UserID_get, _sptraderapi.CTORATstpSPReqUpdUserLoginFailNumField_UserID_set)

	# 密码连续输入错误次数
    __swig_setmethods__["FailNum"] = _sptraderapi.CTORATstpSPReqUpdUserLoginFailNumField_FailNum_set
    __swig_getmethods__["FailNum"] = _sptraderapi.CTORATstpSPReqUpdUserLoginFailNumField_FailNum_get
    if _newclass:
        FailNum = _swig_property(_sptraderapi.CTORATstpSPReqUpdUserLoginFailNumField_FailNum_get, _sptraderapi.CTORATstpSPReqUpdUserLoginFailNumField_FailNum_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqUpdUserLoginFailNumField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqUpdUserLoginFailNumField
    __del__ = lambda self: None
CTORATstpSPReqUpdUserLoginFailNumField_swigregister = _sptraderapi.CTORATstpSPReqUpdUserLoginFailNumField_swigregister
CTORATstpSPReqUpdUserLoginFailNumField_swigregister(CTORATstpSPReqUpdUserLoginFailNumField)




#########################################请求删除UserLoginFailNum############################################
class CTORATstpSPReqDelUserLoginFailNumField(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPReqDelUserLoginFailNumField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPReqDelUserLoginFailNumField, name)
    __repr__ = _swig_repr

	# 用户代码
    __swig_setmethods__["UserID"] = _sptraderapi.CTORATstpSPReqDelUserLoginFailNumField_UserID_set
    __swig_getmethods__["UserID"] = _sptraderapi.CTORATstpSPReqDelUserLoginFailNumField_UserID_get
    if _newclass:
        UserID = _swig_property(_sptraderapi.CTORATstpSPReqDelUserLoginFailNumField_UserID_get, _sptraderapi.CTORATstpSPReqDelUserLoginFailNumField_UserID_set)

    def __init__(self):
        this = _sptraderapi.new_CTORATstpSPReqDelUserLoginFailNumField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPReqDelUserLoginFailNumField
    __del__ = lambda self: None
CTORATstpSPReqDelUserLoginFailNumField_swigregister = _sptraderapi.CTORATstpSPReqDelUserLoginFailNumField_swigregister
CTORATstpSPReqDelUserLoginFailNumField_swigregister(CTORATstpSPReqDelUserLoginFailNumField)

class CTORATstpSPTraderSpi(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPTraderSpi, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPTraderSpi, name)
    __repr__ = _swig_repr

	#当客户端与交易后台建立起通信连接时(还未登录前),该方法被调用
    def OnFrontConnected(self):
        return _sptraderapi.CTORATstpSPTraderSpi_OnFrontConnected(self)

	#当客户端与交易后台通信连接断开时,该方法被调用,当发生这个情况后,API会自动重新连接,客户端可不做处理。nReason为断开原因,-3 连接已断开,-4 网络读失败,-5 网络写失败,-6 订阅流错误,-7 流序号错误,-8 错误的心跳报文,-9 错误的报文
    def OnFrontDisconnected(self, nReason):
        return _sptraderapi.CTORATstpSPTraderSpi_OnFrontDisconnected(self, nReason)

	#错误应答
    def OnRspError(self, pRspInfo, nRequestID, bIsLast):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspError(self, pRspInfo, nRequestID, bIsLast)

	#登录应答,参数pRspUserLoginField是一个字典,可访问的键值参考CTORATstpSPRspUserLoginField域成员
    def OnRspUserLogin(self, pRspUserLoginField, pRspInfo, nRequestID):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspUserLogin(self, pRspUserLoginField, pRspInfo, nRequestID)

	#登出应答,参数pUserLogoutField是一个字典,可访问的键值参考CTORATstpSPUserLogoutField域成员
    def OnRspUserLogout(self, pUserLogoutField, pRspInfo, nRequestID):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspUserLogout(self, pUserLogoutField, pRspInfo, nRequestID)

	#修改密码应答,参数pUserPasswordUpdateField是一个字典,可访问的键值参考CTORATstpSPUserPasswordUpdateField域成员
    def OnRspUserPasswordUpdate(self, pUserPasswordUpdateField, pRspInfo, nRequestID):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspUserPasswordUpdate(self, pUserPasswordUpdateField, pRspInfo, nRequestID)

	#请求录入设备序列应答,参数pRspInputDeviceSerialField是一个字典,可访问的键值参考CTORATstpSPRspInputDeviceSerialField域成员
    def OnRspInputDeviceSerial(self, pRspInputDeviceSerialField, pRspInfo, nRequestID):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspInputDeviceSerial(self, pRspInputDeviceSerialField, pRspInfo, nRequestID)

	#报单录入应答,参数pInputOrderField是一个字典,可访问的键值参考CTORATstpSPInputOrderField域成员
    def OnRspOrderInsert(self, pInputOrderField, pRspInfo, nRequestID):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspOrderInsert(self, pInputOrderField, pRspInfo, nRequestID)

	#报单回报,参数pOrder是一个字典,可访问的键值参考CTORATstpSPOrder域成员
    def OnRtnOrder(self, pOrder):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRtnOrder(self, pOrder)

	#报单错误回报,参数pInputOrder是一个字典,可访问的键值参考CTORATstpSPInputOrder域成员
    def OnErrRtnOrderInsert(self, pInputOrder, pRspInfo, nRequestID):
        return _sptraderapi.CTORATstpSPTraderSpi_OnErrRtnOrderInsert(self, pInputOrder, pRspInfo, nRequestID)

	#撤单应答,参数pInputOrderActionField是一个字典,可访问的键值参考CTORATstpSPInputOrderActionField域成员
    def OnRspOrderAction(self, pInputOrderActionField, pRspInfo, nRequestID):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspOrderAction(self, pInputOrderActionField, pRspInfo, nRequestID)

	#撤单错误回报,参数pInputOrderAction是一个字典,可访问的键值参考CTORATstpSPInputOrderAction域成员
    def OnErrRtnOrderAction(self, pInputOrderAction, pRspInfo, nRequestID):
        return _sptraderapi.CTORATstpSPTraderSpi_OnErrRtnOrderAction(self, pInputOrderAction, pRspInfo, nRequestID)

	#成交回报,参数pTrade是一个字典,可访问的键值参考CTORATstpSPTrade域成员
    def OnRtnTrade(self, pTrade):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRtnTrade(self, pTrade)

	#行权请求响应,参数pInputExerciseField是一个字典,可访问的键值参考CTORATstpSPInputExerciseField域成员
    def OnRspExerciseInsert(self, pInputExerciseField, pRspInfo, nRequestID):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspExerciseInsert(self, pInputExerciseField, pRspInfo, nRequestID)

	#行权回报,参数pExercise是一个字典,可访问的键值参考CTORATstpSPExercise域成员
    def OnRtnExercise(self, pExercise):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRtnExercise(self, pExercise)

	#行权请求错误回报,参数pInputExercise是一个字典,可访问的键值参考CTORATstpSPInputExercise域成员
    def OnErrRtnExerciseInsert(self, pInputExercise, pRspInfo, nRequestID):
        return _sptraderapi.CTORATstpSPTraderSpi_OnErrRtnExerciseInsert(self, pInputExercise, pRspInfo, nRequestID)

	#行权操作响应,参数pInputExerciseActionField是一个字典,可访问的键值参考CTORATstpSPInputExerciseActionField域成员
    def OnRspExerciseAction(self, pInputExerciseActionField, pRspInfo, nRequestID):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspExerciseAction(self, pInputExerciseActionField, pRspInfo, nRequestID)

	#行权操作错误回报,参数pInputExerciseAction是一个字典,可访问的键值参考CTORATstpSPInputExerciseAction域成员
    def OnErrRtnExerciseAction(self, pInputExerciseAction, pRspInfo, nRequestID):
        return _sptraderapi.CTORATstpSPTraderSpi_OnErrRtnExerciseAction(self, pInputExerciseAction, pRspInfo, nRequestID)

	#锁定录入请求响应,参数pInputLockField是一个字典,可访问的键值参考CTORATstpSPInputLockField域成员
    def OnRspLockInsert(self, pInputLockField, pRspInfo, nRequestID):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspLockInsert(self, pInputLockField, pRspInfo, nRequestID)

	#锁定通知,参数pLock是一个字典,可访问的键值参考CTORATstpSPLock域成员
    def OnRtnLock(self, pLock):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRtnLock(self, pLock)

	#锁定录入错误回报,参数pInputLock是一个字典,可访问的键值参考CTORATstpSPInputLock域成员
    def OnErrRtnLockInsert(self, pInputLock, pRspInfo, nRequestID):
        return _sptraderapi.CTORATstpSPTraderSpi_OnErrRtnLockInsert(self, pInputLock, pRspInfo, nRequestID)

	#锁定操作响应,参数pInputLockActionField是一个字典,可访问的键值参考CTORATstpSPInputLockActionField域成员
    def OnRspLockAction(self, pInputLockActionField, pRspInfo, nRequestID):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspLockAction(self, pInputLockActionField, pRspInfo, nRequestID)

	#锁定操作错误回报,参数pInputLockAction是一个字典,可访问的键值参考CTORATstpSPInputLockAction域成员
    def OnErrRtnLockAction(self, pInputLockAction, pRspInfo, nRequestID):
        return _sptraderapi.CTORATstpSPTraderSpi_OnErrRtnLockAction(self, pInputLockAction, pRspInfo, nRequestID)

	#证券处置回报,参数pStockDisposal是一个字典,可访问的键值参考CTORATstpSPStockDisposal域成员
    def OnRtnStockDisposal(self, pStockDisposal):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRtnStockDisposal(self, pStockDisposal)

	#条件单录入请求响应,参数pInputCondOrderField是一个字典,可访问的键值参考CTORATstpSPInputCondOrderField域成员
    def OnRspCondOrderInsert(self, pInputCondOrderField, pRspInfo, nRequestID):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspCondOrderInsert(self, pInputCondOrderField, pRspInfo, nRequestID)

	#条件单回报,参数pConditionOrder是一个字典,可访问的键值参考CTORATstpSPConditionOrder域成员
    def OnRtnCondOrder(self, pConditionOrder):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRtnCondOrder(self, pConditionOrder)

	#条件单错误回报,参数pInputCondOrder是一个字典,可访问的键值参考CTORATstpSPInputCondOrder域成员
    def OnErrRtnCondOrderInsert(self, pInputCondOrder, pRspInfo, nRequestID):
        return _sptraderapi.CTORATstpSPTraderSpi_OnErrRtnCondOrderInsert(self, pInputCondOrder, pRspInfo, nRequestID)

	#条件单撤单应答,参数pInputCondOrderActionField是一个字典,可访问的键值参考CTORATstpSPInputCondOrderActionField域成员
    def OnRspCondOrderAction(self, pInputCondOrderActionField, pRspInfo, nRequestID):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspCondOrderAction(self, pInputCondOrderActionField, pRspInfo, nRequestID)

	#条件单撤单错误回报,参数pInputCondOrderAction是一个字典,可访问的键值参考CTORATstpSPInputCondOrderAction域成员
    def OnErrRtnCondOrderAction(self, pInputCondOrderAction, pRspInfo, nRequestID):
        return _sptraderapi.CTORATstpSPTraderSpi_OnErrRtnCondOrderAction(self, pInputCondOrderAction, pRspInfo, nRequestID)

	#资金转移请求应答,参数pInputTransferFundField是一个字典,可访问的键值参考CTORATstpSPInputTransferFundField域成员
    def OnRspTransferFund(self, pInputTransferFundField, pRspInfo, nRequestID):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspTransferFund(self, pInputTransferFundField, pRspInfo, nRequestID)

	#资金转移回报,参数pTransferFund是一个字典,可访问的键值参考CTORATstpSPTransferFund域成员
    def OnRtnTransferFund(self, pTransferFund):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRtnTransferFund(self, pTransferFund)

	#资金转移错误回报,参数pInputTransferFund是一个字典,可访问的键值参考CTORATstpSPInputTransferFund域成员
    def OnErrRtnTransferFund(self, pInputTransferFund, pRspInfo, nRequestID):
        return _sptraderapi.CTORATstpSPTraderSpi_OnErrRtnTransferFund(self, pInputTransferFund, pRspInfo, nRequestID)

	#仓位转移回报,参数pTransferPosition是一个字典,可访问的键值参考CTORATstpSPTransferPosition域成员
    def OnRtnTransferPosition(self, pTransferPosition):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRtnTransferPosition(self, pTransferPosition)

	#仓位转移错误回报,参数pInputTransferPosition是一个字典,可访问的键值参考CTORATstpSPInputTransferPosition域成员
    def OnErrRtnTransferPosition(self, pInputTransferPosition, pRspInfo, nRequestID):
        return _sptraderapi.CTORATstpSPTraderSpi_OnErrRtnTransferPosition(self, pInputTransferPosition, pRspInfo, nRequestID)

	#现货仓位转移请求响应,参数pInputTransferStockPositionField是一个字典,可访问的键值参考CTORATstpSPInputTransferStockPositionField域成员
    def OnRspTransferStockPosition(self, pInputTransferStockPositionField, pRspInfo, nRequestID):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspTransferStockPosition(self, pInputTransferStockPositionField, pRspInfo, nRequestID)

	#现货仓位转移回报,参数pTransferStockPosition是一个字典,可访问的键值参考CTORATstpSPTransferStockPosition域成员
    def OnRtnTransferStockPosition(self, pTransferStockPosition):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRtnTransferStockPosition(self, pTransferStockPosition)

	#现货仓位转移错误回报,参数pInputTransferStockPosition是一个字典,可访问的键值参考CTORATstpSPInputTransferStockPosition域成员
    def OnErrRtnTransferStockPosition(self, pInputTransferStockPosition, pRspInfo, nRequestID):
        return _sptraderapi.CTORATstpSPTraderSpi_OnErrRtnTransferStockPosition(self, pInputTransferStockPosition, pRspInfo, nRequestID)

	#查询集中交易系统资金响应,参数pRspInquiryJZFundField是一个字典,可访问的键值参考CTORATstpSPRspInquiryJZFundField域成员
    def OnRspInquiryJZFund(self, pRspInquiryJZFundField, pRspInfo, nRequestID):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspInquiryJZFund(self, pRspInquiryJZFundField, pRspInfo, nRequestID)

	#查询银行账户余额响应,参数pRspInquiryBankAccountFundField是一个字典,可访问的键值参考CTORATstpSPRspInquiryBankAccountFundField域成员
    def OnRspInquiryBankAccountFund(self, pRspInquiryBankAccountFundField, pRspInfo, nRequestID):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspInquiryBankAccountFund(self, pRspInquiryBankAccountFundField, pRspInfo, nRequestID)

	#查询现货系统现货持仓响应,参数pRspInquiryStockPositionField是一个字典,可访问的键值参考CTORATstpSPRspInquiryStockPositionField域成员
    def OnRspInquiryStockPosition(self, pRspInquiryStockPositionField, pRspInfo, nRequestID):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspInquiryStockPosition(self, pRspInquiryStockPositionField, pRspInfo, nRequestID)

	#市场状态通知,参数pMarketStatus是一个字典,可访问的键值参考CTORATstpSPMarketStatus域成员
    def OnRtnMarketStatus(self, pMarketStatus):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRtnMarketStatus(self, pMarketStatus)

	#交易通知回报,参数pTradingNotice是一个字典,可访问的键值参考CTORATstpSPTradingNotice域成员
    def OnRtnTradingNotice(self, pTradingNotice):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRtnTradingNotice(self, pTradingNotice)

	#查询交易所,参数pExchange是一个字典,可访问的键值参考CTORATstpSPExchange域成员
    def OnRspQryExchange(self, pExchange, pRspInfo, nRequestID, bIsLast):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspQryExchange(self, pExchange, pRspInfo, nRequestID, bIsLast)

	#查询实时行情,参数pMarketData是一个字典,可访问的键值参考CTORATstpSPMarketData域成员
    def OnRspQryMarketData(self, pMarketData, pRspInfo, nRequestID, bIsLast):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspQryMarketData(self, pMarketData, pRspInfo, nRequestID, bIsLast)

	#查询证券信息,参数pSecurity是一个字典,可访问的键值参考CTORATstpSPSecurity域成员
    def OnRspQrySecurity(self, pSecurity, pRspInfo, nRequestID, bIsLast):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspQrySecurity(self, pSecurity, pRspInfo, nRequestID, bIsLast)

	#查询代理关系,参数pBUProxy是一个字典,可访问的键值参考CTORATstpSPBUProxy域成员
    def OnRspQryBUProxy(self, pBUProxy, pRspInfo, nRequestID, bIsLast):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspQryBUProxy(self, pBUProxy, pRspInfo, nRequestID, bIsLast)

	#查询User,参数pUser是一个字典,可访问的键值参考CTORATstpSPUser域成员
    def OnRspQryUser(self, pUser, pRspInfo, nRequestID, bIsLast):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspQryUser(self, pUser, pRspInfo, nRequestID, bIsLast)

	#查询投资者,参数pInvestor是一个字典,可访问的键值参考CTORATstpSPInvestor域成员
    def OnRspQryInvestor(self, pInvestor, pRspInfo, nRequestID, bIsLast):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspQryInvestor(self, pInvestor, pRspInfo, nRequestID, bIsLast)

	#查询股东账户,参数pShareholderAccount是一个字典,可访问的键值参考CTORATstpSPShareholderAccount域成员
    def OnRspQryShareholderAccount(self, pShareholderAccount, pRspInfo, nRequestID, bIsLast):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspQryShareholderAccount(self, pShareholderAccount, pRspInfo, nRequestID, bIsLast)

	#资金账户查询,参数pTradingAccount是一个字典,可访问的键值参考CTORATstpSPTradingAccount域成员
    def OnRspQryTradingAccount(self, pTradingAccount, pRspInfo, nRequestID, bIsLast):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspQryTradingAccount(self, pTradingAccount, pRspInfo, nRequestID, bIsLast)

	#报单查询,参数pOrder是一个字典,可访问的键值参考CTORATstpSPOrder域成员
    def OnRspQryOrder(self, pOrder, pRspInfo, nRequestID, bIsLast):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspQryOrder(self, pOrder, pRspInfo, nRequestID, bIsLast)

	#成交查询,参数pTrade是一个字典,可访问的键值参考CTORATstpSPTrade域成员
    def OnRspQryTrade(self, pTrade, pRspInfo, nRequestID, bIsLast):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspQryTrade(self, pTrade, pRspInfo, nRequestID, bIsLast)

	#投资者持仓查询,参数pPosition是一个字典,可访问的键值参考CTORATstpSPPosition域成员
    def OnRspQryPosition(self, pPosition, pRspInfo, nRequestID, bIsLast):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspQryPosition(self, pPosition, pRspInfo, nRequestID, bIsLast)

	#查询基础交易费用,参数pTradingFee是一个字典,可访问的键值参考CTORATstpSPTradingFee域成员
    def OnRspQryTradingFee(self, pTradingFee, pRspInfo, nRequestID, bIsLast):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspQryTradingFee(self, pTradingFee, pRspInfo, nRequestID, bIsLast)

	#查询佣金费率,参数pInvestorTradingFee是一个字典,可访问的键值参考CTORATstpSPInvestorTradingFee域成员
    def OnRspQryInvestorTradingFee(self, pInvestorTradingFee, pRspInfo, nRequestID, bIsLast):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspQryInvestorTradingFee(self, pInvestorTradingFee, pRspInfo, nRequestID, bIsLast)

	#查询保证金费率,参数pInvestorMarginFee是一个字典,可访问的键值参考CTORATstpSPInvestorMarginFee域成员
    def OnRspQryInvestorMarginFee(self, pInvestorMarginFee, pRspInfo, nRequestID, bIsLast):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspQryInvestorMarginFee(self, pInvestorMarginFee, pRspInfo, nRequestID, bIsLast)

	#报单明细资金查询,参数pOrderFundDetail是一个字典,可访问的键值参考CTORATstpSPOrderFundDetail域成员
    def OnRspQryOrderFundDetail(self, pOrderFundDetail, pRspInfo, nRequestID, bIsLast):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspQryOrderFundDetail(self, pOrderFundDetail, pRspInfo, nRequestID, bIsLast)

	#查询资金转移流水,参数pFundTransferDetail是一个字典,可访问的键值参考CTORATstpSPFundTransferDetail域成员
    def OnRspQryFundTransferDetail(self, pFundTransferDetail, pRspInfo, nRequestID, bIsLast):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspQryFundTransferDetail(self, pFundTransferDetail, pRspInfo, nRequestID, bIsLast)

	#查询持仓转移流水,参数pPositionTransferDetail是一个字典,可访问的键值参考CTORATstpSPPositionTransferDetail域成员
    def OnRspQryPositionTransferDetail(self, pPositionTransferDetail, pRspInfo, nRequestID, bIsLast):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspQryPositionTransferDetail(self, pPositionTransferDetail, pRspInfo, nRequestID, bIsLast)

	#查询撤单,参数pOrderAction是一个字典,可访问的键值参考CTORATstpSPOrderAction域成员
    def OnRspQryOrderAction(self, pOrderAction, pRspInfo, nRequestID, bIsLast):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspQryOrderAction(self, pOrderAction, pRspInfo, nRequestID, bIsLast)

	#查询现货持仓,参数pStockPosition是一个字典,可访问的键值参考CTORATstpSPStockPosition域成员
    def OnRspQryStockPosition(self, pStockPosition, pRspInfo, nRequestID, bIsLast):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspQryStockPosition(self, pStockPosition, pRspInfo, nRequestID, bIsLast)

	#查询锁定委托,参数pLock是一个字典,可访问的键值参考CTORATstpSPLock域成员
    def OnRspQryLock(self, pLock, pRspInfo, nRequestID, bIsLast):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspQryLock(self, pLock, pRspInfo, nRequestID, bIsLast)

	#查询行权委托,参数pExercise是一个字典,可访问的键值参考CTORATstpSPExercise域成员
    def OnRspQryExercise(self, pExercise, pRspInfo, nRequestID, bIsLast):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspQryExercise(self, pExercise, pRspInfo, nRequestID, bIsLast)

	#查询锁定持仓,参数pLockPosition是一个字典,可访问的键值参考CTORATstpSPLockPosition域成员
    def OnRspQryLockPosition(self, pLockPosition, pRspInfo, nRequestID, bIsLast):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspQryLockPosition(self, pLockPosition, pRspInfo, nRequestID, bIsLast)

	#查询行权撤单,参数pExerciseAction是一个字典,可访问的键值参考CTORATstpSPExerciseAction域成员
    def OnRspQryExerciseAction(self, pExerciseAction, pRspInfo, nRequestID, bIsLast):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspQryExerciseAction(self, pExerciseAction, pRspInfo, nRequestID, bIsLast)

	#查询行权撤单,参数pLockAction是一个字典,可访问的键值参考CTORATstpSPLockAction域成员
    def OnRspQryLockAction(self, pLockAction, pRspInfo, nRequestID, bIsLast):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspQryLockAction(self, pLockAction, pRspInfo, nRequestID, bIsLast)

	#查询标的持仓转移明细,参数pStockPositionTransferDetail是一个字典,可访问的键值参考CTORATstpSPStockPositionTransferDetail域成员
    def OnRspQryStockPositionTransferDetail(self, pStockPositionTransferDetail, pRspInfo, nRequestID, bIsLast):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspQryStockPositionTransferDetail(self, pStockPositionTransferDetail, pRspInfo, nRequestID, bIsLast)

	#查询交易通知,参数pTradingNotice是一个字典,可访问的键值参考CTORATstpSPTradingNotice域成员
    def OnRspQryTradingNotice(self, pTradingNotice, pRspInfo, nRequestID, bIsLast):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspQryTradingNotice(self, pTradingNotice, pRspInfo, nRequestID, bIsLast)

	#查询QryStockDisposal,参数pStockDisposal是一个字典,可访问的键值参考CTORATstpSPStockDisposal域成员
    def OnRspQryStockDisposal(self, pStockDisposal, pRspInfo, nRequestID, bIsLast):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspQryStockDisposal(self, pStockDisposal, pRspInfo, nRequestID, bIsLast)

	#查询QryStockDisposalAction,参数pStockDisposalAction是一个字典,可访问的键值参考CTORATstpSPStockDisposalAction域成员
    def OnRspQryStockDisposalAction(self, pStockDisposalAction, pRspInfo, nRequestID, bIsLast):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspQryStockDisposalAction(self, pStockDisposalAction, pRspInfo, nRequestID, bIsLast)

	#查询条件单,参数pCondOrder是一个字典,可访问的键值参考CTORATstpSPCondOrder域成员
    def OnRspQryCondOrder(self, pCondOrder, pRspInfo, nRequestID, bIsLast):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspQryCondOrder(self, pCondOrder, pRspInfo, nRequestID, bIsLast)

	#查询条件单撤单,参数pCondOrderAction是一个字典,可访问的键值参考CTORATstpSPCondOrderAction域成员
    def OnRspQryCondOrderAction(self, pCondOrderAction, pRspInfo, nRequestID, bIsLast):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspQryCondOrderAction(self, pCondOrderAction, pRspInfo, nRequestID, bIsLast)

	#查询投资者限仓,参数pInvestorLimitPosition是一个字典,可访问的键值参考CTORATstpSPInvestorLimitPosition域成员
    def OnRspQryInvestorLimitPosition(self, pInvestorLimitPosition, pRspInfo, nRequestID, bIsLast):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspQryInvestorLimitPosition(self, pInvestorLimitPosition, pRspInfo, nRequestID, bIsLast)

	#查询投资者限额,参数pInvestorLimitAmount是一个字典,可访问的键值参考CTORATstpSPInvestorLimitAmount域成员
    def OnRspQryInvestorLimitAmount(self, pInvestorLimitAmount, pRspInfo, nRequestID, bIsLast):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspQryInvestorLimitAmount(self, pInvestorLimitAmount, pRspInfo, nRequestID, bIsLast)

	#查询投资者行权指派明细,参数pExerciseAppointment是一个字典,可访问的键值参考CTORATstpSPExerciseAppointment域成员
    def OnRspQryExerciseAppointment(self, pExerciseAppointment, pRspInfo, nRequestID, bIsLast):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspQryExerciseAppointment(self, pExerciseAppointment, pRspInfo, nRequestID, bIsLast)

	#查询备兑股份不足仓位,参数pInsufficientCoveredStockPosition是一个字典,可访问的键值参考CTORATstpSPInsufficientCoveredStockPosition域成员
    def OnRspQryInsufficientCoveredStockPosition(self, pInsufficientCoveredStockPosition, pRspInfo, nRequestID, bIsLast):
        return _sptraderapi.CTORATstpSPTraderSpi_OnRspQryInsufficientCoveredStockPosition(self, pInsufficientCoveredStockPosition, pRspInfo, nRequestID, bIsLast)

    def __init__(self):
        if self.__class__ == CTORATstpSPTraderSpi:
            _self = None
        else:
            _self = self
        this = _sptraderapi.new_CTORATstpSPTraderSpi(_self, )
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sptraderapi.delete_CTORATstpSPTraderSpi
    __del__ = lambda self: None
    def __disown__(self):
        self.this.disown()
        _sptraderapi.disown_CTORATstpSPTraderSpi(self)
        return weakref_proxy(self)
CTORATstpSPTraderSpi_swigregister = _sptraderapi.CTORATstpSPTraderSpi_swigregister
CTORATstpSPTraderSpi_swigregister(CTORATstpSPTraderSpi)

class CTORATstpSPTraderApi(_object):
    __swig_setmethods__ = {}
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CTORATstpSPTraderApi, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CTORATstpSPTraderApi, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    if _newclass:
        CreateTstpSPTraderApi = staticmethod(_sptraderapi.CTORATstpSPTraderApi_CreateTstpSPTraderApi)
    else:
        CreateTstpSPTraderApi = _sptraderapi.CTORATstpSPTraderApi_CreateTstpSPTraderApi
    if _newclass:
        GetApiVersion = staticmethod(_sptraderapi.CTORATstpSPTraderApi_GetApiVersion)
    else:
        GetApiVersion = _sptraderapi.CTORATstpSPTraderApi_GetApiVersion

	#删除接口对象,不再使用本接口对象时,调用该函数删除接口对象
    def Release(self):
        return _sptraderapi.CTORATstpSPTraderApi_Release(self)

	#初始化接口对象,初始化运行环境,只有调用后,接口才开始工作
    def Init(self):
        return _sptraderapi.CTORATstpSPTraderApi_Init(self)

	#等待接口线程结束运行
    def Join(self):
        return _sptraderapi.CTORATstpSPTraderApi_Join(self)

	#注册前置机网络地址,pszFrontAddress为前置机网络地址,格式tcp://127.0.0.1:17001
    def RegisterFront(self, pszFrontAddress):
        return _sptraderapi.CTORATstpSPTraderApi_RegisterFront(self, pszFrontAddress)

	#注册名字服务器网络地址,pszNsAddress为名字服务器网络地址,格式tcp://127.0.0.1:12001
    def RegisterNameServer(self, pszNsAddress):
        return _sptraderapi.CTORATstpSPTraderApi_RegisterNameServer(self, pszNsAddress)

	#注册回调接口,pSpi为派生自回调接口类的实例
    def RegisterSpi(self, pSpi):
        return _sptraderapi.CTORATstpSPTraderApi_RegisterSpi(self, pSpi)

	#订阅私有流,nResumeType为私有流重传方式,TORA_TERT_RESTART表示从本交易日开始重传,TORA_TERT_RESUME表示从上次收到的续传,TORA_TERT_QUICK表示只传送登录后私有流的内容
    def SubscribePrivateTopic(self, nResumeType):
        return _sptraderapi.CTORATstpSPTraderApi_SubscribePrivateTopic(self, nResumeType)

	#订阅公共流,nResumeType为公有流重传方式,TORA_TERT_RESTART表示从本交易日开始重传,TORA_TERT_RESUME表示从上次收到的续传,TORA_TERT_QUICK表示只传送登录后公共流的内容
    def SubscribePublicTopic(self, nResumeType):
        return _sptraderapi.CTORATstpSPTraderApi_SubscribePublicTopic(self, nResumeType)

	#登录请求,参数pReqUserLoginField是一个CTORATstpSPReqUserLoginField类对象
    def ReqUserLogin(self, pReqUserLoginField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqUserLogin(self, pReqUserLoginField, nRequestID)

	#登出请求,参数pUserLogoutField是一个CTORATstpSPUserLogoutField类对象
    def ReqUserLogout(self, pUserLogoutField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqUserLogout(self, pUserLogoutField, nRequestID)

	#修改密码请求,参数pUserPasswordUpdateField是一个CTORATstpSPUserPasswordUpdateField类对象
    def ReqUserPasswordUpdate(self, pUserPasswordUpdateField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqUserPasswordUpdate(self, pUserPasswordUpdateField, nRequestID)

	#请求录入设备序列,参数pReqInputDeviceSerialField是一个CTORATstpSPReqInputDeviceSerialField类对象
    def ReqInputDeviceSerial(self, pReqInputDeviceSerialField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqInputDeviceSerial(self, pReqInputDeviceSerialField, nRequestID)

	#报单录入请求,参数pInputOrderField是一个CTORATstpSPInputOrderField类对象
    def ReqOrderInsert(self, pInputOrderField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqOrderInsert(self, pInputOrderField, nRequestID)

	#撤单请求,参数pInputOrderActionField是一个CTORATstpSPInputOrderActionField类对象
    def ReqOrderAction(self, pInputOrderActionField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqOrderAction(self, pInputOrderActionField, nRequestID)

	#行权请求,参数pInputExerciseField是一个CTORATstpSPInputExerciseField类对象
    def ReqExerciseInsert(self, pInputExerciseField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqExerciseInsert(self, pInputExerciseField, nRequestID)

	#行权操作请求,参数pInputExerciseActionField是一个CTORATstpSPInputExerciseActionField类对象
    def ReqExerciseAction(self, pInputExerciseActionField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqExerciseAction(self, pInputExerciseActionField, nRequestID)

	#锁定录入请求,参数pInputLockField是一个CTORATstpSPInputLockField类对象
    def ReqLockInsert(self, pInputLockField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqLockInsert(self, pInputLockField, nRequestID)

	#锁定操作请求,参数pInputLockActionField是一个CTORATstpSPInputLockActionField类对象
    def ReqLockAction(self, pInputLockActionField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqLockAction(self, pInputLockActionField, nRequestID)

	#条件单录入请求,参数pInputCondOrderField是一个CTORATstpSPInputCondOrderField类对象
    def ReqCondOrderInsert(self, pInputCondOrderField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqCondOrderInsert(self, pInputCondOrderField, nRequestID)

	#条件单撤单请求,参数pInputCondOrderActionField是一个CTORATstpSPInputCondOrderActionField类对象
    def ReqCondOrderAction(self, pInputCondOrderActionField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqCondOrderAction(self, pInputCondOrderActionField, nRequestID)

	#资金转移请求,参数pInputTransferFundField是一个CTORATstpSPInputTransferFundField类对象
    def ReqTransferFund(self, pInputTransferFundField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqTransferFund(self, pInputTransferFundField, nRequestID)

	#现货仓位转移请求,参数pInputTransferStockPositionField是一个CTORATstpSPInputTransferStockPositionField类对象
    def ReqTransferStockPosition(self, pInputTransferStockPositionField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqTransferStockPosition(self, pInputTransferStockPositionField, nRequestID)

	#查询集中交易系统资金请求,参数pReqInquiryJZFundField是一个CTORATstpSPReqInquiryJZFundField类对象
    def ReqInquiryJZFund(self, pReqInquiryJZFundField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqInquiryJZFund(self, pReqInquiryJZFundField, nRequestID)

	#查询银行账户余额请求,参数pReqInquiryBankAccountFundField是一个CTORATstpSPReqInquiryBankAccountFundField类对象
    def ReqInquiryBankAccountFund(self, pReqInquiryBankAccountFundField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqInquiryBankAccountFund(self, pReqInquiryBankAccountFundField, nRequestID)

	#查询现货系统现货持仓请求,参数pReqInquiryStockPositionField是一个CTORATstpSPReqInquiryStockPositionField类对象
    def ReqInquiryStockPosition(self, pReqInquiryStockPositionField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqInquiryStockPosition(self, pReqInquiryStockPositionField, nRequestID)

	#查询交易所,参数pQryExchangeField是一个CTORATstpSPQryExchangeField类对象
    def ReqQryExchange(self, pQryExchangeField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqQryExchange(self, pQryExchangeField, nRequestID)

	#查询实时行情,参数pQryMarketDataField是一个CTORATstpSPQryMarketDataField类对象
    def ReqQryMarketData(self, pQryMarketDataField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqQryMarketData(self, pQryMarketDataField, nRequestID)

	#查询证券信息,参数pQrySecurityField是一个CTORATstpSPQrySecurityField类对象
    def ReqQrySecurity(self, pQrySecurityField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqQrySecurity(self, pQrySecurityField, nRequestID)

	#查询代理关系,参数pQryBUProxyField是一个CTORATstpSPQryBUProxyField类对象
    def ReqQryBUProxy(self, pQryBUProxyField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqQryBUProxy(self, pQryBUProxyField, nRequestID)

	#查询User,参数pQryUserField是一个CTORATstpSPQryUserField类对象
    def ReqQryUser(self, pQryUserField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqQryUser(self, pQryUserField, nRequestID)

	#查询投资者,参数pQryInvestorField是一个CTORATstpSPQryInvestorField类对象
    def ReqQryInvestor(self, pQryInvestorField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqQryInvestor(self, pQryInvestorField, nRequestID)

	#查询股东账户,参数pQryShareholderAccountField是一个CTORATstpSPQryShareholderAccountField类对象
    def ReqQryShareholderAccount(self, pQryShareholderAccountField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqQryShareholderAccount(self, pQryShareholderAccountField, nRequestID)

	#资金账户查询,参数pQryTradingAccountField是一个CTORATstpSPQryTradingAccountField类对象
    def ReqQryTradingAccount(self, pQryTradingAccountField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqQryTradingAccount(self, pQryTradingAccountField, nRequestID)

	#报单查询,参数pQryOrderField是一个CTORATstpSPQryOrderField类对象
    def ReqQryOrder(self, pQryOrderField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqQryOrder(self, pQryOrderField, nRequestID)

	#成交查询,参数pQryTradeField是一个CTORATstpSPQryTradeField类对象
    def ReqQryTrade(self, pQryTradeField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqQryTrade(self, pQryTradeField, nRequestID)

	#投资者持仓查询,参数pQryPositionField是一个CTORATstpSPQryPositionField类对象
    def ReqQryPosition(self, pQryPositionField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqQryPosition(self, pQryPositionField, nRequestID)

	#查询基础交易费用,参数pQryTradingFeeField是一个CTORATstpSPQryTradingFeeField类对象
    def ReqQryTradingFee(self, pQryTradingFeeField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqQryTradingFee(self, pQryTradingFeeField, nRequestID)

	#查询佣金费率,参数pQryInvestorTradingFeeField是一个CTORATstpSPQryInvestorTradingFeeField类对象
    def ReqQryInvestorTradingFee(self, pQryInvestorTradingFeeField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqQryInvestorTradingFee(self, pQryInvestorTradingFeeField, nRequestID)

	#查询保证金费率,参数pQryInvestorMarginFeeField是一个CTORATstpSPQryInvestorMarginFeeField类对象
    def ReqQryInvestorMarginFee(self, pQryInvestorMarginFeeField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqQryInvestorMarginFee(self, pQryInvestorMarginFeeField, nRequestID)

	#报单明细资金查询,参数pQryOrderFundDetailField是一个CTORATstpSPQryOrderFundDetailField类对象
    def ReqQryOrderFundDetail(self, pQryOrderFundDetailField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqQryOrderFundDetail(self, pQryOrderFundDetailField, nRequestID)

	#查询资金转移流水,参数pQryFundTransferDetailField是一个CTORATstpSPQryFundTransferDetailField类对象
    def ReqQryFundTransferDetail(self, pQryFundTransferDetailField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqQryFundTransferDetail(self, pQryFundTransferDetailField, nRequestID)

	#查询持仓转移流水,参数pQryPositionTransferDetailField是一个CTORATstpSPQryPositionTransferDetailField类对象
    def ReqQryPositionTransferDetail(self, pQryPositionTransferDetailField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqQryPositionTransferDetail(self, pQryPositionTransferDetailField, nRequestID)

	#查询撤单,参数pQryOrderActionField是一个CTORATstpSPQryOrderActionField类对象
    def ReqQryOrderAction(self, pQryOrderActionField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqQryOrderAction(self, pQryOrderActionField, nRequestID)

	#查询现货持仓,参数pQryStockPositionField是一个CTORATstpSPQryStockPositionField类对象
    def ReqQryStockPosition(self, pQryStockPositionField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqQryStockPosition(self, pQryStockPositionField, nRequestID)

	#查询锁定委托,参数pQryLockField是一个CTORATstpSPQryLockField类对象
    def ReqQryLock(self, pQryLockField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqQryLock(self, pQryLockField, nRequestID)

	#查询行权委托,参数pQryExerciseField是一个CTORATstpSPQryExerciseField类对象
    def ReqQryExercise(self, pQryExerciseField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqQryExercise(self, pQryExerciseField, nRequestID)

	#查询锁定持仓,参数pQryLockPositionField是一个CTORATstpSPQryLockPositionField类对象
    def ReqQryLockPosition(self, pQryLockPositionField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqQryLockPosition(self, pQryLockPositionField, nRequestID)

	#查询行权撤单,参数pQryExerciseActionField是一个CTORATstpSPQryExerciseActionField类对象
    def ReqQryExerciseAction(self, pQryExerciseActionField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqQryExerciseAction(self, pQryExerciseActionField, nRequestID)

	#查询行权撤单,参数pQryLockActionField是一个CTORATstpSPQryLockActionField类对象
    def ReqQryLockAction(self, pQryLockActionField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqQryLockAction(self, pQryLockActionField, nRequestID)

	#查询标的持仓转移明细,参数pQryStockPositionTransferDetailField是一个CTORATstpSPQryStockPositionTransferDetailField类对象
    def ReqQryStockPositionTransferDetail(self, pQryStockPositionTransferDetailField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqQryStockPositionTransferDetail(self, pQryStockPositionTransferDetailField, nRequestID)

	#查询交易通知,参数pQryTradingNoticeField是一个CTORATstpSPQryTradingNoticeField类对象
    def ReqQryTradingNotice(self, pQryTradingNoticeField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqQryTradingNotice(self, pQryTradingNoticeField, nRequestID)

	#查询QryStockDisposal,参数pQryStockDisposalField是一个CTORATstpSPQryStockDisposalField类对象
    def ReqQryStockDisposal(self, pQryStockDisposalField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqQryStockDisposal(self, pQryStockDisposalField, nRequestID)

	#查询QryStockDisposalAction,参数pQryStockDisposalActionField是一个CTORATstpSPQryStockDisposalActionField类对象
    def ReqQryStockDisposalAction(self, pQryStockDisposalActionField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqQryStockDisposalAction(self, pQryStockDisposalActionField, nRequestID)

	#查询条件单,参数pQryCondOrderField是一个CTORATstpSPQryCondOrderField类对象
    def ReqQryCondOrder(self, pQryCondOrderField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqQryCondOrder(self, pQryCondOrderField, nRequestID)

	#查询条件单撤单,参数pQryCondOrderActionField是一个CTORATstpSPQryCondOrderActionField类对象
    def ReqQryCondOrderAction(self, pQryCondOrderActionField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqQryCondOrderAction(self, pQryCondOrderActionField, nRequestID)

	#查询投资者限仓,参数pQryInvestorLimitPositionField是一个CTORATstpSPQryInvestorLimitPositionField类对象
    def ReqQryInvestorLimitPosition(self, pQryInvestorLimitPositionField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqQryInvestorLimitPosition(self, pQryInvestorLimitPositionField, nRequestID)

	#查询投资者限额,参数pQryInvestorLimitAmountField是一个CTORATstpSPQryInvestorLimitAmountField类对象
    def ReqQryInvestorLimitAmount(self, pQryInvestorLimitAmountField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqQryInvestorLimitAmount(self, pQryInvestorLimitAmountField, nRequestID)

	#查询投资者行权指派明细,参数pQryExerciseAppointmentField是一个CTORATstpSPQryExerciseAppointmentField类对象
    def ReqQryExerciseAppointment(self, pQryExerciseAppointmentField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqQryExerciseAppointment(self, pQryExerciseAppointmentField, nRequestID)

	#查询备兑股份不足仓位,参数pQryInsufficientCoveredStockPositionField是一个CTORATstpSPQryInsufficientCoveredStockPositionField类对象
    def ReqQryInsufficientCoveredStockPosition(self, pQryInsufficientCoveredStockPositionField, nRequestID):
        return _sptraderapi.CTORATstpSPTraderApi_ReqQryInsufficientCoveredStockPosition(self, pQryInsufficientCoveredStockPositionField, nRequestID)
CTORATstpSPTraderApi_swigregister = _sptraderapi.CTORATstpSPTraderApi_swigregister
CTORATstpSPTraderApi_swigregister(CTORATstpSPTraderApi)

	#创建接口对象,参数为流文件存放目录
def CTORATstpSPTraderApi_CreateTstpSPTraderApi(*args):
    return _sptraderapi.CTORATstpSPTraderApi_CreateTstpSPTraderApi(*args)
CTORATstpSPTraderApi_CreateTstpSPTraderApi = _sptraderapi.CTORATstpSPTraderApi_CreateTstpSPTraderApi

	#获取接口版本号
def CTORATstpSPTraderApi_GetApiVersion():
    return _sptraderapi.CTORATstpSPTraderApi_GetApiVersion()
CTORATstpSPTraderApi_GetApiVersion = _sptraderapi.CTORATstpSPTraderApi_GetApiVersion

# This file is compatible with both classic and new-style classes.


